

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 10:46:29 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Version 2.35
    42                           ; Generated 05/05/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F67K40 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   0014B0                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _year
    82   0014B0  07E4               	dw	2020
    83                           
    84                           ;initializer for _month
    85   0014B2  0001               	dw	1
    86                           
    87                           ;initializer for _day
    88   0014B4  0001               	dw	1
    89                           
    90                           ;initializer for _minutes
    91   0014B6  0001               	dw	1
    92                           
    93                           ;initializer for _seconds
    94   0014B8  0001               	dw	1
    95                           
    96                           ;initializer for _day_of_the_week
    97   0014BA  0001               	dw	1
    98                           
    99                           	psect	idataBANK0
   100   00144A                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for increment_day@F14267
   104   00144A  001F               	dw	31
   105   00144C  001C               	dw	28
   106   00144E  001F               	dw	31
   107   001450  001E               	dw	30
   108   001452  001F               	dw	31
   109   001454  001E               	dw	30
   110   001456  001F               	dw	31
   111   001458  001F               	dw	31
   112   00145A  001E               	dw	30
   113   00145C  001F               	dw	31
   114   00145E  001E               	dw	30
   115   001460  001F               	dw	31
   116                           
   117                           ;initializer for _hours
   118   001462  0001               	dw	1
   119   000000                     _TRISEbits	set	3973
   120   000000                     _TRISCbits	set	3971
   121   000000                     _LATEbits	set	3965
   122   000000                     _LATCbits	set	3963
   123   000000                     _T0CON0bits	set	4053
   124   000000                     _T0CON1bits	set	4054
   125   000000                     _CM1CON1bits	set	3793
   126   000000                     _LATDbits	set	3964
   127   000000                     _TRISDbits	set	3972
   128   000000                     _TRISHbits	set	3976
   129   000000                     _LATHbits	set	3968
   130   000000                     _LATBbits	set	3962
   131   000000                     _LATFbits	set	3966
   132   000000                     _PORTAbits	set	3977
   133   000000                     _PORTGbits	set	3983
   134   000000                     _TRISBbits	set	3970
   135   000000                     _TRISFbits	set	3974
   136                           
   137                           	psect	nvCOMRAM
   138   00004A                     __pnvCOMRAM:
   139                           	callstack 0
   140   00004A                     _test_mode:
   141                           	callstack 0
   142   00004A                     	ds	2
   143   000000                     _IPR2bits	set	3617
   144   000000                     _PIE2bits	set	3627
   145   000000                     _DAC1CON0bits	set	3782
   146   000000                     _LATAbits	set	3961
   147   000000                     _LATGbits	set	3967
   148   000000                     _TRISAbits	set	3969
   149   000000                     _TRISGbits	set	3975
   150   000000                     _TMR0L	set	4051
   151   000000                     _TMR0H	set	4052
   152   000000                     _INTCONbits	set	4082
   153   000000                     _PORTBbits	set	3978
   154   000000                     _PORTFbits	set	3982
   155   000000                     _CM1CON0bits	set	3792
   156   000000                     _CM1NCHbits	set	3794
   157   000000                     _DAC1CON1bits	set	3783
   158   000000                     _ADREFbits	set	3928
   159   000000                     _CM1PCHbits	set	3795
   160   000000                     _PIR0bits	set	3635
   161   000000                     _PIR2bits	set	3637
   162   000000                     _PIE0bits	set	3625
   163   000000                     _ANSELAbits	set	3730
   164   000000                     _ADPCH	set	3935
   165   000000                     _ADRESH	set	3940
   166   000000                     _ADCON0bits	set	3936
   167                           
   168                           	psect	smallconst
   169   000E00                     __psmallconst:
   170                           	callstack 0
   171   000E00  00                 	db	0
   172   000E01  25                 	db	37
   173   000E02  64                 	db	100	;'d'
   174   000E03  00                 	db	0
   175   000E04  00                 	db	0	; dummy byte at the end
   176   000000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180   001264                     __pcinit:
   181                           	callstack 0
   182   001264                     start_initialization:
   183                           	callstack 0
   184   001264                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Initialize objects allocated to BANK0 (26 bytes)
   188                           ; load TBLPTR registers with __pidataBANK0
   189   001264  0E4A               	movlw	low __pidataBANK0
   190   001266  6EF6               	movwf	tblptrl,c
   191   001268  0E14               	movlw	high __pidataBANK0
   192   00126A  6EF7               	movwf	tblptrh,c
   193   00126C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   194   00126E  6EF8               	movwf	tblptru,c
   195   001270  EE00  F060         	lfsr	0,__pdataBANK0
   196   001274  EE10 F01A          	lfsr	1,26
   197   001278                     copy_data0:
   198   001278  0009               	tblrd		*+
   199   00127A  CFF5 FFEE          	movff	tablat,postinc0
   200   00127E  50E5               	movf	postdec1,w,c
   201   001280  50E1               	movf	fsr1l,w,c
   202   001282  E1FA               	bnz	copy_data0
   203                           
   204                           ; Initialize objects allocated to COMRAM (12 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206   001284  0EB0               	movlw	low __pidataCOMRAM
   207   001286  6EF6               	movwf	tblptrl,c
   208   001288  0E14               	movlw	high __pidataCOMRAM
   209   00128A  6EF7               	movwf	tblptrh,c
   210   00128C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211   00128E  6EF8               	movwf	tblptru,c
   212   001290  EE00  F03E         	lfsr	0,__pdataCOMRAM
   213   001294  EE10 F00C          	lfsr	1,12
   214   001298                     copy_data1:
   215   001298  0009               	tblrd		*+
   216   00129A  CFF5 FFEE          	movff	tablat,postinc0
   217   00129E  50E5               	movf	postdec1,w,c
   218   0012A0  50E1               	movf	fsr1l,w,c
   219   0012A2  E1FA               	bnz	copy_data1
   220                           
   221                           ; Clear objects allocated to COMRAM (14 bytes)
   222   0012A4  EE00  F030         	lfsr	0,__pbssCOMRAM
   223   0012A8  0E0E               	movlw	14
   224   0012AA                     clear_0:
   225   0012AA  6AEE               	clrf	postinc0,c
   226   0012AC  06E8               	decf	wreg,f,c
   227   0012AE  E1FD               	bnz	clear_0
   228   0012B0                     end_of_initialization:
   229                           	callstack 0
   230   0012B0                     __end_of__initialization:
   231                           	callstack 0
   232   0012B0  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   233   0012B2  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   234   0012B4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   235   0012B6  6EF8               	movwf	tblptru,c
   236   0012B8  0E0E               	movlw	high __Lsmallconst
   237   0012BA  6EF7               	movwf	tblptrh,c
   238   0012BC  0100               	movlb	0
   239   0012BE  EF3C  F008         	goto	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMRAM
   242   000030                     __pbssCOMRAM:
   243                           	callstack 0
   244   000030                     	ds	14
   245                           
   246                           	psect	dataCOMRAM
   247   00003E                     __pdataCOMRAM:
   248                           	callstack 0
   249   00003E                     _year:
   250                           	callstack 0
   251   00003E                     	ds	2
   252   000040                     _month:
   253                           	callstack 0
   254   000040                     	ds	2
   255   000042                     _day:
   256                           	callstack 0
   257   000042                     	ds	2
   258   000044                     _minutes:
   259                           	callstack 0
   260   000044                     	ds	2
   261   000046                     _seconds:
   262                           	callstack 0
   263   000046                     	ds	2
   264   000048                     _day_of_the_week:
   265                           	callstack 0
   266   000048                     	ds	2
   267                           
   268                           	psect	dataBANK0
   269   000060                     __pdataBANK0:
   270                           	callstack 0
   271   000060                     increment_day@F14267:
   272                           	callstack 0
   273   000060                     	ds	24
   274   000078                     _hours:
   275                           	callstack 0
   276   000078                     	ds	2
   277                           
   278                           	psect	cstackBANK0
   279   00007A                     __pcstackBANK0:
   280                           	callstack 0
   281   00007A                     ?_get_hours:
   282                           	callstack 0
   283   00007A                     LCD_sendnibble@number:
   284                           	callstack 0
   285   00007A                     LEDarray_disp_bin@number:
   286                           	callstack 0
   287   00007A                     Timer0_init@init_test_mode:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x0
   291   00007A                     	ds	1
   292   00007B                     LCD_sendbyte@type:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x1
   296   00007B                     	ds	1
   297   00007C                     LCD_sendbyte@Byte:
   298                           	callstack 0
   299   00007C                     Timer0_init@current_minute:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x2
   303   00007C                     	ds	1
   304   00007D                     ??_LCD_Init:
   305                           
   306                           ; 1 bytes @ 0x3
   307   00007D                     	ds	3
   308   000080                     Timer0_init@current_hour:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x6
   312   000080                     	ds	4
   313   000084                     Timer0_init@current_day:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xA
   317   000084                     	ds	2
   318   000086                     Timer0_init@current_day_of_the_week:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xC
   322   000086                     	ds	2
   323   000088                     Timer0_init@current_month:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0xE
   327   000088                     	ds	2
   328   00008A                     Timer0_init@current_year:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x10
   332   00008A                     	ds	2
   333   00008C                     main@curr_hour:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x12
   337   00008C                     	ds	2
   338                           
   339                           	psect	cstackCOMRAM
   340   000001                     __pcstackCOMRAM:
   341                           	callstack 0
   342   000001                     ?___wmul:
   343                           	callstack 0
   344   000001                     increment_month@increment:
   345                           	callstack 0
   346   000001                     ___wmul@multiplier:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x0
   350   000001                     	ds	2
   351   000003                     increment_day@increment:
   352                           	callstack 0
   353   000003                     ___wmul@multiplicand:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x2
   357   000003                     	ds	2
   358   000005                     ??_increment_day:
   359   000005                     ___wmul@product:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x4
   363   000005                     	ds	4
   364   000009                     increment_day@day_in_month:
   365                           	callstack 0
   366                           
   367                           ; 24 bytes @ 0x8
   368   000009                     	ds	24
   369   000021                     increment_day@curr_day_in_month:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x20
   373   000021                     	ds	2
   374   000023                     increment_hours@increment:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x22
   378   000023                     	ds	2
   379   000025                     increment_minutes@increment:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x24
   383   000025                     	ds	2
   384   000027                     increment_seconds@increment:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x26
   388   000027                     	ds	2
   389   000029                     ??_HighISR:
   390                           
   391                           ; 1 bytes @ 0x28
   392   000029                     	ds	7
   393                           
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 26 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  curr_hour       2   18[BANK0 ] unsigned int 
   404 ;;  buf2            3    0        PTR unsigned char 
   405 ;;  buf1            3    0        PTR unsigned char 
   406 ;;  buf             3    0        PTR unsigned char 
   407 ;;  curr_month      2    0        unsigned int 
   408 ;;  curr_day        2    0        unsigned int 
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   422 ;;Total ram usage:        2 bytes
   423 ;; Hardware stack levels required when called: 10
   424 ;; This function calls:
   425 ;;		_ADC_init
   426 ;;		_Comp1_init
   427 ;;		_Interrupts_init
   428 ;;		_LCD_Init
   429 ;;		_LEDarray_disp_bin
   430 ;;		_LEDarray_init
   431 ;;		_Timer0_init
   432 ;;		_get_hours
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text0
   439   001078                     __ptext0:
   440                           	callstack 0
   441   001078                     _main:
   442                           	callstack 21
   443   001078                     
   444                           ;main.c: 28:     LATHbits.LATH3=0;
   445   001078  9680               	bcf	128,3,c	;volatile
   446                           
   447                           ;main.c: 29:     TRISHbits.TRISH3=0;
   448   00107A  9688               	bcf	136,3,c	;volatile
   449                           
   450                           ;main.c: 31:     TRISDbits.TRISD7=0;
   451   00107C  9E84               	bcf	132,7,c	;volatile
   452                           
   453                           ;main.c: 32:     LATDbits.LATD7=1;
   454   00107E  8E7C               	bsf	124,7,c	;volatile
   455                           
   456                           ;main.c: 34:     TRISAbits.TRISA3=1;
   457   001080  8681               	bsf	129,3,c	;volatile
   458                           
   459                           ;main.c: 36:     LATHbits.LATH3 = 1;
   460   001082  8680               	bsf	128,3,c	;volatile
   461   001084                     
   462                           ;main.c: 37:     Comp1_init();
   463   001084  EC13  F00A         	call	_Comp1_init	;wreg free
   464   001088                     
   465                           ;main.c: 38:     Interrupts_init();
   466   001088  EC49  F00A         	call	_Interrupts_init	;wreg free
   467   00108C                     
   468                           ;main.c: 39:     Timer0_init(1,57,17,06,1,11,2022);
   469   00108C  0E00               	movlw	0
   470   00108E  0100               	movlb	0	; () banked
   471   001090  6F7B               	movwf	(Timer0_init@init_test_mode+1)& (0+255),b
   472   001092  0E01               	movlw	1
   473   001094  6F7A               	movwf	Timer0_init@init_test_mode& (0+255),b
   474   001096  0E39               	movlw	57
   475   001098  6F7C               	movwf	Timer0_init@current_minute& (0+255),b
   476   00109A  0E00               	movlw	0
   477   00109C  6F7D               	movwf	(Timer0_init@current_minute+1)& (0+255),b
   478   00109E  0E00               	movlw	0
   479   0010A0  6F7E               	movwf	(Timer0_init@current_minute+2)& (0+255),b
   480   0010A2  0E00               	movlw	0
   481   0010A4  6F7F               	movwf	(Timer0_init@current_minute+3)& (0+255),b
   482   0010A6  0E11               	movlw	17
   483   0010A8  6F80               	movwf	Timer0_init@current_hour& (0+255),b
   484   0010AA  0E00               	movlw	0
   485   0010AC  6F81               	movwf	(Timer0_init@current_hour+1)& (0+255),b
   486   0010AE  0E00               	movlw	0
   487   0010B0  6F82               	movwf	(Timer0_init@current_hour+2)& (0+255),b
   488   0010B2  0E00               	movlw	0
   489   0010B4  6F83               	movwf	(Timer0_init@current_hour+3)& (0+255),b
   490   0010B6  0E00               	movlw	0
   491   0010B8  6F85               	movwf	(Timer0_init@current_day+1)& (0+255),b
   492   0010BA  0E06               	movlw	6
   493   0010BC  6F84               	movwf	Timer0_init@current_day& (0+255),b
   494   0010BE  0E00               	movlw	0
   495   0010C0  6F87               	movwf	(Timer0_init@current_day_of_the_week+1)& (0+255),b
   496   0010C2  0E01               	movlw	1
   497   0010C4  6F86               	movwf	Timer0_init@current_day_of_the_week& (0+255),b
   498   0010C6  0E00               	movlw	0
   499   0010C8  6F89               	movwf	(Timer0_init@current_month+1)& (0+255),b
   500   0010CA  0E0B               	movlw	11
   501   0010CC  6F88               	movwf	Timer0_init@current_month& (0+255),b
   502   0010CE  0E07               	movlw	7
   503   0010D0  6F8B               	movwf	(Timer0_init@current_year+1)& (0+255),b
   504   0010D2  0EE6               	movlw	230
   505   0010D4  6F8A               	movwf	Timer0_init@current_year& (0+255),b
   506   0010D6  EC83  F008         	call	_Timer0_init	;wreg free
   507   0010DA                     
   508                           ;main.c: 40:     LEDarray_init();
   509   0010DA  ECCE  F009         	call	_LEDarray_init	;wreg free
   510   0010DE                     
   511                           ;main.c: 41:     ADC_init();
   512   0010DE  EC32  F00A         	call	_ADC_init	;wreg free
   513                           
   514                           ;main.c: 42:     LCD_Init();
   515   0010E2  ECDF  F007         	call	_LCD_Init	;wreg free
   516   0010E6                     l2064:
   517                           
   518                           ;main.c: 51:         unsigned int curr_hour = get_hours();
   519   0010E6  EC5E  F00A         	call	_get_hours	;wreg free
   520   0010EA  C07A  F08C         	movff	?_get_hours,main@curr_hour
   521   0010EE  C07B  F08D         	movff	?_get_hours+1,main@curr_hour+1
   522   0010F2                     
   523                           ;main.c: 52:         LEDarray_disp_bin(curr_hour);
   524   0010F2  C08C  F07A         	movff	main@curr_hour,LEDarray_disp_bin@number
   525   0010F6  C08D  F07B         	movff	main@curr_hour+1,LEDarray_disp_bin@number+1
   526   0010FA  EC7A  F007         	call	_LEDarray_disp_bin	;wreg free
   527   0010FE  EF73  F008         	goto	l2064
   528   001102  EF5C  F000         	goto	start
   529   001106                     __end_of_main:
   530                           	callstack 0
   531                           
   532 ;; *************** function _get_hours *****************
   533 ;; Defined at:
   534 ;;		line 69 in file "timers.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  2    0[BANK0 ] unsigned int 
   541 ;; Registers used:
   542 ;;		None
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   552 ;;Total ram usage:        2 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 6
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text1
   563   0014BC                     __ptext1:
   564                           	callstack 0
   565   0014BC                     _get_hours:
   566                           	callstack 24
   567   0014BC                     
   568                           ;timers.c: 70:     return hours;
   569   0014BC  C078  F07A         	movff	_hours,?_get_hours
   570   0014C0  C079  F07B         	movff	_hours+1,?_get_hours+1
   571   0014C4  0012               	return		;funcret
   572   0014C6                     __end_of_get_hours:
   573                           	callstack 0
   574                           
   575 ;; *************** function _Timer0_init *****************
   576 ;; Defined at:
   577 ;;		line 18 in file "timers.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  init_test_mo    2    0[BANK0 ] unsigned short 
   580 ;;  current_minu    4    2[BANK0 ] unsigned long 
   581 ;;  current_hour    4    6[BANK0 ] unsigned long 
   582 ;;  current_day     2   10[BANK0 ] unsigned int 
   583 ;;  current_day_    2   12[BANK0 ] unsigned int 
   584 ;;  current_mont    2   14[BANK0 ] unsigned int 
   585 ;;  current_year    2   16[BANK0 ] unsigned int 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   597 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   600 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   601 ;;Total ram usage:       18 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 6
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text2
   612   001106                     __ptext2:
   613                           	callstack 0
   614   001106                     _Timer0_init:
   615                           	callstack 24
   616   001106                     
   617                           ;timers.c: 18: void Timer0_init(unsigned short init_test_mode,unsigned long current_minu
      +                          te,unsigned long current_hour, unsigned int current_day,unsigned int current_day_of_the_
      +                          week,unsigned int current_month, unsigned int current_year);timers.c: 19: {;timers.c: 20
      +                          :     test_mode = init_test_mode;
   618   001106  C07A  F04A         	movff	Timer0_init@init_test_mode,_test_mode
   619   00110A  C07B  F04B         	movff	Timer0_init@init_test_mode+1,_test_mode+1
   620                           
   621                           ;timers.c: 21:     minutes = current_minute;
   622   00110E  C07C  F044         	movff	Timer0_init@current_minute,_minutes
   623   001112  C07D  F045         	movff	Timer0_init@current_minute+1,_minutes+1
   624                           
   625                           ;timers.c: 22:     hours = current_hour;
   626   001116  C080  F078         	movff	Timer0_init@current_hour,_hours
   627   00111A  C081  F079         	movff	Timer0_init@current_hour+1,_hours+1
   628                           
   629                           ;timers.c: 23:     day = current_day;
   630   00111E  C084  F042         	movff	Timer0_init@current_day,_day
   631   001122  C085  F043         	movff	Timer0_init@current_day+1,_day+1
   632                           
   633                           ;timers.c: 24:     day_of_the_week = current_day_of_the_week;
   634   001126  C086  F048         	movff	Timer0_init@current_day_of_the_week,_day_of_the_week
   635   00112A  C087  F049         	movff	Timer0_init@current_day_of_the_week+1,_day_of_the_week+1
   636                           
   637                           ;timers.c: 25:     month = current_month;
   638   00112E  C088  F040         	movff	Timer0_init@current_month,_month
   639   001132  C089  F041         	movff	Timer0_init@current_month+1,_month+1
   640                           
   641                           ;timers.c: 26:     year = current_year;
   642   001136  C08A  F03E         	movff	Timer0_init@current_year,_year
   643   00113A  C08B  F03F         	movff	Timer0_init@current_year+1,_year+1
   644   00113E                     
   645                           ;timers.c: 28:     T0CON1bits.T0CS=0b010;
   646   00113E  50D6               	movf	214,w,c	;volatile
   647   001140  0B1F               	andlw	-225
   648   001142  0940               	iorlw	64
   649   001144  6ED6               	movwf	214,c	;volatile
   650   001146                     
   651                           ;timers.c: 29:     T0CON1bits.T0ASYNC=1;
   652   001146  88D6               	bsf	214,4,c	;volatile
   653   001148                     
   654                           ;timers.c: 31:     T0CON0bits.T016BIT=1;
   655   001148  88D5               	bsf	213,4,c	;volatile
   656   00114A                     
   657                           ;timers.c: 33:     if(test_mode == 0){
   658   00114A  504A               	movf	_test_mode^0,w,c
   659   00114C  104B               	iorwf	(_test_mode+1)^0,w,c
   660   00114E  A4D8               	btfss	status,2,c
   661   001150  EFAC  F008         	goto	u1271
   662   001154  EFAE  F008         	goto	u1270
   663   001158                     u1271:
   664   001158  EFB8  F008         	goto	l1944
   665   00115C                     u1270:
   666   00115C                     
   667                           ;timers.c: 35:         T0CON1bits.T0CKPS=8;
   668   00115C  50D6               	movf	214,w,c	;volatile
   669   00115E  0BF0               	andlw	-16
   670   001160  0908               	iorlw	8
   671   001162  6ED6               	movwf	214,c	;volatile
   672                           
   673                           ;timers.c: 37:         TMR0H = 0b1011;
   674   001164  0E0B               	movlw	11
   675   001166  6ED4               	movwf	212,c	;volatile
   676                           
   677                           ;timers.c: 38:         TMR0L = 0b11011011;
   678   001168  0EDB               	movlw	219
   679   00116A  6ED3               	movwf	211,c	;volatile
   680                           
   681                           ;timers.c: 39:     }else{
   682   00116C  EFBE  F008         	goto	l1946
   683   001170                     l1944:
   684                           
   685                           ;timers.c: 40:         T0CON1bits.T0CKPS=0;
   686   001170  0EF0               	movlw	-16
   687   001172  16D6               	andwf	214,f,c	;volatile
   688                           
   689                           ;timers.c: 42:         TMR0H = 0;
   690   001174  0E00               	movlw	0
   691   001176  6ED4               	movwf	212,c	;volatile
   692                           
   693                           ;timers.c: 43:         TMR0L = 0;
   694   001178  0E00               	movlw	0
   695   00117A  6ED3               	movwf	211,c	;volatile
   696   00117C                     l1946:
   697                           
   698                           ;timers.c: 45:     T0CON0bits.T0EN=1;
   699   00117C  8ED5               	bsf	213,7,c	;volatile
   700   00117E  0012               	return		;funcret
   701   001180                     __end_of_Timer0_init:
   702                           	callstack 0
   703                           
   704 ;; *************** function _LEDarray_init *****************
   705 ;; Defined at:
   706 ;;		line 8 in file "LEDarray.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		None
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 6
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text3
   735   00139C                     __ptext3:
   736                           	callstack 0
   737   00139C                     _LEDarray_init:
   738                           	callstack 24
   739   00139C                     
   740                           ;LEDarray.c: 14:     TRISGbits.TRISG0 = 0;
   741   00139C  9087               	bcf	135,0,c	;volatile
   742                           
   743                           ;LEDarray.c: 15:     TRISGbits.TRISG1 = 0;
   744   00139E  9287               	bcf	135,1,c	;volatile
   745                           
   746                           ;LEDarray.c: 16:     TRISAbits.TRISA2 = 0;
   747   0013A0  9481               	bcf	129,2,c	;volatile
   748                           
   749                           ;LEDarray.c: 17:     TRISFbits.TRISF6 = 0;
   750   0013A2  9C86               	bcf	134,6,c	;volatile
   751                           
   752                           ;LEDarray.c: 18:     TRISAbits.TRISA4 = 0;
   753   0013A4  9881               	bcf	129,4,c	;volatile
   754                           
   755                           ;LEDarray.c: 19:     TRISAbits.TRISA5 = 0;
   756   0013A6  9A81               	bcf	129,5,c	;volatile
   757                           
   758                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
   759   0013A8  9086               	bcf	134,0,c	;volatile
   760                           
   761                           ;LEDarray.c: 21:     TRISBbits.TRISB0 = 0;
   762   0013AA  9082               	bcf	130,0,c	;volatile
   763                           
   764                           ;LEDarray.c: 22:     TRISBbits.TRISB1 = 0;
   765   0013AC  9282               	bcf	130,1,c	;volatile
   766                           
   767                           ;LEDarray.c: 24:     PORTGbits.RG0 = 1;
   768   0013AE  808F               	bsf	143,0,c	;volatile
   769                           
   770                           ;LEDarray.c: 25:     PORTGbits.RG1 = 1;
   771   0013B0  828F               	bsf	143,1,c	;volatile
   772                           
   773                           ;LEDarray.c: 26:     PORTAbits.RA2 = 1;
   774   0013B2  8489               	bsf	137,2,c	;volatile
   775                           
   776                           ;LEDarray.c: 27:     PORTFbits.RF6 = 1;
   777   0013B4  8C8E               	bsf	142,6,c	;volatile
   778                           
   779                           ;LEDarray.c: 28:     PORTAbits.RA4 = 1;
   780   0013B6  8889               	bsf	137,4,c	;volatile
   781                           
   782                           ;LEDarray.c: 29:     PORTAbits.RA5 = 1;
   783   0013B8  8A89               	bsf	137,5,c	;volatile
   784                           
   785                           ;LEDarray.c: 30:     PORTFbits.RF0 = 1;
   786   0013BA  808E               	bsf	142,0,c	;volatile
   787                           
   788                           ;LEDarray.c: 31:     PORTBbits.RB0 = 1;
   789   0013BC  808A               	bsf	138,0,c	;volatile
   790                           
   791                           ;LEDarray.c: 32:     PORTBbits.RB1 = 1;
   792   0013BE  828A               	bsf	138,1,c	;volatile
   793                           
   794                           ;LEDarray.c: 34:     LATGbits.LATG0 = 0;
   795   0013C0  907F               	bcf	127,0,c	;volatile
   796                           
   797                           ;LEDarray.c: 35:     LATGbits.LATG1 = 0;
   798   0013C2  927F               	bcf	127,1,c	;volatile
   799                           
   800                           ;LEDarray.c: 36:     LATAbits.LATA2 = 0;
   801   0013C4  9479               	bcf	121,2,c	;volatile
   802                           
   803                           ;LEDarray.c: 37:     LATFbits.LATF6 = 0;
   804   0013C6  9C7E               	bcf	126,6,c	;volatile
   805                           
   806                           ;LEDarray.c: 38:     LATAbits.LATA4 = 0;
   807   0013C8  9879               	bcf	121,4,c	;volatile
   808                           
   809                           ;LEDarray.c: 39:     LATAbits.LATA5 = 0;
   810   0013CA  9A79               	bcf	121,5,c	;volatile
   811                           
   812                           ;LEDarray.c: 40:     LATFbits.LATF0 = 0;
   813   0013CC  907E               	bcf	126,0,c	;volatile
   814                           
   815                           ;LEDarray.c: 41:     LATBbits.LATB0 = 0;
   816   0013CE  907A               	bcf	122,0,c	;volatile
   817                           
   818                           ;LEDarray.c: 42:     LATBbits.LATB1 = 0;
   819   0013D0  927A               	bcf	122,1,c	;volatile
   820   0013D2  0012               	return		;funcret
   821   0013D4                     __end_of_LEDarray_init:
   822                           	callstack 0
   823                           
   824 ;; *************** function _LEDarray_disp_bin *****************
   825 ;; Defined at:
   826 ;;		line 49 in file "LEDarray.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  number          2    0[BANK0 ] unsigned int 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		None
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; Hardware stack levels required when called: 6
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;;		_LEDarray_disp_dec
   852 ;;		_LEDarray_disp_PPM
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text4
   857   000EF4                     __ptext4:
   858                           	callstack 0
   859   000EF4                     _LEDarray_disp_bin:
   860                           	callstack 24
   861   000EF4                     
   862                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 54:     if(number & 0b000000001){LATGbits.LATG0 = 1;}else{LATGbits.LATG0 = 0;}
   863   000EF4  0100               	movlb	0	; () banked
   864   000EF6  A17A               	btfss	LEDarray_disp_bin@number& (0+255),0,b
   865   000EF8  EF80  F007         	goto	u1181
   866   000EFC  EF82  F007         	goto	u1180
   867   000F00                     u1181:
   868   000F00  EF85  F007         	goto	l30
   869   000F04                     u1180:
   870   000F04                     
   871                           ; BSR set to: 0
   872   000F04  807F               	bsf	127,0,c	;volatile
   873   000F06  EF86  F007         	goto	l31
   874   000F0A                     l30:
   875                           
   876                           ; BSR set to: 0
   877   000F0A  907F               	bcf	127,0,c	;volatile
   878   000F0C                     l31:
   879                           
   880                           ; BSR set to: 0
   881                           ;LEDarray.c: 55:     if(number & 0b000000010){LATGbits.LATG1 = 1;}else{LATGbits.LATG1 = 
      +                          0;}
   882   000F0C  A37A               	btfss	LEDarray_disp_bin@number& (0+255),1,b
   883   000F0E  EF8B  F007         	goto	u1191
   884   000F12  EF8D  F007         	goto	u1190
   885   000F16                     u1191:
   886   000F16  EF90  F007         	goto	l32
   887   000F1A                     u1190:
   888   000F1A                     
   889                           ; BSR set to: 0
   890   000F1A  827F               	bsf	127,1,c	;volatile
   891   000F1C  EF91  F007         	goto	l33
   892   000F20                     l32:
   893                           
   894                           ; BSR set to: 0
   895   000F20  927F               	bcf	127,1,c	;volatile
   896   000F22                     l33:
   897                           
   898                           ; BSR set to: 0
   899                           ;LEDarray.c: 56:     if(number & 0b000000100){LATAbits.LATA2 = 1;}else{LATAbits.LATA2 = 
      +                          0;}
   900   000F22  A57A               	btfss	LEDarray_disp_bin@number& (0+255),2,b
   901   000F24  EF96  F007         	goto	u1201
   902   000F28  EF98  F007         	goto	u1200
   903   000F2C                     u1201:
   904   000F2C  EF9B  F007         	goto	l34
   905   000F30                     u1200:
   906   000F30                     
   907                           ; BSR set to: 0
   908   000F30  8479               	bsf	121,2,c	;volatile
   909   000F32  EF9C  F007         	goto	l35
   910   000F36                     l34:
   911                           
   912                           ; BSR set to: 0
   913   000F36  9479               	bcf	121,2,c	;volatile
   914   000F38                     l35:
   915                           
   916                           ; BSR set to: 0
   917                           ;LEDarray.c: 57:     if(number & 0b000001000){LATFbits.LATF6 = 1;}else{LATFbits.LATF6 = 
      +                          0;}
   918   000F38  A77A               	btfss	LEDarray_disp_bin@number& (0+255),3,b
   919   000F3A  EFA1  F007         	goto	u1211
   920   000F3E  EFA3  F007         	goto	u1210
   921   000F42                     u1211:
   922   000F42  EFA6  F007         	goto	l36
   923   000F46                     u1210:
   924   000F46                     
   925                           ; BSR set to: 0
   926   000F46  8C7E               	bsf	126,6,c	;volatile
   927   000F48  EFA7  F007         	goto	l37
   928   000F4C                     l36:
   929                           
   930                           ; BSR set to: 0
   931   000F4C  9C7E               	bcf	126,6,c	;volatile
   932   000F4E                     l37:
   933                           
   934                           ; BSR set to: 0
   935                           ;LEDarray.c: 58:     if(number & 0b000010000){LATAbits.LATA4 = 1;}else{LATAbits.LATA4 = 
      +                          0;}
   936   000F4E  A97A               	btfss	LEDarray_disp_bin@number& (0+255),4,b
   937   000F50  EFAC  F007         	goto	u1221
   938   000F54  EFAE  F007         	goto	u1220
   939   000F58                     u1221:
   940   000F58  EFB1  F007         	goto	l38
   941   000F5C                     u1220:
   942   000F5C                     
   943                           ; BSR set to: 0
   944   000F5C  8879               	bsf	121,4,c	;volatile
   945   000F5E  EFB2  F007         	goto	l39
   946   000F62                     l38:
   947                           
   948                           ; BSR set to: 0
   949   000F62  9879               	bcf	121,4,c	;volatile
   950   000F64                     l39:
   951                           
   952                           ; BSR set to: 0
   953                           ;LEDarray.c: 59:     if(number & 0b000100000){LATAbits.LATA5 = 1;}else{LATAbits.LATA5 = 
      +                          0;}
   954   000F64  AB7A               	btfss	LEDarray_disp_bin@number& (0+255),5,b
   955   000F66  EFB7  F007         	goto	u1231
   956   000F6A  EFB9  F007         	goto	u1230
   957   000F6E                     u1231:
   958   000F6E  EFBC  F007         	goto	l40
   959   000F72                     u1230:
   960   000F72                     
   961                           ; BSR set to: 0
   962   000F72  8A79               	bsf	121,5,c	;volatile
   963   000F74  EFBD  F007         	goto	l41
   964   000F78                     l40:
   965                           
   966                           ; BSR set to: 0
   967   000F78  9A79               	bcf	121,5,c	;volatile
   968   000F7A                     l41:
   969                           
   970                           ; BSR set to: 0
   971                           ;LEDarray.c: 60:     if(number & 0b001000000){LATFbits.LATF0 = 1;}else{LATFbits.LATF0 = 
      +                          0;}
   972   000F7A  AD7A               	btfss	LEDarray_disp_bin@number& (0+255),6,b
   973   000F7C  EFC2  F007         	goto	u1241
   974   000F80  EFC4  F007         	goto	u1240
   975   000F84                     u1241:
   976   000F84  EFC7  F007         	goto	l42
   977   000F88                     u1240:
   978   000F88                     
   979                           ; BSR set to: 0
   980   000F88  807E               	bsf	126,0,c	;volatile
   981   000F8A  EFC8  F007         	goto	l43
   982   000F8E                     l42:
   983                           
   984                           ; BSR set to: 0
   985   000F8E  907E               	bcf	126,0,c	;volatile
   986   000F90                     l43:
   987                           
   988                           ; BSR set to: 0
   989                           ;LEDarray.c: 61:     if(number & 0b010000000){LATBbits.LATB0 = 1;}else{LATBbits.LATB0 = 
      +                          0;}
   990   000F90  AF7A               	btfss	LEDarray_disp_bin@number& (0+255),7,b
   991   000F92  EFCD  F007         	goto	u1251
   992   000F96  EFCF  F007         	goto	u1250
   993   000F9A                     u1251:
   994   000F9A  EFD2  F007         	goto	l44
   995   000F9E                     u1250:
   996   000F9E                     
   997                           ; BSR set to: 0
   998   000F9E  807A               	bsf	122,0,c	;volatile
   999   000FA0  EFD3  F007         	goto	l45
  1000   000FA4                     l44:
  1001                           
  1002                           ; BSR set to: 0
  1003   000FA4  907A               	bcf	122,0,c	;volatile
  1004   000FA6                     l45:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;LEDarray.c: 62:     if(number & 0b100000000){LATBbits.LATB1 = 1;}else{LATBbits.LATB1 = 
      +                          0;}
  1008   000FA6  A17B               	btfss	(LEDarray_disp_bin@number+1)& (0+255),0,b
  1009   000FA8  EFD8  F007         	goto	u1261
  1010   000FAC  EFDA  F007         	goto	u1260
  1011   000FB0                     u1261:
  1012   000FB0  EFDD  F007         	goto	l46
  1013   000FB4                     u1260:
  1014   000FB4                     
  1015                           ; BSR set to: 0
  1016   000FB4  827A               	bsf	122,1,c	;volatile
  1017   000FB6  EFDE  F007         	goto	l48
  1018   000FBA                     l46:
  1019                           
  1020                           ; BSR set to: 0
  1021   000FBA  927A               	bcf	122,1,c	;volatile
  1022   000FBC                     l48:
  1023                           
  1024                           ; BSR set to: 0
  1025   000FBC  0012               	return		;funcret
  1026   000FBE                     __end_of_LEDarray_disp_bin:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _LCD_Init *****************
  1030 ;; Defined at:
  1031 ;;		line 52 in file "LCD.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;Total ram usage:        2 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 9
  1052 ;; This function calls:
  1053 ;;		_LCD_sendbyte
  1054 ;;		_LCD_sendnibble
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text5
  1061   000FBE                     __ptext5:
  1062                           	callstack 0
  1063   000FBE                     _LCD_Init:
  1064                           	callstack 21
  1065   000FBE                     
  1066                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  1067   000FBE  9483               	bcf	131,2,c	;volatile
  1068                           
  1069                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  1070   000FC0  9C83               	bcf	131,6,c	;volatile
  1071                           
  1072                           ;LCD.c: 59:     TRISBbits.TRISB3 = 0;
  1073   000FC2  9682               	bcf	130,3,c	;volatile
  1074                           
  1075                           ;LCD.c: 60:     TRISBbits.TRISB2 = 0;
  1076   000FC4  9482               	bcf	130,2,c	;volatile
  1077                           
  1078                           ;LCD.c: 61:     TRISEbits.TRISE3 = 0;
  1079   000FC6  9685               	bcf	133,3,c	;volatile
  1080                           
  1081                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  1082   000FC8  9285               	bcf	133,1,c	;volatile
  1083                           
  1084                           ;LCD.c: 65:     LATCbits.LATC6 = 0;
  1085   000FCA  9C7B               	bcf	123,6,c	;volatile
  1086                           
  1087                           ;LCD.c: 66:     LATCbits.LATC2 = 0;
  1088   000FCC  947B               	bcf	123,2,c	;volatile
  1089                           
  1090                           ;LCD.c: 67:     LATBbits.LATB3 = 0;
  1091   000FCE  967A               	bcf	122,3,c	;volatile
  1092                           
  1093                           ;LCD.c: 68:     LATBbits.LATB2 = 0;
  1094   000FD0  947A               	bcf	122,2,c	;volatile
  1095                           
  1096                           ;LCD.c: 69:     LATEbits.LATE3 = 0;
  1097   000FD2  967D               	bcf	125,3,c	;volatile
  1098                           
  1099                           ;LCD.c: 70:     LATEbits.LATE1 = 0;
  1100   000FD4  927D               	bcf	125,1,c	;volatile
  1101   000FD6                     
  1102                           ;LCD.c: 72:     _delay((unsigned long)((60)*(64000000/4000.0)));
  1103   000FD6  0E05               	movlw	5
  1104   000FD8  0100               	movlb	0	; () banked
  1105   000FDA  6F7E               	movwf	(??_LCD_Init+1)& (0+255),b
  1106   000FDC  0EDF               	movlw	223
  1107   000FDE  6F7D               	movwf	??_LCD_Init& (0+255),b
  1108   000FE0  0EBB               	movlw	187
  1109   000FE2                     u1467:
  1110   000FE2  2EE8               	decfsz	wreg,f,c
  1111   000FE4  D7FE               	bra	u1467
  1112   000FE6  2F7D               	decfsz	??_LCD_Init& (0+255),f,b
  1113   000FE8  D7FC               	bra	u1467
  1114   000FEA  2F7E               	decfsz	(??_LCD_Init+1)& (0+255),f,b
  1115   000FEC  D7FA               	bra	u1467
  1116   000FEE  D000               	nop2	
  1117   000FF0                     
  1118                           ;LCD.c: 74:     LCD_sendnibble(0b0011);
  1119   000FF0  0E03               	movlw	3
  1120   000FF2  ECFC  F008         	call	_LCD_sendnibble
  1121   000FF6                     
  1122                           ;LCD.c: 75:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  1123   000FF6  0ED5               	movlw	213
  1124   000FF8                     u1477:
  1125   000FF8  2EE8               	decfsz	wreg,f,c
  1126   000FFA  D7FE               	bra	u1477
  1127   000FFC  F000               	nop	
  1128                           
  1129                           ;LCD.c: 77:     LCD_sendnibble(0b0010);
  1130   000FFE  0E02               	movlw	2
  1131   001000  ECFC  F008         	call	_LCD_sendnibble
  1132   001004                     
  1133                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  1134   001004  0ED5               	movlw	213
  1135   001006                     u1487:
  1136   001006  2EE8               	decfsz	wreg,f,c
  1137   001008  D7FE               	bra	u1487
  1138   00100A  F000               	nop	
  1139   00100C                     
  1140                           ;LCD.c: 80:     LCD_sendbyte(0b00101000,0);
  1141   00100C  0E00               	movlw	0
  1142   00100E  0100               	movlb	0	; () banked
  1143   001010  6F7B               	movwf	LCD_sendbyte@type& (0+255),b
  1144   001012  0E28               	movlw	40
  1145   001014  ECEA  F009         	call	_LCD_sendbyte
  1146   001018                     
  1147                           ;LCD.c: 81:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  1148   001018  0ED5               	movlw	213
  1149   00101A                     u1497:
  1150   00101A  2EE8               	decfsz	wreg,f,c
  1151   00101C  D7FE               	bra	u1497
  1152   00101E  F000               	nop	
  1153   001020                     
  1154                           ;LCD.c: 83:     LCD_sendbyte(0b00101000,0);
  1155   001020  0E00               	movlw	0
  1156   001022  0100               	movlb	0	; () banked
  1157   001024  6F7B               	movwf	LCD_sendbyte@type& (0+255),b
  1158   001026  0E28               	movlw	40
  1159   001028  ECEA  F009         	call	_LCD_sendbyte
  1160   00102C                     
  1161                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  1162   00102C  0ED5               	movlw	213
  1163   00102E                     u1507:
  1164   00102E  2EE8               	decfsz	wreg,f,c
  1165   001030  D7FE               	bra	u1507
  1166   001032  F000               	nop	
  1167   001034                     
  1168                           ;LCD.c: 86:     LCD_sendbyte(0b00000001,0);
  1169   001034  0E00               	movlw	0
  1170   001036  0100               	movlb	0	; () banked
  1171   001038  6F7B               	movwf	LCD_sendbyte@type& (0+255),b
  1172   00103A  0E01               	movlw	1
  1173   00103C  ECEA  F009         	call	_LCD_sendbyte
  1174   001040                     
  1175                           ;LCD.c: 87:     _delay((unsigned long)((2)*(64000000/4000.0)));
  1176   001040  0E2A               	movlw	42
  1177   001042  0100               	movlb	0	; () banked
  1178   001044  6F7D               	movwf	??_LCD_Init& (0+255),b
  1179   001046  0E8D               	movlw	141
  1180   001048                     u1517:
  1181   001048  2EE8               	decfsz	wreg,f,c
  1182   00104A  D7FE               	bra	u1517
  1183   00104C  2F7D               	decfsz	??_LCD_Init& (0+255),f,b
  1184   00104E  D7FC               	bra	u1517
  1185   001050  D000               	nop2	
  1186   001052                     
  1187                           ;LCD.c: 89:     LCD_sendbyte(0b00000110,0);
  1188   001052  0E00               	movlw	0
  1189   001054  0100               	movlb	0	; () banked
  1190   001056  6F7B               	movwf	LCD_sendbyte@type& (0+255),b
  1191   001058  0E06               	movlw	6
  1192   00105A  ECEA  F009         	call	_LCD_sendbyte
  1193   00105E                     
  1194                           ;LCD.c: 91:     LCD_sendbyte(0b00001110,0);
  1195   00105E  0E00               	movlw	0
  1196   001060  0100               	movlb	0	; () banked
  1197   001062  6F7B               	movwf	LCD_sendbyte@type& (0+255),b
  1198   001064  0E0E               	movlw	14
  1199   001066  ECEA  F009         	call	_LCD_sendbyte
  1200   00106A                     
  1201                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  1202   00106A  0E00               	movlw	0
  1203   00106C  0100               	movlb	0	; () banked
  1204   00106E  6F7B               	movwf	LCD_sendbyte@type& (0+255),b
  1205   001070  0E0C               	movlw	12
  1206   001072  ECEA  F009         	call	_LCD_sendbyte
  1207   001076  0012               	return		;funcret
  1208   001078                     __end_of_LCD_Init:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _LCD_sendbyte *****************
  1212 ;; Defined at:
  1213 ;;		line 39 in file "LCD.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  Byte            1    wreg     unsigned char 
  1216 ;;  type            1    1[BANK0 ] unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  Byte            1    2[BANK0 ] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1228 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 8
  1235 ;; This function calls:
  1236 ;;		_LCD_sendnibble
  1237 ;; This function is called by:
  1238 ;;		_LCD_Init
  1239 ;;		_LCD_clear
  1240 ;;		_LCD_setline
  1241 ;;		_LCD_sendstring
  1242 ;;		_LCD_scroll
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text6
  1247   0013D4                     __ptext6:
  1248                           	callstack 0
  1249   0013D4                     _LCD_sendbyte:
  1250                           	callstack 21
  1251                           
  1252                           ;incstack = 0
  1253                           ;LCD_sendbyte@Byte stored from wreg
  1254   0013D4  0100               	movlb	0	; () banked
  1255   0013D6  6F7C               	movwf	LCD_sendbyte@Byte& (0+255),b
  1256   0013D8                     
  1257                           ;LCD.c: 39: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 40: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  1258   0013D8  0100               	movlb	0	; () banked
  1259   0013DA  B17B               	btfsc	LCD_sendbyte@type& (0+255),0,b
  1260   0013DC  D002               	bra	u1175
  1261   0013DE  9C7B               	bcf	123,6,c	;volatile
  1262   0013E0  D001               	bra	u1176
  1263   0013E2                     u1175:
  1264   0013E2  8C7B               	bsf	123,6,c	;volatile
  1265   0013E4                     u1176:
  1266   0013E4                     
  1267                           ;LCD.c: 43:     LCD_sendnibble(Byte >> 4);
  1268   0013E4  0100               	movlb	0	; () banked
  1269   0013E6  397C               	swapf	LCD_sendbyte@Byte& (0+255),w,b
  1270   0013E8  0B0F               	andlw	15
  1271   0013EA  ECFC  F008         	call	_LCD_sendnibble
  1272   0013EE                     
  1273                           ;LCD.c: 44:     LCD_sendnibble(Byte);
  1274   0013EE  0100               	movlb	0	; () banked
  1275   0013F0  517C               	movf	LCD_sendbyte@Byte& (0+255),w,b
  1276   0013F2  ECFC  F008         	call	_LCD_sendnibble
  1277   0013F6                     
  1278                           ;LCD.c: 46:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  1279   0013F6  0EA0               	movlw	160
  1280   0013F8                     u1527:
  1281   0013F8  D000               	nop2	
  1282   0013FA  2EE8               	decfsz	wreg,f,c
  1283   0013FC  D7FD               	bra	u1527
  1284   0013FE  0012               	return		;funcret
  1285   001400                     __end_of_LCD_sendbyte:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _LCD_sendnibble *****************
  1289 ;; Defined at:
  1290 ;;		line 21 in file "LCD.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  number          1    wreg     unsigned char 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  number          1    0[BANK0 ] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;Total ram usage:        1 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 7
  1311 ;; This function calls:
  1312 ;;		_LCD_E_TOG
  1313 ;; This function is called by:
  1314 ;;		_LCD_sendbyte
  1315 ;;		_LCD_Init
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text7
  1320   0011F8                     __ptext7:
  1321                           	callstack 0
  1322   0011F8                     _LCD_sendnibble:
  1323                           	callstack 22
  1324                           
  1325                           ;incstack = 0
  1326                           ;LCD_sendnibble@number stored from wreg
  1327   0011F8  0100               	movlb	0	; () banked
  1328   0011FA  6F7A               	movwf	LCD_sendnibble@number& (0+255),b
  1329   0011FC                     
  1330                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 25:     if(num
      +                          ber & 0b0001){ LATBbits.LATB3 = 1;}else{LATBbits.LATB3 = 0;}
  1331   0011FC  0100               	movlb	0	; () banked
  1332   0011FE  A17A               	btfss	LCD_sendnibble@number& (0+255),0,b
  1333   001200  EF04  F009         	goto	u1131
  1334   001204  EF06  F009         	goto	u1130
  1335   001208                     u1131:
  1336   001208  EF09  F009         	goto	l301
  1337   00120C                     u1130:
  1338   00120C                     
  1339                           ; BSR set to: 0
  1340   00120C  867A               	bsf	122,3,c	;volatile
  1341   00120E  EF0A  F009         	goto	l1864
  1342   001212                     l301:
  1343                           
  1344                           ; BSR set to: 0
  1345   001212  967A               	bcf	122,3,c	;volatile
  1346   001214                     l1864:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;LCD.c: 26:     if(number & 0b0010){ LATBbits.LATB2 = 1;}else{LATBbits.LATB2 = 0;}
  1350   001214  A37A               	btfss	LCD_sendnibble@number& (0+255),1,b
  1351   001216  EF0F  F009         	goto	u1141
  1352   00121A  EF11  F009         	goto	u1140
  1353   00121E                     u1141:
  1354   00121E  EF14  F009         	goto	l303
  1355   001222                     u1140:
  1356   001222                     
  1357                           ; BSR set to: 0
  1358   001222  847A               	bsf	122,2,c	;volatile
  1359   001224  EF15  F009         	goto	l1868
  1360   001228                     l303:
  1361                           
  1362                           ; BSR set to: 0
  1363   001228  947A               	bcf	122,2,c	;volatile
  1364   00122A                     l1868:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;LCD.c: 27:     if(number & 0b0100){ LATEbits.LATE3 = 1;}else{LATEbits.LATE3 = 0;}
  1368   00122A  A57A               	btfss	LCD_sendnibble@number& (0+255),2,b
  1369   00122C  EF1A  F009         	goto	u1151
  1370   001230  EF1C  F009         	goto	u1150
  1371   001234                     u1151:
  1372   001234  EF1F  F009         	goto	l305
  1373   001238                     u1150:
  1374   001238                     
  1375                           ; BSR set to: 0
  1376   001238  867D               	bsf	125,3,c	;volatile
  1377   00123A  EF20  F009         	goto	l1872
  1378   00123E                     l305:
  1379                           
  1380                           ; BSR set to: 0
  1381   00123E  967D               	bcf	125,3,c	;volatile
  1382   001240                     l1872:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;LCD.c: 28:     if(number & 0b1000){ LATEbits.LATE1 = 1;}else{LATEbits.LATE1 = 0;}
  1386   001240  A77A               	btfss	LCD_sendnibble@number& (0+255),3,b
  1387   001242  EF25  F009         	goto	u1161
  1388   001246  EF27  F009         	goto	u1160
  1389   00124A                     u1161:
  1390   00124A  EF2A  F009         	goto	l307
  1391   00124E                     u1160:
  1392   00124E                     
  1393                           ; BSR set to: 0
  1394   00124E  827D               	bsf	125,1,c	;volatile
  1395   001250  EF2B  F009         	goto	l1876
  1396   001254                     l307:
  1397                           
  1398                           ; BSR set to: 0
  1399   001254  927D               	bcf	125,1,c	;volatile
  1400   001256                     l1876:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;LCD.c: 30:     LCD_E_TOG();
  1404   001256  EC51  F00A         	call	_LCD_E_TOG	;wreg free
  1405   00125A                     
  1406                           ;LCD.c: 31:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  1407   00125A  0E1A               	movlw	26
  1408   00125C                     u1537:
  1409   00125C  2EE8               	decfsz	wreg,f,c
  1410   00125E  D7FE               	bra	u1537
  1411   001260  D000               	nop2	
  1412   001262  0012               	return		;funcret
  1413   001264                     __end_of_LCD_sendnibble:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _LCD_E_TOG *****************
  1417 ;; Defined at:
  1418 ;;		line 8 in file "LCD.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 6
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_LCD_sendnibble
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text8
  1447   0014A2                     __ptext8:
  1448                           	callstack 0
  1449   0014A2                     _LCD_E_TOG:
  1450                           	callstack 22
  1451   0014A2                     
  1452                           ;LCD.c: 11:     LATCbits.LATC2 = 1;
  1453   0014A2  847B               	bsf	123,2,c	;volatile
  1454   0014A4                     
  1455                           ;LCD.c: 12:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  1456   0014A4  0E0A               	movlw	10
  1457   0014A6                     u1547:
  1458   0014A6  2EE8               	decfsz	wreg,f,c
  1459   0014A8  D7FE               	bra	u1547
  1460   0014AA  D000               	nop2	
  1461   0014AC                     
  1462                           ;LCD.c: 14:     LATCbits.LATC2 = 0;
  1463   0014AC  947B               	bcf	123,2,c	;volatile
  1464   0014AE  0012               	return		;funcret
  1465   0014B0                     __end_of_LCD_E_TOG:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _Interrupts_init *****************
  1469 ;; Defined at:
  1470 ;;		line 9 in file "interrupts.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		None
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 6
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text9
  1499   001492                     __ptext9:
  1500                           	callstack 0
  1501   001492                     _Interrupts_init:
  1502                           	callstack 24
  1503   001492                     
  1504                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  1505   001492  010E               	movlb	14	; () banked
  1506   001494  812B               	bsf	43,0,b	;volatile
  1507                           
  1508                           ;interrupts.c: 14:     INTCONbits.IPEN = 1;
  1509   001496  8AF2               	bsf	242,5,c	;volatile
  1510                           
  1511                           ;interrupts.c: 15:     INTCONbits.GIEL=1;
  1512   001498  8CF2               	bsf	242,6,c	;volatile
  1513                           
  1514                           ;interrupts.c: 16:     IPR2bits.C1IP=1;
  1515   00149A  8121               	bsf	33,0,b	;volatile
  1516                           
  1517                           ;interrupts.c: 17:     PIE0bits.TMR0IE=1;
  1518   00149C  8B29               	bsf	41,5,b	;volatile
  1519                           
  1520                           ;interrupts.c: 18:     INTCONbits.GIEH=1;
  1521   00149E  8EF2               	bsf	242,7,c	;volatile
  1522   0014A0                     
  1523                           ; BSR set to: 14
  1524   0014A0  0012               	return		;funcret
  1525   0014A2                     __end_of_Interrupts_init:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _Comp1_init *****************
  1529 ;; Defined at:
  1530 ;;		line 22 in file "comparator.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 7
  1551 ;; This function calls:
  1552 ;;		_DAC_init
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text10
  1559   001426                     __ptext10:
  1560                           	callstack 0
  1561   001426                     _Comp1_init:
  1562                           	callstack 23
  1563   001426                     
  1564                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  1565   001426  8E86               	bsf	134,7,c	;volatile
  1566   001428                     
  1567                           ;comparator.c: 25:     CM1NCHbits.NCH=0b011;
  1568   001428  010E               	movlb	14	; () banked
  1569   00142A  51D2               	movf	210,w,b	;volatile
  1570   00142C  0BF8               	andlw	-8
  1571   00142E  0903               	iorlw	3
  1572   001430  6FD2               	movwf	210,b	;volatile
  1573                           
  1574                           ;comparator.c: 26:     CM1PCHbits.PCH=0b101;
  1575   001432  51D3               	movf	211,w,b	;volatile
  1576   001434  0BF8               	andlw	-8
  1577   001436  0905               	iorlw	5
  1578   001438  6FD3               	movwf	211,b	;volatile
  1579   00143A                     
  1580                           ; BSR set to: 14
  1581                           ;comparator.c: 27:     CM1CON0bits.HYS=1;
  1582   00143A  83D0               	bsf	208,1,b	;volatile
  1583   00143C                     
  1584                           ; BSR set to: 14
  1585                           ;comparator.c: 28:     CM1CON0bits.POL=1;
  1586   00143C  89D0               	bsf	208,4,b	;volatile
  1587   00143E                     
  1588                           ; BSR set to: 14
  1589                           ;comparator.c: 29:     CM1CON1bits.INTP=1;
  1590   00143E  83D1               	bsf	209,1,b	;volatile
  1591   001440                     
  1592                           ; BSR set to: 14
  1593                           ;comparator.c: 30:     DAC_init();
  1594   001440  EC3F  F00A         	call	_DAC_init	;wreg free
  1595   001444                     
  1596                           ;comparator.c: 31:     CM1CON0bits.EN=1;
  1597   001444  010E               	movlb	14	; () banked
  1598   001446  8FD0               	bsf	208,7,b	;volatile
  1599   001448                     
  1600                           ; BSR set to: 14
  1601   001448  0012               	return		;funcret
  1602   00144A                     __end_of_Comp1_init:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _DAC_init *****************
  1606 ;; Defined at:
  1607 ;;		line 7 in file "comparator.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 6
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_Comp1_init
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text11
  1636   00147E                     __ptext11:
  1637                           	callstack 0
  1638   00147E                     _DAC_init:
  1639                           	callstack 23
  1640   00147E                     
  1641                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  1642   00147E  0EF3               	movlw	-13
  1643   001480  010E               	movlb	14	; () banked
  1644   001482  17C6               	andwf	198,f,b	;volatile
  1645   001484                     
  1646                           ; BSR set to: 14
  1647                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  1648   001484  91C6               	bcf	198,0,b	;volatile
  1649                           
  1650                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  1651   001486  51C7               	movf	199,w,b	;volatile
  1652   001488  0BE0               	andlw	-32
  1653   00148A  0914               	iorlw	20
  1654   00148C  6FC7               	movwf	199,b	;volatile
  1655   00148E                     
  1656                           ; BSR set to: 14
  1657                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  1658   00148E  8FC6               	bsf	198,7,b	;volatile
  1659   001490                     
  1660                           ; BSR set to: 14
  1661   001490  0012               	return		;funcret
  1662   001492                     __end_of_DAC_init:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _ADC_init *****************
  1666 ;; Defined at:
  1667 ;;		line 9 in file "ADC.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 6
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text12
  1696   001464                     __ptext12:
  1697                           	callstack 0
  1698   001464                     _ADC_init:
  1699                           	callstack 24
  1700   001464                     
  1701                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  1702   001464  8681               	bsf	129,3,c	;volatile
  1703                           
  1704                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  1705   001466  010E               	movlb	14	; () banked
  1706   001468  8792               	bsf	146,3,b	;volatile
  1707                           
  1708                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  1709   00146A  010F               	movlb	15	; () banked
  1710   00146C  9958               	bcf	88,4,b	;volatile
  1711   00146E                     
  1712                           ; BSR set to: 15
  1713                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  1714   00146E  0EFC               	movlw	-4
  1715   001470  1758               	andwf	88,f,b	;volatile
  1716                           
  1717                           ;ADC.c: 17:     ADPCH=0b11;
  1718   001472  0E03               	movlw	3
  1719   001474  6F5F               	movwf	95,b	;volatile
  1720   001476                     
  1721                           ; BSR set to: 15
  1722                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  1723   001476  9460               	bcf	96,2,c	;volatile
  1724   001478                     
  1725                           ; BSR set to: 15
  1726                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  1727   001478  8860               	bsf	96,4,c	;volatile
  1728   00147A                     
  1729                           ; BSR set to: 15
  1730                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  1731   00147A  8E60               	bsf	96,7,c	;volatile
  1732   00147C                     
  1733                           ; BSR set to: 15
  1734   00147C  0012               	return		;funcret
  1735   00147E                     __end_of_ADC_init:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _HighISR *****************
  1739 ;; Defined at:
  1740 ;;		line 25 in file "interrupts.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;Total ram usage:        7 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 5
  1761 ;; This function calls:
  1762 ;;		_increment_seconds
  1763 ;; This function is called by:
  1764 ;;		Interrupt level 2
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	intcode
  1769   000008                     __pintcode:
  1770                           	callstack 0
  1771   000008                     _HighISR:
  1772                           	callstack 21
  1773                           
  1774                           ; BSR set to: 15
  1775                           ;incstack = 0
  1776   000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1777   00000A  CFE1 F02A          	movff	fsr1l,??_HighISR+1
  1778   00000E  CFE2 F02B          	movff	fsr1h,??_HighISR+2
  1779   000012  CFD9 F02C          	movff	fsr2l,??_HighISR+3
  1780   000016  CFDA F02D          	movff	fsr2h,??_HighISR+4
  1781   00001A  CFF3 F02E          	movff	prodl,??_HighISR+5
  1782   00001E  CFF4 F02F          	movff	prodh,??_HighISR+6
  1783   000022                     
  1784                           ;interrupts.c: 27:  if(PIR2bits.C1IF){
  1785   000022  010E               	movlb	14	; () banked
  1786   000024  A135               	btfss	53,0,b	;volatile
  1787   000026  EF17  F000         	goto	i2u102_41
  1788   00002A  EF19  F000         	goto	i2u102_40
  1789   00002E                     i2u102_41:
  1790   00002E  EF2C  F000         	goto	i2l1780
  1791   000032                     i2u102_40:
  1792   000032                     
  1793                           ; BSR set to: 14
  1794                           ;interrupts.c: 28:         LATDbits.LATD7 = !LATDbits.LATD7;
  1795   000032  AE7C               	btfss	124,7,c	;volatile
  1796   000034  EF1E  F000         	goto	i2u103_41
  1797   000038  EF22  F000         	goto	i2u103_40
  1798   00003C                     i2u103_41:
  1799   00003C  6A29               	clrf	??_HighISR^0,c
  1800   00003E  2A29               	incf	??_HighISR^0,f,c
  1801   000040  EF23  F000         	goto	i2u104_48
  1802   000044                     i2u103_40:
  1803   000044  6A29               	clrf	??_HighISR^0,c
  1804   000046                     i2u104_48:
  1805   000046  3229               	rrcf	??_HighISR^0,f,c
  1806   000048  3229               	rrcf	??_HighISR^0,f,c
  1807   00004A  507C               	movf	124,w,c	;volatile
  1808   00004C  1829               	xorwf	??_HighISR^0,w,c
  1809   00004E  0B7F               	andlw	-129
  1810   000050  1829               	xorwf	??_HighISR^0,w,c
  1811   000052  6E7C               	movwf	124,c	;volatile
  1812   000054                     
  1813                           ;interrupts.c: 29:         PIR2bits.C1IF=0;
  1814   000054  010E               	movlb	14	; () banked
  1815   000056  9135               	bcf	53,0,b	;volatile
  1816   000058                     i2l1780:
  1817                           
  1818                           ; BSR set to: 14
  1819                           ;interrupts.c: 31:     if(PIR0bits.TMR0IF){
  1820   000058  AB33               	btfss	51,5,b	;volatile
  1821   00005A  EF31  F000         	goto	i2u105_41
  1822   00005E  EF33  F000         	goto	i2u105_40
  1823   000062                     i2u105_41:
  1824   000062  EF4E  F000         	goto	i2l150
  1825   000066                     i2u105_40:
  1826   000066                     
  1827                           ; BSR set to: 14
  1828                           ;interrupts.c: 33:         increment_seconds(1);
  1829   000066  0E00               	movlw	0
  1830   000068  6E28               	movwf	(increment_seconds@increment+1)^0,c
  1831   00006A  0E01               	movlw	1
  1832   00006C  6E27               	movwf	increment_seconds@increment^0,c
  1833   00006E  ECC0  F008         	call	_increment_seconds	;wreg free
  1834   000072                     
  1835                           ;interrupts.c: 35:         if(test_mode == 0){
  1836   000072  504A               	movf	_test_mode^0,w,c
  1837   000074  104B               	iorwf	(_test_mode+1)^0,w,c
  1838   000076  A4D8               	btfss	status,2,c
  1839   000078  EF40  F000         	goto	i2u106_41
  1840   00007C  EF42  F000         	goto	i2u106_40
  1841   000080                     i2u106_41:
  1842   000080  EF48  F000         	goto	i2l1788
  1843   000084                     i2u106_40:
  1844   000084                     
  1845                           ;interrupts.c: 36:             TMR0H = 0b1011;
  1846   000084  0E0B               	movlw	11
  1847   000086  6ED4               	movwf	212,c	;volatile
  1848                           
  1849                           ;interrupts.c: 37:             TMR0L = 0b11011011;
  1850   000088  0EDB               	movlw	219
  1851   00008A  6ED3               	movwf	211,c	;volatile
  1852                           
  1853                           ;interrupts.c: 38:         }else{
  1854   00008C  EF4C  F000         	goto	i2l1790
  1855   000090                     i2l1788:
  1856                           
  1857                           ;interrupts.c: 39:             TMR0H = 0;
  1858   000090  0E00               	movlw	0
  1859   000092  6ED4               	movwf	212,c	;volatile
  1860                           
  1861                           ;interrupts.c: 40:             TMR0L = 0;
  1862   000094  0E00               	movlw	0
  1863   000096  6ED3               	movwf	211,c	;volatile
  1864   000098                     i2l1790:
  1865                           
  1866                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  1867   000098  010E               	movlb	14	; () banked
  1868   00009A  9B33               	bcf	51,5,b	;volatile
  1869   00009C                     i2l150:
  1870                           
  1871                           ; BSR set to: 14
  1872   00009C  C02F  FFF4         	movff	??_HighISR+6,prodh
  1873   0000A0  C02E  FFF3         	movff	??_HighISR+5,prodl
  1874   0000A4  C02D  FFDA         	movff	??_HighISR+4,fsr2h
  1875   0000A8  C02C  FFD9         	movff	??_HighISR+3,fsr2l
  1876   0000AC  C02B  FFE2         	movff	??_HighISR+2,fsr1h
  1877   0000B0  C02A  FFE1         	movff	??_HighISR+1,fsr1l
  1878   0000B4  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1879   0000B6  0011               	retfie		f
  1880   0000B8                     __end_of_HighISR:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _increment_seconds *****************
  1884 ;; Defined at:
  1885 ;;		line 85 in file "timers.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  increment       2   38[COMRAM] unsigned int 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;Total ram usage:        2 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 4
  1906 ;; This function calls:
  1907 ;;		___wmul
  1908 ;;		_increment_minutes
  1909 ;; This function is called by:
  1910 ;;		_HighISR
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text14
  1915   001180                     __ptext14:
  1916                           	callstack 0
  1917   001180                     _increment_seconds:
  1918                           	callstack 21
  1919   001180                     
  1920                           ;timers.c: 86:     if(test_mode == 1){
  1921   001180  044A               	decf	_test_mode^0,w,c
  1922   001182  104B               	iorwf	(_test_mode+1)^0,w,c
  1923   001184  A4D8               	btfss	status,2,c
  1924   001186  EFC7  F008         	goto	i2u86_41
  1925   00118A  EFC9  F008         	goto	i2u86_40
  1926   00118E                     i2u86_41:
  1927   00118E  EFF2  F008         	goto	i2l1692
  1928   001192                     i2u86_40:
  1929   001192                     
  1930                           ;timers.c: 87:             increment *= 15;
  1931   001192  C027  F001         	movff	increment_seconds@increment,___wmul@multiplier
  1932   001196  C028  F002         	movff	increment_seconds@increment+1,___wmul@multiplier+1
  1933   00119A  0E00               	movlw	0
  1934   00119C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1935   00119E  0E0F               	movlw	15
  1936   0011A0  6E03               	movwf	___wmul@multiplicand^0,c
  1937   0011A2  EC00  F00A         	call	___wmul	;wreg free
  1938   0011A6  C001  F027         	movff	?___wmul,increment_seconds@increment
  1939   0011AA  C002  F028         	movff	?___wmul+1,increment_seconds@increment+1
  1940   0011AE  EFF2  F008         	goto	i2l1692
  1941   0011B2                     i2l1682:
  1942                           
  1943                           ;timers.c: 90:         seconds += 1;
  1944   0011B2  4A46               	infsnz	_seconds^0,f,c
  1945   0011B4  2A47               	incf	(_seconds+1)^0,f,c
  1946   0011B6                     
  1947                           ;timers.c: 91:         if(seconds == 60){
  1948   0011B6  0E3C               	movlw	60
  1949   0011B8  1846               	xorwf	_seconds^0,w,c
  1950   0011BA  1047               	iorwf	(_seconds+1)^0,w,c
  1951   0011BC  A4D8               	btfss	status,2,c
  1952   0011BE  EFE3  F008         	goto	i2u87_41
  1953   0011C2  EFE5  F008         	goto	i2u87_40
  1954   0011C6                     i2u87_41:
  1955   0011C6  EFEF  F008         	goto	i2l1690
  1956   0011CA                     i2u87_40:
  1957   0011CA                     
  1958                           ;timers.c: 92:             seconds = 0;
  1959   0011CA  0E00               	movlw	0
  1960   0011CC  6E47               	movwf	(_seconds+1)^0,c
  1961   0011CE  0E00               	movlw	0
  1962   0011D0  6E46               	movwf	_seconds^0,c
  1963   0011D2                     
  1964                           ;timers.c: 93:             increment_minutes(1);
  1965   0011D2  0E00               	movlw	0
  1966   0011D4  6E26               	movwf	(increment_minutes@increment+1)^0,c
  1967   0011D6  0E01               	movlw	1
  1968   0011D8  6E25               	movwf	increment_minutes@increment^0,c
  1969   0011DA  EC87  F009         	call	_increment_minutes	;wreg free
  1970   0011DE                     i2l1690:
  1971                           
  1972                           ;timers.c: 95:     increment -= 1;
  1973   0011DE  0627               	decf	increment_seconds@increment^0,f,c
  1974   0011E0  A0D8               	btfss	status,0,c
  1975   0011E2  0628               	decf	(increment_seconds@increment+1)^0,f,c
  1976   0011E4                     i2l1692:
  1977                           
  1978                           ;timers.c: 89:     while(increment > 0){
  1979   0011E4  5027               	movf	increment_seconds@increment^0,w,c
  1980   0011E6  1028               	iorwf	(increment_seconds@increment+1)^0,w,c
  1981   0011E8  A4D8               	btfss	status,2,c
  1982   0011EA  EFF9  F008         	goto	i2u88_41
  1983   0011EE  EFFB  F008         	goto	i2u88_40
  1984   0011F2                     i2u88_41:
  1985   0011F2  EFD9  F008         	goto	i2l1682
  1986   0011F6                     i2u88_40:
  1987   0011F6  0012               	return		;funcret
  1988   0011F8                     __end_of_increment_seconds:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _increment_minutes *****************
  1992 ;; Defined at:
  1993 ;;		line 99 in file "timers.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  increment       2   36[COMRAM] unsigned int 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 3
  2014 ;; This function calls:
  2015 ;;		_increment_hours
  2016 ;; This function is called by:
  2017 ;;		_increment_seconds
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text15
  2022   00130E                     __ptext15:
  2023                           	callstack 0
  2024   00130E                     _increment_minutes:
  2025                           	callstack 21
  2026   00130E                     
  2027                           ;timers.c: 100:     while(increment > 0){
  2028   00130E  EFA2  F009         	goto	i2l1568
  2029   001312                     i2l1558:
  2030                           
  2031                           ;timers.c: 101:         minutes += 1;
  2032   001312  4A44               	infsnz	_minutes^0,f,c
  2033   001314  2A45               	incf	(_minutes+1)^0,f,c
  2034   001316                     
  2035                           ;timers.c: 102:         if(minutes == 60){
  2036   001316  0E3C               	movlw	60
  2037   001318  1844               	xorwf	_minutes^0,w,c
  2038   00131A  1045               	iorwf	(_minutes+1)^0,w,c
  2039   00131C  A4D8               	btfss	status,2,c
  2040   00131E  EF93  F009         	goto	i2u73_41
  2041   001322  EF95  F009         	goto	i2u73_40
  2042   001326                     i2u73_41:
  2043   001326  EF9F  F009         	goto	i2l1566
  2044   00132A                     i2u73_40:
  2045   00132A                     
  2046                           ;timers.c: 103:             minutes = 0;
  2047   00132A  0E00               	movlw	0
  2048   00132C  6E45               	movwf	(_minutes+1)^0,c
  2049   00132E  0E00               	movlw	0
  2050   001330  6E44               	movwf	_minutes^0,c
  2051   001332                     
  2052                           ;timers.c: 104:             increment_hours(1);
  2053   001332  0E00               	movlw	0
  2054   001334  6E24               	movwf	(increment_hours@increment+1)^0,c
  2055   001336  0E01               	movlw	1
  2056   001338  6E23               	movwf	increment_hours@increment^0,c
  2057   00133A  EC61  F009         	call	_increment_hours	;wreg free
  2058   00133E                     i2l1566:
  2059                           
  2060                           ;timers.c: 106:         increment -= 1;
  2061   00133E  0625               	decf	increment_minutes@increment^0,f,c
  2062   001340  A0D8               	btfss	status,0,c
  2063   001342  0626               	decf	(increment_minutes@increment+1)^0,f,c
  2064   001344                     i2l1568:
  2065                           
  2066                           ;timers.c: 100:     while(increment > 0){
  2067   001344  5025               	movf	increment_minutes@increment^0,w,c
  2068   001346  1026               	iorwf	(increment_minutes@increment+1)^0,w,c
  2069   001348  A4D8               	btfss	status,2,c
  2070   00134A  EFA9  F009         	goto	i2u74_41
  2071   00134E  EFAB  F009         	goto	i2u74_40
  2072   001352                     i2u74_41:
  2073   001352  EF89  F009         	goto	i2l1558
  2074   001356                     i2u74_40:
  2075   001356  0012               	return		;funcret
  2076   001358                     __end_of_increment_minutes:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _increment_hours *****************
  2080 ;; Defined at:
  2081 ;;		line 110 in file "timers.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  increment       2   34[COMRAM] unsigned int 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 2
  2102 ;; This function calls:
  2103 ;;		_increment_day
  2104 ;; This function is called by:
  2105 ;;		_increment_minutes
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text16
  2110   0012C2                     __ptext16:
  2111                           	callstack 0
  2112   0012C2                     _increment_hours:
  2113                           	callstack 21
  2114   0012C2                     
  2115                           ;timers.c: 111:     while(increment > 0){
  2116   0012C2  EF7D  F009         	goto	i2l1528
  2117   0012C6                     i2l1518:
  2118                           
  2119                           ;timers.c: 112:         hours += 1;
  2120   0012C6  0100               	movlb	0	; () banked
  2121   0012C8  4B78               	infsnz	_hours& (0+255),f,b
  2122   0012CA  2B79               	incf	(_hours+1)& (0+255),f,b
  2123   0012CC                     
  2124                           ; BSR set to: 0
  2125                           ;timers.c: 113:         if(hours == 24){
  2126   0012CC  0E18               	movlw	24
  2127   0012CE  1978               	xorwf	_hours& (0+255),w,b
  2128   0012D0  1179               	iorwf	(_hours+1)& (0+255),w,b
  2129   0012D2  A4D8               	btfss	status,2,c
  2130   0012D4  EF6E  F009         	goto	i2u67_41
  2131   0012D8  EF70  F009         	goto	i2u67_40
  2132   0012DC                     i2u67_41:
  2133   0012DC  EF7A  F009         	goto	i2l1526
  2134   0012E0                     i2u67_40:
  2135   0012E0                     
  2136                           ; BSR set to: 0
  2137                           ;timers.c: 114:             hours = 0;
  2138   0012E0  0E00               	movlw	0
  2139   0012E2  6F79               	movwf	(_hours+1)& (0+255),b
  2140   0012E4  0E00               	movlw	0
  2141   0012E6  6F78               	movwf	_hours& (0+255),b
  2142   0012E8                     
  2143                           ; BSR set to: 0
  2144                           ;timers.c: 115:             increment_day(1);
  2145   0012E8  0E00               	movlw	0
  2146   0012EA  6E04               	movwf	(increment_day@increment+1)^0,c
  2147   0012EC  0E01               	movlw	1
  2148   0012EE  6E03               	movwf	increment_day@increment^0,c
  2149   0012F0  EC03  F007         	call	_increment_day	;wreg free
  2150   0012F4                     i2l1526:
  2151                           
  2152                           ;timers.c: 117:         increment -= 1;
  2153   0012F4  0623               	decf	increment_hours@increment^0,f,c
  2154   0012F6  A0D8               	btfss	status,0,c
  2155   0012F8  0624               	decf	(increment_hours@increment+1)^0,f,c
  2156   0012FA                     i2l1528:
  2157                           
  2158                           ;timers.c: 111:     while(increment > 0){
  2159   0012FA  5023               	movf	increment_hours@increment^0,w,c
  2160   0012FC  1024               	iorwf	(increment_hours@increment+1)^0,w,c
  2161   0012FE  A4D8               	btfss	status,2,c
  2162   001300  EF84  F009         	goto	i2u68_41
  2163   001304  EF86  F009         	goto	i2u68_40
  2164   001308                     i2u68_41:
  2165   001308  EF63  F009         	goto	i2l1518
  2166   00130C                     i2u68_40:
  2167   00130C  0012               	return		;funcret
  2168   00130E                     __end_of_increment_hours:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _increment_day *****************
  2172 ;; Defined at:
  2173 ;;		line 121 in file "timers.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  increment       2    2[COMRAM] unsigned int 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  day_in_month   24    8[COMRAM] unsigned int [12]
  2178 ;;  curr_day_in_    2   32[COMRAM] unsigned int 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;Total ram usage:       32 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 1
  2195 ;; This function calls:
  2196 ;;		_increment_month
  2197 ;; This function is called by:
  2198 ;;		_increment_hours
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text17
  2203   000E06                     __ptext17:
  2204                           	callstack 0
  2205   000E06                     _increment_day:
  2206                           	callstack 21
  2207   000E06                     
  2208                           ;timers.c: 122:     while(increment > 0){
  2209   000E06  EF70  F007         	goto	i2l1508
  2210   000E0A                     i2l1482:
  2211                           
  2212                           ;timers.c: 124:         unsigned int day_in_month[] = {31,28,31,30,31,30,31,31,30,31,30,
      +                          31};
  2213   000E0A  EE20  F060         	lfsr	2,increment_day@F14267
  2214   000E0E  EE10  F009         	lfsr	1,increment_day@day_in_month
  2215   000E12  0E17               	movlw	23
  2216   000E14                     i2u61_41:
  2217   000E14  CFDB FFE3          	movff	plusw2,plusw1
  2218   000E18  06E8               	decf	wreg,f,c
  2219   000E1A  E2FC               	bc	i2u61_41
  2220   000E1C                     
  2221                           ;timers.c: 125:         unsigned int curr_day_in_month = day_in_month[month - 1];
  2222   000E1C  C040  F005         	movff	_month,??_increment_day
  2223   000E20  C041  F006         	movff	_month+1,??_increment_day+1
  2224   000E24  90D8               	bcf	status,0,c
  2225   000E26  3605               	rlcf	??_increment_day^0,f,c
  2226   000E28  3606               	rlcf	(??_increment_day+1)^0,f,c
  2227   000E2A  0EFE               	movlw	254
  2228   000E2C  2405               	addwf	??_increment_day^0,w,c
  2229   000E2E  6E07               	movwf	(??_increment_day+2)^0,c
  2230   000E30  0EFF               	movlw	255
  2231   000E32  2006               	addwfc	(??_increment_day+1)^0,w,c
  2232   000E34  6E08               	movwf	(??_increment_day+3)^0,c
  2233   000E36  0E09               	movlw	low increment_day@day_in_month
  2234   000E38  2407               	addwf	(??_increment_day+2)^0,w,c
  2235   000E3A  6ED9               	movwf	fsr2l,c
  2236   000E3C  0E00               	movlw	high increment_day@day_in_month
  2237   000E3E  2008               	addwfc	(??_increment_day+3)^0,w,c
  2238   000E40  6EDA               	movwf	fsr2h,c
  2239   000E42  CFDE F021          	movff	postinc2,increment_day@curr_day_in_month
  2240   000E46  CFDD F022          	movff	postdec2,increment_day@curr_day_in_month+1
  2241   000E4A                     
  2242                           ;timers.c: 126:         if(month == 2 && (year - 2020)%4 == 0){
  2243   000E4A  0E02               	movlw	2
  2244   000E4C  1840               	xorwf	_month^0,w,c
  2245   000E4E  1041               	iorwf	(_month+1)^0,w,c
  2246   000E50  A4D8               	btfss	status,2,c
  2247   000E52  EF2D  F007         	goto	i2u62_41
  2248   000E56  EF2F  F007         	goto	i2u62_40
  2249   000E5A                     i2u62_41:
  2250   000E5A  EF46  F007         	goto	i2l1492
  2251   000E5E                     i2u62_40:
  2252   000E5E  0E1C               	movlw	28
  2253   000E60  243E               	addwf	_year^0,w,c
  2254   000E62  6E05               	movwf	??_increment_day^0,c
  2255   000E64  0EF8               	movlw	248
  2256   000E66  203F               	addwfc	(_year+1)^0,w,c
  2257   000E68  6E06               	movwf	(??_increment_day+1)^0,c
  2258   000E6A  0E03               	movlw	3
  2259   000E6C  1605               	andwf	??_increment_day^0,f,c
  2260   000E6E  0E00               	movlw	0
  2261   000E70  1606               	andwf	(??_increment_day+1)^0,f,c
  2262   000E72  5005               	movf	??_increment_day^0,w,c
  2263   000E74  1006               	iorwf	(??_increment_day+1)^0,w,c
  2264   000E76  A4D8               	btfss	status,2,c
  2265   000E78  EF40  F007         	goto	i2u63_41
  2266   000E7C  EF42  F007         	goto	i2u63_40
  2267   000E80                     i2u63_41:
  2268   000E80  EF46  F007         	goto	i2l1492
  2269   000E84                     i2u63_40:
  2270   000E84                     
  2271                           ;timers.c: 127:             curr_day_in_month = 29;
  2272   000E84  0E00               	movlw	0
  2273   000E86  6E22               	movwf	(increment_day@curr_day_in_month+1)^0,c
  2274   000E88  0E1D               	movlw	29
  2275   000E8A  6E21               	movwf	increment_day@curr_day_in_month^0,c
  2276   000E8C                     i2l1492:
  2277                           
  2278                           ;timers.c: 130:         day += 1;
  2279   000E8C  4A42               	infsnz	_day^0,f,c
  2280   000E8E  2A43               	incf	(_day+1)^0,f,c
  2281   000E90                     
  2282                           ;timers.c: 131:         day_of_the_week += 1;
  2283   000E90  4A48               	infsnz	_day_of_the_week^0,f,c
  2284   000E92  2A49               	incf	(_day_of_the_week+1)^0,f,c
  2285   000E94                     
  2286                           ;timers.c: 133:         if(day_of_the_week == 8){
  2287   000E94  0E08               	movlw	8
  2288   000E96  1848               	xorwf	_day_of_the_week^0,w,c
  2289   000E98  1049               	iorwf	(_day_of_the_week+1)^0,w,c
  2290   000E9A  A4D8               	btfss	status,2,c
  2291   000E9C  EF52  F007         	goto	i2u64_41
  2292   000EA0  EF54  F007         	goto	i2u64_40
  2293   000EA4                     i2u64_41:
  2294   000EA4  EF58  F007         	goto	i2l1500
  2295   000EA8                     i2u64_40:
  2296   000EA8                     
  2297                           ;timers.c: 134:             day_of_the_week = 1;
  2298   000EA8  0E00               	movlw	0
  2299   000EAA  6E49               	movwf	(_day_of_the_week+1)^0,c
  2300   000EAC  0E01               	movlw	1
  2301   000EAE  6E48               	movwf	_day_of_the_week^0,c
  2302   000EB0                     i2l1500:
  2303                           
  2304                           ;timers.c: 137:         if(day > curr_day_in_month){
  2305   000EB0  5042               	movf	_day^0,w,c
  2306   000EB2  5C21               	subwf	increment_day@curr_day_in_month^0,w,c
  2307   000EB4  5043               	movf	(_day+1)^0,w,c
  2308   000EB6  5822               	subwfb	(increment_day@curr_day_in_month+1)^0,w,c
  2309   000EB8  B0D8               	btfsc	status,0,c
  2310   000EBA  EF61  F007         	goto	i2u65_41
  2311   000EBE  EF63  F007         	goto	i2u65_40
  2312   000EC2                     i2u65_41:
  2313   000EC2  EF6D  F007         	goto	i2l1506
  2314   000EC6                     i2u65_40:
  2315   000EC6                     
  2316                           ;timers.c: 138:             increment_month(1);
  2317   000EC6  0E00               	movlw	0
  2318   000EC8  6E02               	movwf	(increment_month@increment+1)^0,c
  2319   000ECA  0E01               	movlw	1
  2320   000ECC  6E01               	movwf	increment_month@increment^0,c
  2321   000ECE  ECAC  F009         	call	_increment_month	;wreg free
  2322   000ED2                     
  2323                           ;timers.c: 139:             day = 1;
  2324   000ED2  0E00               	movlw	0
  2325   000ED4  6E43               	movwf	(_day+1)^0,c
  2326   000ED6  0E01               	movlw	1
  2327   000ED8  6E42               	movwf	_day^0,c
  2328   000EDA                     i2l1506:
  2329                           
  2330                           ;timers.c: 142:         increment -= 1;
  2331   000EDA  0603               	decf	increment_day@increment^0,f,c
  2332   000EDC  A0D8               	btfss	status,0,c
  2333   000EDE  0604               	decf	(increment_day@increment+1)^0,f,c
  2334   000EE0                     i2l1508:
  2335                           
  2336                           ;timers.c: 122:     while(increment > 0){
  2337   000EE0  5003               	movf	increment_day@increment^0,w,c
  2338   000EE2  1004               	iorwf	(increment_day@increment+1)^0,w,c
  2339   000EE4  A4D8               	btfss	status,2,c
  2340   000EE6  EF77  F007         	goto	i2u66_41
  2341   000EEA  EF79  F007         	goto	i2u66_40
  2342   000EEE                     i2u66_41:
  2343   000EEE  EF05  F007         	goto	i2l1482
  2344   000EF2                     i2u66_40:
  2345   000EF2  0012               	return		;funcret
  2346   000EF4                     __end_of_increment_day:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _increment_month *****************
  2350 ;; Defined at:
  2351 ;;		line 159 in file "timers.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  increment       2    0[COMRAM] unsigned int 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;Total ram usage:        2 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_increment_day
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text18
  2379   001358                     __ptext18:
  2380                           	callstack 0
  2381   001358                     _increment_month:
  2382                           	callstack 21
  2383   001358                     
  2384                           ;timers.c: 160:     while(increment > 0){
  2385   001358  EFC4  F009         	goto	i2l1478
  2386   00135C                     i2l1468:
  2387                           
  2388                           ;timers.c: 162:         month += 1;
  2389   00135C  4A40               	infsnz	_month^0,f,c
  2390   00135E  2A41               	incf	(_month+1)^0,f,c
  2391   001360                     
  2392                           ;timers.c: 163:         if(month > 12){
  2393   001360  5041               	movf	(_month+1)^0,w,c
  2394   001362  E109               	bnz	i2u59_40
  2395   001364  0E0D               	movlw	13
  2396   001366  5C40               	subwf	_month^0,w,c
  2397   001368  A0D8               	btfss	status,0,c
  2398   00136A  EFB9  F009         	goto	i2u59_41
  2399   00136E  EFBB  F009         	goto	i2u59_40
  2400   001372                     i2u59_41:
  2401   001372  EFC1  F009         	goto	i2l1476
  2402   001376                     i2u59_40:
  2403   001376                     
  2404                           ;timers.c: 164:             month = 1;
  2405   001376  0E00               	movlw	0
  2406   001378  6E41               	movwf	(_month+1)^0,c
  2407   00137A  0E01               	movlw	1
  2408   00137C  6E40               	movwf	_month^0,c
  2409   00137E                     
  2410                           ;timers.c: 165:             year += 1;
  2411   00137E  4A3E               	infsnz	_year^0,f,c
  2412   001380  2A3F               	incf	(_year+1)^0,f,c
  2413   001382                     i2l1476:
  2414                           
  2415                           ;timers.c: 167:         increment -= 1;
  2416   001382  0601               	decf	increment_month@increment^0,f,c
  2417   001384  A0D8               	btfss	status,0,c
  2418   001386  0602               	decf	(increment_month@increment+1)^0,f,c
  2419   001388                     i2l1478:
  2420                           
  2421                           ;timers.c: 160:     while(increment > 0){
  2422   001388  5001               	movf	increment_month@increment^0,w,c
  2423   00138A  1002               	iorwf	(increment_month@increment+1)^0,w,c
  2424   00138C  A4D8               	btfss	status,2,c
  2425   00138E  EFCB  F009         	goto	i2u60_41
  2426   001392  EFCD  F009         	goto	i2u60_40
  2427   001396                     i2u60_41:
  2428   001396  EFAE  F009         	goto	i2l1468
  2429   00139A                     i2u60_40:
  2430   00139A  0012               	return		;funcret
  2431   00139C                     __end_of_increment_month:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function ___wmul *****************
  2435 ;; Defined at:
  2436 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  multiplier      2    0[COMRAM] unsigned int 
  2439 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  product         2    4[COMRAM] unsigned int 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2    0[COMRAM] unsigned int 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, prodl, prodh
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2455 ;;Total ram usage:        6 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_increment_seconds
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text19
  2465   001400                     __ptext19:
  2466                           	callstack 0
  2467   001400                     ___wmul:
  2468                           	callstack 24
  2469   001400  5001               	movf	___wmul@multiplier^0,w,c
  2470   001402  0203               	mulwf	___wmul@multiplicand^0,c
  2471   001404  CFF3 F005          	movff	prodl,___wmul@product
  2472   001408  CFF4 F006          	movff	prodh,___wmul@product+1
  2473   00140C  5001               	movf	___wmul@multiplier^0,w,c
  2474   00140E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2475   001410  50F3               	movf	243,w,c
  2476   001412  2606               	addwf	(___wmul@product+1)^0,f,c
  2477   001414  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2478   001416  0203               	mulwf	___wmul@multiplicand^0,c
  2479   001418  50F3               	movf	243,w,c
  2480   00141A  2606               	addwf	(___wmul@product+1)^0,f,c
  2481   00141C  C005  F001         	movff	___wmul@product,?___wmul
  2482   001420  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2483   001424  0012               	return		;funcret
  2484   001426                     __end_of___wmul:
  2485                           	callstack 0
  2486                           
  2487                           	psect	rparam
  2488   000000                     
  2489                           	psect	temp
  2490   00004C                     btemp:
  2491                           	callstack 0
  2492   00004C                     	ds	1
  2493   000000                     int$flags	set	btemp
  2494   000000                     wtemp8	set	btemp+1
  2495   000000                     ttemp5	set	btemp+1
  2496   000000                     ttemp6	set	btemp+4
  2497   000000                     ttemp7	set	btemp+8
  2498                           
  2499                           	psect	idloc
  2500                           
  2501                           ;Config register IDLOC0 @ 0x200000
  2502                           ;	unspecified, using default values
  2503   200000                     	org	2097152
  2504   200000  0FFF               	dw	4095
  2505                           
  2506                           ;Config register IDLOC1 @ 0x200002
  2507                           ;	unspecified, using default values
  2508   200002                     	org	2097154
  2509   200002  0FFF               	dw	4095
  2510                           
  2511                           ;Config register IDLOC2 @ 0x200004
  2512                           ;	unspecified, using default values
  2513   200004                     	org	2097156
  2514   200004  0FFF               	dw	4095
  2515                           
  2516                           ;Config register IDLOC3 @ 0x200006
  2517                           ;	unspecified, using default values
  2518   200006                     	org	2097158
  2519   200006  0FFF               	dw	4095
  2520                           
  2521                           ;Config register IDLOC4 @ 0x200008
  2522                           ;	unspecified, using default values
  2523   200008                     	org	2097160
  2524   200008  0FFF               	dw	4095
  2525                           
  2526                           ;Config register IDLOC5 @ 0x20000A
  2527                           ;	unspecified, using default values
  2528   20000A                     	org	2097162
  2529   20000A  0FFF               	dw	4095
  2530                           
  2531                           ;Config register IDLOC6 @ 0x20000C
  2532                           ;	unspecified, using default values
  2533   20000C                     	org	2097164
  2534   20000C  0FFF               	dw	4095
  2535                           
  2536                           ;Config register IDLOC7 @ 0x20000E
  2537                           ;	unspecified, using default values
  2538   20000E                     	org	2097166
  2539   20000E  0FFF               	dw	4095
  2540                           
  2541                           	psect	config
  2542                           
  2543                           ;Config register CONFIG1L @ 0x300000
  2544                           ;	External Oscillator mode Selection bits
  2545                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2546                           ;	Power-up default value for COSC bits
  2547                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2548   300000                     	org	3145728
  2549   300000  AA                 	db	170
  2550                           
  2551                           ;Config register CONFIG1H @ 0x300001
  2552                           ;	unspecified, using default values
  2553                           ;	Clock Out Enable bit
  2554                           ;	CLKOUTEN = 0x1, unprogrammed default
  2555                           ;	Clock Switch Enable bit
  2556                           ;	CSWEN = 0x1, unprogrammed default
  2557                           ;	Fail-Safe Clock Monitor Enable bit
  2558                           ;	FCMEN = 0x1, unprogrammed default
  2559   300001                     	org	3145729
  2560   300001  FF                 	db	255
  2561                           
  2562                           ;Config register CONFIG2L @ 0x300002
  2563                           ;	unspecified, using default values
  2564                           ;	Master Clear Enable bit
  2565                           ;	MCLRE = 0x1, unprogrammed default
  2566                           ;	Power-up Timer Enable bit
  2567                           ;	PWRTE = 0x1, unprogrammed default
  2568                           ;	Low-power BOR enable bit
  2569                           ;	LPBOREN = 0x1, unprogrammed default
  2570                           ;	Brown-out Reset Enable bits
  2571                           ;	BOREN = 0x3, unprogrammed default
  2572   300002                     	org	3145730
  2573   300002  FF                 	db	255
  2574                           
  2575                           ;Config register CONFIG2H @ 0x300003
  2576                           ;	unspecified, using default values
  2577                           ;	Brown Out Reset Voltage selection bits
  2578                           ;	BORV = 0x3, unprogrammed default
  2579                           ;	ZCD Disable bit
  2580                           ;	ZCD = 0x1, unprogrammed default
  2581                           ;	PPSLOCK bit One-Way Set Enable bit
  2582                           ;	PPS1WAY = 0x1, unprogrammed default
  2583                           ;	Stack Full/Underflow Reset Enable bit
  2584                           ;	STVREN = 0x1, unprogrammed default
  2585                           ;	Debugger Enable bit
  2586                           ;	DEBUG = 0x1, unprogrammed default
  2587                           ;	Extended Instruction Set Enable bit
  2588                           ;	XINST = 0x1, unprogrammed default
  2589   300003                     	org	3145731
  2590   300003  FF                 	db	255
  2591                           
  2592                           ;Config register CONFIG3L @ 0x300004
  2593                           ;	WDT Period Select bits
  2594                           ;	WDTCPS = 0x1F, unprogrammed default
  2595                           ;	WDT operating mode
  2596                           ;	WDTE = OFF, WDT Disabled
  2597   300004                     	org	3145732
  2598   300004  9F                 	db	159
  2599                           
  2600                           ;Config register CONFIG3H @ 0x300005
  2601                           ;	unspecified, using default values
  2602                           ;	WDT Window Select bits
  2603                           ;	WDTCWS = 0x7, unprogrammed default
  2604                           ;	WDT input clock selector
  2605                           ;	WDTCCS = 0x7, unprogrammed default
  2606   300005                     	org	3145733
  2607   300005  FF                 	db	255
  2608                           
  2609                           ;Config register CONFIG4L @ 0x300006
  2610                           ;	unspecified, using default values
  2611                           ;	Write Protection Block 0
  2612                           ;	WRT0 = 0x1, unprogrammed default
  2613                           ;	Write Protection Block 1
  2614                           ;	WRT1 = 0x1, unprogrammed default
  2615                           ;	Write Protection Block 2
  2616                           ;	WRT2 = 0x1, unprogrammed default
  2617                           ;	Write Protection Block 3
  2618                           ;	WRT3 = 0x1, unprogrammed default
  2619                           ;	Write Protection Block 3
  2620                           ;	WRT4 = 0x1, unprogrammed default
  2621                           ;	Write Protection Block 3
  2622                           ;	WRT5 = 0x1, unprogrammed default
  2623                           ;	Write Protection Block 3
  2624                           ;	WRT6 = 0x1, unprogrammed default
  2625                           ;	Write Protection Block 3
  2626                           ;	WRT7 = 0x1, unprogrammed default
  2627   300006                     	org	3145734
  2628   300006  FF                 	db	255
  2629                           
  2630                           ;Config register CONFIG4H @ 0x300007
  2631                           ;	unspecified, using default values
  2632                           ;	Configuration Register Write Protection bit
  2633                           ;	WRTC = 0x1, unprogrammed default
  2634                           ;	Boot Block Write Protection bit
  2635                           ;	WRTB = 0x1, unprogrammed default
  2636                           ;	Data EEPROM Write Protection bit
  2637                           ;	WRTD = 0x1, unprogrammed default
  2638                           ;	Scanner Enable bit
  2639                           ;	SCANE = 0x1, unprogrammed default
  2640                           ;	Low Voltage Programming Enable bit
  2641                           ;	LVP = 0x1, unprogrammed default
  2642   300007                     	org	3145735
  2643   300007  FF                 	db	255
  2644                           
  2645                           ;Config register CONFIG5L @ 0x300008
  2646                           ;	unspecified, using default values
  2647                           ;	UserNVM Program Memory Code Protection bit
  2648                           ;	CP = 0x1, unprogrammed default
  2649                           ;	DataNVM Memory Code Protection bit
  2650                           ;	CPD = 0x1, unprogrammed default
  2651   300008                     	org	3145736
  2652   300008  FF                 	db	255
  2653                           
  2654                           ;Config register CONFIG5H @ 0x300009
  2655                           ;	unspecified, using default values
  2656   300009                     	org	3145737
  2657   300009  FF                 	db	255
  2658                           
  2659                           ;Config register CONFIG6L @ 0x30000A
  2660                           ;	unspecified, using default values
  2661                           ;	Table Read Protection Block 0
  2662                           ;	EBTR0 = 0x1, unprogrammed default
  2663                           ;	Table Read Protection Block 1
  2664                           ;	EBTR1 = 0x1, unprogrammed default
  2665                           ;	Table Read Protection Block 2
  2666                           ;	EBTR2 = 0x1, unprogrammed default
  2667                           ;	Table Read Protection Block 3
  2668                           ;	EBTR3 = 0x1, unprogrammed default
  2669                           ;	Table Read Protection Block 4
  2670                           ;	EBTR4 = 0x1, unprogrammed default
  2671                           ;	Table Read Protection Block 5
  2672                           ;	EBTR5 = 0x1, unprogrammed default
  2673                           ;	Table Read Protection Block 6
  2674                           ;	EBTR6 = 0x1, unprogrammed default
  2675                           ;	Table Read Protection Block 7
  2676                           ;	EBTR7 = 0x1, unprogrammed default
  2677   30000A                     	org	3145738
  2678   30000A  FF                 	db	255
  2679                           
  2680                           ;Config register CONFIG6H @ 0x30000B
  2681                           ;	unspecified, using default values
  2682                           ;	Boot Block Table Read Protection bit
  2683                           ;	EBTRB = 0x1, unprogrammed default
  2684   30000B                     	org	3145739
  2685   30000B  FF                 	db	255
  2686                           tosu	equ	0xFFF
  2687                           tosh	equ	0xFFE
  2688                           tosl	equ	0xFFD
  2689                           stkptr	equ	0xFFC
  2690                           pclatu	equ	0xFFB
  2691                           pclath	equ	0xFFA
  2692                           pcl	equ	0xFF9
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           indf0	equ	0xFEF
  2700                           postinc0	equ	0xFEE
  2701                           postdec0	equ	0xFED
  2702                           preinc0	equ	0xFEC
  2703                           plusw0	equ	0xFEB
  2704                           fsr0h	equ	0xFEA
  2705                           fsr0l	equ	0xFE9
  2706                           wreg	equ	0xFE8
  2707                           indf1	equ	0xFE7
  2708                           postinc1	equ	0xFE6
  2709                           postdec1	equ	0xFE5
  2710                           preinc1	equ	0xFE4
  2711                           plusw1	equ	0xFE3
  2712                           fsr1h	equ	0xFE2
  2713                           fsr1l	equ	0xFE1
  2714                           bsr	equ	0xFE0
  2715                           indf2	equ	0xFDF
  2716                           postinc2	equ	0xFDE
  2717                           postdec2	equ	0xFDD
  2718                           preinc2	equ	0xFDC
  2719                           plusw2	equ	0xFDB
  2720                           fsr2h	equ	0xFDA
  2721                           fsr2l	equ	0xFD9
  2722                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        38
    BSS         14
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      75
    BANK0           160     20      46
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2077$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2077$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sp__get_time	PTR unsigned int  size(2) Largest target is 14
		 -> get_time@r(COMRAM[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->_increment_seconds
    _increment_seconds->_increment_minutes
    _increment_minutes->_increment_hours
    _increment_hours->_increment_day
    _increment_day->_increment_month

Critical Paths under _main in BANK0

    _main->_Timer0_init
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    3661
                                             18 BANK0      2     2      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                          _get_hours
 ---------------------------------------------------------------------------------
 (1) _get_hours                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                         18     0     18     847
                                              0 BANK0     18     0     18
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     549
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    2231
                                              3 BANK0      2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1    2107
                                              1 BANK0      2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendnibble                                       1     1      0     124
                                              0 BANK0      1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (3) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              7     7      0    1077
                                             40 COMRAM     7     7      0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (6) _increment_seconds                                    2     0      2    1077
                                             38 COMRAM     2     0      2
                             ___wmul
                  _increment_minutes
 ---------------------------------------------------------------------------------
 (7) _increment_minutes                                    2     0      2     444
                                             36 COMRAM     2     0      2
                    _increment_hours
 ---------------------------------------------------------------------------------
 (8) _increment_hours                                      2     0      2     345
                                             34 COMRAM     2     0      2
                      _increment_day
 ---------------------------------------------------------------------------------
 (9) _increment_day                                       32    30      2     246
                                              2 COMRAM    32    30      2
                    _increment_month
 ---------------------------------------------------------------------------------
 (10) _increment_month                                     2     0      2      99
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     511
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _get_hours

 _HighISR (ROOT)
   _increment_seconds
     ___wmul
     _increment_minutes
       _increment_hours
         _increment_day
           _increment_month

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      2E       5       28.7%
BITBIGSFRllllhh     84      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      4B       1       79.8%
BITBIGSFRlllllh     5C      0       0      42        0.0%
BITBIGSFRhhll       43      0       0      34        0.0%
BITBIGSFRlllllh     33      0       0      41        0.0%
BITBIGSFRllllll     32      0       0      47        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllllhh     14      0       0      36        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllhl      8      0       0      40        0.0%
BITBIGSFRllllll      7      0       0      46        0.0%
BITBIGSFRlllllh      7      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      38        0.0%
BITBIGSFRllllhh      3      0       0      37        0.0%
BITBIGSFRhlh         3      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      43        0.0%
BITBIGSFRllllll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      79      48        0.0%
DATA                 0      0      79       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 10:46:29 2022

                                l30 0F0A                                  l31 0F0C  
                                l40 0F78                                  l32 0F20  
                                l41 0F7A                                  l33 0F22  
                                l42 0F8E                                  l34 0F36  
                                l43 0F90                                  l35 0F38  
                                l27 13D2                                  l44 0FA4  
                                l36 0F4C                                  l45 0FA6  
                                l37 0F4E                                  l46 0FBA  
                                l38 0F62                                  l39 0F64  
                                l48 0FBC                 ___wmul@multiplicand 0003  
                 ??_Interrupts_init 007A                                 l113 1490  
                               l201 14C4                                 l116 1448  
                               l141 14A0                                 l301 1212  
                               l303 1228                                 l312 13FE  
                               l305 123E                                 l307 1254  
                               l315 1076                                 l309 1262  
                               l273 147C                                 l189 117E  
                               l298 14AE                                 _day 0042  
                               wreg 000FE8                                l2060 10DA  
                              l2052 1078                                l2062 10DE  
                              l2054 1084                                l2064 10E6  
                              l2056 1088                                l2066 10F2  
                              l2058 108C                                l1900 0F1A  
                              l1910 0F88                                l1902 0F30  
                              l1920 143A                                l1912 0F9E  
                              l1904 0F46                                l1922 143C  
                              l1930 1492                                l1914 0FB4  
                              l1906 0F5C                                l1924 143E  
                              l1916 1426                                l1860 11FC  
                              l1908 0F72                                l1940 114A  
                              l1932 1106                                l1950 146E  
                              l1926 1440                                l1918 1428  
                              l1854 14A2                                l1870 1238  
                              l1862 120C                                l1942 115C  
                              l1934 113E                                l1952 1476  
                              l1880 147E                                l1928 1444  
                              l1856 14A4                                l1872 1240  
                              l1864 1214                                l1960 0FD6  
                              l1944 1170                                l1936 1146  
                              l1954 1478                                l1882 1484  
                              l1858 14AC                                l1874 124E  
                              l1866 1222                                l1890 13EE  
                              l1970 1018                                l1962 0FF0  
                              l1946 117C                                l1938 1148  
                              l1956 147A                                l1948 1464  
                              l1884 148E                                l1876 1256  
                              l1868 122A                                l1892 13F6  
                              l1980 1052                                l1972 1020  
                              l1964 0FF6                                l1878 125A  
                              l1886 13D8                                l1982 105E  
                              l1974 102C                                l1966 1004  
                              l1958 0FBE                                l1894 139C  
                              l1888 13E4                                l1984 106A  
                              l1976 1034                                l1968 100C  
                              l1896 0EF4                                l1978 1040  
                              l1898 0F04                                l1986 14BC  
                              STR_1 0E01                                u1200 0F30  
                              u1201 0F2C                                u1130 120C  
                              u1210 0F46                                u1131 1208  
                              u1211 0F42                                u1140 1222  
                              u1220 0F5C                                u1141 121E  
                              u1221 0F58                                u1150 1238  
                              u1230 0F72                                u1151 1234  
                              u1231 0F6E                                u1160 124E  
                              u1240 0F88                                u1161 124A  
                              u1241 0F84                                u1250 0F9E  
                              u1251 0F9A                                u1260 0FB4  
                              u1180 0F04                                u1261 0FB0  
                              u1181 0F00                                u1190 0F1A  
                              u1270 115C                                u1175 13E2  
                              u1191 0F16                                u1271 1158  
                              u1176 13E4                                u1507 102E  
                              u1517 1048                                u1527 13F8  
                              u1537 125C                                u1547 14A6  
                              u1467 0FE2                                u1477 0FF8  
                              u1487 1006                                u1497 101A  
                              _main 1078                                _year 003E  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 004C                                prodh 000FF4  
                              prodl 000FF3                                start 00B8  
                  __end_of_ADC_init 147E                    __end_of_DAC_init 1492  
                   __end_of_HighISR 00B8                        ___param_bank 000000  
        increment_minutes@increment 0025                          _Comp1_init 1426  
                  __end_of_LCD_Init 1078                               ?_main 0001  
                             _ADPCH 000F5F                               i2l220 11F6  
                             i2l150 009C                               i2l234 130C  
                             i2l227 1356                               i2l245 0EF2  
                             i2l360 1424                               i2l258 139A  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
                             _hours 0078                               _month 0040  
                     ?_LCD_sendbyte 007B                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 004D                               ttemp6 0050  
                             ttemp7 0054                               status 000FD8  
                             wtemp8 004D                    ?_increment_hours 0023  
                  ?_increment_month 0001                     __initialization 1264  
                      __end_of_main 1106                   __end_of_LCD_E_TOG 14B0  
                            ??_main 008C                       __activetblptr 000001  
Timer0_init@current_day_of_the_week 0086          increment_seconds@increment 0027  
                            _ADRESH 000F64                      ??_LCD_sendbyte 007C  
                            i2l1500 0EB0                              i2l1502 0EC6  
                            i2l1504 0ED2                              i2l1520 12CC  
                            i2l1506 0EDA                              i2l1522 12E0  
                            i2l1508 0EE0                              i2l1524 12E8  
                            i2l1516 12C2                              i2l1470 1360  
                            i2l1526 12F4                              i2l1518 12C6  
                            i2l1472 1376                              i2l1480 0E06  
                            i2l1528 12FA                              i2l1560 1316  
                            i2l1474 137E                              i2l1466 1358  
                            i2l1490 0E84                              i2l1482 0E0A  
                            i2l1562 132A                              i2l1580 141C  
                            i2l1476 1382                              i2l1468 135C  
                            i2l1492 0E8C                              i2l1484 0E1C  
                            i2l1564 1332                              i2l1556 130E  
                            i2l1478 1388                              i2l1494 0E90  
                            i2l1486 0E4A                              i2l1566 133E  
                            i2l1558 1312                              i2l1496 0E94  
                            i2l1488 0E5E                              i2l1568 1344  
                            i2l1680 1192                              i2l1578 1400  
                            i2l1498 0EA8                              i2l1690 11DE  
                            i2l1682 11B2                              i2l1684 11B6  
                            i2l1692 11E4                              i2l1780 0058  
                            i2l1686 11CA                              i2l1678 1180  
                            i2l1790 0098                              i2l1782 0066  
                            i2l1774 0022                              i2l1688 11D2  
                            i2l1784 0072                              i2l1776 0032  
                            i2l1786 0084                              i2l1778 0054  
                            i2l1788 0090                           ??_HighISR 0029  
                     main@curr_hour 008C                   _LEDarray_disp_bin 0EF4  
                ?_LEDarray_disp_bin 007A                       ??_Timer0_init 008C  
                            ___wmul 1400                         ?_Comp1_init 0001  
               ??_LEDarray_disp_bin 007C                              clear_0 12AA  
                            isa$std 000001                       _increment_day 0E06  
                      __pdataCOMRAM 003E                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                           ?_ADC_init 0001  
                         ?_DAC_init 0001           __end_of_LEDarray_disp_bin 0FBE  
                        __accesstop 0060             __end_of__initialization 12B0  
                         ?_LCD_Init 0001                 increment_day@F14267 0060  
                     ___rparam_used 000001                       _LEDarray_init 139C  
                   _Interrupts_init 1492                      __pcstackCOMRAM 0001  
                      __pidataBANK0 144A                      ?_increment_day 0003  
               __end_of_Timer0_init 1180                          ??_ADC_init 007A  
                        ??_DAC_init 007A                      get_time@F14257 0030  
                        ??_LCD_Init 007D                      _LCD_sendnibble 11F8  
                        __pnvCOMRAM 004A                      ?_LEDarray_init 0001  
                           ?___wmul 0001                __end_of_LCD_sendbyte 1400  
                           i2u60_40 139A                             i2u60_41 1396  
                           i2u61_41 0E14                             i2u62_40 0E5E  
                           i2u62_41 0E5A                             i2u63_40 0E84  
                           i2u63_41 0E80                             i2u64_40 0EA8  
                           i2u64_41 0EA4                             i2u65_40 0EC6  
                           i2u73_40 132A                             i2u65_41 0EC2  
                           i2u73_41 1326                             i2u66_40 0EF2  
                           i2u74_40 1356                             i2u66_41 0EEE  
                           i2u74_41 1352                             i2u59_40 1376  
                           i2u67_40 12E0                             i2u59_41 1372  
                           i2u67_41 12DC                             i2u68_40 130C  
                           i2u68_41 1308                             i2u86_40 1192  
                           i2u86_41 118E                             i2u87_40 11CA  
                           i2u87_41 11C6                             i2u88_40 11F6  
                           i2u88_41 11F2              __end_of_LCD_sendnibble 1264  
           __end_of_Interrupts_init 14A2                             _HighISR 0008  
                         _ADREFbits 000F58                             __Hparam 0000  
                           __Lparam 0000                         _Timer0_init 1106  
                 __end_of_get_hours 14C6                     ??_increment_day 0005  
                      __psmallconst 0E00                             __pcinit 1264  
                           __ramtop 0E00                             __ptext0 1078  
                           __ptext1 14BC                             __ptext2 1106  
                           __ptext3 139C                             __ptext4 0EF4  
                           __ptext5 0FBE                             __ptext6 13D4  
                           __ptext7 11F8                             __ptext8 14A2  
                           __ptext9 1492              increment_day@increment 0003  
                           _minutes 0044                             _seconds 0046  
                         _LCD_E_TOG 14A2                end_of_initialization 12B0  
                   ?_LCD_sendnibble 0001                     ??_LEDarray_init 007A  
         Timer0_init@current_minute 007C                             postdec1 000FE5  
                           postdec2 000FDD                        ??_Comp1_init 007A  
                           postinc0 000FEE                             postinc2 000FDE  
            Timer0_init@current_day 0084                           _PORTAbits 000F89  
                         _PORTBbits 000F8A                           _PORTFbits 000F8E  
                         _PORTGbits 000F8F           Timer0_init@init_test_mode 007A  
                        ?_LCD_E_TOG 0001                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                  __end_of_Comp1_init 144A  
                       _CM1CON0bits 000ED0                         _CM1CON1bits 000ED1  
                  ?_Interrupts_init 0001                   _increment_minutes 130E  
                 _increment_seconds 1180                  ?_increment_minutes 0025  
                ?_increment_seconds 0027                 ??_increment_minutes 0027  
               ??_increment_seconds 0029                      __end_of___wmul 1426  
              LCD_sendnibble@number 007A                       __pidataCOMRAM 14B0  
               start_initialization 1264           __end_of_increment_minutes 1358  
         __end_of_increment_seconds 11F8                        _LCD_sendbyte 13D4  
                          ??___wmul 0005                         __pdataBANK0 0060  
                       __pbssCOMRAM 0030                         ??_LCD_E_TOG 007A  
                     __pcstackBANK0 007A                   ??_increment_hours 0025  
                 ??_increment_month 0003            increment_month@increment 0001  
                          ?_HighISR 0001                        ?_Timer0_init 007A  
         increment_day@day_in_month 0009                           __pintcode 0008  
    increment_day@curr_day_in_month 0021                           _get_hours 14BC  
                       __smallconst 0E00                     _day_of_the_week 0048  
                  ??_LCD_sendnibble 007A                            _ADC_init 1464  
                          _DAC_init 147E                    LCD_sendbyte@Byte 007C  
                          _LCD_Init 0FBE                    LCD_sendbyte@type 007B  
                    ___wmul@product 0005                            _LATAbits 000F79  
                          _LATBbits 000F7A                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _PIE0bits 000E29  
                          _IPR2bits 000E21                            _PIE2bits 000E2B  
                          i2u102_40 0032                            i2u102_41 002E  
                          i2u103_40 0044                            i2u103_41 003C  
                          i2u105_40 0066                            i2u104_48 0046  
                          i2u105_41 0062                            i2u106_40 0084  
                          i2u106_41 0080                            _PIR0bits 000E33  
                          _PIR2bits 000E35                           _test_mode 004A  
             __end_of_increment_day 0EF4                          ?_get_hours 007A  
                        _ADCON0bits 000F60                   ___wmul@multiplier 0001  
                        _CM1NCHbits 000ED2                          _CM1PCHbits 000ED3  
                         copy_data0 1278                           copy_data1 1298  
             __end_of_LEDarray_init 13D4                            __Hrparam 0000  
                          __Lrparam 0000                        __Lsmallconst 0E00  
                        _ANSELAbits 000E92                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                            __ptext10 1426  
                          __ptext11 147E                            __ptext12 1464  
                          __ptext14 1180                            __ptext15 130E  
                          __ptext16 12C2                            __ptext17 0E06  
                          __ptext18 1358                            __ptext19 1400  
           LEDarray_disp_bin@number 007A                            isa$xinst 000000  
                          int$flags 004C            increment_hours@increment 0023  
                   _increment_hours 12C2                     _increment_month 1358  
                       ??_get_hours 007C                          _INTCONbits 000FF2  
                          intlevel2 0000                        _DAC1CON0bits 000EC6  
                      _DAC1CON1bits 000EC7            Timer0_init@current_month 0088  
           Timer0_init@current_hour 0080             Timer0_init@current_year 008A  
           __end_of_increment_hours 130E             __end_of_increment_month 139C  
