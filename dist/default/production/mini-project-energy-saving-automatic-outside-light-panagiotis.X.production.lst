

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 07 19:28:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Version 2.35
    68                           ; Generated 05/05/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F67K40 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   000000                     
   103                           	psect	idataCOMRAM
   104   0028EE                     __pidataCOMRAM:
   105                           	callstack 0
   106                           
   107                           ;initializer for _year
   108   0028EE  07E4               	dw	2020
   109                           
   110                           ;initializer for _month
   111   0028F0  0001               	dw	1
   112                           
   113                           ;initializer for _day
   114   0028F2  0001               	dw	1
   115                           
   116                           ;initializer for _day_of_the_week
   117   0028F4  0001               	dw	1
   118                           
   119                           	psect	idataBANK1
   120   0028A4                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for increment_day@F14261
   124   0028A4  001F               	dw	31
   125   0028A6  001C               	dw	28
   126   0028A8  001F               	dw	31
   127   0028AA  001E               	dw	30
   128   0028AC  001F               	dw	31
   129   0028AE  001E               	dw	30
   130   0028B0  001F               	dw	31
   131   0028B2  001F               	dw	31
   132   0028B4  001E               	dw	30
   133   0028B6  001F               	dw	31
   134   0028B8  001E               	dw	30
   135   0028BA  001F               	dw	31
   136   000000                     _TRISEbits	set	3973
   137   000000                     _TRISCbits	set	3971
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATCbits	set	3963
   140   000000                     _T0CON0bits	set	4053
   141   000000                     _T0CON1bits	set	4054
   142   000000                     _CM1CON1bits	set	3793
   143   000000                     _LATDbits	set	3964
   144   000000                     _TRISDbits	set	3972
   145   000000                     _TRISHbits	set	3976
   146   000000                     _LATHbits	set	3968
   147   000000                     _LATBbits	set	3962
   148   000000                     _LATFbits	set	3966
   149   000000                     _PORTAbits	set	3977
   150   000000                     _PORTGbits	set	3983
   151   000000                     _TRISBbits	set	3970
   152   000000                     _TRISFbits	set	3974
   153                           
   154                           	psect	nvCOMRAM
   155   000046                     __pnvCOMRAM:
   156                           	callstack 0
   157   000046                     _test_mode:
   158                           	callstack 0
   159   000046                     	ds	2
   160                           
   161                           	psect	nvBANK0
   162   0000F0                     __pnvBANK0:
   163                           	callstack 0
   164   0000F0                     _time_counter:
   165                           	callstack 0
   166   0000F0                     	ds	4
   167   000000                     _IPR2bits	set	3617
   168   000000                     _PIE2bits	set	3627
   169   000000                     _DAC1CON0bits	set	3782
   170   000000                     _LATAbits	set	3961
   171   000000                     _LATGbits	set	3967
   172   000000                     _TRISAbits	set	3969
   173   000000                     _TRISGbits	set	3975
   174   000000                     _TMR0L	set	4051
   175   000000                     _TMR0H	set	4052
   176   000000                     _INTCONbits	set	4082
   177   000000                     _PORTBbits	set	3978
   178   000000                     _PORTFbits	set	3982
   179   000000                     _CM1CON0bits	set	3792
   180   000000                     _CM1NCHbits	set	3794
   181   000000                     _DAC1CON1bits	set	3783
   182   000000                     _ADREFbits	set	3928
   183   000000                     _CM1PCHbits	set	3795
   184   000000                     _PIR0bits	set	3635
   185   000000                     _PIR2bits	set	3637
   186   000000                     _PIE0bits	set	3625
   187   000000                     _ANSELAbits	set	3730
   188   000000                     _ADPCH	set	3935
   189   000000                     _ADRESH	set	3940
   190   000000                     _ADCON0bits	set	3936
   191                           
   192                           	psect	smallconst
   193   000E00                     __psmallconst:
   194                           	callstack 0
   195   000E00  00                 	db	0
   196   000E01                     STR_4:
   197   000E01  32                 	db	50	;'2'
   198   000E02  30                 	db	48	;'0'
   199   000E03  32                 	db	50	;'2'
   200   000E04  32                 	db	50	;'2'
   201   000E05  00                 	db	0
   202   000E06                     STR_5:
   203   000E06  31                 	db	49	;'1'
   204   000E07  32                 	db	50	;'2'
   205   000E08  33                 	db	51	;'3'
   206   000E09  00                 	db	0
   207   000E0A                     STR_1:
   208   000E0A  4D                 	db	77	;'M'
   209   000E0B  4F                 	db	79	;'O'
   210   000E0C  4E                 	db	78	;'N'
   211   000E0D  00                 	db	0
   212   000E0E                     STR_6:
   213   000E0E  25                 	db	37
   214   000E0F  64                 	db	100	;'d'
   215   000E10  00                 	db	0
   216   000E11                     STR_3:
   217   000E11  31                 	db	49	;'1'
   218   000E12  30                 	db	48	;'0'
   219   000E13  00                 	db	0
   220   000E14                     STR_2:
   221   000E14  33                 	db	51	;'3'
   222   000E15  30                 	db	48	;'0'
   223   000E16  00                 	db	0
   224   000E17  00                 	db	0	; dummy byte at the end
   225   000000                     
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229   002352                     __pcinit:
   230                           	callstack 0
   231   002352                     start_initialization:
   232                           	callstack 0
   233   002352                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Initialize objects allocated to BANK1 (24 bytes)
   237                           ; load TBLPTR registers with __pidataBANK1
   238   002352  0EA4               	movlw	low __pidataBANK1
   239   002354  6EF6               	movwf	tblptrl,c
   240   002356  0E28               	movlw	high __pidataBANK1
   241   002358  6EF7               	movwf	tblptrh,c
   242   00235A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   243   00235C  6EF8               	movwf	tblptru,c
   244   00235E  EE01  F020         	lfsr	0,__pdataBANK1
   245   002362  EE10 F018          	lfsr	1,24
   246   002366                     copy_data0:
   247   002366  0009               	tblrd		*+
   248   002368  CFF5 FFEE          	movff	tablat,postinc0
   249   00236C  50E5               	movf	postdec1,w,c
   250   00236E  50E1               	movf	fsr1l,w,c
   251   002370  E1FA               	bnz	copy_data0
   252                           
   253                           ; Initialize objects allocated to COMRAM (8 bytes)
   254                           ; load TBLPTR registers with __pidataCOMRAM
   255   002372  0EEE               	movlw	low __pidataCOMRAM
   256   002374  6EF6               	movwf	tblptrl,c
   257   002376  0E28               	movlw	high __pidataCOMRAM
   258   002378  6EF7               	movwf	tblptrh,c
   259   00237A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   260   00237C  6EF8               	movwf	tblptru,c
   261   00237E  EE00  F03E         	lfsr	0,__pdataCOMRAM
   262   002382  EE10 F008          	lfsr	1,8
   263   002386                     copy_data1:
   264   002386  0009               	tblrd		*+
   265   002388  CFF5 FFEE          	movff	tablat,postinc0
   266   00238C  50E5               	movf	postdec1,w,c
   267   00238E  50E1               	movf	fsr1l,w,c
   268   002390  E1FA               	bnz	copy_data1
   269                           
   270                           ; Clear objects allocated to BANK1 (32 bytes)
   271   002392  EE01  F000         	lfsr	0,__pbssBANK1
   272   002396  0E20               	movlw	32
   273   002398                     clear_0:
   274   002398  6AEE               	clrf	postinc0,c
   275   00239A  06E8               	decf	wreg,f,c
   276   00239C  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to BANK0 (5 bytes)
   279   00239E  0100               	movlb	0
   280   0023A0  6BEF               	clrf	(__pbssBANK0+4)& (0+255),b
   281   0023A2  6BEE               	clrf	(__pbssBANK0+3)& (0+255),b
   282   0023A4  6BED               	clrf	(__pbssBANK0+2)& (0+255),b
   283   0023A6  6BEC               	clrf	(__pbssBANK0+1)& (0+255),b
   284   0023A8  6BEB               	clrf	__pbssBANK0& (0+255),b
   285                           
   286                           ; Clear objects allocated to COMRAM (18 bytes)
   287   0023AA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   288   0023AE  0E12               	movlw	18
   289   0023B0                     clear_1:
   290   0023B0  6AEE               	clrf	postinc0,c
   291   0023B2  06E8               	decf	wreg,f,c
   292   0023B4  E1FD               	bnz	clear_1
   293   0023B6                     end_of_initialization:
   294                           	callstack 0
   295   0023B6                     __end_of__initialization:
   296                           	callstack 0
   297   0023B6  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   298   0023B8  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299   0023BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   300   0023BC  6EF8               	movwf	tblptru,c
   301   0023BE  0100               	movlb	0
   302   0023C0  EF4D  F008         	goto	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMRAM
   305   00002C                     __pbssCOMRAM:
   306                           	callstack 0
   307   00002C                     	ds	16
   308   00003C                     _time_corrector:
   309                           	callstack 0
   310   00003C                     	ds	2
   311                           
   312                           	psect	dataCOMRAM
   313   00003E                     __pdataCOMRAM:
   314                           	callstack 0
   315   00003E                     _year:
   316                           	callstack 0
   317   00003E                     	ds	2
   318   000040                     _month:
   319                           	callstack 0
   320   000040                     	ds	2
   321   000042                     _day:
   322                           	callstack 0
   323   000042                     	ds	2
   324   000044                     _day_of_the_week:
   325                           	callstack 0
   326   000044                     	ds	2
   327                           
   328                           	psect	bssBANK0
   329   0000EB                     __pbssBANK0:
   330                           	callstack 0
   331   0000EB                     _width:
   332                           	callstack 0
   333   0000EB                     	ds	2
   334   0000ED                     _prec:
   335                           	callstack 0
   336   0000ED                     	ds	2
   337   0000EF                     _flags:
   338                           	callstack 0
   339   0000EF                     	ds	1
   340                           
   341                           	psect	bssBANK1
   342   000100                     __pbssBANK1:
   343                           	callstack 0
   344   000100                     _dbuf:
   345                           	callstack 0
   346   000100                     	ds	32
   347                           
   348                           	psect	dataBANK1
   349   000120                     __pdataBANK1:
   350                           	callstack 0
   351   000120                     increment_day@F14261:
   352                           	callstack 0
   353   000120                     	ds	24
   354                           
   355                           	psect	cstackBANK0
   356   000060                     __pcstackBANK0:
   357                           	callstack 0
   358   000060                     ?_ADC_getval:
   359                           	callstack 0
   360   000060                     ?___lwdiv:
   361                           	callstack 0
   362   000060                     ?___lmul:
   363                           	callstack 0
   364   000060                     ?___lldiv:
   365                           	callstack 0
   366   000060                     ?___fltol:
   367                           	callstack 0
   368   000060                     ?___aodiv:
   369                           	callstack 0
   370   000060                     ?___aomod:
   371                           	callstack 0
   372   000060                     LCD_sendnibble@number:
   373                           	callstack 0
   374   000060                     ___lwdiv@dividend:
   375                           	callstack 0
   376   000060                     fputc@c:
   377                           	callstack 0
   378   000060                     ___lmul@multiplier:
   379                           	callstack 0
   380   000060                     ___lldiv@dividend:
   381                           	callstack 0
   382   000060                     ___flge@ff1:
   383                           	callstack 0
   384   000060                     ___fltol@f1:
   385                           	callstack 0
   386   000060                     ___aodiv@dividend:
   387                           	callstack 0
   388   000060                     ___aomod@dividend:
   389                           	callstack 0
   390                           
   391                           ; 8 bytes @ 0x0
   392   000060                     	ds	1
   393   000061                     LCD_sendbyte@type:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x1
   397   000061                     	ds	1
   398   000062                     LCD_sendbyte@Byte:
   399                           	callstack 0
   400   000062                     ADC_getval@tmpval:
   401                           	callstack 0
   402   000062                     ___lwdiv@divisor:
   403                           	callstack 0
   404   000062                     fputc@fp:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x2
   408   000062                     	ds	1
   409   000063                     ??_LCD_Init:
   410   000063                     ??_LCD_clear:
   411   000063                     LCD_setline@line:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x3
   415   000063                     	ds	1
   416   000064                     ??_fputc:
   417   000064                     ??___fltol:
   418   000064                     ___lwdiv@counter:
   419                           	callstack 0
   420   000064                     LCD_sendstring@strlst:
   421                           	callstack 0
   422   000064                     ___lmul@multiplicand:
   423                           	callstack 0
   424   000064                     ___lldiv@divisor:
   425                           	callstack 0
   426   000064                     ___flge@ff2:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x4
   430   000064                     	ds	1
   431   000065                     ___lwdiv@quotient:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x5
   435   000065                     	ds	1
   436   000066                     ??_LCD_sendstring:
   437                           
   438                           ; 1 bytes @ 0x6
   439   000066                     	ds	1
   440   000067                     ?_get_hour:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x7
   444   000067                     	ds	1
   445   000068                     ??___flge:
   446   000068                     ___fltol@sign1:
   447                           	callstack 0
   448   000068                     LCD_sendstring@i:
   449                           	callstack 0
   450   000068                     ___lmul@product:
   451                           	callstack 0
   452   000068                     ___lldiv@quotient:
   453                           	callstack 0
   454   000068                     ___aodiv@divisor:
   455                           	callstack 0
   456   000068                     ___aomod@divisor:
   457                           	callstack 0
   458                           
   459                           ; 8 bytes @ 0x8
   460   000068                     	ds	1
   461   000069                     ?___xxtofl:
   462                           	callstack 0
   463   000069                     ___fltol@exp1:
   464                           	callstack 0
   465   000069                     fputs@s:
   466                           	callstack 0
   467   000069                     ___xxtofl@val:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x9
   471   000069                     	ds	1
   472   00006A                     LEDarray_disp_bin@number:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xA
   476   00006A                     	ds	1
   477   00006B                     fputs@fp:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xB
   481   00006B                     	ds	1
   482   00006C                     ___lldiv@counter:
   483                           	callstack 0
   484   00006C                     Timer0_init@init_test_mode:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xC
   488   00006C                     	ds	1
   489   00006D                     ??___xxtofl:
   490   00006D                     ?___lwmod:
   491                           	callstack 0
   492   00006D                     fputs@c:
   493                           	callstack 0
   494   00006D                     ___lwmod@dividend:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xD
   498   00006D                     	ds	1
   499   00006E                     fputs@i:
   500                           	callstack 0
   501   00006E                     Timer0_init@current_minute:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0xE
   505   00006E                     	ds	1
   506   00006F                     ___lwmod@divisor:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xF
   510   00006F                     	ds	1
   511   000070                     ___aodiv@counter:
   512                           	callstack 0
   513   000070                     ___aomod@counter:
   514                           	callstack 0
   515   000070                     pad@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x10
   519   000070                     	ds	1
   520   000071                     ___aodiv@sign:
   521                           	callstack 0
   522   000071                     ___aomod@sign:
   523                           	callstack 0
   524   000071                     ___lwmod@counter:
   525                           	callstack 0
   526   000071                     ___xxtofl@sign:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x11
   530   000071                     	ds	1
   531   000072                     ?_get_seconds:
   532                           	callstack 0
   533   000072                     ?_get_minutes:
   534                           	callstack 0
   535   000072                     ?_abs:
   536                           	callstack 0
   537   000072                     ___xxtofl@exp:
   538                           	callstack 0
   539   000072                     pad@buf:
   540                           	callstack 0
   541   000072                     abs@a:
   542                           	callstack 0
   543   000072                     Timer0_init@current_hour:
   544                           	callstack 0
   545   000072                     ___aodiv@quotient:
   546                           	callstack 0
   547                           
   548                           ; 8 bytes @ 0x12
   549   000072                     	ds	1
   550   000073                     ___xxtofl@arg:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x13
   554   000073                     	ds	1
   555   000074                     ??_abs:
   556   000074                     pad@p:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x14
   560   000074                     	ds	2
   561   000076                     ??_pad:
   562   000076                     Timer0_init@current_day:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x16
   566   000076                     	ds	1
   567   000077                     pad@i:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x17
   571   000077                     	ds	1
   572   000078                     Timer0_init@current_day_of_the_week:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x18
   576   000078                     	ds	1
   577   000079                     pad@w:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x19
   581   000079                     	ds	1
   582   00007A                     Timer0_init@current_month:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1A
   586   00007A                     	ds	1
   587   00007B                     dtoa@fp:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x1B
   591   00007B                     	ds	1
   592   00007C                     Timer0_init@current_year:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x1C
   596   00007C                     	ds	1
   597   00007D                     dtoa@d:
   598                           	callstack 0
   599                           
   600                           ; 8 bytes @ 0x1D
   601   00007D                     	ds	1
   602   00007E                     ??_Timer0_init:
   603                           
   604                           ; 1 bytes @ 0x1E
   605   00007E                     	ds	7
   606   000085                     ??_dtoa:
   607                           
   608                           ; 1 bytes @ 0x25
   609   000085                     	ds	8
   610   00008D                     _dtoa$2178:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x2D
   614   00008D                     	ds	2
   615   00008F                     dtoa@p:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x2F
   619   00008F                     	ds	2
   620   000091                     dtoa@w:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x31
   624   000091                     	ds	2
   625   000093                     dtoa@n:
   626                           	callstack 0
   627                           
   628                           ; 8 bytes @ 0x33
   629   000093                     	ds	8
   630   00009B                     dtoa@s:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x3B
   634   00009B                     	ds	1
   635   00009C                     dtoa@i:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x3C
   639   00009C                     	ds	2
   640   00009E                     vfpfcnvrt@fp:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x3E
   644   00009E                     	ds	2
   645   0000A0                     vfpfcnvrt@fmt:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x40
   649   0000A0                     	ds	2
   650   0000A2                     vfpfcnvrt@ap:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x42
   654   0000A2                     	ds	2
   655   0000A4                     ??_vfpfcnvrt:
   656                           
   657                           ; 1 bytes @ 0x44
   658   0000A4                     	ds	2
   659   0000A6                     vfpfcnvrt@convarg:
   660                           	callstack 0
   661                           
   662                           ; 8 bytes @ 0x46
   663   0000A6                     	ds	8
   664   0000AE                     vfpfcnvrt@cp:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x4E
   668   0000AE                     	ds	2
   669   0000B0                     ?_vfprintf:
   670                           	callstack 0
   671   0000B0                     vfprintf@fp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x50
   675   0000B0                     	ds	2
   676   0000B2                     vfprintf@fmt:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x52
   680   0000B2                     	ds	2
   681   0000B4                     vfprintf@ap:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x54
   685   0000B4                     	ds	2
   686   0000B6                     vfprintf@cfmt:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x56
   690   0000B6                     	ds	2
   691   0000B8                     ?_sprintf:
   692                           	callstack 0
   693   0000B8                     sprintf@s:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x58
   697   0000B8                     	ds	2
   698   0000BA                     sprintf@fmt:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x5A
   702   0000BA                     	ds	4
   703   0000BE                     sprintf@ap:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x5E
   707   0000BE                     	ds	2
   708   0000C0                     sprintf@f:
   709                           	callstack 0
   710                           
   711                           ; 11 bytes @ 0x60
   712   0000C0                     	ds	11
   713   0000CB                     ADC2String@buf:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x6B
   717   0000CB                     	ds	2
   718   0000CD                     ADC2String@ADC_val:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x6D
   722   0000CD                     	ds	2
   723   0000CF                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x6F
   726   0000CF                     	ds	2
   727   0000D1                     main@text:
   728                           	callstack 0
   729                           
   730                           ; 16 bytes @ 0x71
   731   0000D1                     	ds	16
   732   0000E1                     main@buf1:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x81
   736   0000E1                     	ds	2
   737   0000E3                     main@buf2:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x83
   741   0000E3                     	ds	2
   742   0000E5                     main@buf:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x85
   746   0000E5                     	ds	2
   747   0000E7                     main@curr_hour:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x87
   751   0000E7                     	ds	4
   752                           
   753                           	psect	cstackCOMRAM
   754   000001                     __pcstackCOMRAM:
   755                           	callstack 0
   756   000001                     ?i2___lmul:
   757                           	callstack 0
   758   000001                     increment_month@increment:
   759                           	callstack 0
   760   000001                     i2___lmul@multiplier:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x0
   764   000001                     	ds	2
   765   000003                     increment_day@increment:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x2
   769   000003                     	ds	2
   770   000005                     ??_increment_day:
   771   000005                     i2___lmul@multiplicand:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x4
   775   000005                     	ds	4
   776   000009                     i2___lmul@product:
   777                           	callstack 0
   778   000009                     increment_day@day_in_month:
   779                           	callstack 0
   780                           
   781                           ; 24 bytes @ 0x8
   782   000009                     	ds	24
   783   000021                     increment_day@curr_day_in_month:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x20
   787   000021                     	ds	2
   788   000023                     increment_time@increment:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x22
   792   000023                     	ds	4
   793   000027                     ??_HighISR:
   794                           
   795                           ; 1 bytes @ 0x26
   796   000027                     	ds	5
   797                           
   798 ;;
   799 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   800 ;;
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 26 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  text           16  113[BANK0 ] PTR unsigned char [8]
   808 ;;		 -> STR_5(4), STR_4(5), STR_3(3), STR_2(3), 
   809 ;;		 -> STR_1(4), NULL(0), RAM(3561), 
   810 ;;  curr_hour       4  135[BANK0 ] float 
   811 ;;  buf             2  133[BANK0 ] PTR unsigned char 
   812 ;;  buf2            2  131[BANK0 ] PTR unsigned char 
   813 ;;  buf1            2  129[BANK0 ] PTR unsigned char 
   814 ;;  curr_month      2    0        unsigned int 
   815 ;;  curr_day        2    0        unsigned int 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;Total ram usage:       28 bytes
   830 ;; Hardware stack levels required when called: 13
   831 ;; This function calls:
   832 ;;		_ADC2String
   833 ;;		_ADC_getval
   834 ;;		_ADC_init
   835 ;;		_Comp1_init
   836 ;;		_Interrupts_init
   837 ;;		_LCD_Init
   838 ;;		_LCD_clear
   839 ;;		_LCD_sendstring
   840 ;;		_LEDarray_disp_bin
   841 ;;		_LEDarray_init
   842 ;;		_Timer0_init
   843 ;;		___flge
   844 ;;		___fltol
   845 ;;		___xxtofl
   846 ;;		_get_hour
   847 ;;		_get_minutes
   848 ;;		_get_seconds
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text0
   855   00109A                     __ptext0:
   856                           	callstack 0
   857   00109A                     _main:
   858                           	callstack 18
   859   00109A                     
   860                           ;main.c: 28:     LATHbits.LATH3=0;
   861   00109A  9680               	bcf	128,3,c	;volatile
   862                           
   863                           ;main.c: 29:     TRISHbits.TRISH3=0;
   864   00109C  9688               	bcf	136,3,c	;volatile
   865                           
   866                           ;main.c: 31:     TRISDbits.TRISD7=0;
   867   00109E  9E84               	bcf	132,7,c	;volatile
   868                           
   869                           ;main.c: 32:     LATDbits.LATD7=1;
   870   0010A0  8E7C               	bsf	124,7,c	;volatile
   871                           
   872                           ;main.c: 34:     TRISAbits.TRISA3=1;
   873   0010A2  8681               	bsf	129,3,c	;volatile
   874                           
   875                           ;main.c: 36:     LATHbits.LATH3 = 1;
   876   0010A4  8680               	bsf	128,3,c	;volatile
   877   0010A6                     
   878                           ;main.c: 37:     Comp1_init();
   879   0010A6  EC03  F014         	call	_Comp1_init	;wreg free
   880   0010AA                     
   881                           ;main.c: 38:     Interrupts_init();
   882   0010AA  EC68  F014         	call	_Interrupts_init	;wreg free
   883   0010AE                     
   884                           ;main.c: 39:     Timer0_init(1,57,17,06,1,11,2022);
   885   0010AE  0E00               	movlw	0
   886   0010B0  0100               	movlb	0	; () banked
   887   0010B2  6F6D               	movwf	(Timer0_init@init_test_mode+1)& (0+255),b
   888   0010B4  0E01               	movlw	1
   889   0010B6  6F6C               	movwf	Timer0_init@init_test_mode& (0+255),b
   890   0010B8  0E39               	movlw	57
   891   0010BA  6F6E               	movwf	Timer0_init@current_minute& (0+255),b
   892   0010BC  0E00               	movlw	0
   893   0010BE  6F6F               	movwf	(Timer0_init@current_minute+1)& (0+255),b
   894   0010C0  0E00               	movlw	0
   895   0010C2  6F70               	movwf	(Timer0_init@current_minute+2)& (0+255),b
   896   0010C4  0E00               	movlw	0
   897   0010C6  6F71               	movwf	(Timer0_init@current_minute+3)& (0+255),b
   898   0010C8  0E11               	movlw	17
   899   0010CA  6F72               	movwf	Timer0_init@current_hour& (0+255),b
   900   0010CC  0E00               	movlw	0
   901   0010CE  6F73               	movwf	(Timer0_init@current_hour+1)& (0+255),b
   902   0010D0  0E00               	movlw	0
   903   0010D2  6F74               	movwf	(Timer0_init@current_hour+2)& (0+255),b
   904   0010D4  0E00               	movlw	0
   905   0010D6  6F75               	movwf	(Timer0_init@current_hour+3)& (0+255),b
   906   0010D8  0E00               	movlw	0
   907   0010DA  6F77               	movwf	(Timer0_init@current_day+1)& (0+255),b
   908   0010DC  0E06               	movlw	6
   909   0010DE  6F76               	movwf	Timer0_init@current_day& (0+255),b
   910   0010E0  0E00               	movlw	0
   911   0010E2  6F79               	movwf	(Timer0_init@current_day_of_the_week+1)& (0+255),b
   912   0010E4  0E01               	movlw	1
   913   0010E6  6F78               	movwf	Timer0_init@current_day_of_the_week& (0+255),b
   914   0010E8  0E00               	movlw	0
   915   0010EA  6F7B               	movwf	(Timer0_init@current_month+1)& (0+255),b
   916   0010EC  0E0B               	movlw	11
   917   0010EE  6F7A               	movwf	Timer0_init@current_month& (0+255),b
   918   0010F0  0E07               	movlw	7
   919   0010F2  6F7D               	movwf	(Timer0_init@current_year+1)& (0+255),b
   920   0010F4  0EE6               	movlw	230
   921   0010F6  6F7C               	movwf	Timer0_init@current_year& (0+255),b
   922   0010F8  EC81  F00E         	call	_Timer0_init	;wreg free
   923   0010FC                     
   924                           ;main.c: 40:     LEDarray_init();
   925   0010FC  ECB8  F013         	call	_LEDarray_init	;wreg free
   926   001100                     
   927                           ;main.c: 41:     ADC_init();
   928   001100  EC45  F014         	call	_ADC_init	;wreg free
   929                           
   930                           ;main.c: 42:     LCD_Init();
   931   001104  EC7F  F010         	call	_LCD_Init	;wreg free
   932   001108                     l107:
   933                           
   934                           ;main.c: 51:         float curr_hour = get_hour();
   935   001108  EC25  F014         	call	_get_hour	;wreg free
   936   00110C  0100               	movlb	0	; () banked
   937   00110E  C067  F069         	movff	?_get_hour,___xxtofl@val
   938   001112  C068  F06A         	movff	?_get_hour+1,___xxtofl@val+1
   939   001116  6B6B               	clrf	(___xxtofl@val+2)& (0+255),b
   940   001118  6B6C               	clrf	(___xxtofl@val+3)& (0+255),b
   941   00111A  0E00               	movlw	0
   942   00111C  EC85  F009         	call	___xxtofl
   943   001120  C069  F0E7         	movff	?___xxtofl,main@curr_hour
   944   001124  C06A  F0E8         	movff	?___xxtofl+1,main@curr_hour+1
   945   001128  C06B  F0E9         	movff	?___xxtofl+2,main@curr_hour+2
   946   00112C  C06C  F0EA         	movff	?___xxtofl+3,main@curr_hour+3
   947                           
   948                           ;main.c: 52:         LEDarray_disp_bin((unsigned int) curr_hour);
   949   001130  C0E7  F060         	movff	main@curr_hour,___fltol@f1
   950   001134  C0E8  F061         	movff	main@curr_hour+1,___fltol@f1+1
   951   001138  C0E9  F062         	movff	main@curr_hour+2,___fltol@f1+2
   952   00113C  C0EA  F063         	movff	main@curr_hour+3,___fltol@f1+3
   953   001140  EC81  F00C         	call	___fltol	;wreg free
   954   001144  C060  F06A         	movff	?___fltol,LEDarray_disp_bin@number
   955   001148  C061  F06B         	movff	?___fltol+1,LEDarray_disp_bin@number+1
   956   00114C  EC57  F00F         	call	_LEDarray_disp_bin	;wreg free
   957                           
   958                           ;main.c: 54:         if(curr_hour >= 1 && curr_hour <= 5){
   959   001150  C0E7  F060         	movff	main@curr_hour,___flge@ff1
   960   001154  C0E8  F061         	movff	main@curr_hour+1,___flge@ff1+1
   961   001158  C0E9  F062         	movff	main@curr_hour+2,___flge@ff1+2
   962   00115C  C0EA  F063         	movff	main@curr_hour+3,___flge@ff1+3
   963   001160  0E00               	movlw	0
   964   001162  0100               	movlb	0	; () banked
   965   001164  6F64               	movwf	___flge@ff2& (0+255),b
   966   001166  0E00               	movlw	0
   967   001168  6F65               	movwf	(___flge@ff2+1)& (0+255),b
   968   00116A  0E80               	movlw	128
   969   00116C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
   970   00116E  0E3F               	movlw	63
   971   001170  6F67               	movwf	(___flge@ff2+3)& (0+255),b
   972   001172  EC05  F00D         	call	___flge	;wreg free
   973   001176  0100               	movlb	0	; () banked
   974   001178  A0D8               	btfss	status,0,c
   975   00117A  EFC1  F008         	goto	u3471
   976   00117E  EFC3  F008         	goto	u3470
   977   001182                     u3471:
   978   001182  EFE0  F008         	goto	l108
   979   001186                     u3470:
   980   001186                     
   981                           ; BSR set to: 0
   982   001186  0E00               	movlw	0
   983   001188  6F60               	movwf	___flge@ff1& (0+255),b
   984   00118A  0E00               	movlw	0
   985   00118C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
   986   00118E  0EA0               	movlw	160
   987   001190  6F62               	movwf	(___flge@ff1+2)& (0+255),b
   988   001192  0E40               	movlw	64
   989   001194  6F63               	movwf	(___flge@ff1+3)& (0+255),b
   990   001196  C0E7  F064         	movff	main@curr_hour,___flge@ff2
   991   00119A  C0E8  F065         	movff	main@curr_hour+1,___flge@ff2+1
   992   00119E  C0E9  F066         	movff	main@curr_hour+2,___flge@ff2+2
   993   0011A2  C0EA  F067         	movff	main@curr_hour+3,___flge@ff2+3
   994   0011A6  EC05  F00D         	call	___flge	;wreg free
   995   0011AA  0100               	movlb	0	; () banked
   996   0011AC  A0D8               	btfss	status,0,c
   997   0011AE  EFDB  F008         	goto	u3481
   998   0011B2  EFDD  F008         	goto	u3480
   999   0011B6                     u3481:
  1000   0011B6  EFE0  F008         	goto	l108
  1001   0011BA                     u3480:
  1002   0011BA                     
  1003                           ; BSR set to: 0
  1004                           ;main.c: 55:             LATHbits.LATH3 = 0;
  1005   0011BA  9680               	bcf	128,3,c	;volatile
  1006                           
  1007                           ;main.c: 56:         }else{
  1008   0011BC  EFE1  F008         	goto	l3405
  1009   0011C0                     l108:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;main.c: 57:             LATHbits.LATH3 = 1;
  1013   0011C0  8680               	bsf	128,3,c	;volatile
  1014   0011C2                     l3405:
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;main.c: 60:         ADC2String(*buf,ADC_getval());
  1018   0011C2  C0E5  FFD9         	movff	main@buf,fsr2l
  1019   0011C6  C0E6  FFDA         	movff	main@buf+1,fsr2h
  1020   0011CA  50DF               	movf	indf2,w,c
  1021   0011CC  6FCF               	movwf	??_main& (0+255),b
  1022   0011CE  6BD0               	clrf	(??_main+1)& (0+255),b
  1023   0011D0  C0CF  F0CB         	movff	??_main,ADC2String@buf
  1024   0011D4  C0D0  F0CC         	movff	??_main+1,ADC2String@buf+1
  1025   0011D8  ECD4  F013         	call	_ADC_getval	;wreg free
  1026   0011DC  C060  F0CD         	movff	?_ADC_getval,ADC2String@ADC_val
  1027   0011E0  C061  F0CE         	movff	?_ADC_getval+1,ADC2String@ADC_val+1
  1028   0011E4  EC35  F014         	call	_ADC2String	;wreg free
  1029                           
  1030                           ;main.c: 62:         ADC2String(*buf,get_seconds());
  1031   0011E8  C0E5  FFD9         	movff	main@buf,fsr2l
  1032   0011EC  C0E6  FFDA         	movff	main@buf+1,fsr2h
  1033   0011F0  50DF               	movf	indf2,w,c
  1034   0011F2  0100               	movlb	0	; () banked
  1035   0011F4  6FCF               	movwf	??_main& (0+255),b
  1036   0011F6  6BD0               	clrf	(??_main+1)& (0+255),b
  1037   0011F8  C0CF  F0CB         	movff	??_main,ADC2String@buf
  1038   0011FC  C0D0  F0CC         	movff	??_main+1,ADC2String@buf+1
  1039   001200  EC15  F014         	call	_get_seconds	;wreg free
  1040   001204  C072  F0CD         	movff	?_get_seconds,ADC2String@ADC_val
  1041   001208  C073  F0CE         	movff	?_get_seconds+1,ADC2String@ADC_val+1
  1042   00120C  EC35  F014         	call	_ADC2String	;wreg free
  1043                           
  1044                           ;main.c: 63:         ADC2String(*buf1,get_minutes());
  1045   001210  C0E1  FFD9         	movff	main@buf1,fsr2l
  1046   001214  C0E2  FFDA         	movff	main@buf1+1,fsr2h
  1047   001218  50DF               	movf	indf2,w,c
  1048   00121A  0100               	movlb	0	; () banked
  1049   00121C  6FCF               	movwf	??_main& (0+255),b
  1050   00121E  6BD0               	clrf	(??_main+1)& (0+255),b
  1051   001220  C0CF  F0CB         	movff	??_main,ADC2String@buf
  1052   001224  C0D0  F0CC         	movff	??_main+1,ADC2String@buf+1
  1053   001228  EC52  F013         	call	_get_minutes	;wreg free
  1054   00122C  C072  F0CD         	movff	?_get_minutes,ADC2String@ADC_val
  1055   001230  C073  F0CE         	movff	?_get_minutes+1,ADC2String@ADC_val+1
  1056   001234  EC35  F014         	call	_ADC2String	;wreg free
  1057                           
  1058                           ;main.c: 64:         ADC2String(*buf2,get_hour());
  1059   001238  C0E3  FFD9         	movff	main@buf2,fsr2l
  1060   00123C  C0E4  FFDA         	movff	main@buf2+1,fsr2h
  1061   001240  50DF               	movf	indf2,w,c
  1062   001242  0100               	movlb	0	; () banked
  1063   001244  6FCF               	movwf	??_main& (0+255),b
  1064   001246  6BD0               	clrf	(??_main+1)& (0+255),b
  1065   001248  C0CF  F0CB         	movff	??_main,ADC2String@buf
  1066   00124C  C0D0  F0CC         	movff	??_main+1,ADC2String@buf+1
  1067   001250  EC25  F014         	call	_get_hour	;wreg free
  1068   001254  C067  F0CD         	movff	?_get_hour,ADC2String@ADC_val
  1069   001258  C068  F0CE         	movff	?_get_hour+1,ADC2String@ADC_val+1
  1070   00125C  EC35  F014         	call	_ADC2String	;wreg free
  1071   001260                     
  1072                           ;main.c: 66:         char *text[8] = {"MON", "30","10","2022",*buf2,*buf1,*buf,"123"};
  1073   001260  EE20  F0D1         	lfsr	2,main@text
  1074   001264  0E0F               	movlw	15
  1075   001266                     u3491:
  1076   001266  6ADE               	clrf	postinc2,c
  1077   001268  06E8               	decf	wreg,f,c
  1078   00126A  E2FD               	bc	u3491
  1079   00126C  0E0A               	movlw	low STR_1
  1080   00126E  0100               	movlb	0	; () banked
  1081   001270  6FD1               	movwf	main@text& (0+255),b
  1082   001272  0E0E               	movlw	high STR_1
  1083   001274  6FD2               	movwf	(main@text+1)& (0+255),b
  1084   001276                     
  1085                           ; BSR set to: 0
  1086   001276  0E14               	movlw	low STR_2
  1087   001278  6FD3               	movwf	(main@text+2)& (0+255),b
  1088   00127A  0E0E               	movlw	high STR_2
  1089   00127C  6FD4               	movwf	(main@text+3)& (0+255),b
  1090   00127E                     
  1091                           ; BSR set to: 0
  1092   00127E  0E11               	movlw	low STR_3
  1093   001280  6FD5               	movwf	(main@text+4)& (0+255),b
  1094   001282  0E0E               	movlw	high STR_3
  1095   001284  6FD6               	movwf	(main@text+5)& (0+255),b
  1096   001286                     
  1097                           ; BSR set to: 0
  1098   001286  0E01               	movlw	low STR_4
  1099   001288  6FD7               	movwf	(main@text+6)& (0+255),b
  1100   00128A  0E0E               	movlw	high STR_4
  1101   00128C  6FD8               	movwf	(main@text+7)& (0+255),b
  1102   00128E                     
  1103                           ; BSR set to: 0
  1104   00128E  C0E3  FFD9         	movff	main@buf2,fsr2l
  1105   001292  C0E4  FFDA         	movff	main@buf2+1,fsr2h
  1106   001296  50DF               	movf	indf2,w,c
  1107   001298  6FCF               	movwf	??_main& (0+255),b
  1108   00129A  6BD0               	clrf	(??_main+1)& (0+255),b
  1109   00129C  C0CF  F0D9         	movff	??_main,main@text+8
  1110   0012A0  C0D0  F0DA         	movff	??_main+1,main@text+9
  1111   0012A4                     
  1112                           ; BSR set to: 0
  1113   0012A4  C0E1  FFD9         	movff	main@buf1,fsr2l
  1114   0012A8  C0E2  FFDA         	movff	main@buf1+1,fsr2h
  1115   0012AC  50DF               	movf	indf2,w,c
  1116   0012AE  6FCF               	movwf	??_main& (0+255),b
  1117   0012B0  6BD0               	clrf	(??_main+1)& (0+255),b
  1118   0012B2  C0CF  F0DB         	movff	??_main,main@text+10
  1119   0012B6  C0D0  F0DC         	movff	??_main+1,main@text+11
  1120   0012BA                     
  1121                           ; BSR set to: 0
  1122   0012BA  C0E5  FFD9         	movff	main@buf,fsr2l
  1123   0012BE  C0E6  FFDA         	movff	main@buf+1,fsr2h
  1124   0012C2  50DF               	movf	indf2,w,c
  1125   0012C4  6FCF               	movwf	??_main& (0+255),b
  1126   0012C6  6BD0               	clrf	(??_main+1)& (0+255),b
  1127   0012C8  C0CF  F0DD         	movff	??_main,main@text+12
  1128   0012CC  C0D0  F0DE         	movff	??_main+1,main@text+13
  1129   0012D0                     
  1130                           ; BSR set to: 0
  1131   0012D0  0E06               	movlw	low STR_5
  1132   0012D2  6FDF               	movwf	(main@text+14)& (0+255),b
  1133   0012D4  0E0E               	movlw	high STR_5
  1134   0012D6  6FE0               	movwf	(main@text+15)& (0+255),b
  1135   0012D8                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 68:         LCD_sendstring(text);
  1138   0012D8  0ED1               	movlw	low main@text
  1139   0012DA  6F64               	movwf	LCD_sendstring@strlst& (0+255),b
  1140   0012DC  0E00               	movlw	high main@text
  1141   0012DE  6F65               	movwf	(LCD_sendstring@strlst+1)& (0+255),b
  1142   0012E0  ECBC  F00F         	call	_LCD_sendstring	;wreg free
  1143                           
  1144                           ;main.c: 71:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1145   0012E4  0E09               	movlw	9
  1146   0012E6  0100               	movlb	0	; () banked
  1147   0012E8  6FD0               	movwf	(??_main+1)& (0+255),b
  1148   0012EA  0E1E               	movlw	30
  1149   0012EC  6FCF               	movwf	??_main& (0+255),b
  1150   0012EE  0EE4               	movlw	228
  1151   0012F0                     u3537:
  1152   0012F0  2EE8               	decfsz	wreg,f,c
  1153   0012F2  D7FE               	bra	u3537
  1154   0012F4  2FCF               	decfsz	??_main& (0+255),f,b
  1155   0012F6  D7FC               	bra	u3537
  1156   0012F8  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1157   0012FA  D7FA               	bra	u3537
  1158   0012FC  F000               	nop	
  1159   0012FE                     
  1160                           ;main.c: 72:         LCD_clear();
  1161   0012FE  EC08  F013         	call	_LCD_clear	;wreg free
  1162   001302  EF84  F008         	goto	l107
  1163   001306  EF58  F000         	goto	start
  1164   00130A                     __end_of_main:
  1165                           	callstack 0
  1166                           
  1167 ;; *************** function _get_seconds *****************
  1168 ;; Defined at:
  1169 ;;		line 63 in file "timers.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  2   18[BANK0 ] unsigned int 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;Total ram usage:        2 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 5
  1190 ;; This function calls:
  1191 ;;		___lwmod
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text1
  1198   00282A                     __ptext1:
  1199                           	callstack 0
  1200   00282A                     _get_seconds:
  1201                           	callstack 25
  1202   00282A                     
  1203                           ;timers.c: 64:     return (unsigned int) time_counter%60;
  1204   00282A  C0F0  F06D         	movff	_time_counter,___lwmod@dividend
  1205   00282E  C0F1  F06E         	movff	_time_counter+1,___lwmod@dividend+1
  1206   002832  0E00               	movlw	0
  1207   002834  0100               	movlb	0	; () banked
  1208   002836  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  1209   002838  0E3C               	movlw	60
  1210   00283A  6F6F               	movwf	___lwmod@divisor& (0+255),b
  1211   00283C  EC83  F012         	call	___lwmod	;wreg free
  1212   002840  C06D  F072         	movff	?___lwmod,?_get_seconds
  1213   002844  C06E  F073         	movff	?___lwmod+1,?_get_seconds+1
  1214   002848  0012               	return		;funcret
  1215   00284A                     __end_of_get_seconds:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _get_minutes *****************
  1219 ;; Defined at:
  1220 ;;		line 67 in file "timers.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  2   18[BANK0 ] unsigned int 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1237 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;Total ram usage:        2 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 5
  1241 ;; This function calls:
  1242 ;;		___lldiv
  1243 ;;		___lwmod
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text2
  1250   0026A4                     __ptext2:
  1251                           	callstack 0
  1252   0026A4                     _get_minutes:
  1253                           	callstack 25
  1254   0026A4                     
  1255                           ;timers.c: 68:     return (unsigned int) (time_counter/60) % 60;
  1256   0026A4  0E3C               	movlw	60
  1257   0026A6  0100               	movlb	0	; () banked
  1258   0026A8  6F64               	movwf	___lldiv@divisor& (0+255),b
  1259   0026AA  0E00               	movlw	0
  1260   0026AC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  1261   0026AE  0E00               	movlw	0
  1262   0026B0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  1263   0026B2  0E00               	movlw	0
  1264   0026B4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  1265   0026B6  C0F0  F060         	movff	_time_counter,___lldiv@dividend
  1266   0026BA  C0F1  F061         	movff	_time_counter+1,___lldiv@dividend+1
  1267   0026BE  C0F2  F062         	movff	_time_counter+2,___lldiv@dividend+2
  1268   0026C2  C0F3  F063         	movff	_time_counter+3,___lldiv@dividend+3
  1269   0026C6  ECDC  F010         	call	___lldiv	;wreg free
  1270   0026CA  C060  F06D         	movff	?___lldiv,___lwmod@dividend
  1271   0026CE  C061  F06E         	movff	?___lldiv+1,___lwmod@dividend+1
  1272   0026D2  0E00               	movlw	0
  1273   0026D4  0100               	movlb	0	; () banked
  1274   0026D6  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  1275   0026D8  0E3C               	movlw	60
  1276   0026DA  6F6F               	movwf	___lwmod@divisor& (0+255),b
  1277   0026DC  EC83  F012         	call	___lwmod	;wreg free
  1278   0026E0  C06D  F072         	movff	?___lwmod,?_get_minutes
  1279   0026E4  C06E  F073         	movff	?___lwmod+1,?_get_minutes+1
  1280   0026E8  0012               	return		;funcret
  1281   0026EA                     __end_of_get_minutes:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function ___lwmod *****************
  1285 ;; Defined at:
  1286 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  dividend        2   13[BANK0 ] unsigned int 
  1289 ;;  divisor         2   15[BANK0 ] unsigned int 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  counter         1   17[BANK0 ] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  2   13[BANK0 ] unsigned int 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;Total ram usage:        5 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 4
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_get_seconds
  1312 ;;		_get_minutes
  1313 ;;		_LEDarray_disp_dec
  1314 ;;		_LEDarray_disp_PPM
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text3
  1319   002506                     __ptext3:
  1320                           	callstack 0
  1321   002506                     ___lwmod:
  1322                           	callstack 25
  1323   002506  0100               	movlb	0	; () banked
  1324   002508  516F               	movf	___lwmod@divisor& (0+255),w,b
  1325   00250A  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1326   00250C  B4D8               	btfsc	status,2,c
  1327   00250E  EF8B  F012         	goto	u3121
  1328   002512  EF8D  F012         	goto	u3120
  1329   002516                     u3121:
  1330   002516  EFB1  F012         	goto	l862
  1331   00251A                     u3120:
  1332   00251A                     
  1333                           ; BSR set to: 0
  1334   00251A  0E01               	movlw	1
  1335   00251C  6F71               	movwf	___lwmod@counter& (0+255),b
  1336   00251E  EF95  F012         	goto	l3137
  1337   002522                     l3135:
  1338                           
  1339                           ; BSR set to: 0
  1340   002522  90D8               	bcf	status,0,c
  1341   002524  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  1342   002526  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1343   002528  2B71               	incf	___lwmod@counter& (0+255),f,b
  1344   00252A                     l3137:
  1345                           
  1346                           ; BSR set to: 0
  1347   00252A  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1348   00252C  EF9A  F012         	goto	u3131
  1349   002530  EF9C  F012         	goto	u3130
  1350   002534                     u3131:
  1351   002534  EF91  F012         	goto	l3135
  1352   002538                     u3130:
  1353   002538                     l3139:
  1354                           
  1355                           ; BSR set to: 0
  1356   002538  516F               	movf	___lwmod@divisor& (0+255),w,b
  1357   00253A  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  1358   00253C  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1359   00253E  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1360   002540  A0D8               	btfss	status,0,c
  1361   002542  EFA5  F012         	goto	u3141
  1362   002546  EFA7  F012         	goto	u3140
  1363   00254A                     u3141:
  1364   00254A  EFAB  F012         	goto	l3143
  1365   00254E                     u3140:
  1366   00254E                     
  1367                           ; BSR set to: 0
  1368   00254E  516F               	movf	___lwmod@divisor& (0+255),w,b
  1369   002550  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  1370   002552  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1371   002554  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1372   002556                     l3143:
  1373                           
  1374                           ; BSR set to: 0
  1375   002556  90D8               	bcf	status,0,c
  1376   002558  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1377   00255A  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  1378   00255C                     
  1379                           ; BSR set to: 0
  1380   00255C  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  1381   00255E  EF9C  F012         	goto	l3139
  1382   002562                     l862:
  1383                           
  1384                           ; BSR set to: 0
  1385   002562  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  1386   002566  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  1387   00256A                     
  1388                           ; BSR set to: 0
  1389   00256A  0012               	return		;funcret
  1390   00256C                     __end_of___lwmod:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function ___lldiv *****************
  1394 ;; Defined at:
  1395 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  dividend        4    0[BANK0 ] unsigned long 
  1398 ;;  divisor         4    4[BANK0 ] unsigned long 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  quotient        4    8[BANK0 ] unsigned long 
  1401 ;;  counter         1   12[BANK0 ] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  4    0[BANK0 ] unsigned long 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1411 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1414 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1415 ;;Total ram usage:       13 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 4
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_get_minutes
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text4
  1426   0021B8                     __ptext4:
  1427                           	callstack 0
  1428   0021B8                     ___lldiv:
  1429                           	callstack 25
  1430   0021B8  0E00               	movlw	0
  1431   0021BA  0100               	movlb	0	; () banked
  1432   0021BC  6F68               	movwf	___lldiv@quotient& (0+255),b
  1433   0021BE  0E00               	movlw	0
  1434   0021C0  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  1435   0021C2  0E00               	movlw	0
  1436   0021C4  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  1437   0021C6  0E00               	movlw	0
  1438   0021C8  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  1439   0021CA                     
  1440                           ; BSR set to: 0
  1441   0021CA  5164               	movf	___lldiv@divisor& (0+255),w,b
  1442   0021CC  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1443   0021CE  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1444   0021D0  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  1445   0021D2  B4D8               	btfsc	status,2,c
  1446   0021D4  EFEE  F010         	goto	u3061
  1447   0021D8  EFF0  F010         	goto	u3060
  1448   0021DC                     u3061:
  1449   0021DC  EF26  F011         	goto	l388
  1450   0021E0                     u3060:
  1451   0021E0                     
  1452                           ; BSR set to: 0
  1453   0021E0  0E01               	movlw	1
  1454   0021E2  6F6C               	movwf	___lldiv@counter& (0+255),b
  1455   0021E4  EFFA  F010         	goto	l3095
  1456   0021E8                     l3093:
  1457                           
  1458                           ; BSR set to: 0
  1459   0021E8  90D8               	bcf	status,0,c
  1460   0021EA  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  1461   0021EC  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1462   0021EE  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1463   0021F0  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1464   0021F2  2B6C               	incf	___lldiv@counter& (0+255),f,b
  1465   0021F4                     l3095:
  1466                           
  1467                           ; BSR set to: 0
  1468   0021F4  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1469   0021F6  EFFF  F010         	goto	u3071
  1470   0021FA  EF01  F011         	goto	u3070
  1471   0021FE                     u3071:
  1472   0021FE  EFF4  F010         	goto	l3093
  1473   002202                     u3070:
  1474   002202                     l3097:
  1475                           
  1476                           ; BSR set to: 0
  1477   002202  90D8               	bcf	status,0,c
  1478   002204  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  1479   002206  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1480   002208  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1481   00220A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1482   00220C                     
  1483                           ; BSR set to: 0
  1484   00220C  5164               	movf	___lldiv@divisor& (0+255),w,b
  1485   00220E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  1486   002210  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1487   002212  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1488   002214  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1489   002216  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1490   002218  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1491   00221A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1492   00221C  A0D8               	btfss	status,0,c
  1493   00221E  EF13  F011         	goto	u3081
  1494   002222  EF15  F011         	goto	u3080
  1495   002226                     u3081:
  1496   002226  EF1E  F011         	goto	l3105
  1497   00222A                     u3080:
  1498   00222A                     
  1499                           ; BSR set to: 0
  1500   00222A  5164               	movf	___lldiv@divisor& (0+255),w,b
  1501   00222C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  1502   00222E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1503   002230  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1504   002232  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1505   002234  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1506   002236  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1507   002238  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1508   00223A                     
  1509                           ; BSR set to: 0
  1510   00223A  8168               	bsf	___lldiv@quotient& (0+255),0,b
  1511   00223C                     l3105:
  1512                           
  1513                           ; BSR set to: 0
  1514   00223C  90D8               	bcf	status,0,c
  1515   00223E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1516   002240  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1517   002242  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1518   002244  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  1519   002246                     
  1520                           ; BSR set to: 0
  1521   002246  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  1522   002248  EF01  F011         	goto	l3097
  1523   00224C                     l388:
  1524                           
  1525                           ; BSR set to: 0
  1526   00224C  C068  F060         	movff	___lldiv@quotient,?___lldiv
  1527   002250  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  1528   002254  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  1529   002258  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  1530   00225C                     
  1531                           ; BSR set to: 0
  1532   00225C  0012               	return		;funcret
  1533   00225E                     __end_of___lldiv:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _get_hour *****************
  1537 ;; Defined at:
  1538 ;;		line 71 in file "timers.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2    7[BANK0 ] unsigned int 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1552 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;Total ram usage:        2 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 5
  1559 ;; This function calls:
  1560 ;;		___lwdiv
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text5
  1567   00284A                     __ptext5:
  1568                           	callstack 0
  1569   00284A                     _get_hour:
  1570                           	callstack 25
  1571   00284A                     
  1572                           ;timers.c: 72:     return (unsigned int) time_counter/3600;
  1573   00284A  C0F0  F060         	movff	_time_counter,___lwdiv@dividend
  1574   00284E  C0F1  F061         	movff	_time_counter+1,___lwdiv@dividend+1
  1575   002852  0E0E               	movlw	14
  1576   002854  0100               	movlb	0	; () banked
  1577   002856  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1578   002858  0E10               	movlw	16
  1579   00285A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1580   00285C  EC6E  F011         	call	___lwdiv	;wreg free
  1581   002860  C060  F067         	movff	?___lwdiv,?_get_hour
  1582   002864  C061  F068         	movff	?___lwdiv+1,?_get_hour+1
  1583   002868  0012               	return		;funcret
  1584   00286A                     __end_of_get_hour:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function ___lwdiv *****************
  1588 ;; Defined at:
  1589 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  dividend        2    0[BANK0 ] unsigned int 
  1592 ;;  divisor         2    2[BANK0 ] unsigned int 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  quotient        2    5[BANK0 ] unsigned int 
  1595 ;;  counter         1    4[BANK0 ] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2    0[BANK0 ] unsigned int 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1605 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;Total ram usage:        7 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 4
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_get_hour
  1616 ;;		_LEDarray_disp_dec
  1617 ;;		_LEDarray_disp_PPM
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text6
  1622   0022DC                     __ptext6:
  1623                           	callstack 0
  1624   0022DC                     ___lwdiv:
  1625                           	callstack 25
  1626   0022DC  0E00               	movlw	0
  1627   0022DE  0100               	movlb	0	; () banked
  1628   0022E0  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1629   0022E2  0E00               	movlw	0
  1630   0022E4  6F65               	movwf	___lwdiv@quotient& (0+255),b
  1631   0022E6                     
  1632                           ; BSR set to: 0
  1633   0022E6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1634   0022E8  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1635   0022EA  B4D8               	btfsc	status,2,c
  1636   0022EC  EF7A  F011         	goto	u3091
  1637   0022F0  EF7C  F011         	goto	u3090
  1638   0022F4                     u3091:
  1639   0022F4  EFA4  F011         	goto	l852
  1640   0022F8                     u3090:
  1641   0022F8                     
  1642                           ; BSR set to: 0
  1643   0022F8  0E01               	movlw	1
  1644   0022FA  6F64               	movwf	___lwdiv@counter& (0+255),b
  1645   0022FC  EF84  F011         	goto	l3117
  1646   002300                     l3115:
  1647                           
  1648                           ; BSR set to: 0
  1649   002300  90D8               	bcf	status,0,c
  1650   002302  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  1651   002304  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1652   002306  2B64               	incf	___lwdiv@counter& (0+255),f,b
  1653   002308                     l3117:
  1654                           
  1655                           ; BSR set to: 0
  1656   002308  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1657   00230A  EF89  F011         	goto	u3101
  1658   00230E  EF8B  F011         	goto	u3100
  1659   002312                     u3101:
  1660   002312  EF80  F011         	goto	l3115
  1661   002316                     u3100:
  1662   002316                     l3119:
  1663                           
  1664                           ; BSR set to: 0
  1665   002316  90D8               	bcf	status,0,c
  1666   002318  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  1667   00231A  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1668   00231C                     
  1669                           ; BSR set to: 0
  1670   00231C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1671   00231E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  1672   002320  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1673   002322  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1674   002324  A0D8               	btfss	status,0,c
  1675   002326  EF97  F011         	goto	u3111
  1676   00232A  EF99  F011         	goto	u3110
  1677   00232E                     u3111:
  1678   00232E  EF9E  F011         	goto	l3127
  1679   002332                     u3110:
  1680   002332                     
  1681                           ; BSR set to: 0
  1682   002332  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1683   002334  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  1684   002336  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1685   002338  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1686   00233A                     
  1687                           ; BSR set to: 0
  1688   00233A  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  1689   00233C                     l3127:
  1690                           
  1691                           ; BSR set to: 0
  1692   00233C  90D8               	bcf	status,0,c
  1693   00233E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1694   002340  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  1695   002342                     
  1696                           ; BSR set to: 0
  1697   002342  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  1698   002344  EF8B  F011         	goto	l3119
  1699   002348                     l852:
  1700                           
  1701                           ; BSR set to: 0
  1702   002348  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  1703   00234C  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1704   002350                     
  1705                           ; BSR set to: 0
  1706   002350  0012               	return		;funcret
  1707   002352                     __end_of___lwdiv:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function ___xxtofl *****************
  1711 ;; Defined at:
  1712 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  sign            1    wreg     unsigned char 
  1715 ;;  val             4    9[BANK0 ] long 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  sign            1   17[BANK0 ] unsigned char 
  1718 ;;  arg             4   19[BANK0 ] unsigned long 
  1719 ;;  exp             1   18[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  4    9[BANK0 ] unsigned char 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;Total ram usage:       14 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 4
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text7
  1744   00130A                     __ptext7:
  1745                           	callstack 0
  1746   00130A                     ___xxtofl:
  1747                           	callstack 26
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;incstack = 0
  1751                           ;___xxtofl@sign stored from wreg
  1752   00130A  0100               	movlb	0	; () banked
  1753   00130C  6F71               	movwf	___xxtofl@sign& (0+255),b
  1754   00130E  0100               	movlb	0	; () banked
  1755   001310  5171               	movf	___xxtofl@sign& (0+255),w,b
  1756   001312  B4D8               	btfsc	status,2,c
  1757   001314  EF8E  F009         	goto	u2291
  1758   001318  EF90  F009         	goto	u2290
  1759   00131C                     u2291:
  1760   00131C  EFB2  F009         	goto	l1016
  1761   001320                     u2290:
  1762   001320                     
  1763                           ; BSR set to: 0
  1764   001320  BF6C               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1765   001322  EF97  F009         	goto	u2300
  1766   001326  EF95  F009         	goto	u2301
  1767   00132A                     u2301:
  1768   00132A  EFB2  F009         	goto	l1016
  1769   00132E                     u2300:
  1770   00132E                     
  1771                           ; BSR set to: 0
  1772   00132E  C069  F06D         	movff	___xxtofl@val,??___xxtofl
  1773   001332  C06A  F06E         	movff	___xxtofl@val+1,??___xxtofl+1
  1774   001336  C06B  F06F         	movff	___xxtofl@val+2,??___xxtofl+2
  1775   00133A  C06C  F070         	movff	___xxtofl@val+3,??___xxtofl+3
  1776   00133E  1F6D               	comf	??___xxtofl& (0+255),f,b
  1777   001340  1F6E               	comf	(??___xxtofl+1)& (0+255),f,b
  1778   001342  1F6F               	comf	(??___xxtofl+2)& (0+255),f,b
  1779   001344  1F70               	comf	(??___xxtofl+3)& (0+255),f,b
  1780   001346  2B6D               	incf	??___xxtofl& (0+255),f,b
  1781   001348  0E00               	movlw	0
  1782   00134A  236E               	addwfc	(??___xxtofl+1)& (0+255),f,b
  1783   00134C  236F               	addwfc	(??___xxtofl+2)& (0+255),f,b
  1784   00134E  2370               	addwfc	(??___xxtofl+3)& (0+255),f,b
  1785   001350  C06D  F073         	movff	??___xxtofl,___xxtofl@arg
  1786   001354  C06E  F074         	movff	??___xxtofl+1,___xxtofl@arg+1
  1787   001358  C06F  F075         	movff	??___xxtofl+2,___xxtofl@arg+2
  1788   00135C  C070  F076         	movff	??___xxtofl+3,___xxtofl@arg+3
  1789   001360  EFBA  F009         	goto	l2625
  1790   001364                     l1016:
  1791                           
  1792                           ; BSR set to: 0
  1793   001364  C069  F073         	movff	___xxtofl@val,___xxtofl@arg
  1794   001368  C06A  F074         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1795   00136C  C06B  F075         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1796   001370  C06C  F076         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1797   001374                     l2625:
  1798                           
  1799                           ; BSR set to: 0
  1800   001374  5169               	movf	___xxtofl@val& (0+255),w,b
  1801   001376  116A               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  1802   001378  116B               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  1803   00137A  116C               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  1804   00137C  A4D8               	btfss	status,2,c
  1805   00137E  EFC3  F009         	goto	u2311
  1806   001382  EFC5  F009         	goto	u2310
  1807   001386                     u2311:
  1808   001386  EFCF  F009         	goto	l2631
  1809   00138A                     u2310:
  1810   00138A                     
  1811                           ; BSR set to: 0
  1812   00138A  0E00               	movlw	0
  1813   00138C  6F69               	movwf	?___xxtofl& (0+255),b
  1814   00138E  0E00               	movlw	0
  1815   001390  6F6A               	movwf	(?___xxtofl+1)& (0+255),b
  1816   001392  0E00               	movlw	0
  1817   001394  6F6B               	movwf	(?___xxtofl+2)& (0+255),b
  1818   001396  0E00               	movlw	0
  1819   001398  6F6C               	movwf	(?___xxtofl+3)& (0+255),b
  1820   00139A  EF60  F00A         	goto	l1019
  1821   00139E                     l2631:
  1822                           
  1823                           ; BSR set to: 0
  1824   00139E  0E96               	movlw	150
  1825   0013A0  6F72               	movwf	___xxtofl@exp& (0+255),b
  1826   0013A2  EFD9  F009         	goto	l2635
  1827   0013A6                     l2633:
  1828                           
  1829                           ; BSR set to: 0
  1830   0013A6  2B72               	incf	___xxtofl@exp& (0+255),f,b
  1831   0013A8  90D8               	bcf	status,0,c
  1832   0013AA  3376               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1833   0013AC  3375               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1834   0013AE  3374               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1835   0013B0  3373               	rrcf	___xxtofl@arg& (0+255),f,b
  1836   0013B2                     l2635:
  1837                           
  1838                           ; BSR set to: 0
  1839   0013B2  0E00               	movlw	0
  1840   0013B4  1573               	andwf	___xxtofl@arg& (0+255),w,b
  1841   0013B6  6F6D               	movwf	??___xxtofl& (0+255),b
  1842   0013B8  0E00               	movlw	0
  1843   0013BA  1574               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1844   0013BC  6F6E               	movwf	(??___xxtofl+1)& (0+255),b
  1845   0013BE  0E00               	movlw	0
  1846   0013C0  1575               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1847   0013C2  6F6F               	movwf	(??___xxtofl+2)& (0+255),b
  1848   0013C4  0EFE               	movlw	254
  1849   0013C6  1576               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1850   0013C8  6F70               	movwf	(??___xxtofl+3)& (0+255),b
  1851   0013CA  516D               	movf	??___xxtofl& (0+255),w,b
  1852   0013CC  116E               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1853   0013CE  116F               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1854   0013D0  1170               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1855   0013D2  A4D8               	btfss	status,2,c
  1856   0013D4  EFEE  F009         	goto	u2321
  1857   0013D8  EFF0  F009         	goto	u2320
  1858   0013DC                     u2321:
  1859   0013DC  EFD3  F009         	goto	l2633
  1860   0013E0                     u2320:
  1861   0013E0  EFFE  F009         	goto	l1023
  1862   0013E4                     l2637:
  1863                           
  1864                           ; BSR set to: 0
  1865   0013E4  2B72               	incf	___xxtofl@exp& (0+255),f,b
  1866   0013E6                     
  1867                           ; BSR set to: 0
  1868   0013E6  0E01               	movlw	1
  1869   0013E8  2773               	addwf	___xxtofl@arg& (0+255),f,b
  1870   0013EA  0E00               	movlw	0
  1871   0013EC  2374               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  1872   0013EE  2375               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  1873   0013F0  2376               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  1874   0013F2                     
  1875                           ; BSR set to: 0
  1876   0013F2  90D8               	bcf	status,0,c
  1877   0013F4  3376               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1878   0013F6  3375               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1879   0013F8  3374               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1880   0013FA  3373               	rrcf	___xxtofl@arg& (0+255),f,b
  1881   0013FC                     l1023:
  1882                           
  1883                           ; BSR set to: 0
  1884   0013FC  0E00               	movlw	0
  1885   0013FE  1573               	andwf	___xxtofl@arg& (0+255),w,b
  1886   001400  6F6D               	movwf	??___xxtofl& (0+255),b
  1887   001402  0E00               	movlw	0
  1888   001404  1574               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1889   001406  6F6E               	movwf	(??___xxtofl+1)& (0+255),b
  1890   001408  0E00               	movlw	0
  1891   00140A  1575               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1892   00140C  6F6F               	movwf	(??___xxtofl+2)& (0+255),b
  1893   00140E  0EFF               	movlw	255
  1894   001410  1576               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1895   001412  6F70               	movwf	(??___xxtofl+3)& (0+255),b
  1896   001414  516D               	movf	??___xxtofl& (0+255),w,b
  1897   001416  116E               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1898   001418  116F               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1899   00141A  1170               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1900   00141C  A4D8               	btfss	status,2,c
  1901   00141E  EF13  F00A         	goto	u2331
  1902   001422  EF15  F00A         	goto	u2330
  1903   001426                     u2331:
  1904   001426  EFF2  F009         	goto	l2637
  1905   00142A                     u2330:
  1906   00142A  EF1D  F00A         	goto	l2645
  1907   00142E                     l2643:
  1908                           
  1909                           ; BSR set to: 0
  1910   00142E  0772               	decf	___xxtofl@exp& (0+255),f,b
  1911   001430  90D8               	bcf	status,0,c
  1912   001432  3773               	rlcf	___xxtofl@arg& (0+255),f,b
  1913   001434  3774               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  1914   001436  3775               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  1915   001438  3776               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  1916   00143A                     l2645:
  1917                           
  1918                           ; BSR set to: 0
  1919   00143A  BF75               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  1920   00143C  EF22  F00A         	goto	u2341
  1921   001440  EF24  F00A         	goto	u2340
  1922   001444                     u2341:
  1923   001444  EF2C  F00A         	goto	l1030
  1924   001448                     u2340:
  1925   001448                     
  1926                           ; BSR set to: 0
  1927   001448  0E02               	movlw	2
  1928   00144A  6172               	cpfslt	___xxtofl@exp& (0+255),b
  1929   00144C  EF2A  F00A         	goto	u2351
  1930   001450  EF2C  F00A         	goto	u2350
  1931   001454                     u2351:
  1932   001454  EF17  F00A         	goto	l2643
  1933   001458                     u2350:
  1934   001458                     l1030:
  1935                           
  1936                           ; BSR set to: 0
  1937   001458  B172               	btfsc	___xxtofl@exp& (0+255),0,b
  1938   00145A  EF31  F00A         	goto	u2361
  1939   00145E  EF33  F00A         	goto	u2360
  1940   001462                     u2361:
  1941   001462  EF34  F00A         	goto	l2651
  1942   001466                     u2360:
  1943   001466                     
  1944                           ; BSR set to: 0
  1945   001466  9F75               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  1946   001468                     l2651:
  1947                           
  1948                           ; BSR set to: 0
  1949   001468  90D8               	bcf	status,0,c
  1950   00146A  3372               	rrcf	___xxtofl@exp& (0+255),f,b
  1951   00146C                     
  1952                           ; BSR set to: 0
  1953   00146C  C072  F06D         	movff	___xxtofl@exp,??___xxtofl
  1954   001470  6B6E               	clrf	(??___xxtofl+1)& (0+255),b
  1955   001472  6B6F               	clrf	(??___xxtofl+2)& (0+255),b
  1956   001474  6B70               	clrf	(??___xxtofl+3)& (0+255),b
  1957   001476  C06D  F070         	movff	??___xxtofl,??___xxtofl+3
  1958   00147A  6B6F               	clrf	(??___xxtofl+2)& (0+255),b
  1959   00147C  6B6E               	clrf	(??___xxtofl+1)& (0+255),b
  1960   00147E  6B6D               	clrf	??___xxtofl& (0+255),b
  1961   001480  516D               	movf	??___xxtofl& (0+255),w,b
  1962   001482  1373               	iorwf	___xxtofl@arg& (0+255),f,b
  1963   001484  516E               	movf	(??___xxtofl+1)& (0+255),w,b
  1964   001486  1374               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  1965   001488  516F               	movf	(??___xxtofl+2)& (0+255),w,b
  1966   00148A  1375               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  1967   00148C  5170               	movf	(??___xxtofl+3)& (0+255),w,b
  1968   00148E  1376               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  1969   001490                     
  1970                           ; BSR set to: 0
  1971   001490  5171               	movf	___xxtofl@sign& (0+255),w,b
  1972   001492  B4D8               	btfsc	status,2,c
  1973   001494  EF4E  F00A         	goto	u2371
  1974   001498  EF50  F00A         	goto	u2370
  1975   00149C                     u2371:
  1976   00149C  EF58  F00A         	goto	l2661
  1977   0014A0                     u2370:
  1978   0014A0                     
  1979                           ; BSR set to: 0
  1980   0014A0  BF6C               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1981   0014A2  EF57  F00A         	goto	u2380
  1982   0014A6  EF55  F00A         	goto	u2381
  1983   0014AA                     u2381:
  1984   0014AA  EF58  F00A         	goto	l2661
  1985   0014AE                     u2380:
  1986   0014AE                     
  1987                           ; BSR set to: 0
  1988   0014AE  8F76               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  1989   0014B0                     l2661:
  1990                           
  1991                           ; BSR set to: 0
  1992   0014B0  C073  F069         	movff	___xxtofl@arg,?___xxtofl
  1993   0014B4  C074  F06A         	movff	___xxtofl@arg+1,?___xxtofl+1
  1994   0014B8  C075  F06B         	movff	___xxtofl@arg+2,?___xxtofl+2
  1995   0014BC  C076  F06C         	movff	___xxtofl@arg+3,?___xxtofl+3
  1996   0014C0                     l1019:
  1997                           
  1998                           ; BSR set to: 0
  1999   0014C0  0012               	return		;funcret
  2000   0014C2                     __end_of___xxtofl:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function ___fltol *****************
  2004 ;; Defined at:
  2005 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  f1              4    0[BANK0 ] unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  exp1            1    9[BANK0 ] unsigned char 
  2010 ;;  sign1           1    8[BANK0 ] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  4    0[BANK0 ] long 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;Total ram usage:       10 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 4
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text8
  2035   001902                     __ptext8:
  2036                           	callstack 0
  2037   001902                     ___fltol:
  2038                           	callstack 26
  2039   001902  0100               	movlb	0	; () banked
  2040   001904  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  2041   001906  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  2042   001908  6F69               	movwf	___fltol@exp1& (0+255),b
  2043   00190A  5169               	movf	___fltol@exp1& (0+255),w,b
  2044   00190C  A4D8               	btfss	status,2,c
  2045   00190E  EF8B  F00C         	goto	u3351
  2046   001912  EF8D  F00C         	goto	u3350
  2047   001916                     u3351:
  2048   001916  EF97  F00C         	goto	l3321
  2049   00191A                     u3350:
  2050   00191A                     l3317:
  2051                           
  2052                           ; BSR set to: 0
  2053   00191A  0E00               	movlw	0
  2054   00191C  6F60               	movwf	?___fltol& (0+255),b
  2055   00191E  0E00               	movlw	0
  2056   001920  6F61               	movwf	(?___fltol+1)& (0+255),b
  2057   001922  0E00               	movlw	0
  2058   001924  6F62               	movwf	(?___fltol+2)& (0+255),b
  2059   001926  0E00               	movlw	0
  2060   001928  6F63               	movwf	(?___fltol+3)& (0+255),b
  2061   00192A  EF04  F00D         	goto	l658
  2062   00192E                     l3321:
  2063                           
  2064                           ; BSR set to: 0
  2065   00192E  C060  F064         	movff	___fltol@f1,??___fltol
  2066   001932  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  2067   001936  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  2068   00193A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  2069   00193E  0E20               	movlw	32
  2070   001940  EFA7  F00C         	goto	u3360
  2071   001944                     u3365:
  2072   001944  90D8               	bcf	status,0,c
  2073   001946  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  2074   001948  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  2075   00194A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  2076   00194C  3364               	rrcf	??___fltol& (0+255),f,b
  2077   00194E                     u3360:
  2078   00194E  2EE8               	decfsz	wreg,f,c
  2079   001950  EFA2  F00C         	goto	u3365
  2080   001954  5164               	movf	??___fltol& (0+255),w,b
  2081   001956  6F68               	movwf	___fltol@sign1& (0+255),b
  2082   001958                     
  2083                           ; BSR set to: 0
  2084   001958  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  2085   00195A                     
  2086                           ; BSR set to: 0
  2087   00195A  0EFF               	movlw	255
  2088   00195C  1760               	andwf	___fltol@f1& (0+255),f,b
  2089   00195E  0EFF               	movlw	255
  2090   001960  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  2091   001962  0EFF               	movlw	255
  2092   001964  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  2093   001966  0E00               	movlw	0
  2094   001968  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  2095   00196A                     
  2096                           ; BSR set to: 0
  2097   00196A  0E96               	movlw	150
  2098   00196C  5F69               	subwf	___fltol@exp1& (0+255),f,b
  2099   00196E                     
  2100                           ; BSR set to: 0
  2101   00196E  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  2102   001970  EFBE  F00C         	goto	u3370
  2103   001974  EFBC  F00C         	goto	u3371
  2104   001978                     u3371:
  2105   001978  EFD4  F00C         	goto	l3341
  2106   00197C                     u3370:
  2107   00197C                     
  2108                           ; BSR set to: 0
  2109   00197C  5169               	movf	___fltol@exp1& (0+255),w,b
  2110   00197E  0A80               	xorlw	128
  2111   001980  0F97               	addlw	151
  2112   001982  B0D8               	btfsc	status,0,c
  2113   001984  EFC6  F00C         	goto	u3381
  2114   001988  EFC8  F00C         	goto	u3380
  2115   00198C                     u3381:
  2116   00198C  EFCA  F00C         	goto	l3337
  2117   001990                     u3380:
  2118   001990  EF8D  F00C         	goto	l3317
  2119   001994                     l3337:
  2120                           
  2121                           ; BSR set to: 0
  2122   001994  90D8               	bcf	status,0,c
  2123   001996  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  2124   001998  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  2125   00199A  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  2126   00199C  3360               	rrcf	___fltol@f1& (0+255),f,b
  2127   00199E                     
  2128                           ; BSR set to: 0
  2129   00199E  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  2130   0019A0  EFCA  F00C         	goto	l3337
  2131   0019A4  EFEC  F00C         	goto	l3351
  2132   0019A8                     l3341:
  2133                           
  2134                           ; BSR set to: 0
  2135   0019A8  0E1F               	movlw	31
  2136   0019AA  6569               	cpfsgt	___fltol@exp1& (0+255),b
  2137   0019AC  EFDA  F00C         	goto	u3391
  2138   0019B0  EFDC  F00C         	goto	u3390
  2139   0019B4                     u3391:
  2140   0019B4  EFE4  F00C         	goto	l3349
  2141   0019B8                     u3390:
  2142   0019B8  EF8D  F00C         	goto	l3317
  2143   0019BC                     l3347:
  2144                           
  2145                           ; BSR set to: 0
  2146   0019BC  90D8               	bcf	status,0,c
  2147   0019BE  3760               	rlcf	___fltol@f1& (0+255),f,b
  2148   0019C0  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  2149   0019C2  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  2150   0019C4  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  2151   0019C6  0769               	decf	___fltol@exp1& (0+255),f,b
  2152   0019C8                     l3349:
  2153                           
  2154                           ; BSR set to: 0
  2155   0019C8  5169               	movf	___fltol@exp1& (0+255),w,b
  2156   0019CA  A4D8               	btfss	status,2,c
  2157   0019CC  EFEA  F00C         	goto	u3401
  2158   0019D0  EFEC  F00C         	goto	u3400
  2159   0019D4                     u3401:
  2160   0019D4  EFDE  F00C         	goto	l3347
  2161   0019D8                     u3400:
  2162   0019D8                     l3351:
  2163                           
  2164                           ; BSR set to: 0
  2165   0019D8  5168               	movf	___fltol@sign1& (0+255),w,b
  2166   0019DA  B4D8               	btfsc	status,2,c
  2167   0019DC  EFF2  F00C         	goto	u3411
  2168   0019E0  EFF4  F00C         	goto	u3410
  2169   0019E4                     u3411:
  2170   0019E4  EFFC  F00C         	goto	l3355
  2171   0019E8                     u3410:
  2172   0019E8                     
  2173                           ; BSR set to: 0
  2174   0019E8  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  2175   0019EA  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  2176   0019EC  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  2177   0019EE  6D60               	negf	___fltol@f1& (0+255),b
  2178   0019F0  0E00               	movlw	0
  2179   0019F2  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  2180   0019F4  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  2181   0019F6  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  2182   0019F8                     l3355:
  2183                           
  2184                           ; BSR set to: 0
  2185   0019F8  C060  F060         	movff	___fltol@f1,?___fltol
  2186   0019FC  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  2187   001A00  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  2188   001A04  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  2189   001A08                     l658:
  2190                           
  2191                           ; BSR set to: 0
  2192   001A08  0012               	return		;funcret
  2193   001A0A                     __end_of___fltol:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function ___flge *****************
  2197 ;; Defined at:
  2198 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  ff1             4    0[BANK0 ] long 
  2201 ;;  ff2             4    4[BANK0 ] long 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;		None               void
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2213 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;Total ram usage:       12 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 4
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text9
  2228   001A0A                     __ptext9:
  2229                           	callstack 0
  2230   001A0A                     ___flge:
  2231                           	callstack 26
  2232   001A0A  0E00               	movlw	0
  2233   001A0C  0100               	movlb	0	; () banked
  2234   001A0E  1560               	andwf	___flge@ff1& (0+255),w,b
  2235   001A10  6F68               	movwf	??___flge& (0+255),b
  2236   001A12  0E00               	movlw	0
  2237   001A14  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  2238   001A16  6F69               	movwf	(??___flge+1)& (0+255),b
  2239   001A18  0E80               	movlw	128
  2240   001A1A  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  2241   001A1C  6F6A               	movwf	(??___flge+2)& (0+255),b
  2242   001A1E  0E7F               	movlw	127
  2243   001A20  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  2244   001A22  6F6B               	movwf	(??___flge+3)& (0+255),b
  2245   001A24  5168               	movf	??___flge& (0+255),w,b
  2246   001A26  1169               	iorwf	(??___flge+1)& (0+255),w,b
  2247   001A28  116A               	iorwf	(??___flge+2)& (0+255),w,b
  2248   001A2A  116B               	iorwf	(??___flge+3)& (0+255),w,b
  2249   001A2C  A4D8               	btfss	status,2,c
  2250   001A2E  EF1B  F00D         	goto	u3301
  2251   001A32  EF1D  F00D         	goto	u3300
  2252   001A36                     u3301:
  2253   001A36  EF25  F00D         	goto	l3297
  2254   001A3A                     u3300:
  2255   001A3A                     
  2256                           ; BSR set to: 0
  2257   001A3A  0E00               	movlw	0
  2258   001A3C  6F60               	movwf	___flge@ff1& (0+255),b
  2259   001A3E  0E00               	movlw	0
  2260   001A40  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2261   001A42  0E00               	movlw	0
  2262   001A44  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2263   001A46  0E00               	movlw	0
  2264   001A48  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2265   001A4A                     l3297:
  2266                           
  2267                           ; BSR set to: 0
  2268   001A4A  0E00               	movlw	0
  2269   001A4C  1564               	andwf	___flge@ff2& (0+255),w,b
  2270   001A4E  6F68               	movwf	??___flge& (0+255),b
  2271   001A50  0E00               	movlw	0
  2272   001A52  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  2273   001A54  6F69               	movwf	(??___flge+1)& (0+255),b
  2274   001A56  0E80               	movlw	128
  2275   001A58  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  2276   001A5A  6F6A               	movwf	(??___flge+2)& (0+255),b
  2277   001A5C  0E7F               	movlw	127
  2278   001A5E  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  2279   001A60  6F6B               	movwf	(??___flge+3)& (0+255),b
  2280   001A62  5168               	movf	??___flge& (0+255),w,b
  2281   001A64  1169               	iorwf	(??___flge+1)& (0+255),w,b
  2282   001A66  116A               	iorwf	(??___flge+2)& (0+255),w,b
  2283   001A68  116B               	iorwf	(??___flge+3)& (0+255),w,b
  2284   001A6A  A4D8               	btfss	status,2,c
  2285   001A6C  EF3A  F00D         	goto	u3311
  2286   001A70  EF3C  F00D         	goto	u3310
  2287   001A74                     u3311:
  2288   001A74  EF44  F00D         	goto	l3301
  2289   001A78                     u3310:
  2290   001A78                     
  2291                           ; BSR set to: 0
  2292   001A78  0E00               	movlw	0
  2293   001A7A  6F64               	movwf	___flge@ff2& (0+255),b
  2294   001A7C  0E00               	movlw	0
  2295   001A7E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2296   001A80  0E00               	movlw	0
  2297   001A82  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2298   001A84  0E00               	movlw	0
  2299   001A86  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2300   001A88                     l3301:
  2301                           
  2302                           ; BSR set to: 0
  2303   001A88  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  2304   001A8A  EF49  F00D         	goto	u3321
  2305   001A8E  EF4B  F00D         	goto	u3320
  2306   001A92                     u3321:
  2307   001A92  EF54  F00D         	goto	l3305
  2308   001A96                     u3320:
  2309   001A96                     
  2310                           ; BSR set to: 0
  2311   001A96  6D60               	negf	___flge@ff1& (0+255),b
  2312   001A98  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  2313   001A9A  B0D8               	btfsc	status,0,c
  2314   001A9C  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  2315   001A9E  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  2316   001AA0  B0D8               	btfsc	status,0,c
  2317   001AA2  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  2318   001AA4  0E80               	movlw	128
  2319   001AA6  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  2320   001AA8                     l3305:
  2321                           
  2322                           ; BSR set to: 0
  2323   001AA8  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  2324   001AAA  EF59  F00D         	goto	u3331
  2325   001AAE  EF5B  F00D         	goto	u3330
  2326   001AB2                     u3331:
  2327   001AB2  EF64  F00D         	goto	l626
  2328   001AB6                     u3330:
  2329   001AB6                     
  2330                           ; BSR set to: 0
  2331   001AB6  6D64               	negf	___flge@ff2& (0+255),b
  2332   001AB8  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  2333   001ABA  B0D8               	btfsc	status,0,c
  2334   001ABC  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  2335   001ABE  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  2336   001AC0  B0D8               	btfsc	status,0,c
  2337   001AC2  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  2338   001AC4  0E80               	movlw	128
  2339   001AC6  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  2340   001AC8                     l626:
  2341                           
  2342                           ; BSR set to: 0
  2343   001AC8  0E00               	movlw	0
  2344   001ACA  1B60               	xorwf	___flge@ff1& (0+255),f,b
  2345   001ACC  0E00               	movlw	0
  2346   001ACE  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  2347   001AD0  0E00               	movlw	0
  2348   001AD2  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  2349   001AD4  0E80               	movlw	128
  2350   001AD6  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  2351   001AD8  0E00               	movlw	0
  2352   001ADA  1B64               	xorwf	___flge@ff2& (0+255),f,b
  2353   001ADC  0E00               	movlw	0
  2354   001ADE  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  2355   001AE0  0E00               	movlw	0
  2356   001AE2  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  2357   001AE4  0E80               	movlw	128
  2358   001AE6  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  2359   001AE8  5164               	movf	___flge@ff2& (0+255),w,b
  2360   001AEA  5D60               	subwf	___flge@ff1& (0+255),w,b
  2361   001AEC  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  2362   001AEE  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  2363   001AF0  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  2364   001AF2  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  2365   001AF4  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  2366   001AF6  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  2367   001AF8  B0D8               	btfsc	status,0,c
  2368   001AFA  EF81  F00D         	goto	u3341
  2369   001AFE  EF83  F00D         	goto	u3340
  2370   001B02                     u3341:
  2371   001B02  EF86  F00D         	goto	l3311
  2372   001B06                     u3340:
  2373   001B06                     
  2374                           ; BSR set to: 0
  2375   001B06  90D8               	bcf	status,0,c
  2376   001B08  EF87  F00D         	goto	l631
  2377   001B0C                     l3311:
  2378                           
  2379                           ; BSR set to: 0
  2380   001B0C  80D8               	bsf	status,0,c
  2381   001B0E                     l631:
  2382                           
  2383                           ; BSR set to: 0
  2384   001B0E  0012               	return		;funcret
  2385   001B10                     __end_of___flge:
  2386                           	callstack 0
  2387                           
  2388 ;; *************** function _Timer0_init *****************
  2389 ;; Defined at:
  2390 ;;		line 17 in file "timers.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  init_test_mo    2   12[BANK0 ] unsigned short 
  2393 ;;  current_minu    4   14[BANK0 ] unsigned long 
  2394 ;;  current_hour    4   18[BANK0 ] unsigned long 
  2395 ;;  current_day     2   22[BANK0 ] unsigned int 
  2396 ;;  current_day_    2   24[BANK0 ] unsigned int 
  2397 ;;  current_mont    2   26[BANK0 ] unsigned int 
  2398 ;;  current_year    2   28[BANK0 ] unsigned int 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2410 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2413 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;Total ram usage:       22 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 5
  2417 ;; This function calls:
  2418 ;;		___lmul
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text10
  2425   001D02                     __ptext10:
  2426                           	callstack 0
  2427   001D02                     _Timer0_init:
  2428                           	callstack 25
  2429   001D02                     
  2430                           ;timers.c: 17: void Timer0_init(unsigned short init_test_mode,unsigned long current_minu
      +                          te,unsigned long current_hour, unsigned int current_day,unsigned int current_day_of_the_
      +                          week,unsigned int current_month, unsigned int current_year);timers.c: 18: {;timers.c: 19
      +                          :     test_mode = init_test_mode;
  2431   001D02  C06C  F046         	movff	Timer0_init@init_test_mode,_test_mode
  2432   001D06  C06D  F047         	movff	Timer0_init@init_test_mode+1,_test_mode+1
  2433   001D0A                     
  2434                           ;timers.c: 20:     time_counter = current_minute * 60 + current_hour * 3600;
  2435   001D0A  C072  F060         	movff	Timer0_init@current_hour,___lmul@multiplier
  2436   001D0E  C073  F061         	movff	Timer0_init@current_hour+1,___lmul@multiplier+1
  2437   001D12  C074  F062         	movff	Timer0_init@current_hour+2,___lmul@multiplier+2
  2438   001D16  C075  F063         	movff	Timer0_init@current_hour+3,___lmul@multiplier+3
  2439   001D1A  0E10               	movlw	16
  2440   001D1C  0100               	movlb	0	; () banked
  2441   001D1E  6F64               	movwf	___lmul@multiplicand& (0+255),b
  2442   001D20  0E0E               	movlw	14
  2443   001D22  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2444   001D24  0E00               	movlw	0
  2445   001D26  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2446   001D28  0E00               	movlw	0
  2447   001D2A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2448   001D2C  ECE2  F011         	call	___lmul	;wreg free
  2449   001D30  C060  F07E         	movff	?___lmul,??_Timer0_init
  2450   001D34  C061  F07F         	movff	?___lmul+1,??_Timer0_init+1
  2451   001D38  C062  F080         	movff	?___lmul+2,??_Timer0_init+2
  2452   001D3C  C063  F081         	movff	?___lmul+3,??_Timer0_init+3
  2453   001D40  C06E  F060         	movff	Timer0_init@current_minute,___lmul@multiplier
  2454   001D44  C06F  F061         	movff	Timer0_init@current_minute+1,___lmul@multiplier+1
  2455   001D48  C070  F062         	movff	Timer0_init@current_minute+2,___lmul@multiplier+2
  2456   001D4C  C071  F063         	movff	Timer0_init@current_minute+3,___lmul@multiplier+3
  2457   001D50  0E3C               	movlw	60
  2458   001D52  0100               	movlb	0	; () banked
  2459   001D54  6F64               	movwf	___lmul@multiplicand& (0+255),b
  2460   001D56  0E00               	movlw	0
  2461   001D58  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2462   001D5A  0E00               	movlw	0
  2463   001D5C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2464   001D5E  0E00               	movlw	0
  2465   001D60  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2466   001D62  ECE2  F011         	call	___lmul	;wreg free
  2467   001D66  0100               	movlb	0	; () banked
  2468   001D68  5160               	movf	?___lmul& (0+255),w,b
  2469   001D6A  257E               	addwf	??_Timer0_init& (0+255),w,b
  2470   001D6C  6FF0               	movwf	_time_counter& (0+255),b
  2471   001D6E  5161               	movf	(?___lmul+1)& (0+255),w,b
  2472   001D70  217F               	addwfc	(??_Timer0_init+1)& (0+255),w,b
  2473   001D72  6FF1               	movwf	(_time_counter+1)& (0+255),b
  2474   001D74  5162               	movf	(?___lmul+2)& (0+255),w,b
  2475   001D76  2180               	addwfc	(??_Timer0_init+2)& (0+255),w,b
  2476   001D78  6FF2               	movwf	(_time_counter+2)& (0+255),b
  2477   001D7A  5163               	movf	(?___lmul+3)& (0+255),w,b
  2478   001D7C  2181               	addwfc	(??_Timer0_init+3)& (0+255),w,b
  2479   001D7E  6FF3               	movwf	(_time_counter+3)& (0+255),b
  2480   001D80                     
  2481                           ; BSR set to: 0
  2482                           ;timers.c: 21:     day = current_day;
  2483   001D80  C076  F042         	movff	Timer0_init@current_day,_day
  2484   001D84  C077  F043         	movff	Timer0_init@current_day+1,_day+1
  2485   001D88                     
  2486                           ; BSR set to: 0
  2487                           ;timers.c: 22:     day_of_the_week = current_day_of_the_week;
  2488   001D88  C078  F044         	movff	Timer0_init@current_day_of_the_week,_day_of_the_week
  2489   001D8C  C079  F045         	movff	Timer0_init@current_day_of_the_week+1,_day_of_the_week+1
  2490   001D90                     
  2491                           ; BSR set to: 0
  2492                           ;timers.c: 23:     month = current_month;
  2493   001D90  C07A  F040         	movff	Timer0_init@current_month,_month
  2494   001D94  C07B  F041         	movff	Timer0_init@current_month+1,_month+1
  2495   001D98                     
  2496                           ; BSR set to: 0
  2497                           ;timers.c: 24:     year = current_year;
  2498   001D98  C07C  F03E         	movff	Timer0_init@current_year,_year
  2499   001D9C  C07D  F03F         	movff	Timer0_init@current_year+1,_year+1
  2500   001DA0                     
  2501                           ; BSR set to: 0
  2502                           ;timers.c: 26:     T0CON1bits.T0CS=0b010;
  2503   001DA0  50D6               	movf	214,w,c	;volatile
  2504   001DA2  0B1F               	andlw	-225
  2505   001DA4  0940               	iorlw	64
  2506   001DA6  6ED6               	movwf	214,c	;volatile
  2507   001DA8                     
  2508                           ; BSR set to: 0
  2509                           ;timers.c: 27:     T0CON1bits.T0ASYNC=1;
  2510   001DA8  88D6               	bsf	214,4,c	;volatile
  2511   001DAA                     
  2512                           ; BSR set to: 0
  2513                           ;timers.c: 29:     T0CON0bits.T016BIT=1;
  2514   001DAA  88D5               	bsf	213,4,c	;volatile
  2515   001DAC                     
  2516                           ; BSR set to: 0
  2517                           ;timers.c: 31:     if(test_mode == 0){
  2518   001DAC  5046               	movf	_test_mode^0,w,c
  2519   001DAE  1047               	iorwf	(_test_mode+1)^0,w,c
  2520   001DB0  A4D8               	btfss	status,2,c
  2521   001DB2  EFDD  F00E         	goto	u3241
  2522   001DB6  EFDF  F00E         	goto	u3240
  2523   001DBA                     u3241:
  2524   001DBA  EFE9  F00E         	goto	l3207
  2525   001DBE                     u3240:
  2526   001DBE                     
  2527                           ; BSR set to: 0
  2528                           ;timers.c: 33:         T0CON1bits.T0CKPS=8;
  2529   001DBE  50D6               	movf	214,w,c	;volatile
  2530   001DC0  0BF0               	andlw	-16
  2531   001DC2  0908               	iorlw	8
  2532   001DC4  6ED6               	movwf	214,c	;volatile
  2533                           
  2534                           ;timers.c: 35:         TMR0H = 0b1011;
  2535   001DC6  0E0B               	movlw	11
  2536   001DC8  6ED4               	movwf	212,c	;volatile
  2537                           
  2538                           ;timers.c: 36:         TMR0L = 0b11011011;
  2539   001DCA  0EDB               	movlw	219
  2540   001DCC  6ED3               	movwf	211,c	;volatile
  2541                           
  2542                           ;timers.c: 37:     }else{
  2543   001DCE  EFEF  F00E         	goto	l3209
  2544   001DD2                     l3207:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;timers.c: 38:         T0CON1bits.T0CKPS=0;
  2548   001DD2  0EF0               	movlw	-16
  2549   001DD4  16D6               	andwf	214,f,c	;volatile
  2550                           
  2551                           ;timers.c: 40:         TMR0H = 0;
  2552   001DD6  0E00               	movlw	0
  2553   001DD8  6ED4               	movwf	212,c	;volatile
  2554                           
  2555                           ;timers.c: 41:         TMR0L = 0;
  2556   001DDA  0E00               	movlw	0
  2557   001DDC  6ED3               	movwf	211,c	;volatile
  2558   001DDE                     l3209:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;timers.c: 43:     T0CON0bits.T0EN=1;
  2562   001DDE  8ED5               	bsf	213,7,c	;volatile
  2563   001DE0                     
  2564                           ; BSR set to: 0
  2565   001DE0  0012               	return		;funcret
  2566   001DE2                     __end_of_Timer0_init:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function ___lmul *****************
  2570 ;; Defined at:
  2571 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2574 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  product         4    8[BANK0 ] unsigned long 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  4    0[BANK0 ] unsigned long 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2586 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;Total ram usage:       12 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 4
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_Timer0_init
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text11
  2601   0023C4                     __ptext11:
  2602                           	callstack 0
  2603   0023C4                     ___lmul:
  2604                           	callstack 25
  2605   0023C4  0E00               	movlw	0
  2606   0023C6  0100               	movlb	0	; () banked
  2607   0023C8  6F68               	movwf	___lmul@product& (0+255),b
  2608   0023CA  0E00               	movlw	0
  2609   0023CC  6F69               	movwf	(___lmul@product+1)& (0+255),b
  2610   0023CE  0E00               	movlw	0
  2611   0023D0  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  2612   0023D2  0E00               	movlw	0
  2613   0023D4  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  2614   0023D6                     l3079:
  2615                           
  2616                           ; BSR set to: 0
  2617   0023D6  A160               	btfss	___lmul@multiplier& (0+255),0,b
  2618   0023D8  EFF0  F011         	goto	u3041
  2619   0023DC  EFF2  F011         	goto	u3040
  2620   0023E0                     u3041:
  2621   0023E0  EFFA  F011         	goto	l3083
  2622   0023E4                     u3040:
  2623   0023E4                     
  2624                           ; BSR set to: 0
  2625   0023E4  5164               	movf	___lmul@multiplicand& (0+255),w,b
  2626   0023E6  2768               	addwf	___lmul@product& (0+255),f,b
  2627   0023E8  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  2628   0023EA  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  2629   0023EC  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2630   0023EE  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  2631   0023F0  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2632   0023F2  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  2633   0023F4                     l3083:
  2634                           
  2635                           ; BSR set to: 0
  2636   0023F4  90D8               	bcf	status,0,c
  2637   0023F6  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  2638   0023F8  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2639   0023FA  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2640   0023FC  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2641   0023FE                     
  2642                           ; BSR set to: 0
  2643   0023FE  90D8               	bcf	status,0,c
  2644   002400  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2645   002402  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2646   002404  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2647   002406  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  2648   002408  5160               	movf	___lmul@multiplier& (0+255),w,b
  2649   00240A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2650   00240C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2651   00240E  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  2652   002410  A4D8               	btfss	status,2,c
  2653   002412  EF0D  F012         	goto	u3051
  2654   002416  EF0F  F012         	goto	u3050
  2655   00241A                     u3051:
  2656   00241A  EFEB  F011         	goto	l3079
  2657   00241E                     u3050:
  2658   00241E                     
  2659                           ; BSR set to: 0
  2660   00241E  C068  F060         	movff	___lmul@product,?___lmul
  2661   002422  C069  F061         	movff	___lmul@product+1,?___lmul+1
  2662   002426  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  2663   00242A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  2664   00242E                     
  2665                           ; BSR set to: 0
  2666   00242E  0012               	return		;funcret
  2667   002430                     __end_of___lmul:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function _LEDarray_init *****************
  2671 ;; Defined at:
  2672 ;;		line 8 in file "LEDarray.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		None
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;Total ram usage:        0 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 4
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text12
  2701   002770                     __ptext12:
  2702                           	callstack 0
  2703   002770                     _LEDarray_init:
  2704                           	callstack 26
  2705   002770                     
  2706                           ;LEDarray.c: 14:     TRISGbits.TRISG0 = 0;
  2707   002770  9087               	bcf	135,0,c	;volatile
  2708                           
  2709                           ;LEDarray.c: 15:     TRISGbits.TRISG1 = 0;
  2710   002772  9287               	bcf	135,1,c	;volatile
  2711                           
  2712                           ;LEDarray.c: 16:     TRISAbits.TRISA2 = 0;
  2713   002774  9481               	bcf	129,2,c	;volatile
  2714                           
  2715                           ;LEDarray.c: 17:     TRISFbits.TRISF6 = 0;
  2716   002776  9C86               	bcf	134,6,c	;volatile
  2717                           
  2718                           ;LEDarray.c: 18:     TRISAbits.TRISA4 = 0;
  2719   002778  9881               	bcf	129,4,c	;volatile
  2720                           
  2721                           ;LEDarray.c: 19:     TRISAbits.TRISA5 = 0;
  2722   00277A  9A81               	bcf	129,5,c	;volatile
  2723                           
  2724                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2725   00277C  9086               	bcf	134,0,c	;volatile
  2726                           
  2727                           ;LEDarray.c: 21:     TRISBbits.TRISB0 = 0;
  2728   00277E  9082               	bcf	130,0,c	;volatile
  2729                           
  2730                           ;LEDarray.c: 22:     TRISBbits.TRISB1 = 0;
  2731   002780  9282               	bcf	130,1,c	;volatile
  2732                           
  2733                           ;LEDarray.c: 24:     PORTGbits.RG0 = 1;
  2734   002782  808F               	bsf	143,0,c	;volatile
  2735                           
  2736                           ;LEDarray.c: 25:     PORTGbits.RG1 = 1;
  2737   002784  828F               	bsf	143,1,c	;volatile
  2738                           
  2739                           ;LEDarray.c: 26:     PORTAbits.RA2 = 1;
  2740   002786  8489               	bsf	137,2,c	;volatile
  2741                           
  2742                           ;LEDarray.c: 27:     PORTFbits.RF6 = 1;
  2743   002788  8C8E               	bsf	142,6,c	;volatile
  2744                           
  2745                           ;LEDarray.c: 28:     PORTAbits.RA4 = 1;
  2746   00278A  8889               	bsf	137,4,c	;volatile
  2747                           
  2748                           ;LEDarray.c: 29:     PORTAbits.RA5 = 1;
  2749   00278C  8A89               	bsf	137,5,c	;volatile
  2750                           
  2751                           ;LEDarray.c: 30:     PORTFbits.RF0 = 1;
  2752   00278E  808E               	bsf	142,0,c	;volatile
  2753                           
  2754                           ;LEDarray.c: 31:     PORTBbits.RB0 = 1;
  2755   002790  808A               	bsf	138,0,c	;volatile
  2756                           
  2757                           ;LEDarray.c: 32:     PORTBbits.RB1 = 1;
  2758   002792  828A               	bsf	138,1,c	;volatile
  2759                           
  2760                           ;LEDarray.c: 34:     LATGbits.LATG0 = 0;
  2761   002794  907F               	bcf	127,0,c	;volatile
  2762                           
  2763                           ;LEDarray.c: 35:     LATGbits.LATG1 = 0;
  2764   002796  927F               	bcf	127,1,c	;volatile
  2765                           
  2766                           ;LEDarray.c: 36:     LATAbits.LATA2 = 0;
  2767   002798  9479               	bcf	121,2,c	;volatile
  2768                           
  2769                           ;LEDarray.c: 37:     LATFbits.LATF6 = 0;
  2770   00279A  9C7E               	bcf	126,6,c	;volatile
  2771                           
  2772                           ;LEDarray.c: 38:     LATAbits.LATA4 = 0;
  2773   00279C  9879               	bcf	121,4,c	;volatile
  2774                           
  2775                           ;LEDarray.c: 39:     LATAbits.LATA5 = 0;
  2776   00279E  9A79               	bcf	121,5,c	;volatile
  2777                           
  2778                           ;LEDarray.c: 40:     LATFbits.LATF0 = 0;
  2779   0027A0  907E               	bcf	126,0,c	;volatile
  2780                           
  2781                           ;LEDarray.c: 41:     LATBbits.LATB0 = 0;
  2782   0027A2  907A               	bcf	122,0,c	;volatile
  2783                           
  2784                           ;LEDarray.c: 42:     LATBbits.LATB1 = 0;
  2785   0027A4  927A               	bcf	122,1,c	;volatile
  2786   0027A6  0012               	return		;funcret
  2787   0027A8                     __end_of_LEDarray_init:
  2788                           	callstack 0
  2789                           
  2790 ;; *************** function _LEDarray_disp_bin *****************
  2791 ;; Defined at:
  2792 ;;		line 49 in file "LEDarray.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  number          2   10[BANK0 ] unsigned int 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		None
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;Total ram usage:        2 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 4
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;;		_LEDarray_disp_dec
  2818 ;;		_LEDarray_disp_PPM
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text13
  2823   001EAE                     __ptext13:
  2824                           	callstack 0
  2825   001EAE                     _LEDarray_disp_bin:
  2826                           	callstack 26
  2827   001EAE                     
  2828                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 54:     if(number & 0b000000001){LATGbits.LATG0 = 1;}else{LATGbits.LATG0 = 0;}
  2829   001EAE  0100               	movlb	0	; () banked
  2830   001EB0  A16A               	btfss	LEDarray_disp_bin@number& (0+255),0,b
  2831   001EB2  EF5D  F00F         	goto	u3151
  2832   001EB6  EF5F  F00F         	goto	u3150
  2833   001EBA                     u3151:
  2834   001EBA  EF62  F00F         	goto	l30
  2835   001EBE                     u3150:
  2836   001EBE                     
  2837                           ; BSR set to: 0
  2838   001EBE  807F               	bsf	127,0,c	;volatile
  2839   001EC0  EF63  F00F         	goto	l31
  2840   001EC4                     l30:
  2841                           
  2842                           ; BSR set to: 0
  2843   001EC4  907F               	bcf	127,0,c	;volatile
  2844   001EC6                     l31:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;LEDarray.c: 55:     if(number & 0b000000010){LATGbits.LATG1 = 1;}else{LATGbits.LATG1 = 
      +                          0;}
  2848   001EC6  A36A               	btfss	LEDarray_disp_bin@number& (0+255),1,b
  2849   001EC8  EF68  F00F         	goto	u3161
  2850   001ECC  EF6A  F00F         	goto	u3160
  2851   001ED0                     u3161:
  2852   001ED0  EF6D  F00F         	goto	l32
  2853   001ED4                     u3160:
  2854   001ED4                     
  2855                           ; BSR set to: 0
  2856   001ED4  827F               	bsf	127,1,c	;volatile
  2857   001ED6  EF6E  F00F         	goto	l33
  2858   001EDA                     l32:
  2859                           
  2860                           ; BSR set to: 0
  2861   001EDA  927F               	bcf	127,1,c	;volatile
  2862   001EDC                     l33:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;LEDarray.c: 56:     if(number & 0b000000100){LATAbits.LATA2 = 1;}else{LATAbits.LATA2 = 
      +                          0;}
  2866   001EDC  A56A               	btfss	LEDarray_disp_bin@number& (0+255),2,b
  2867   001EDE  EF73  F00F         	goto	u3171
  2868   001EE2  EF75  F00F         	goto	u3170
  2869   001EE6                     u3171:
  2870   001EE6  EF78  F00F         	goto	l34
  2871   001EEA                     u3170:
  2872   001EEA                     
  2873                           ; BSR set to: 0
  2874   001EEA  8479               	bsf	121,2,c	;volatile
  2875   001EEC  EF79  F00F         	goto	l35
  2876   001EF0                     l34:
  2877                           
  2878                           ; BSR set to: 0
  2879   001EF0  9479               	bcf	121,2,c	;volatile
  2880   001EF2                     l35:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;LEDarray.c: 57:     if(number & 0b000001000){LATFbits.LATF6 = 1;}else{LATFbits.LATF6 = 
      +                          0;}
  2884   001EF2  A76A               	btfss	LEDarray_disp_bin@number& (0+255),3,b
  2885   001EF4  EF7E  F00F         	goto	u3181
  2886   001EF8  EF80  F00F         	goto	u3180
  2887   001EFC                     u3181:
  2888   001EFC  EF83  F00F         	goto	l36
  2889   001F00                     u3180:
  2890   001F00                     
  2891                           ; BSR set to: 0
  2892   001F00  8C7E               	bsf	126,6,c	;volatile
  2893   001F02  EF84  F00F         	goto	l37
  2894   001F06                     l36:
  2895                           
  2896                           ; BSR set to: 0
  2897   001F06  9C7E               	bcf	126,6,c	;volatile
  2898   001F08                     l37:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;LEDarray.c: 58:     if(number & 0b000010000){LATAbits.LATA4 = 1;}else{LATAbits.LATA4 = 
      +                          0;}
  2902   001F08  A96A               	btfss	LEDarray_disp_bin@number& (0+255),4,b
  2903   001F0A  EF89  F00F         	goto	u3191
  2904   001F0E  EF8B  F00F         	goto	u3190
  2905   001F12                     u3191:
  2906   001F12  EF8E  F00F         	goto	l38
  2907   001F16                     u3190:
  2908   001F16                     
  2909                           ; BSR set to: 0
  2910   001F16  8879               	bsf	121,4,c	;volatile
  2911   001F18  EF8F  F00F         	goto	l39
  2912   001F1C                     l38:
  2913                           
  2914                           ; BSR set to: 0
  2915   001F1C  9879               	bcf	121,4,c	;volatile
  2916   001F1E                     l39:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;LEDarray.c: 59:     if(number & 0b000100000){LATAbits.LATA5 = 1;}else{LATAbits.LATA5 = 
      +                          0;}
  2920   001F1E  AB6A               	btfss	LEDarray_disp_bin@number& (0+255),5,b
  2921   001F20  EF94  F00F         	goto	u3201
  2922   001F24  EF96  F00F         	goto	u3200
  2923   001F28                     u3201:
  2924   001F28  EF99  F00F         	goto	l40
  2925   001F2C                     u3200:
  2926   001F2C                     
  2927                           ; BSR set to: 0
  2928   001F2C  8A79               	bsf	121,5,c	;volatile
  2929   001F2E  EF9A  F00F         	goto	l41
  2930   001F32                     l40:
  2931                           
  2932                           ; BSR set to: 0
  2933   001F32  9A79               	bcf	121,5,c	;volatile
  2934   001F34                     l41:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;LEDarray.c: 60:     if(number & 0b001000000){LATFbits.LATF0 = 1;}else{LATFbits.LATF0 = 
      +                          0;}
  2938   001F34  AD6A               	btfss	LEDarray_disp_bin@number& (0+255),6,b
  2939   001F36  EF9F  F00F         	goto	u3211
  2940   001F3A  EFA1  F00F         	goto	u3210
  2941   001F3E                     u3211:
  2942   001F3E  EFA4  F00F         	goto	l42
  2943   001F42                     u3210:
  2944   001F42                     
  2945                           ; BSR set to: 0
  2946   001F42  807E               	bsf	126,0,c	;volatile
  2947   001F44  EFA5  F00F         	goto	l43
  2948   001F48                     l42:
  2949                           
  2950                           ; BSR set to: 0
  2951   001F48  907E               	bcf	126,0,c	;volatile
  2952   001F4A                     l43:
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;LEDarray.c: 61:     if(number & 0b010000000){LATBbits.LATB0 = 1;}else{LATBbits.LATB0 = 
      +                          0;}
  2956   001F4A  AF6A               	btfss	LEDarray_disp_bin@number& (0+255),7,b
  2957   001F4C  EFAA  F00F         	goto	u3221
  2958   001F50  EFAC  F00F         	goto	u3220
  2959   001F54                     u3221:
  2960   001F54  EFAF  F00F         	goto	l44
  2961   001F58                     u3220:
  2962   001F58                     
  2963                           ; BSR set to: 0
  2964   001F58  807A               	bsf	122,0,c	;volatile
  2965   001F5A  EFB0  F00F         	goto	l45
  2966   001F5E                     l44:
  2967                           
  2968                           ; BSR set to: 0
  2969   001F5E  907A               	bcf	122,0,c	;volatile
  2970   001F60                     l45:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;LEDarray.c: 62:     if(number & 0b100000000){LATBbits.LATB1 = 1;}else{LATBbits.LATB1 = 
      +                          0;}
  2974   001F60  A16B               	btfss	(LEDarray_disp_bin@number+1)& (0+255),0,b
  2975   001F62  EFB5  F00F         	goto	u3231
  2976   001F66  EFB7  F00F         	goto	u3230
  2977   001F6A                     u3231:
  2978   001F6A  EFBA  F00F         	goto	l46
  2979   001F6E                     u3230:
  2980   001F6E                     
  2981                           ; BSR set to: 0
  2982   001F6E  827A               	bsf	122,1,c	;volatile
  2983   001F70  EFBB  F00F         	goto	l48
  2984   001F74                     l46:
  2985                           
  2986                           ; BSR set to: 0
  2987   001F74  927A               	bcf	122,1,c	;volatile
  2988   001F76                     l48:
  2989                           
  2990                           ; BSR set to: 0
  2991   001F76  0012               	return		;funcret
  2992   001F78                     __end_of_LEDarray_disp_bin:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _LCD_sendstring *****************
  2996 ;; Defined at:
  2997 ;;		line 136 in file "LCD.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  strlst          2    4[BANK0 ] PTR PTR unsigned char 
  3000 ;;		 -> main@text(16), 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  i               2    8[BANK0 ] int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;Total ram usage:        6 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 8
  3019 ;; This function calls:
  3020 ;;		_LCD_sendbyte
  3021 ;;		_LCD_setline
  3022 ;; This function is called by:
  3023 ;;		_main
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text14
  3028   001F78                     __ptext14:
  3029                           	callstack 0
  3030   001F78                     _LCD_sendstring:
  3031                           	callstack 22
  3032   001F78                     
  3033                           ;LCD.c: 136: void LCD_sendstring(char *strlst[8]);LCD.c: 137: {;LCD.c: 138:         for 
      +                          (int i=0;i<8;i++){
  3034   001F78  0E00               	movlw	0
  3035   001F7A  0100               	movlb	0	; () banked
  3036   001F7C  6F69               	movwf	(LCD_sendstring@i+1)& (0+255),b
  3037   001F7E  0E00               	movlw	0
  3038   001F80  6F68               	movwf	LCD_sendstring@i& (0+255),b
  3039   001F82                     l3277:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;LCD.c: 139:         LCD_setline(i);
  3043   001F82  5168               	movf	LCD_sendstring@i& (0+255),w,b
  3044   001F84  EC88  F00D         	call	_LCD_setline
  3045                           
  3046                           ;LCD.c: 140:             while(*strlst[i] !=0){
  3047   001F88  EFED  F00F         	goto	l3281
  3048   001F8C                     l3279:
  3049                           
  3050                           ;LCD.c: 141:                 LCD_sendbyte(*strlst[i]++,1);
  3051   001F8C  0E01               	movlw	1
  3052   001F8E  0100               	movlb	0	; () banked
  3053   001F90  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3054   001F92  90D8               	bcf	status,0,c
  3055   001F94  3568               	rlcf	LCD_sendstring@i& (0+255),w,b
  3056   001F96  6ED9               	movwf	fsr2l,c
  3057   001F98  3569               	rlcf	(LCD_sendstring@i+1)& (0+255),w,b
  3058   001F9A  6EDA               	movwf	fsr2h,c
  3059   001F9C  5164               	movf	LCD_sendstring@strlst& (0+255),w,b
  3060   001F9E  26D9               	addwf	fsr2l,f,c
  3061   001FA0  5165               	movf	(LCD_sendstring@strlst+1)& (0+255),w,b
  3062   001FA2  22DA               	addwfc	fsr2h,f,c
  3063   001FA4  CFDF F066          	movff	indf2,??_LCD_sendstring
  3064   001FA8  0E01               	movlw	1
  3065   001FAA  26DE               	addwf	postinc2,f,c
  3066   001FAC  CFDF F067          	movff	indf2,??_LCD_sendstring+1
  3067   001FB0  0E00               	movlw	0
  3068   001FB2  22DD               	addwfc	postdec2,f,c
  3069   001FB4  C066  FFF6         	movff	??_LCD_sendstring,tblptrl
  3070   001FB8  C067  FFF7         	movff	??_LCD_sendstring+1,tblptrh
  3071   001FBC  0E00               	movlw	low (__smallconst shr (0+16))
  3072   001FBE  6EF8               	movwf	tblptru,c
  3073   001FC0  0E0D               	movlw	(high __ramtop+-1)
  3074   001FC2  64F7               	cpfsgt	tblptrh,c
  3075   001FC4  D003               	bra	u3267
  3076   001FC6  0008               	tblrd		*
  3077   001FC8  50F5               	movf	tablat,w,c
  3078   001FCA  D005               	bra	u3260
  3079   001FCC                     u3267:
  3080   001FCC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3081   001FD0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3082   001FD4  50E7               	movf	indf1,w,c
  3083   001FD6                     u3260:
  3084   001FD6  ECED  F013         	call	_LCD_sendbyte
  3085   001FDA                     l3281:
  3086                           
  3087                           ;LCD.c: 140:             while(*strlst[i] !=0){
  3088   001FDA  90D8               	bcf	status,0,c
  3089   001FDC  0100               	movlb	0	; () banked
  3090   001FDE  3568               	rlcf	LCD_sendstring@i& (0+255),w,b
  3091   001FE0  6ED9               	movwf	fsr2l,c
  3092   001FE2  3569               	rlcf	(LCD_sendstring@i+1)& (0+255),w,b
  3093   001FE4  6EDA               	movwf	fsr2h,c
  3094   001FE6  5164               	movf	LCD_sendstring@strlst& (0+255),w,b
  3095   001FE8  26D9               	addwf	fsr2l,f,c
  3096   001FEA  5165               	movf	(LCD_sendstring@strlst+1)& (0+255),w,b
  3097   001FEC  22DA               	addwfc	fsr2h,f,c
  3098   001FEE  CFDE FFF6          	movff	postinc2,tblptrl
  3099   001FF2  CFDE FFF7          	movff	postinc2,tblptrh
  3100   001FF6  0E0D               	movlw	(high __ramtop+-1)
  3101   001FF8  64F7               	cpfsgt	tblptrh,c
  3102   001FFA  D003               	bra	u3277
  3103   001FFC  0008               	tblrd		*
  3104   001FFE  50F5               	movf	tablat,w,c
  3105   002000  D005               	bra	u3270
  3106   002002                     u3277:
  3107   002002  CFF6 FFE1          	movff	tblptrl,fsr1l
  3108   002006  CFF7 FFE2          	movff	tblptrh,fsr1h
  3109   00200A  50E7               	movf	indf1,w,c
  3110   00200C                     u3270:
  3111   00200C  0900               	iorlw	0
  3112   00200E  A4D8               	btfss	status,2,c
  3113   002010  EF0C  F010         	goto	u3281
  3114   002014  EF0E  F010         	goto	u3280
  3115   002018                     u3281:
  3116   002018  EFC6  F00F         	goto	l3279
  3117   00201C                     u3280:
  3118   00201C                     
  3119                           ;LCD.c: 143:     }
  3120   00201C  0100               	movlb	0	; () banked
  3121   00201E  4B68               	infsnz	LCD_sendstring@i& (0+255),f,b
  3122   002020  2B69               	incf	(LCD_sendstring@i+1)& (0+255),f,b
  3123   002022                     
  3124                           ; BSR set to: 0
  3125   002022  BF69               	btfsc	(LCD_sendstring@i+1)& (0+255),7,b
  3126   002024  EF1D  F010         	goto	u3291
  3127   002028  5169               	movf	(LCD_sendstring@i+1)& (0+255),w,b
  3128   00202A  E109               	bnz	u3290
  3129   00202C  0E08               	movlw	8
  3130   00202E  5D68               	subwf	LCD_sendstring@i& (0+255),w,b
  3131   002030  A0D8               	btfss	status,0,c
  3132   002032  EF1D  F010         	goto	u3291
  3133   002036  EF1F  F010         	goto	u3290
  3134   00203A                     u3291:
  3135   00203A  EFC1  F00F         	goto	l3277
  3136   00203E                     u3290:
  3137   00203E                     
  3138                           ; BSR set to: 0
  3139   00203E  0012               	return		;funcret
  3140   002040                     __end_of_LCD_sendstring:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function _LCD_setline *****************
  3144 ;; Defined at:
  3145 ;;		line 112 in file "LCD.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  line            1    wreg     unsigned char 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  line            1    3[BANK0 ] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;Total ram usage:        1 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 7
  3166 ;; This function calls:
  3167 ;;		_LCD_sendbyte
  3168 ;; This function is called by:
  3169 ;;		_LCD_sendstring
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text15
  3174   001B10                     __ptext15:
  3175                           	callstack 0
  3176   001B10                     _LCD_setline:
  3177                           	callstack 22
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;incstack = 0
  3181                           ;LCD_setline@line stored from wreg
  3182   001B10  0100               	movlb	0	; () banked
  3183   001B12  6F63               	movwf	LCD_setline@line& (0+255),b
  3184   001B14                     
  3185                           ;LCD.c: 112: void LCD_setline (char line);LCD.c: 113: {;LCD.c: 114:     if(line == 0){
  3186   001B14  0100               	movlb	0	; () banked
  3187   001B16  5163               	movf	LCD_setline@line& (0+255),w,b
  3188   001B18  A4D8               	btfss	status,2,c
  3189   001B1A  EF91  F00D         	goto	u2961
  3190   001B1E  EF93  F00D         	goto	u2960
  3191   001B22                     u2961:
  3192   001B22  EF9A  F00D         	goto	l3037
  3193   001B26                     u2960:
  3194   001B26                     
  3195                           ; BSR set to: 0
  3196                           ;LCD.c: 115:         LCD_sendbyte(0x80,0);
  3197   001B26  0E00               	movlw	0
  3198   001B28  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3199   001B2A  0E80               	movlw	128
  3200   001B2C  ECED  F013         	call	_LCD_sendbyte
  3201                           
  3202                           ;LCD.c: 116:     }else if(line == 1){
  3203   001B30  EF09  F00E         	goto	l337
  3204   001B34                     l3037:
  3205                           
  3206                           ; BSR set to: 0
  3207   001B34  0563               	decf	LCD_setline@line& (0+255),w,b
  3208   001B36  A4D8               	btfss	status,2,c
  3209   001B38  EFA0  F00D         	goto	u2971
  3210   001B3C  EFA2  F00D         	goto	u2970
  3211   001B40                     u2971:
  3212   001B40  EFA9  F00D         	goto	l3041
  3213   001B44                     u2970:
  3214   001B44                     
  3215                           ; BSR set to: 0
  3216                           ;LCD.c: 117:         LCD_sendbyte(0x86,0);
  3217   001B44  0E00               	movlw	0
  3218   001B46  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3219   001B48  0E86               	movlw	134
  3220   001B4A  ECED  F013         	call	_LCD_sendbyte
  3221                           
  3222                           ;LCD.c: 118:     }else if(line == 2){
  3223   001B4E  EF09  F00E         	goto	l337
  3224   001B52                     l3041:
  3225                           
  3226                           ; BSR set to: 0
  3227   001B52  0E02               	movlw	2
  3228   001B54  1963               	xorwf	LCD_setline@line& (0+255),w,b
  3229   001B56  A4D8               	btfss	status,2,c
  3230   001B58  EFB0  F00D         	goto	u2981
  3231   001B5C  EFB2  F00D         	goto	u2980
  3232   001B60                     u2981:
  3233   001B60  EFB9  F00D         	goto	l3045
  3234   001B64                     u2980:
  3235   001B64                     
  3236                           ; BSR set to: 0
  3237                           ;LCD.c: 119:         LCD_sendbyte(0x89,0);
  3238   001B64  0E00               	movlw	0
  3239   001B66  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3240   001B68  0E89               	movlw	137
  3241   001B6A  ECED  F013         	call	_LCD_sendbyte
  3242                           
  3243                           ;LCD.c: 120:     }else if(line == 3){
  3244   001B6E  EF09  F00E         	goto	l337
  3245   001B72                     l3045:
  3246                           
  3247                           ; BSR set to: 0
  3248   001B72  0E03               	movlw	3
  3249   001B74  1963               	xorwf	LCD_setline@line& (0+255),w,b
  3250   001B76  A4D8               	btfss	status,2,c
  3251   001B78  EFC0  F00D         	goto	u2991
  3252   001B7C  EFC2  F00D         	goto	u2990
  3253   001B80                     u2991:
  3254   001B80  EFC9  F00D         	goto	l3049
  3255   001B84                     u2990:
  3256   001B84                     
  3257                           ; BSR set to: 0
  3258                           ;LCD.c: 121:         LCD_sendbyte(0x8C,0);
  3259   001B84  0E00               	movlw	0
  3260   001B86  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3261   001B88  0E8C               	movlw	140
  3262   001B8A  ECED  F013         	call	_LCD_sendbyte
  3263                           
  3264                           ;LCD.c: 122:     }else if(line == 4){
  3265   001B8E  EF09  F00E         	goto	l337
  3266   001B92                     l3049:
  3267                           
  3268                           ; BSR set to: 0
  3269   001B92  0E04               	movlw	4
  3270   001B94  1963               	xorwf	LCD_setline@line& (0+255),w,b
  3271   001B96  A4D8               	btfss	status,2,c
  3272   001B98  EFD0  F00D         	goto	u3001
  3273   001B9C  EFD2  F00D         	goto	u3000
  3274   001BA0                     u3001:
  3275   001BA0  EFD9  F00D         	goto	l3053
  3276   001BA4                     u3000:
  3277   001BA4                     
  3278                           ; BSR set to: 0
  3279                           ;LCD.c: 123:         LCD_sendbyte(0xC0,0);
  3280   001BA4  0E00               	movlw	0
  3281   001BA6  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3282   001BA8  0EC0               	movlw	192
  3283   001BAA  ECED  F013         	call	_LCD_sendbyte
  3284                           
  3285                           ;LCD.c: 124:     }else if(line == 5){
  3286   001BAE  EF09  F00E         	goto	l337
  3287   001BB2                     l3053:
  3288                           
  3289                           ; BSR set to: 0
  3290   001BB2  0E05               	movlw	5
  3291   001BB4  1963               	xorwf	LCD_setline@line& (0+255),w,b
  3292   001BB6  A4D8               	btfss	status,2,c
  3293   001BB8  EFE0  F00D         	goto	u3011
  3294   001BBC  EFE2  F00D         	goto	u3010
  3295   001BC0                     u3011:
  3296   001BC0  EFE9  F00D         	goto	l3057
  3297   001BC4                     u3010:
  3298   001BC4                     
  3299                           ; BSR set to: 0
  3300                           ;LCD.c: 125:         LCD_sendbyte(0xC3,0);
  3301   001BC4  0E00               	movlw	0
  3302   001BC6  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3303   001BC8  0EC3               	movlw	195
  3304   001BCA  ECED  F013         	call	_LCD_sendbyte
  3305                           
  3306                           ;LCD.c: 126:     }else if(line == 6){
  3307   001BCE  EF09  F00E         	goto	l337
  3308   001BD2                     l3057:
  3309                           
  3310                           ; BSR set to: 0
  3311   001BD2  0E06               	movlw	6
  3312   001BD4  1963               	xorwf	LCD_setline@line& (0+255),w,b
  3313   001BD6  A4D8               	btfss	status,2,c
  3314   001BD8  EFF0  F00D         	goto	u3021
  3315   001BDC  EFF2  F00D         	goto	u3020
  3316   001BE0                     u3021:
  3317   001BE0  EFF9  F00D         	goto	l3061
  3318   001BE4                     u3020:
  3319   001BE4                     
  3320                           ; BSR set to: 0
  3321                           ;LCD.c: 127:         LCD_sendbyte(0xC6,0);
  3322   001BE4  0E00               	movlw	0
  3323   001BE6  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3324   001BE8  0EC6               	movlw	198
  3325   001BEA  ECED  F013         	call	_LCD_sendbyte
  3326                           
  3327                           ;LCD.c: 128:     }else if(line == 7){
  3328   001BEE  EF09  F00E         	goto	l337
  3329   001BF2                     l3061:
  3330                           
  3331                           ; BSR set to: 0
  3332   001BF2  0E07               	movlw	7
  3333   001BF4  1963               	xorwf	LCD_setline@line& (0+255),w,b
  3334   001BF6  A4D8               	btfss	status,2,c
  3335   001BF8  EF00  F00E         	goto	u3031
  3336   001BFC  EF02  F00E         	goto	u3030
  3337   001C00                     u3031:
  3338   001C00  EF09  F00E         	goto	l331
  3339   001C04                     u3030:
  3340   001C04                     
  3341                           ; BSR set to: 0
  3342                           ;LCD.c: 129:         LCD_sendbyte(0xCD,0);
  3343   001C04  0E00               	movlw	0
  3344   001C06  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3345   001C08  0ECD               	movlw	205
  3346   001C0A  ECED  F013         	call	_LCD_sendbyte
  3347   001C0E  EF09  F00E         	goto	l337
  3348   001C12                     l331:
  3349   001C12                     l337:
  3350   001C12  0012               	return		;funcret
  3351   001C14                     __end_of_LCD_setline:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _LCD_clear *****************
  3355 ;; Defined at:
  3356 ;;		line 97 in file "LCD.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;Total ram usage:        1 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 7
  3377 ;; This function calls:
  3378 ;;		_LCD_sendbyte
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text16
  3385   002610                     __ptext16:
  3386                           	callstack 0
  3387   002610                     _LCD_clear:
  3388                           	callstack 23
  3389   002610                     
  3390                           ;LCD.c: 99:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3391   002610  0ED5               	movlw	213
  3392   002612                     u3547:
  3393   002612  2EE8               	decfsz	wreg,f,c
  3394   002614  D7FE               	bra	u3547
  3395   002616  F000               	nop	
  3396   002618                     
  3397                           ;LCD.c: 100:     LCD_sendbyte(0b00000001,0);
  3398   002618  0E00               	movlw	0
  3399   00261A  0100               	movlb	0	; () banked
  3400   00261C  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3401   00261E  0E01               	movlw	1
  3402   002620  ECED  F013         	call	_LCD_sendbyte
  3403   002624                     
  3404                           ;LCD.c: 102:     _delay((unsigned long)((2)*(64000000/4000.0)));
  3405   002624  0E2A               	movlw	42
  3406   002626  0100               	movlb	0	; () banked
  3407   002628  6F63               	movwf	??_LCD_clear& (0+255),b
  3408   00262A  0E8D               	movlw	141
  3409   00262C                     u3557:
  3410   00262C  2EE8               	decfsz	wreg,f,c
  3411   00262E  D7FE               	bra	u3557
  3412   002630  2F63               	decfsz	??_LCD_clear& (0+255),f,b
  3413   002632  D7FC               	bra	u3557
  3414   002634  D000               	nop2	
  3415                           
  3416                           ;LCD.c: 103:     LCD_sendbyte(0b00000110,0);
  3417   002636  0E00               	movlw	0
  3418   002638  0100               	movlb	0	; () banked
  3419   00263A  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3420   00263C  0E06               	movlw	6
  3421   00263E  ECED  F013         	call	_LCD_sendbyte
  3422                           
  3423                           ;LCD.c: 104:     LCD_sendbyte(0b00001110,0);
  3424   002642  0E00               	movlw	0
  3425   002644  0100               	movlb	0	; () banked
  3426   002646  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3427   002648  0E0E               	movlw	14
  3428   00264A  ECED  F013         	call	_LCD_sendbyte
  3429                           
  3430                           ;LCD.c: 105:     LCD_sendbyte(0b00001100,0);
  3431   00264E  0E00               	movlw	0
  3432   002650  0100               	movlb	0	; () banked
  3433   002652  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3434   002654  0E0C               	movlw	12
  3435   002656  ECED  F013         	call	_LCD_sendbyte
  3436   00265A  0012               	return		;funcret
  3437   00265C                     __end_of_LCD_clear:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _LCD_Init *****************
  3441 ;; Defined at:
  3442 ;;		line 52 in file "LCD.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 7
  3463 ;; This function calls:
  3464 ;;		_LCD_sendbyte
  3465 ;;		_LCD_sendnibble
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text17
  3472   0020FE                     __ptext17:
  3473                           	callstack 0
  3474   0020FE                     _LCD_Init:
  3475                           	callstack 23
  3476   0020FE                     
  3477                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  3478   0020FE  9483               	bcf	131,2,c	;volatile
  3479                           
  3480                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  3481   002100  9C83               	bcf	131,6,c	;volatile
  3482                           
  3483                           ;LCD.c: 59:     TRISBbits.TRISB3 = 0;
  3484   002102  9682               	bcf	130,3,c	;volatile
  3485                           
  3486                           ;LCD.c: 60:     TRISBbits.TRISB2 = 0;
  3487   002104  9482               	bcf	130,2,c	;volatile
  3488                           
  3489                           ;LCD.c: 61:     TRISEbits.TRISE3 = 0;
  3490   002106  9685               	bcf	133,3,c	;volatile
  3491                           
  3492                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  3493   002108  9285               	bcf	133,1,c	;volatile
  3494                           
  3495                           ;LCD.c: 65:     LATCbits.LATC6 = 0;
  3496   00210A  9C7B               	bcf	123,6,c	;volatile
  3497                           
  3498                           ;LCD.c: 66:     LATCbits.LATC2 = 0;
  3499   00210C  947B               	bcf	123,2,c	;volatile
  3500                           
  3501                           ;LCD.c: 67:     LATBbits.LATB3 = 0;
  3502   00210E  967A               	bcf	122,3,c	;volatile
  3503                           
  3504                           ;LCD.c: 68:     LATBbits.LATB2 = 0;
  3505   002110  947A               	bcf	122,2,c	;volatile
  3506                           
  3507                           ;LCD.c: 69:     LATEbits.LATE3 = 0;
  3508   002112  967D               	bcf	125,3,c	;volatile
  3509                           
  3510                           ;LCD.c: 70:     LATEbits.LATE1 = 0;
  3511   002114  927D               	bcf	125,1,c	;volatile
  3512   002116                     
  3513                           ;LCD.c: 72:     _delay((unsigned long)((60)*(64000000/4000.0)));
  3514   002116  0E05               	movlw	5
  3515   002118  0100               	movlb	0	; () banked
  3516   00211A  6F64               	movwf	(??_LCD_Init+1)& (0+255),b
  3517   00211C  0EDF               	movlw	223
  3518   00211E  6F63               	movwf	??_LCD_Init& (0+255),b
  3519   002120  0EBB               	movlw	187
  3520   002122                     u3567:
  3521   002122  2EE8               	decfsz	wreg,f,c
  3522   002124  D7FE               	bra	u3567
  3523   002126  2F63               	decfsz	??_LCD_Init& (0+255),f,b
  3524   002128  D7FC               	bra	u3567
  3525   00212A  2F64               	decfsz	(??_LCD_Init+1)& (0+255),f,b
  3526   00212C  D7FA               	bra	u3567
  3527   00212E  D000               	nop2	
  3528   002130                     
  3529                           ;LCD.c: 74:     LCD_sendnibble(0b0011);
  3530   002130  0E03               	movlw	3
  3531   002132  EC18  F012         	call	_LCD_sendnibble
  3532   002136                     
  3533                           ;LCD.c: 75:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3534   002136  0ED5               	movlw	213
  3535   002138                     u3577:
  3536   002138  2EE8               	decfsz	wreg,f,c
  3537   00213A  D7FE               	bra	u3577
  3538   00213C  F000               	nop	
  3539                           
  3540                           ;LCD.c: 77:     LCD_sendnibble(0b0010);
  3541   00213E  0E02               	movlw	2
  3542   002140  EC18  F012         	call	_LCD_sendnibble
  3543   002144                     
  3544                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3545   002144  0ED5               	movlw	213
  3546   002146                     u3587:
  3547   002146  2EE8               	decfsz	wreg,f,c
  3548   002148  D7FE               	bra	u3587
  3549   00214A  F000               	nop	
  3550   00214C                     
  3551                           ;LCD.c: 80:     LCD_sendbyte(0b00101000,0);
  3552   00214C  0E00               	movlw	0
  3553   00214E  0100               	movlb	0	; () banked
  3554   002150  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3555   002152  0E28               	movlw	40
  3556   002154  ECED  F013         	call	_LCD_sendbyte
  3557   002158                     
  3558                           ;LCD.c: 81:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3559   002158  0ED5               	movlw	213
  3560   00215A                     u3597:
  3561   00215A  2EE8               	decfsz	wreg,f,c
  3562   00215C  D7FE               	bra	u3597
  3563   00215E  F000               	nop	
  3564   002160                     
  3565                           ;LCD.c: 83:     LCD_sendbyte(0b00101000,0);
  3566   002160  0E00               	movlw	0
  3567   002162  0100               	movlb	0	; () banked
  3568   002164  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3569   002166  0E28               	movlw	40
  3570   002168  ECED  F013         	call	_LCD_sendbyte
  3571   00216C                     
  3572                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3573   00216C  0ED5               	movlw	213
  3574   00216E                     u3607:
  3575   00216E  2EE8               	decfsz	wreg,f,c
  3576   002170  D7FE               	bra	u3607
  3577   002172  F000               	nop	
  3578   002174                     
  3579                           ;LCD.c: 86:     LCD_sendbyte(0b00000001,0);
  3580   002174  0E00               	movlw	0
  3581   002176  0100               	movlb	0	; () banked
  3582   002178  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3583   00217A  0E01               	movlw	1
  3584   00217C  ECED  F013         	call	_LCD_sendbyte
  3585   002180                     
  3586                           ;LCD.c: 87:     _delay((unsigned long)((2)*(64000000/4000.0)));
  3587   002180  0E2A               	movlw	42
  3588   002182  0100               	movlb	0	; () banked
  3589   002184  6F63               	movwf	??_LCD_Init& (0+255),b
  3590   002186  0E8D               	movlw	141
  3591   002188                     u3617:
  3592   002188  2EE8               	decfsz	wreg,f,c
  3593   00218A  D7FE               	bra	u3617
  3594   00218C  2F63               	decfsz	??_LCD_Init& (0+255),f,b
  3595   00218E  D7FC               	bra	u3617
  3596   002190  D000               	nop2	
  3597   002192                     
  3598                           ;LCD.c: 89:     LCD_sendbyte(0b00000110,0);
  3599   002192  0E00               	movlw	0
  3600   002194  0100               	movlb	0	; () banked
  3601   002196  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3602   002198  0E06               	movlw	6
  3603   00219A  ECED  F013         	call	_LCD_sendbyte
  3604   00219E                     
  3605                           ;LCD.c: 91:     LCD_sendbyte(0b00001110,0);
  3606   00219E  0E00               	movlw	0
  3607   0021A0  0100               	movlb	0	; () banked
  3608   0021A2  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3609   0021A4  0E0E               	movlw	14
  3610   0021A6  ECED  F013         	call	_LCD_sendbyte
  3611   0021AA                     
  3612                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  3613   0021AA  0E00               	movlw	0
  3614   0021AC  0100               	movlb	0	; () banked
  3615   0021AE  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3616   0021B0  0E0C               	movlw	12
  3617   0021B2  ECED  F013         	call	_LCD_sendbyte
  3618   0021B6  0012               	return		;funcret
  3619   0021B8                     __end_of_LCD_Init:
  3620                           	callstack 0
  3621                           
  3622 ;; *************** function _LCD_sendbyte *****************
  3623 ;; Defined at:
  3624 ;;		line 39 in file "LCD.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  Byte            1    wreg     unsigned char 
  3627 ;;  type            1    1[BANK0 ] unsigned char 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  Byte            1    2[BANK0 ] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3639 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;Total ram usage:        2 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 6
  3646 ;; This function calls:
  3647 ;;		_LCD_sendnibble
  3648 ;; This function is called by:
  3649 ;;		_LCD_Init
  3650 ;;		_LCD_clear
  3651 ;;		_LCD_setline
  3652 ;;		_LCD_sendstring
  3653 ;;		_LCD_scroll
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text18
  3658   0027DA                     __ptext18:
  3659                           	callstack 0
  3660   0027DA                     _LCD_sendbyte:
  3661                           	callstack 22
  3662                           
  3663                           ;incstack = 0
  3664                           ;LCD_sendbyte@Byte stored from wreg
  3665   0027DA  0100               	movlb	0	; () banked
  3666   0027DC  6F62               	movwf	LCD_sendbyte@Byte& (0+255),b
  3667   0027DE                     
  3668                           ;LCD.c: 39: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 40: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  3669   0027DE  0100               	movlb	0	; () banked
  3670   0027E0  B161               	btfsc	LCD_sendbyte@type& (0+255),0,b
  3671   0027E2  D002               	bra	u2945
  3672   0027E4  9C7B               	bcf	123,6,c	;volatile
  3673   0027E6  D001               	bra	u2946
  3674   0027E8                     u2945:
  3675   0027E8  8C7B               	bsf	123,6,c	;volatile
  3676   0027EA                     u2946:
  3677   0027EA                     
  3678                           ;LCD.c: 43:     LCD_sendnibble(Byte >> 4);
  3679   0027EA  0100               	movlb	0	; () banked
  3680   0027EC  3962               	swapf	LCD_sendbyte@Byte& (0+255),w,b
  3681   0027EE  0B0F               	andlw	15
  3682   0027F0  EC18  F012         	call	_LCD_sendnibble
  3683   0027F4                     
  3684                           ;LCD.c: 44:     LCD_sendnibble(Byte);
  3685   0027F4  0100               	movlb	0	; () banked
  3686   0027F6  5162               	movf	LCD_sendbyte@Byte& (0+255),w,b
  3687   0027F8  EC18  F012         	call	_LCD_sendnibble
  3688   0027FC                     
  3689                           ;LCD.c: 46:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3690   0027FC  0EA0               	movlw	160
  3691   0027FE                     u3627:
  3692   0027FE  D000               	nop2	
  3693   002800  2EE8               	decfsz	wreg,f,c
  3694   002802  D7FD               	bra	u3627
  3695   002804  0012               	return		;funcret
  3696   002806                     __end_of_LCD_sendbyte:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _LCD_sendnibble *****************
  3700 ;; Defined at:
  3701 ;;		line 21 in file "LCD.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  number          1    wreg     unsigned char 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  number          1    0[BANK0 ] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;Total ram usage:        1 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 5
  3722 ;; This function calls:
  3723 ;;		_LCD_E_TOG
  3724 ;; This function is called by:
  3725 ;;		_LCD_sendbyte
  3726 ;;		_LCD_Init
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text19
  3731   002430                     __ptext19:
  3732                           	callstack 0
  3733   002430                     _LCD_sendnibble:
  3734                           	callstack 22
  3735                           
  3736                           ;incstack = 0
  3737                           ;LCD_sendnibble@number stored from wreg
  3738   002430  0100               	movlb	0	; () banked
  3739   002432  6F60               	movwf	LCD_sendnibble@number& (0+255),b
  3740   002434                     
  3741                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 25:     if(num
      +                          ber & 0b0001){ LATBbits.LATB3 = 1;}else{LATBbits.LATB3 = 0;}
  3742   002434  0100               	movlb	0	; () banked
  3743   002436  A160               	btfss	LCD_sendnibble@number& (0+255),0,b
  3744   002438  EF20  F012         	goto	u2871
  3745   00243C  EF22  F012         	goto	u2870
  3746   002440                     u2871:
  3747   002440  EF25  F012         	goto	l302
  3748   002444                     u2870:
  3749   002444                     
  3750                           ; BSR set to: 0
  3751   002444  867A               	bsf	122,3,c	;volatile
  3752   002446  EF26  F012         	goto	l2963
  3753   00244A                     l302:
  3754                           
  3755                           ; BSR set to: 0
  3756   00244A  967A               	bcf	122,3,c	;volatile
  3757   00244C                     l2963:
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;LCD.c: 26:     if(number & 0b0010){ LATBbits.LATB2 = 1;}else{LATBbits.LATB2 = 0;}
  3761   00244C  A360               	btfss	LCD_sendnibble@number& (0+255),1,b
  3762   00244E  EF2B  F012         	goto	u2881
  3763   002452  EF2D  F012         	goto	u2880
  3764   002456                     u2881:
  3765   002456  EF30  F012         	goto	l304
  3766   00245A                     u2880:
  3767   00245A                     
  3768                           ; BSR set to: 0
  3769   00245A  847A               	bsf	122,2,c	;volatile
  3770   00245C  EF31  F012         	goto	l2967
  3771   002460                     l304:
  3772                           
  3773                           ; BSR set to: 0
  3774   002460  947A               	bcf	122,2,c	;volatile
  3775   002462                     l2967:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;LCD.c: 27:     if(number & 0b0100){ LATEbits.LATE3 = 1;}else{LATEbits.LATE3 = 0;}
  3779   002462  A560               	btfss	LCD_sendnibble@number& (0+255),2,b
  3780   002464  EF36  F012         	goto	u2891
  3781   002468  EF38  F012         	goto	u2890
  3782   00246C                     u2891:
  3783   00246C  EF3B  F012         	goto	l306
  3784   002470                     u2890:
  3785   002470                     
  3786                           ; BSR set to: 0
  3787   002470  867D               	bsf	125,3,c	;volatile
  3788   002472  EF3C  F012         	goto	l2971
  3789   002476                     l306:
  3790                           
  3791                           ; BSR set to: 0
  3792   002476  967D               	bcf	125,3,c	;volatile
  3793   002478                     l2971:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;LCD.c: 28:     if(number & 0b1000){ LATEbits.LATE1 = 1;}else{LATEbits.LATE1 = 0;}
  3797   002478  A760               	btfss	LCD_sendnibble@number& (0+255),3,b
  3798   00247A  EF41  F012         	goto	u2901
  3799   00247E  EF43  F012         	goto	u2900
  3800   002482                     u2901:
  3801   002482  EF46  F012         	goto	l308
  3802   002486                     u2900:
  3803   002486                     
  3804                           ; BSR set to: 0
  3805   002486  827D               	bsf	125,1,c	;volatile
  3806   002488  EF47  F012         	goto	l2975
  3807   00248C                     l308:
  3808                           
  3809                           ; BSR set to: 0
  3810   00248C  927D               	bcf	125,1,c	;volatile
  3811   00248E                     l2975:
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;LCD.c: 30:     LCD_E_TOG();
  3815   00248E  EC70  F014         	call	_LCD_E_TOG	;wreg free
  3816   002492                     
  3817                           ;LCD.c: 31:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  3818   002492  0E1A               	movlw	26
  3819   002494                     u3637:
  3820   002494  2EE8               	decfsz	wreg,f,c
  3821   002496  D7FE               	bra	u3637
  3822   002498  D000               	nop2	
  3823   00249A  0012               	return		;funcret
  3824   00249C                     __end_of_LCD_sendnibble:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _LCD_E_TOG *****************
  3828 ;; Defined at:
  3829 ;;		line 8 in file "LCD.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 4
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_LCD_sendnibble
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text20
  3858   0028E0                     __ptext20:
  3859                           	callstack 0
  3860   0028E0                     _LCD_E_TOG:
  3861                           	callstack 22
  3862   0028E0                     
  3863                           ;LCD.c: 11:     LATCbits.LATC2 = 1;
  3864   0028E0  847B               	bsf	123,2,c	;volatile
  3865   0028E2                     
  3866                           ;LCD.c: 12:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  3867   0028E2  0E0A               	movlw	10
  3868   0028E4                     u3647:
  3869   0028E4  2EE8               	decfsz	wreg,f,c
  3870   0028E6  D7FE               	bra	u3647
  3871   0028E8  D000               	nop2	
  3872   0028EA                     
  3873                           ;LCD.c: 14:     LATCbits.LATC2 = 0;
  3874   0028EA  947B               	bcf	123,2,c	;volatile
  3875   0028EC  0012               	return		;funcret
  3876   0028EE                     __end_of_LCD_E_TOG:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function _Interrupts_init *****************
  3880 ;; Defined at:
  3881 ;;		line 9 in file "interrupts.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		None
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;Total ram usage:        0 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 4
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text21
  3910   0028D0                     __ptext21:
  3911                           	callstack 0
  3912   0028D0                     _Interrupts_init:
  3913                           	callstack 26
  3914   0028D0                     
  3915                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  3916   0028D0  010E               	movlb	14	; () banked
  3917   0028D2  812B               	bsf	43,0,b	;volatile
  3918                           
  3919                           ;interrupts.c: 14:     INTCONbits.IPEN = 1;
  3920   0028D4  8AF2               	bsf	242,5,c	;volatile
  3921                           
  3922                           ;interrupts.c: 15:     INTCONbits.GIEL=1;
  3923   0028D6  8CF2               	bsf	242,6,c	;volatile
  3924                           
  3925                           ;interrupts.c: 16:     IPR2bits.C1IP=1;
  3926   0028D8  8121               	bsf	33,0,b	;volatile
  3927                           
  3928                           ;interrupts.c: 17:     PIE0bits.TMR0IE=1;
  3929   0028DA  8B29               	bsf	41,5,b	;volatile
  3930                           
  3931                           ;interrupts.c: 18:     INTCONbits.GIEH=1;
  3932   0028DC  8EF2               	bsf	242,7,c	;volatile
  3933   0028DE                     
  3934                           ; BSR set to: 14
  3935   0028DE  0012               	return		;funcret
  3936   0028E0                     __end_of_Interrupts_init:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _Comp1_init *****************
  3940 ;; Defined at:
  3941 ;;		line 22 in file "comparator.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 5
  3962 ;; This function calls:
  3963 ;;		_DAC_init
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text22
  3970   002806                     __ptext22:
  3971                           	callstack 0
  3972   002806                     _Comp1_init:
  3973                           	callstack 25
  3974   002806                     
  3975                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  3976   002806  8E86               	bsf	134,7,c	;volatile
  3977   002808                     
  3978                           ;comparator.c: 25:     CM1NCHbits.NCH=0b011;
  3979   002808  010E               	movlb	14	; () banked
  3980   00280A  51D2               	movf	210,w,b	;volatile
  3981   00280C  0BF8               	andlw	-8
  3982   00280E  0903               	iorlw	3
  3983   002810  6FD2               	movwf	210,b	;volatile
  3984                           
  3985                           ;comparator.c: 26:     CM1PCHbits.PCH=0b101;
  3986   002812  51D3               	movf	211,w,b	;volatile
  3987   002814  0BF8               	andlw	-8
  3988   002816  0905               	iorlw	5
  3989   002818  6FD3               	movwf	211,b	;volatile
  3990   00281A                     
  3991                           ; BSR set to: 14
  3992                           ;comparator.c: 27:     CM1CON0bits.HYS=1;
  3993   00281A  83D0               	bsf	208,1,b	;volatile
  3994   00281C                     
  3995                           ; BSR set to: 14
  3996                           ;comparator.c: 28:     CM1CON0bits.POL=1;
  3997   00281C  89D0               	bsf	208,4,b	;volatile
  3998   00281E                     
  3999                           ; BSR set to: 14
  4000                           ;comparator.c: 29:     CM1CON1bits.INTP=1;
  4001   00281E  83D1               	bsf	209,1,b	;volatile
  4002   002820                     
  4003                           ; BSR set to: 14
  4004                           ;comparator.c: 30:     DAC_init();
  4005   002820  EC5E  F014         	call	_DAC_init	;wreg free
  4006   002824                     
  4007                           ;comparator.c: 31:     CM1CON0bits.EN=1;
  4008   002824  010E               	movlb	14	; () banked
  4009   002826  8FD0               	bsf	208,7,b	;volatile
  4010   002828                     
  4011                           ; BSR set to: 14
  4012   002828  0012               	return		;funcret
  4013   00282A                     __end_of_Comp1_init:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _DAC_init *****************
  4017 ;; Defined at:
  4018 ;;		line 7 in file "comparator.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 4
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_Comp1_init
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text23
  4047   0028BC                     __ptext23:
  4048                           	callstack 0
  4049   0028BC                     _DAC_init:
  4050                           	callstack 25
  4051   0028BC                     
  4052                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  4053   0028BC  0EF3               	movlw	-13
  4054   0028BE  010E               	movlb	14	; () banked
  4055   0028C0  17C6               	andwf	198,f,b	;volatile
  4056   0028C2                     
  4057                           ; BSR set to: 14
  4058                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  4059   0028C2  91C6               	bcf	198,0,b	;volatile
  4060                           
  4061                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  4062   0028C4  51C7               	movf	199,w,b	;volatile
  4063   0028C6  0BE0               	andlw	-32
  4064   0028C8  0914               	iorlw	20
  4065   0028CA  6FC7               	movwf	199,b	;volatile
  4066   0028CC                     
  4067                           ; BSR set to: 14
  4068                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  4069   0028CC  8FC6               	bsf	198,7,b	;volatile
  4070   0028CE                     
  4071                           ; BSR set to: 14
  4072   0028CE  0012               	return		;funcret
  4073   0028D0                     __end_of_DAC_init:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _ADC_init *****************
  4077 ;; Defined at:
  4078 ;;		line 9 in file "ADC.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 4
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text24
  4107   00288A                     __ptext24:
  4108                           	callstack 0
  4109   00288A                     _ADC_init:
  4110                           	callstack 26
  4111   00288A                     
  4112                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  4113   00288A  8681               	bsf	129,3,c	;volatile
  4114                           
  4115                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  4116   00288C  010E               	movlb	14	; () banked
  4117   00288E  8792               	bsf	146,3,b	;volatile
  4118                           
  4119                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  4120   002890  010F               	movlb	15	; () banked
  4121   002892  9958               	bcf	88,4,b	;volatile
  4122   002894                     
  4123                           ; BSR set to: 15
  4124                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  4125   002894  0EFC               	movlw	-4
  4126   002896  1758               	andwf	88,f,b	;volatile
  4127                           
  4128                           ;ADC.c: 17:     ADPCH=0b11;
  4129   002898  0E03               	movlw	3
  4130   00289A  6F5F               	movwf	95,b	;volatile
  4131   00289C                     
  4132                           ; BSR set to: 15
  4133                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  4134   00289C  9460               	bcf	96,2,c	;volatile
  4135   00289E                     
  4136                           ; BSR set to: 15
  4137                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  4138   00289E  8860               	bsf	96,4,c	;volatile
  4139   0028A0                     
  4140                           ; BSR set to: 15
  4141                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  4142   0028A0  8E60               	bsf	96,7,c	;volatile
  4143   0028A2                     
  4144                           ; BSR set to: 15
  4145   0028A2  0012               	return		;funcret
  4146   0028A4                     __end_of_ADC_init:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function _ADC_getval *****************
  4150 ;; Defined at:
  4151 ;;		line 23 in file "ADC.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  tmpval          2    2[BANK0 ] unsigned int 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  2    0[BANK0 ] unsigned int 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;Total ram usage:        4 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 4
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_main
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text25
  4180   0027A8                     __ptext25:
  4181                           	callstack 0
  4182   0027A8                     _ADC_getval:
  4183                           	callstack 26
  4184   0027A8                     
  4185                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  4186   0027A8  8060               	bsf	96,0,c	;volatile
  4187   0027AA                     l277:
  4188   0027AA  B060               	btfsc	96,0,c	;volatile
  4189   0027AC  EFDA  F013         	goto	u3251
  4190   0027B0  EFDC  F013         	goto	u3250
  4191   0027B4                     u3251:
  4192   0027B4  EFD5  F013         	goto	l277
  4193   0027B8                     u3250:
  4194   0027B8                     
  4195                           ;ADC.c: 31:     tmpval = ADRESH;
  4196   0027B8  CF64 F062          	movff	3940,ADC_getval@tmpval	;volatile
  4197   0027BC  0100               	movlb	0	; () banked
  4198   0027BE  6B63               	clrf	(ADC_getval@tmpval+1)& (0+255),b
  4199   0027C0                     
  4200                           ; BSR set to: 0
  4201                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  4202   0027C0  5162               	movf	ADC_getval@tmpval& (0+255),w,b
  4203   0027C2  08FF               	sublw	255
  4204   0027C4  6F62               	movwf	ADC_getval@tmpval& (0+255),b
  4205   0027C6  5163               	movf	(ADC_getval@tmpval+1)& (0+255),w,b
  4206   0027C8  A0D8               	btfss	status,0,c
  4207   0027CA  2AE8               	incf	wreg,f,c
  4208   0027CC  0800               	sublw	0
  4209   0027CE  6F63               	movwf	(ADC_getval@tmpval+1)& (0+255),b
  4210   0027D0                     
  4211                           ; BSR set to: 0
  4212                           ;ADC.c: 37:     return tmpval;
  4213   0027D0  C062  F060         	movff	ADC_getval@tmpval,?_ADC_getval
  4214   0027D4  C063  F061         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  4215   0027D8                     
  4216                           ; BSR set to: 0
  4217   0027D8  0012               	return		;funcret
  4218   0027DA                     __end_of_ADC_getval:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function _ADC2String *****************
  4222 ;; Defined at:
  4223 ;;		line 172 in file "LCD.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  buf             2  107[BANK0 ] PTR unsigned char 
  4226 ;;		 -> RAM(3561), 
  4227 ;;  ADC_val         2  109[BANK0 ] unsigned int 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4239 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;Total ram usage:        4 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 12
  4246 ;; This function calls:
  4247 ;;		_sprintf
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text26
  4254   00286A                     __ptext26:
  4255                           	callstack 0
  4256   00286A                     _ADC2String:
  4257                           	callstack 18
  4258   00286A                     
  4259                           ;LCD.c: 181:     sprintf(buf, "%d",ADC_val);
  4260   00286A  C0CB  F0B8         	movff	ADC2String@buf,sprintf@s
  4261   00286E  C0CC  F0B9         	movff	ADC2String@buf+1,sprintf@s+1
  4262   002872  0E0E               	movlw	low STR_6
  4263   002874  0100               	movlb	0	; () banked
  4264   002876  6FBA               	movwf	sprintf@fmt& (0+255),b
  4265   002878  0E0E               	movlw	high STR_6
  4266   00287A  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  4267   00287C  C0CD  F0BC         	movff	ADC2String@ADC_val,?_sprintf+4
  4268   002880  C0CE  F0BD         	movff	ADC2String@ADC_val+1,?_sprintf+5
  4269   002884  ECB6  F012         	call	_sprintf	;wreg free
  4270   002888  0012               	return		;funcret
  4271   00288A                     __end_of_ADC2String:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function _sprintf *****************
  4275 ;; Defined at:
  4276 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  s               2   88[BANK0 ] PTR unsigned char 
  4279 ;;		 -> RAM(3561), 
  4280 ;;  fmt             2   90[BANK0 ] PTR const unsigned char 
  4281 ;;		 -> STR_6(3), 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  f              11   96[BANK0 ] struct _IO_FILE
  4284 ;;  ap              2   94[BANK0 ] PTR void [1]
  4285 ;;		 -> ?_sprintf(2), 
  4286 ;;  ret             2    0        int 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2   88[BANK0 ] int 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4299 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;Total ram usage:       19 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 11
  4303 ;; This function calls:
  4304 ;;		_vfprintf
  4305 ;; This function is called by:
  4306 ;;		_ADC2String
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text27
  4311   00256C                     __ptext27:
  4312                           	callstack 0
  4313   00256C                     _sprintf:
  4314                           	callstack 18
  4315   00256C  0EBC               	movlw	low (?_sprintf+4)
  4316   00256E  0100               	movlb	0	; () banked
  4317   002570  6FBE               	movwf	sprintf@ap& (0+255),b
  4318   002572  0E00               	movlw	high (?_sprintf+4)
  4319   002574  6FBF               	movwf	(sprintf@ap+1)& (0+255),b
  4320   002576  C0B8  F0C0         	movff	sprintf@s,sprintf@f
  4321   00257A  C0B9  F0C1         	movff	sprintf@s+1,sprintf@f+1
  4322   00257E                     
  4323                           ; BSR set to: 0
  4324   00257E  0E00               	movlw	0
  4325   002580  6FC4               	movwf	(sprintf@f+4)& (0+255),b
  4326   002582  0E00               	movlw	0
  4327   002584  6FC3               	movwf	(sprintf@f+3)& (0+255),b
  4328   002586                     
  4329                           ; BSR set to: 0
  4330   002586  0E00               	movlw	0
  4331   002588  6FCA               	movwf	(sprintf@f+10)& (0+255),b
  4332   00258A  0E00               	movlw	0
  4333   00258C  6FC9               	movwf	(sprintf@f+9)& (0+255),b
  4334   00258E                     
  4335                           ; BSR set to: 0
  4336   00258E  0EC0               	movlw	low sprintf@f
  4337   002590  6FB0               	movwf	vfprintf@fp& (0+255),b
  4338   002592  0E00               	movlw	high sprintf@f
  4339   002594  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  4340   002596  C0BA  F0B2         	movff	sprintf@fmt,vfprintf@fmt
  4341   00259A  C0BB  F0B3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4342   00259E  0EBE               	movlw	low sprintf@ap
  4343   0025A0  6FB4               	movwf	vfprintf@ap& (0+255),b
  4344   0025A2  0E00               	movlw	high sprintf@ap
  4345   0025A4  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  4346   0025A6  ECDF  F012         	call	_vfprintf	;wreg free
  4347   0025AA  0100               	movlb	0	; () banked
  4348   0025AC  51C3               	movf	(sprintf@f+3)& (0+255),w,b
  4349   0025AE  25B8               	addwf	sprintf@s& (0+255),w,b
  4350   0025B0  6ED9               	movwf	fsr2l,c
  4351   0025B2  51C4               	movf	(sprintf@f+4)& (0+255),w,b
  4352   0025B4  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  4353   0025B6  6EDA               	movwf	fsr2h,c
  4354   0025B8  0E00               	movlw	0
  4355   0025BA  6EDF               	movwf	indf2,c
  4356   0025BC                     
  4357                           ; BSR set to: 0
  4358   0025BC  0012               	return		;funcret
  4359   0025BE                     __end_of_sprintf:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _vfprintf *****************
  4363 ;; Defined at:
  4364 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  4367 ;;		 -> sprintf@f(11), 
  4368 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  4369 ;;		 -> STR_6(3), 
  4370 ;;  ap              2   84[BANK0 ] PTR PTR void 
  4371 ;;		 -> sprintf@ap(2), 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  cfmt            2   86[BANK0 ] PTR unsigned char 
  4374 ;;		 -> STR_6(3), 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  2   80[BANK0 ] int 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4384 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;Total ram usage:        8 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 10
  4391 ;; This function calls:
  4392 ;;		_vfpfcnvrt
  4393 ;; This function is called by:
  4394 ;;		_sprintf
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text28
  4399   0025BE                     __ptext28:
  4400                           	callstack 0
  4401   0025BE                     _vfprintf:
  4402                           	callstack 18
  4403   0025BE                     
  4404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4405   0025BE  C0B2  F0B6         	movff	vfprintf@fmt,vfprintf@cfmt
  4406   0025C2  C0B3  F0B7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4407                           
  4408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4409   0025C6  EFF4  F012         	goto	l3021
  4410   0025CA                     l3019:
  4411                           
  4412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4413   0025CA  C0B0  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  4414   0025CE  C0B1  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4415   0025D2  0EB6               	movlw	low vfprintf@cfmt
  4416   0025D4  0100               	movlb	0	; () banked
  4417   0025D6  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  4418   0025D8  0E00               	movlw	high vfprintf@cfmt
  4419   0025DA  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4420   0025DC  C0B4  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  4421   0025E0  C0B5  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4422   0025E4  ECD9  F00B         	call	_vfpfcnvrt	;wreg free
  4423   0025E8                     l3021:
  4424                           
  4425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4426   0025E8  C0B6  FFF6         	movff	vfprintf@cfmt,tblptrl
  4427   0025EC  C0B7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4428   0025F0                     	if	0	;tblptru may be non-zero
  4429   0025F0                     	endif
  4430   0025F0                     	if	0	;tblptru may be non-zero
  4431   0025F0                     	endif
  4432   0025F0  0008               	tblrd		*
  4433   0025F2  50F5               	movf	tablat,w,c
  4434   0025F4  0900               	iorlw	0
  4435   0025F6  A4D8               	btfss	status,2,c
  4436   0025F8  EF00  F013         	goto	u2951
  4437   0025FC  EF02  F013         	goto	u2950
  4438   002600                     u2951:
  4439   002600  EFE5  F012         	goto	l3019
  4440   002604                     u2950:
  4441   002604                     
  4442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4443   002604  0E00               	movlw	0
  4444   002606  0100               	movlb	0	; () banked
  4445   002608  6FB1               	movwf	(?_vfprintf+1)& (0+255),b
  4446   00260A  0E00               	movlw	0
  4447   00260C  6FB0               	movwf	?_vfprintf& (0+255),b
  4448   00260E                     
  4449                           ; BSR set to: 0
  4450   00260E  0012               	return		;funcret
  4451   002610                     __end_of_vfprintf:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function _vfpfcnvrt *****************
  4455 ;; Defined at:
  4456 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  4459 ;;		 -> sprintf@f(11), 
  4460 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  4461 ;;		 -> vfprintf@cfmt(2), 
  4462 ;;  ap              2   66[BANK0 ] PTR PTR void 
  4463 ;;		 -> sprintf@ap(2), 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  convarg         8   70[BANK0 ] struct .
  4466 ;;  cp              2   78[BANK0 ] PTR unsigned char 
  4467 ;;		 -> STR_6(3), 
  4468 ;;  i               2    0        int 
  4469 ;;  done            2    0        int 
  4470 ;;  c               1    0        unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4480 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4484 ;;Total ram usage:       18 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 9
  4487 ;; This function calls:
  4488 ;;		_dtoa
  4489 ;;		_fputc
  4490 ;; This function is called by:
  4491 ;;		_vfprintf
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text29
  4496   0017B2                     __ptext29:
  4497                           	callstack 0
  4498   0017B2                     _vfpfcnvrt:
  4499                           	callstack 18
  4500   0017B2                     
  4501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4502   0017B2  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4503   0017B6  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4504   0017BA  CFDE FFF6          	movff	postinc2,tblptrl
  4505   0017BE  CFDD FFF7          	movff	postdec2,tblptrh
  4506   0017C2                     	if	0	;tblptru may be non-zero
  4507   0017C2                     	endif
  4508   0017C2                     	if	0	;tblptru may be non-zero
  4509   0017C2                     	endif
  4510   0017C2  0008               	tblrd		*
  4511   0017C4  50F5               	movf	tablat,w,c
  4512   0017C6  0A25               	xorlw	37
  4513   0017C8  A4D8               	btfss	status,2,c
  4514   0017CA  EFE9  F00B         	goto	u2911
  4515   0017CE  EFEB  F00B         	goto	u2910
  4516   0017D2                     u2911:
  4517   0017D2  EF6B  F00C         	goto	l3003
  4518   0017D6                     u2910:
  4519   0017D6                     
  4520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4521   0017D6  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4522   0017DA  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4523   0017DE  2ADE               	incf	postinc2,f,c
  4524   0017E0  0E00               	movlw	0
  4525   0017E2  22DD               	addwfc	postdec2,f,c
  4526   0017E4                     
  4527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4528   0017E4  0E00               	movlw	0
  4529   0017E6  0100               	movlb	0	; () banked
  4530   0017E8  6FEC               	movwf	(_width+1)& (0+255),b
  4531   0017EA  0E00               	movlw	0
  4532   0017EC  6FEB               	movwf	_width& (0+255),b
  4533   0017EE  C0EB  F0EF         	movff	_width,_flags
  4534   0017F2                     
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4537   0017F2  69ED               	setf	_prec& (0+255),b
  4538   0017F4  69EE               	setf	(_prec+1)& (0+255),b
  4539   0017F6                     
  4540                           ; BSR set to: 0
  4541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  4542   0017F6  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4543   0017FA  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4544   0017FE  CFDE F0AE          	movff	postinc2,vfpfcnvrt@cp
  4545   001802  CFDD F0AF          	movff	postdec2,vfpfcnvrt@cp+1
  4546   001806                     
  4547                           ; BSR set to: 0
  4548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4549   001806  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4550   00180A  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4551   00180E                     	if	0	;tblptru may be non-zero
  4552   00180E                     	endif
  4553   00180E                     	if	0	;tblptru may be non-zero
  4554   00180E                     	endif
  4555   00180E  0008               	tblrd		*
  4556   001810  50F5               	movf	tablat,w,c
  4557   001812  0A64               	xorlw	100
  4558   001814  B4D8               	btfsc	status,2,c
  4559   001816  EF0F  F00C         	goto	u2921
  4560   00181A  EF11  F00C         	goto	u2920
  4561   00181E                     u2921:
  4562   00181E  EF1F  F00C         	goto	l2993
  4563   001822                     u2920:
  4564   001822                     
  4565                           ; BSR set to: 0
  4566   001822  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4567   001826  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4568   00182A                     	if	0	;tblptru may be non-zero
  4569   00182A                     	endif
  4570   00182A                     	if	0	;tblptru may be non-zero
  4571   00182A                     	endif
  4572   00182A  0008               	tblrd		*
  4573   00182C  50F5               	movf	tablat,w,c
  4574   00182E  0A69               	xorlw	105
  4575   001830  A4D8               	btfss	status,2,c
  4576   001832  EF1D  F00C         	goto	u2931
  4577   001836  EF1F  F00C         	goto	u2930
  4578   00183A                     u2931:
  4579   00183A  EF62  F00C         	goto	l2999
  4580   00183E                     u2930:
  4581   00183E                     l2993:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4585   00183E  C0A2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4586   001842  C0A3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4587   001846  CFDF F0A4          	movff	indf2,??_vfpfcnvrt
  4588   00184A  0E02               	movlw	2
  4589   00184C  26DE               	addwf	postinc2,f,c
  4590   00184E  CFDF F0A5          	movff	indf2,??_vfpfcnvrt+1
  4591   001852  0E00               	movlw	0
  4592   001854  22DD               	addwfc	postdec2,f,c
  4593   001856  C0A4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4594   00185A  C0A5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4595   00185E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg
  4596   001862  CFDD F0A7          	movff	postdec2,vfpfcnvrt@convarg+1
  4597   001866  0E00               	movlw	0
  4598   001868  BFA7               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  4599   00186A  0EFF               	movlw	-1
  4600   00186C  6FA8               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  4601   00186E  6FA9               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  4602   001870  6FAA               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  4603   001872  6FAB               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  4604   001874  6FAC               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  4605   001876  6FAD               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  4606                           
  4607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  4608   001878  0E01               	movlw	1
  4609   00187A  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4610   00187C  6FA4               	movwf	??_vfpfcnvrt& (0+255),b
  4611   00187E  0E00               	movlw	0
  4612   001880  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4613   001882  6FA5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4614   001884  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4615   001888  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4616   00188C  C0A4  FFDE         	movff	??_vfpfcnvrt,postinc2
  4617   001890  C0A5  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4618   001894                     
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  4621   001894  C09E  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  4622   001898  C09F  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4623   00189C  C0A6  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  4624   0018A0  C0A7  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  4625   0018A4  C0A8  F07F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  4626   0018A8  C0A9  F080         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  4627   0018AC  C0AA  F081         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  4628   0018B0  C0AB  F082         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  4629   0018B4  C0AC  F083         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  4630   0018B8  C0AD  F084         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  4631   0018BC  EC0C  F007         	call	_dtoa	;wreg free
  4632   0018C0  EF80  F00C         	goto	l1091
  4633   0018C4                     l2999:
  4634                           
  4635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4636   0018C4  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4637   0018C8  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4638   0018CC  2ADE               	incf	postinc2,f,c
  4639   0018CE  0E00               	movlw	0
  4640   0018D0  22DD               	addwfc	postdec2,f,c
  4641   0018D2  EF80  F00C         	goto	l1091
  4642   0018D6                     l3003:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4645   0018D6  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4646   0018DA  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4647   0018DE  CFDE FFF6          	movff	postinc2,tblptrl
  4648   0018E2  CFDD FFF7          	movff	postdec2,tblptrh
  4649   0018E6                     	if	0	;tblptru may be non-zero
  4650   0018E6                     	endif
  4651   0018E6                     	if	0	;tblptru may be non-zero
  4652   0018E6                     	endif
  4653   0018E6  0008               	tblrd		*
  4654   0018E8  50F5               	movf	tablat,w,c
  4655   0018EA  0100               	movlb	0	; () banked
  4656   0018EC  6F60               	movwf	fputc@c& (0+255),b
  4657   0018EE  6B61               	clrf	(fputc@c+1)& (0+255),b
  4658   0018F0  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  4659   0018F4  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4660   0018F8  ECF1  F00E         	call	_fputc	;wreg free
  4661   0018FC  EF62  F00C         	goto	l2999
  4662   001900                     l1091:
  4663   001900  0012               	return		;funcret
  4664   001902                     __end_of_vfpfcnvrt:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _dtoa *****************
  4668 ;; Defined at:
  4669 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  4672 ;;		 -> sprintf@f(11), 
  4673 ;;  d               8   29[BANK0 ] long long 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  n               8   51[BANK0 ] long long 
  4676 ;;  i               2   60[BANK0 ] int 
  4677 ;;  w               2   49[BANK0 ] int 
  4678 ;;  p               2   47[BANK0 ] int 
  4679 ;;  s               1   59[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4689 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;Total ram usage:       35 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 8
  4696 ;; This function calls:
  4697 ;;		___aodiv
  4698 ;;		___aomod
  4699 ;;		_abs
  4700 ;;		_pad
  4701 ;; This function is called by:
  4702 ;;		_vfpfcnvrt
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text30
  4707   000E18                     __ptext30:
  4708                           	callstack 0
  4709   000E18                     _dtoa:
  4710                           	callstack 18
  4711   000E18                     
  4712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4713   000E18  C07D  F093         	movff	dtoa@d,dtoa@n
  4714   000E1C  C07E  F094         	movff	dtoa@d+1,dtoa@n+1
  4715   000E20  C07F  F095         	movff	dtoa@d+2,dtoa@n+2
  4716   000E24  C080  F096         	movff	dtoa@d+3,dtoa@n+3
  4717   000E28  C081  F097         	movff	dtoa@d+4,dtoa@n+4
  4718   000E2C  C082  F098         	movff	dtoa@d+5,dtoa@n+5
  4719   000E30  C083  F099         	movff	dtoa@d+6,dtoa@n+6
  4720   000E34  C084  F09A         	movff	dtoa@d+7,dtoa@n+7
  4721   000E38                     
  4722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4723   000E38  0100               	movlb	0	; () banked
  4724   000E3A  BF9A               	btfsc	(dtoa@n+7)& (0+255),7,b
  4725   000E3C  EF22  F007         	goto	u2771
  4726   000E40  EF25  F007         	goto	u2770
  4727   000E44                     u2771:
  4728   000E44  0E01               	movlw	1
  4729   000E46  EF26  F007         	goto	u2780
  4730   000E4A                     u2770:
  4731   000E4A  0E00               	movlw	0
  4732   000E4C                     u2780:
  4733   000E4C  6F9B               	movwf	dtoa@s& (0+255),b
  4734   000E4E                     
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4737   000E4E  519B               	movf	dtoa@s& (0+255),w,b
  4738   000E50  B4D8               	btfsc	status,2,c
  4739   000E52  EF2D  F007         	goto	u2791
  4740   000E56  EF2F  F007         	goto	u2790
  4741   000E5A                     u2791:
  4742   000E5A  EF3F  F007         	goto	l2915
  4743   000E5E                     u2790:
  4744   000E5E                     
  4745                           ; BSR set to: 0
  4746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4747   000E5E  1F9A               	comf	(dtoa@n+7)& (0+255),f,b
  4748   000E60  1F99               	comf	(dtoa@n+6)& (0+255),f,b
  4749   000E62  1F98               	comf	(dtoa@n+5)& (0+255),f,b
  4750   000E64  1F97               	comf	(dtoa@n+4)& (0+255),f,b
  4751   000E66  1F96               	comf	(dtoa@n+3)& (0+255),f,b
  4752   000E68  1F95               	comf	(dtoa@n+2)& (0+255),f,b
  4753   000E6A  1F94               	comf	(dtoa@n+1)& (0+255),f,b
  4754   000E6C  6D93               	negf	dtoa@n& (0+255),b
  4755   000E6E  0E00               	movlw	0
  4756   000E70  2394               	addwfc	(dtoa@n+1)& (0+255),f,b
  4757   000E72  2395               	addwfc	(dtoa@n+2)& (0+255),f,b
  4758   000E74  2396               	addwfc	(dtoa@n+3)& (0+255),f,b
  4759   000E76  2397               	addwfc	(dtoa@n+4)& (0+255),f,b
  4760   000E78  2398               	addwfc	(dtoa@n+5)& (0+255),f,b
  4761   000E7A  2399               	addwfc	(dtoa@n+6)& (0+255),f,b
  4762   000E7C  239A               	addwfc	(dtoa@n+7)& (0+255),f,b
  4763   000E7E                     l2915:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4767   000E7E  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  4768   000E80  EF4C  F007         	goto	u2800
  4769   000E84  51EE               	movf	(_prec+1)& (0+255),w,b
  4770   000E86  E106               	bnz	u2801
  4771   000E88  05ED               	decf	_prec& (0+255),w,b
  4772   000E8A  B0D8               	btfsc	status,0,c
  4773   000E8C  EF4A  F007         	goto	u2801
  4774   000E90  EF4C  F007         	goto	u2800
  4775   000E94                     u2801:
  4776   000E94  EF52  F007         	goto	l1070
  4777   000E98                     u2800:
  4778   000E98                     
  4779                           ; BSR set to: 0
  4780   000E98  0E00               	movlw	0
  4781   000E9A  6F90               	movwf	(dtoa@p+1)& (0+255),b
  4782   000E9C  0E01               	movlw	1
  4783   000E9E  6F8F               	movwf	dtoa@p& (0+255),b
  4784   000EA0  EF56  F007         	goto	l1072
  4785   000EA4                     l1070:
  4786                           
  4787                           ; BSR set to: 0
  4788   000EA4  C0ED  F08F         	movff	_prec,dtoa@p
  4789   000EA8  C0EE  F090         	movff	_prec+1,dtoa@p+1
  4790   000EAC                     l1072:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4794   000EAC  C0EB  F091         	movff	_width,dtoa@w
  4795   000EB0  C0EC  F092         	movff	_width+1,dtoa@w+1
  4796   000EB4                     
  4797                           ; BSR set to: 0
  4798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4799   000EB4  519B               	movf	dtoa@s& (0+255),w,b
  4800   000EB6  B4D8               	btfsc	status,2,c
  4801   000EB8  EF60  F007         	goto	u2811
  4802   000EBC  EF62  F007         	goto	u2810
  4803   000EC0                     u2811:
  4804   000EC0  EF79  F007         	goto	l1073
  4805   000EC4                     u2810:
  4806   000EC4                     
  4807                           ; BSR set to: 0
  4808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4809   000EC4  0791               	decf	dtoa@w& (0+255),f,b
  4810   000EC6  A0D8               	btfss	status,0,c
  4811   000EC8  0792               	decf	(dtoa@w+1)& (0+255),f,b
  4812   000ECA                     
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4815   000ECA  519B               	movf	dtoa@s& (0+255),w,b
  4816   000ECC  A4D8               	btfss	status,2,c
  4817   000ECE  EF6B  F007         	goto	u2821
  4818   000ED2  EF6D  F007         	goto	u2820
  4819   000ED6                     u2821:
  4820   000ED6  EF73  F007         	goto	l2927
  4821   000EDA                     u2820:
  4822   000EDA                     
  4823                           ; BSR set to: 0
  4824   000EDA  0E00               	movlw	0
  4825   000EDC  6F8E               	movwf	(_dtoa$2178+1)& (0+255),b
  4826   000EDE  0E2B               	movlw	43
  4827   000EE0  6F8D               	movwf	_dtoa$2178& (0+255),b
  4828   000EE2  EF77  F007         	goto	l2929
  4829   000EE6                     l2927:
  4830                           
  4831                           ; BSR set to: 0
  4832   000EE6  0E00               	movlw	0
  4833   000EE8  6F8E               	movwf	(_dtoa$2178+1)& (0+255),b
  4834   000EEA  0E2D               	movlw	45
  4835   000EEC  6F8D               	movwf	_dtoa$2178& (0+255),b
  4836   000EEE                     l2929:
  4837                           
  4838                           ; BSR set to: 0
  4839   000EEE  C08D  F09B         	movff	_dtoa$2178,dtoa@s
  4840   000EF2                     l1073:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4844   000EF2  0E00               	movlw	0
  4845   000EF4  6F9D               	movwf	(dtoa@i+1)& (0+255),b
  4846   000EF6  0E1F               	movlw	31
  4847   000EF8  6F9C               	movwf	dtoa@i& (0+255),b
  4848   000EFA                     
  4849                           ; BSR set to: 0
  4850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4851   000EFA  0E00               	movlw	0
  4852   000EFC  0101               	movlb	1	; () banked
  4853   000EFE  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4856   000F00  EFFF  F007         	goto	l2943
  4857   000F04                     l2933:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4861   000F04  079C               	decf	dtoa@i& (0+255),f,b
  4862   000F06  A0D8               	btfss	status,0,c
  4863   000F08  079D               	decf	(dtoa@i+1)& (0+255),f,b
  4864   000F0A                     
  4865                           ; BSR set to: 0
  4866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4867   000F0A  0E00               	movlw	low _dbuf
  4868   000F0C  259C               	addwf	dtoa@i& (0+255),w,b
  4869   000F0E  6ED9               	movwf	fsr2l,c
  4870   000F10  0E01               	movlw	high _dbuf
  4871   000F12  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4872   000F14  6EDA               	movwf	fsr2h,c
  4873   000F16  C093  F060         	movff	dtoa@n,___aomod@dividend
  4874   000F1A  C094  F061         	movff	dtoa@n+1,___aomod@dividend+1
  4875   000F1E  C095  F062         	movff	dtoa@n+2,___aomod@dividend+2
  4876   000F22  C096  F063         	movff	dtoa@n+3,___aomod@dividend+3
  4877   000F26  C097  F064         	movff	dtoa@n+4,___aomod@dividend+4
  4878   000F2A  C098  F065         	movff	dtoa@n+5,___aomod@dividend+5
  4879   000F2E  C099  F066         	movff	dtoa@n+6,___aomod@dividend+6
  4880   000F32  C09A  F067         	movff	dtoa@n+7,___aomod@dividend+7
  4881   000F36  0E0A               	movlw	10
  4882   000F38  6F68               	movwf	___aomod@divisor& (0+255),b
  4883   000F3A  0E00               	movlw	0
  4884   000F3C  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  4885   000F3E  0E00               	movlw	0
  4886   000F40  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  4887   000F42  0E00               	movlw	0
  4888   000F44  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  4889   000F46  0E00               	movlw	0
  4890   000F48  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  4891   000F4A  0E00               	movlw	0
  4892   000F4C  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  4893   000F4E  0E00               	movlw	0
  4894   000F50  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  4895   000F52  0E00               	movlw	0
  4896   000F54  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  4897   000F56  EC26  F00B         	call	___aomod	;wreg free
  4898   000F5A  C060  F085         	movff	?___aomod,??_dtoa
  4899   000F5E  C061  F086         	movff	?___aomod+1,??_dtoa+1
  4900   000F62  C062  F087         	movff	?___aomod+2,??_dtoa+2
  4901   000F66  C063  F088         	movff	?___aomod+3,??_dtoa+3
  4902   000F6A  C064  F089         	movff	?___aomod+4,??_dtoa+4
  4903   000F6E  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  4904   000F72  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  4905   000F76  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  4906   000F7A  C085  F072         	movff	??_dtoa,abs@a
  4907   000F7E  C086  F073         	movff	??_dtoa+1,abs@a+1
  4908   000F82  EC97  F013         	call	_abs	;wreg free
  4909   000F86  0100               	movlb	0	; () banked
  4910   000F88  5172               	movf	?_abs& (0+255),w,b
  4911   000F8A  0F30               	addlw	48
  4912   000F8C  6EDF               	movwf	indf2,c
  4913   000F8E                     
  4914                           ; BSR set to: 0
  4915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  4916   000F8E  078F               	decf	dtoa@p& (0+255),f,b
  4917   000F90  A0D8               	btfss	status,0,c
  4918   000F92  0790               	decf	(dtoa@p+1)& (0+255),f,b
  4919   000F94                     
  4920                           ; BSR set to: 0
  4921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  4922   000F94  0791               	decf	dtoa@w& (0+255),f,b
  4923   000F96  A0D8               	btfss	status,0,c
  4924   000F98  0792               	decf	(dtoa@w+1)& (0+255),f,b
  4925   000F9A                     
  4926                           ; BSR set to: 0
  4927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  4928   000F9A  C093  F060         	movff	dtoa@n,___aodiv@dividend
  4929   000F9E  C094  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  4930   000FA2  C095  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  4931   000FA6  C096  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  4932   000FAA  C097  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  4933   000FAE  C098  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  4934   000FB2  C099  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  4935   000FB6  C09A  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  4936   000FBA  0E0A               	movlw	10
  4937   000FBC  6F68               	movwf	___aodiv@divisor& (0+255),b
  4938   000FBE  0E00               	movlw	0
  4939   000FC0  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  4940   000FC2  0E00               	movlw	0
  4941   000FC4  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  4942   000FC6  0E00               	movlw	0
  4943   000FC8  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  4944   000FCA  0E00               	movlw	0
  4945   000FCC  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  4946   000FCE  0E00               	movlw	0
  4947   000FD0  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  4948   000FD2  0E00               	movlw	0
  4949   000FD4  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  4950   000FD6  0E00               	movlw	0
  4951   000FD8  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  4952   000FDA  EC61  F00A         	call	___aodiv	;wreg free
  4953   000FDE  C060  F093         	movff	?___aodiv,dtoa@n
  4954   000FE2  C061  F094         	movff	?___aodiv+1,dtoa@n+1
  4955   000FE6  C062  F095         	movff	?___aodiv+2,dtoa@n+2
  4956   000FEA  C063  F096         	movff	?___aodiv+3,dtoa@n+3
  4957   000FEE  C064  F097         	movff	?___aodiv+4,dtoa@n+4
  4958   000FF2  C065  F098         	movff	?___aodiv+5,dtoa@n+5
  4959   000FF6  C066  F099         	movff	?___aodiv+6,dtoa@n+6
  4960   000FFA  C067  F09A         	movff	?___aodiv+7,dtoa@n+7
  4961   000FFE                     l2943:
  4962                           
  4963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4964   000FFE  0100               	movlb	0	; () banked
  4965   001000  BF9D               	btfsc	(dtoa@i+1)& (0+255),7,b
  4966   001002  EF0B  F008         	goto	u2831
  4967   001006  519D               	movf	(dtoa@i+1)& (0+255),w,b
  4968   001008  E108               	bnz	u2830
  4969   00100A  059C               	decf	dtoa@i& (0+255),w,b
  4970   00100C  A0D8               	btfss	status,0,c
  4971   00100E  EF0B  F008         	goto	u2831
  4972   001012  EF0D  F008         	goto	u2830
  4973   001016                     u2831:
  4974   001016  EF29  F008         	goto	l2949
  4975   00101A                     u2830:
  4976   00101A                     
  4977                           ; BSR set to: 0
  4978   00101A  5193               	movf	dtoa@n& (0+255),w,b
  4979   00101C  1194               	iorwf	(dtoa@n+1)& (0+255),w,b
  4980   00101E  1195               	iorwf	(dtoa@n+2)& (0+255),w,b
  4981   001020  1196               	iorwf	(dtoa@n+3)& (0+255),w,b
  4982   001022  1197               	iorwf	(dtoa@n+4)& (0+255),w,b
  4983   001024  1198               	iorwf	(dtoa@n+5)& (0+255),w,b
  4984   001026  1199               	iorwf	(dtoa@n+6)& (0+255),w,b
  4985   001028  119A               	iorwf	(dtoa@n+7)& (0+255),w,b
  4986   00102A  A4D8               	btfss	status,2,c
  4987   00102C  EF1A  F008         	goto	u2841
  4988   001030  EF1C  F008         	goto	u2840
  4989   001034                     u2841:
  4990   001034  EF82  F007         	goto	l2933
  4991   001038                     u2840:
  4992   001038                     
  4993                           ; BSR set to: 0
  4994   001038  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  4995   00103A  EF29  F008         	goto	u2850
  4996   00103E  5190               	movf	(dtoa@p+1)& (0+255),w,b
  4997   001040  E106               	bnz	u2851
  4998   001042  058F               	decf	dtoa@p& (0+255),w,b
  4999   001044  B0D8               	btfsc	status,0,c
  5000   001046  EF27  F008         	goto	u2851
  5001   00104A  EF29  F008         	goto	u2850
  5002   00104E                     u2851:
  5003   00104E  EF82  F007         	goto	l2933
  5004   001052                     u2850:
  5005   001052                     l2949:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5009   001052  519B               	movf	dtoa@s& (0+255),w,b
  5010   001054  B4D8               	btfsc	status,2,c
  5011   001056  EF2F  F008         	goto	u2861
  5012   00105A  EF31  F008         	goto	u2860
  5013   00105E                     u2861:
  5014   00105E  EF3C  F008         	goto	l2955
  5015   001062                     u2860:
  5016   001062                     
  5017                           ; BSR set to: 0
  5018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5019   001062  079C               	decf	dtoa@i& (0+255),f,b
  5020   001064  A0D8               	btfss	status,0,c
  5021   001066  079D               	decf	(dtoa@i+1)& (0+255),f,b
  5022   001068                     
  5023                           ; BSR set to: 0
  5024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5025   001068  0E00               	movlw	low _dbuf
  5026   00106A  259C               	addwf	dtoa@i& (0+255),w,b
  5027   00106C  6ED9               	movwf	fsr2l,c
  5028   00106E  0E01               	movlw	high _dbuf
  5029   001070  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  5030   001072  6EDA               	movwf	fsr2h,c
  5031   001074  C09B  FFDF         	movff	dtoa@s,indf2
  5032   001078                     l2955:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5036   001078  C07B  F070         	movff	dtoa@fp,pad@fp
  5037   00107C  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  5038   001080  0E00               	movlw	low _dbuf
  5039   001082  259C               	addwf	dtoa@i& (0+255),w,b
  5040   001084  6F72               	movwf	pad@buf& (0+255),b
  5041   001086  0E01               	movlw	high _dbuf
  5042   001088  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  5043   00108A  6F73               	movwf	(pad@buf+1)& (0+255),b
  5044   00108C  C091  F074         	movff	dtoa@w,pad@p
  5045   001090  C092  F075         	movff	dtoa@w+1,pad@p+1
  5046   001094  EC2F  F011         	call	_pad	;wreg free
  5047   001098  0012               	return		;funcret
  5048   00109A                     __end_of_dtoa:
  5049                           	callstack 0
  5050                           
  5051 ;; *************** function _pad *****************
  5052 ;; Defined at:
  5053 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5056 ;;		 -> sprintf@f(11), 
  5057 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  5058 ;;		 -> dbuf(32), 
  5059 ;;  p               2   20[BANK0 ] int 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  w               2   25[BANK0 ] int 
  5062 ;;  i               2   23[BANK0 ] int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5072 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;Total ram usage:       11 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 7
  5079 ;; This function calls:
  5080 ;;		_fputc
  5081 ;;		_fputs
  5082 ;; This function is called by:
  5083 ;;		_dtoa
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text31
  5088   00225E                     __ptext31:
  5089                           	callstack 0
  5090   00225E                     _pad:
  5091                           	callstack 18
  5092   00225E                     
  5093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5094   00225E  0100               	movlb	0	; () banked
  5095   002260  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  5096   002262  EF35  F011         	goto	u2741
  5097   002266  EF37  F011         	goto	u2740
  5098   00226A                     u2741:
  5099   00226A  EF3D  F011         	goto	l2887
  5100   00226E                     u2740:
  5101   00226E                     
  5102                           ; BSR set to: 0
  5103   00226E  C074  F079         	movff	pad@p,pad@w
  5104   002272  C075  F07A         	movff	pad@p+1,pad@w+1
  5105   002276  EF41  F011         	goto	l1061
  5106   00227A                     l2887:
  5107                           
  5108                           ; BSR set to: 0
  5109   00227A  0E00               	movlw	0
  5110   00227C  6F7A               	movwf	(pad@w+1)& (0+255),b
  5111   00227E  0E00               	movlw	0
  5112   002280  6F79               	movwf	pad@w& (0+255),b
  5113   002282                     l1061:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5117   002282  0E00               	movlw	0
  5118   002284  6F78               	movwf	(pad@i+1)& (0+255),b
  5119   002286  0E00               	movlw	0
  5120   002288  6F77               	movwf	pad@i& (0+255),b
  5121                           
  5122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5123   00228A  EF54  F011         	goto	l2893
  5124   00228E                     l2889:
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5128   00228E  0E00               	movlw	0
  5129   002290  6F61               	movwf	(fputc@c+1)& (0+255),b
  5130   002292  0E20               	movlw	32
  5131   002294  6F60               	movwf	fputc@c& (0+255),b
  5132   002296  C070  F062         	movff	pad@fp,fputc@fp
  5133   00229A  C071  F063         	movff	pad@fp+1,fputc@fp+1
  5134   00229E  ECF1  F00E         	call	_fputc	;wreg free
  5135   0022A2                     
  5136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5137   0022A2  0100               	movlb	0	; () banked
  5138   0022A4  4B77               	infsnz	pad@i& (0+255),f,b
  5139   0022A6  2B78               	incf	(pad@i+1)& (0+255),f,b
  5140   0022A8                     l2893:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5144   0022A8  5179               	movf	pad@w& (0+255),w,b
  5145   0022AA  5D77               	subwf	pad@i& (0+255),w,b
  5146   0022AC  5178               	movf	(pad@i+1)& (0+255),w,b
  5147   0022AE  0A80               	xorlw	128
  5148   0022B0  6F76               	movwf	??_pad& (0+255),b
  5149   0022B2  517A               	movf	(pad@w+1)& (0+255),w,b
  5150   0022B4  0A80               	xorlw	128
  5151   0022B6  5976               	subwfb	??_pad& (0+255),w,b
  5152   0022B8  A0D8               	btfss	status,0,c
  5153   0022BA  EF61  F011         	goto	u2751
  5154   0022BE  EF63  F011         	goto	u2750
  5155   0022C2                     u2751:
  5156   0022C2  EF47  F011         	goto	l2889
  5157   0022C6                     u2750:
  5158   0022C6                     
  5159                           ; BSR set to: 0
  5160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5161   0022C6  C072  F069         	movff	pad@buf,fputs@s
  5162   0022CA  C073  F06A         	movff	pad@buf+1,fputs@s+1
  5163   0022CE  C070  F06B         	movff	pad@fp,fputs@fp
  5164   0022D2  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  5165   0022D6  EC2E  F013         	call	_fputs	;wreg free
  5166   0022DA  0012               	return		;funcret
  5167   0022DC                     __end_of_pad:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _fputs *****************
  5171 ;; Defined at:
  5172 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  5175 ;;		 -> dbuf(32), 
  5176 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  5177 ;;		 -> sprintf@f(11), 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  i               2   14[BANK0 ] int 
  5180 ;;  c               1   13[BANK0 ] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  2    9[BANK0 ] int 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;Total ram usage:        7 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 6
  5197 ;; This function calls:
  5198 ;;		_fputc
  5199 ;; This function is called by:
  5200 ;;		_pad
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text32
  5205   00265C                     __ptext32:
  5206                           	callstack 0
  5207   00265C                     _fputs:
  5208                           	callstack 18
  5209   00265C  0E00               	movlw	0
  5210   00265E  0100               	movlb	0	; () banked
  5211   002660  6F6F               	movwf	(fputs@i+1)& (0+255),b
  5212   002662  0E00               	movlw	0
  5213   002664  6F6E               	movwf	fputs@i& (0+255),b
  5214   002666  EF41  F013         	goto	l2801
  5215   00266A                     l2797:
  5216                           
  5217                           ; BSR set to: 0
  5218   00266A  C06D  F060         	movff	fputs@c,fputc@c
  5219   00266E  6B61               	clrf	(fputc@c+1)& (0+255),b
  5220   002670  C06B  F062         	movff	fputs@fp,fputc@fp
  5221   002674  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  5222   002678  ECF1  F00E         	call	_fputc	;wreg free
  5223   00267C  0100               	movlb	0	; () banked
  5224   00267E  4B6E               	infsnz	fputs@i& (0+255),f,b
  5225   002680  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  5226   002682                     l2801:
  5227                           
  5228                           ; BSR set to: 0
  5229   002682  516E               	movf	fputs@i& (0+255),w,b
  5230   002684  2569               	addwf	fputs@s& (0+255),w,b
  5231   002686  6ED9               	movwf	fsr2l,c
  5232   002688  516F               	movf	(fputs@i+1)& (0+255),w,b
  5233   00268A  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  5234   00268C  6EDA               	movwf	fsr2h,c
  5235   00268E  50DF               	movf	indf2,w,c
  5236   002690  6F6D               	movwf	fputs@c& (0+255),b
  5237   002692  516D               	movf	fputs@c& (0+255),w,b
  5238   002694  A4D8               	btfss	status,2,c
  5239   002696  EF4F  F013         	goto	u2601
  5240   00269A  EF51  F013         	goto	u2600
  5241   00269E                     u2601:
  5242   00269E  EF35  F013         	goto	l2797
  5243   0026A2                     u2600:
  5244   0026A2                     
  5245                           ; BSR set to: 0
  5246   0026A2  0012               	return		;funcret
  5247   0026A4                     __end_of_fputs:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function _fputc *****************
  5251 ;; Defined at:
  5252 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  c               2    0[BANK0 ] int 
  5255 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  5256 ;;		 -> sprintf@f(11), 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2    0[BANK0 ] int 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;Total ram usage:        9 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 5
  5275 ;; This function calls:
  5276 ;;		_putch
  5277 ;; This function is called by:
  5278 ;;		_pad
  5279 ;;		_vfpfcnvrt
  5280 ;;		_fputs
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text33
  5285   001DE2                     __ptext33:
  5286                           	callstack 0
  5287   001DE2                     _fputc:
  5288                           	callstack 21
  5289   001DE2  0100               	movlb	0	; () banked
  5290   001DE4  5162               	movf	fputc@fp& (0+255),w,b
  5291   001DE6  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  5292   001DE8  B4D8               	btfsc	status,2,c
  5293   001DEA  EFF9  F00E         	goto	u2561
  5294   001DEE  EFFB  F00E         	goto	u2560
  5295   001DF2                     u2561:
  5296   001DF2  EF04  F00F         	goto	l2785
  5297   001DF6                     u2560:
  5298   001DF6                     
  5299                           ; BSR set to: 0
  5300   001DF6  5162               	movf	fputc@fp& (0+255),w,b
  5301   001DF8  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  5302   001DFA  A4D8               	btfss	status,2,c
  5303   001DFC  EF02  F00F         	goto	u2571
  5304   001E00  EF04  F00F         	goto	u2570
  5305   001E04                     u2571:
  5306   001E04  EF09  F00F         	goto	l2787
  5307   001E08                     u2570:
  5308   001E08                     l2785:
  5309                           
  5310                           ; BSR set to: 0
  5311   001E08  5160               	movf	fputc@c& (0+255),w,b
  5312   001E0A  EC7B  F014         	call	_putch
  5313   001E0E  EF56  F00F         	goto	l1116
  5314   001E12                     l2787:
  5315                           
  5316                           ; BSR set to: 0
  5317   001E12  EE20 F009          	lfsr	2,9
  5318   001E16  5162               	movf	fputc@fp& (0+255),w,b
  5319   001E18  26D9               	addwf	fsr2l,f,c
  5320   001E1A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  5321   001E1C  22DA               	addwfc	fsr2h,f,c
  5322   001E1E  50DE               	movf	postinc2,w,c
  5323   001E20  10DE               	iorwf	postinc2,w,c
  5324   001E22  B4D8               	btfsc	status,2,c
  5325   001E24  EF16  F00F         	goto	u2581
  5326   001E28  EF18  F00F         	goto	u2580
  5327   001E2C                     u2581:
  5328   001E2C  EF33  F00F         	goto	l2791
  5329   001E30                     u2580:
  5330   001E30                     
  5331                           ; BSR set to: 0
  5332   001E30  EE20 F009          	lfsr	2,9
  5333   001E34  5162               	movf	fputc@fp& (0+255),w,b
  5334   001E36  26D9               	addwf	fsr2l,f,c
  5335   001E38  5163               	movf	(fputc@fp+1)& (0+255),w,b
  5336   001E3A  22DA               	addwfc	fsr2h,f,c
  5337   001E3C  EE10 F003          	lfsr	1,3
  5338   001E40  5162               	movf	fputc@fp& (0+255),w,b
  5339   001E42  26E1               	addwf	fsr1l,f,c
  5340   001E44  5163               	movf	(fputc@fp+1)& (0+255),w,b
  5341   001E46  22E2               	addwfc	fsr1h,f,c
  5342   001E48  50DE               	movf	postinc2,w,c
  5343   001E4A  5CE6               	subwf	postinc1,w,c
  5344   001E4C  50E6               	movf	postinc1,w,c
  5345   001E4E  0A80               	xorlw	128
  5346   001E50  6F68               	movwf	(??_fputc+4)& (0+255),b
  5347   001E52  50DE               	movf	postinc2,w,c
  5348   001E54  0A80               	xorlw	128
  5349   001E56  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  5350   001E58  B0D8               	btfsc	status,0,c
  5351   001E5A  EF31  F00F         	goto	u2591
  5352   001E5E  EF33  F00F         	goto	u2590
  5353   001E62                     u2591:
  5354   001E62  EF56  F00F         	goto	l1116
  5355   001E66                     u2590:
  5356   001E66                     l2791:
  5357                           
  5358                           ; BSR set to: 0
  5359   001E66  EE20 F003          	lfsr	2,3
  5360   001E6A  5162               	movf	fputc@fp& (0+255),w,b
  5361   001E6C  26D9               	addwf	fsr2l,f,c
  5362   001E6E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  5363   001E70  22DA               	addwfc	fsr2h,f,c
  5364   001E72  CFDE F064          	movff	postinc2,??_fputc
  5365   001E76  CFDD F065          	movff	postdec2,??_fputc+1
  5366   001E7A  C062  FFD9         	movff	fputc@fp,fsr2l
  5367   001E7E  C063  FFDA         	movff	fputc@fp+1,fsr2h
  5368   001E82  CFDE F066          	movff	postinc2,??_fputc+2
  5369   001E86  CFDD F067          	movff	postdec2,??_fputc+3
  5370   001E8A  5164               	movf	??_fputc& (0+255),w,b
  5371   001E8C  2566               	addwf	(??_fputc+2)& (0+255),w,b
  5372   001E8E  6ED9               	movwf	fsr2l,c
  5373   001E90  5165               	movf	(??_fputc+1)& (0+255),w,b
  5374   001E92  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  5375   001E94  6EDA               	movwf	fsr2h,c
  5376   001E96  C060  FFDF         	movff	fputc@c,indf2
  5377   001E9A  EE20 F003          	lfsr	2,3
  5378   001E9E  5162               	movf	fputc@fp& (0+255),w,b
  5379   001EA0  26D9               	addwf	fsr2l,f,c
  5380   001EA2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  5381   001EA4  22DA               	addwfc	fsr2h,f,c
  5382   001EA6  2ADE               	incf	postinc2,f,c
  5383   001EA8  0E00               	movlw	0
  5384   001EAA  22DD               	addwfc	postdec2,f,c
  5385   001EAC                     l1116:
  5386   001EAC  0012               	return		;funcret
  5387   001EAE                     __end_of_fputc:
  5388                           	callstack 0
  5389                           
  5390 ;; *************** function _putch *****************
  5391 ;; Defined at:
  5392 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  c               1    wreg     unsigned char 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  c               1    0[COMRAM] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;Total ram usage:        0 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; Hardware stack levels required when called: 4
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_fputc
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text34
  5421   0028F6                     __ptext34:
  5422                           	callstack 0
  5423   0028F6                     _putch:
  5424                           	callstack 21
  5425   0028F6  0012               	return		;funcret
  5426   0028F8                     __end_of_putch:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function _abs *****************
  5430 ;; Defined at:
  5431 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  a               2   18[BANK0 ] int 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  2   18[BANK0 ] int 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5447 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5448 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5449 ;;Total ram usage:        4 bytes
  5450 ;; Hardware stack levels used: 1
  5451 ;; Hardware stack levels required when called: 4
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_dtoa
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text35
  5460   00272E                     __ptext35:
  5461                           	callstack 0
  5462   00272E                     _abs:
  5463                           	callstack 21
  5464   00272E  0100               	movlb	0	; () banked
  5465   002730  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  5466   002732  EFA5  F013         	goto	u2760
  5467   002736  5173               	movf	(abs@a+1)& (0+255),w,b
  5468   002738  E106               	bnz	u2761
  5469   00273A  0572               	decf	abs@a& (0+255),w,b
  5470   00273C  B0D8               	btfsc	status,0,c
  5471   00273E  EFA3  F013         	goto	u2761
  5472   002742  EFA5  F013         	goto	u2760
  5473   002746                     u2761:
  5474   002746  EFB3  F013         	goto	l1101
  5475   00274A                     u2760:
  5476   00274A                     
  5477                           ; BSR set to: 0
  5478   00274A  C072  F074         	movff	abs@a,??_abs
  5479   00274E  C073  F075         	movff	abs@a+1,??_abs+1
  5480   002752  1F74               	comf	??_abs& (0+255),f,b
  5481   002754  1F75               	comf	(??_abs+1)& (0+255),f,b
  5482   002756  4B74               	infsnz	??_abs& (0+255),f,b
  5483   002758  2B75               	incf	(??_abs+1)& (0+255),f,b
  5484   00275A  C074  F072         	movff	??_abs,?_abs
  5485   00275E  C075  F073         	movff	??_abs+1,?_abs+1
  5486   002762  EFB7  F013         	goto	l1104
  5487   002766                     l1101:
  5488                           
  5489                           ; BSR set to: 0
  5490   002766  C072  F072         	movff	abs@a,?_abs
  5491   00276A  C073  F073         	movff	abs@a+1,?_abs+1
  5492   00276E                     l1104:
  5493                           
  5494                           ; BSR set to: 0
  5495   00276E  0012               	return		;funcret
  5496   002770                     __end_of_abs:
  5497                           	callstack 0
  5498                           
  5499 ;; *************** function ___aomod *****************
  5500 ;; Defined at:
  5501 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  dividend        8    0[BANK0 ] long long 
  5504 ;;  divisor         8    8[BANK0 ] long long 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  sign            1   17[BANK0 ] unsigned char 
  5507 ;;  counter         1   16[BANK0 ] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  8    0[BANK0 ] long long 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5517 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;Total ram usage:       18 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 4
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_dtoa
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text36
  5532   00164C                     __ptext36:
  5533                           	callstack 0
  5534   00164C                     ___aomod:
  5535                           	callstack 21
  5536   00164C  0E00               	movlw	0
  5537   00164E  0100               	movlb	0	; () banked
  5538   001650  6F71               	movwf	___aomod@sign& (0+255),b
  5539   001652                     
  5540                           ; BSR set to: 0
  5541   001652  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  5542   001654  EF30  F00B         	goto	u2680
  5543   001658  EF2E  F00B         	goto	u2681
  5544   00165C                     u2681:
  5545   00165C  EF42  F00B         	goto	l2855
  5546   001660                     u2680:
  5547   001660                     
  5548                           ; BSR set to: 0
  5549   001660  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  5550   001662  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  5551   001664  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  5552   001666  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  5553   001668  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  5554   00166A  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  5555   00166C  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  5556   00166E  6D60               	negf	___aomod@dividend& (0+255),b
  5557   001670  0E00               	movlw	0
  5558   001672  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5559   001674  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5560   001676  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5561   001678  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5562   00167A  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5563   00167C  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5564   00167E  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5565   001680                     
  5566                           ; BSR set to: 0
  5567   001680  0E01               	movlw	1
  5568   001682  6F71               	movwf	___aomod@sign& (0+255),b
  5569   001684                     l2855:
  5570                           
  5571                           ; BSR set to: 0
  5572   001684  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  5573   001686  EF49  F00B         	goto	u2690
  5574   00168A  EF47  F00B         	goto	u2691
  5575   00168E                     u2691:
  5576   00168E  EF59  F00B         	goto	l2859
  5577   001692                     u2690:
  5578   001692                     
  5579                           ; BSR set to: 0
  5580   001692  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  5581   001694  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  5582   001696  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  5583   001698  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  5584   00169A  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  5585   00169C  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  5586   00169E  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  5587   0016A0  6D68               	negf	___aomod@divisor& (0+255),b
  5588   0016A2  0E00               	movlw	0
  5589   0016A4  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  5590   0016A6  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  5591   0016A8  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  5592   0016AA  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  5593   0016AC  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  5594   0016AE  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  5595   0016B0  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  5596   0016B2                     l2859:
  5597                           
  5598                           ; BSR set to: 0
  5599   0016B2  5168               	movf	___aomod@divisor& (0+255),w,b
  5600   0016B4  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  5601   0016B6  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  5602   0016B8  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  5603   0016BA  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  5604   0016BC  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  5605   0016BE  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  5606   0016C0  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  5607   0016C2  B4D8               	btfsc	status,2,c
  5608   0016C4  EF66  F00B         	goto	u2701
  5609   0016C8  EF68  F00B         	goto	u2700
  5610   0016CC                     u2701:
  5611   0016CC  EFB0  F00B         	goto	l2875
  5612   0016D0                     u2700:
  5613   0016D0                     
  5614                           ; BSR set to: 0
  5615   0016D0  0E01               	movlw	1
  5616   0016D2  6F70               	movwf	___aomod@counter& (0+255),b
  5617   0016D4  EF76  F00B         	goto	l2865
  5618   0016D8                     l2863:
  5619                           
  5620                           ; BSR set to: 0
  5621   0016D8  90D8               	bcf	status,0,c
  5622   0016DA  3768               	rlcf	___aomod@divisor& (0+255),f,b
  5623   0016DC  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  5624   0016DE  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  5625   0016E0  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  5626   0016E2  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  5627   0016E4  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  5628   0016E6  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  5629   0016E8  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  5630   0016EA  2B70               	incf	___aomod@counter& (0+255),f,b
  5631   0016EC                     l2865:
  5632                           
  5633                           ; BSR set to: 0
  5634   0016EC  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  5635   0016EE  EF7B  F00B         	goto	u2711
  5636   0016F2  EF7D  F00B         	goto	u2710
  5637   0016F6                     u2711:
  5638   0016F6  EF6C  F00B         	goto	l2863
  5639   0016FA                     u2710:
  5640   0016FA                     l2867:
  5641                           
  5642                           ; BSR set to: 0
  5643   0016FA  5168               	movf	___aomod@divisor& (0+255),w,b
  5644   0016FC  5D60               	subwf	___aomod@dividend& (0+255),w,b
  5645   0016FE  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  5646   001700  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  5647   001702  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5648   001704  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  5649   001706  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5650   001708  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  5651   00170A  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5652   00170C  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  5653   00170E  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5654   001710  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  5655   001712  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5656   001714  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  5657   001716  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5658   001718  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  5659   00171A  A0D8               	btfss	status,0,c
  5660   00171C  EF92  F00B         	goto	u2721
  5661   001720  EF94  F00B         	goto	u2720
  5662   001724                     u2721:
  5663   001724  EFA4  F00B         	goto	l2871
  5664   001728                     u2720:
  5665   001728                     
  5666                           ; BSR set to: 0
  5667   001728  5168               	movf	___aomod@divisor& (0+255),w,b
  5668   00172A  5F60               	subwf	___aomod@dividend& (0+255),f,b
  5669   00172C  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  5670   00172E  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  5671   001730  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5672   001732  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  5673   001734  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5674   001736  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  5675   001738  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5676   00173A  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  5677   00173C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5678   00173E  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  5679   001740  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5680   001742  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  5681   001744  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5682   001746  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  5683   001748                     l2871:
  5684                           
  5685                           ; BSR set to: 0
  5686   001748  90D8               	bcf	status,0,c
  5687   00174A  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  5688   00174C  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  5689   00174E  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  5690   001750  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  5691   001752  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  5692   001754  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  5693   001756  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  5694   001758  3368               	rrcf	___aomod@divisor& (0+255),f,b
  5695   00175A                     
  5696                           ; BSR set to: 0
  5697   00175A  2F70               	decfsz	___aomod@counter& (0+255),f,b
  5698   00175C  EF7D  F00B         	goto	l2867
  5699   001760                     l2875:
  5700                           
  5701                           ; BSR set to: 0
  5702   001760  5171               	movf	___aomod@sign& (0+255),w,b
  5703   001762  B4D8               	btfsc	status,2,c
  5704   001764  EFB6  F00B         	goto	u2731
  5705   001768  EFB8  F00B         	goto	u2730
  5706   00176C                     u2731:
  5707   00176C  EFC8  F00B         	goto	l2879
  5708   001770                     u2730:
  5709   001770                     
  5710                           ; BSR set to: 0
  5711   001770  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  5712   001772  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  5713   001774  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  5714   001776  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  5715   001778  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  5716   00177A  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  5717   00177C  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  5718   00177E  6D60               	negf	___aomod@dividend& (0+255),b
  5719   001780  0E00               	movlw	0
  5720   001782  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5721   001784  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5722   001786  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5723   001788  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5724   00178A  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5725   00178C  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5726   00178E  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5727   001790                     l2879:
  5728                           
  5729                           ; BSR set to: 0
  5730   001790  C060  F060         	movff	___aomod@dividend,?___aomod
  5731   001794  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  5732   001798  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  5733   00179C  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  5734   0017A0  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  5735   0017A4  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  5736   0017A8  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  5737   0017AC  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  5738   0017B0                     
  5739                           ; BSR set to: 0
  5740   0017B0  0012               	return		;funcret
  5741   0017B2                     __end_of___aomod:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function ___aodiv *****************
  5745 ;; Defined at:
  5746 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  dividend        8    0[BANK0 ] long long 
  5749 ;;  divisor         8    8[BANK0 ] long long 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  quotient        8   18[BANK0 ] long long 
  5752 ;;  sign            1   17[BANK0 ] unsigned char 
  5753 ;;  counter         1   16[BANK0 ] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  8    0[BANK0 ] long long 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5763 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;Total ram usage:       26 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 4
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_dtoa
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text37
  5778   0014C2                     __ptext37:
  5779                           	callstack 0
  5780   0014C2                     ___aodiv:
  5781                           	callstack 21
  5782   0014C2  0E00               	movlw	0
  5783   0014C4  0100               	movlb	0	; () banked
  5784   0014C6  6F71               	movwf	___aodiv@sign& (0+255),b
  5785   0014C8                     
  5786                           ; BSR set to: 0
  5787   0014C8  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  5788   0014CA  EF6B  F00A         	goto	u2610
  5789   0014CE  EF69  F00A         	goto	u2611
  5790   0014D2                     u2611:
  5791   0014D2  EF7D  F00A         	goto	l2811
  5792   0014D6                     u2610:
  5793   0014D6                     
  5794                           ; BSR set to: 0
  5795   0014D6  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  5796   0014D8  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  5797   0014DA  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  5798   0014DC  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  5799   0014DE  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  5800   0014E0  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  5801   0014E2  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  5802   0014E4  6D68               	negf	___aodiv@divisor& (0+255),b
  5803   0014E6  0E00               	movlw	0
  5804   0014E8  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  5805   0014EA  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  5806   0014EC  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  5807   0014EE  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  5808   0014F0  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  5809   0014F2  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  5810   0014F4  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  5811   0014F6                     
  5812                           ; BSR set to: 0
  5813   0014F6  0E01               	movlw	1
  5814   0014F8  6F71               	movwf	___aodiv@sign& (0+255),b
  5815   0014FA                     l2811:
  5816                           
  5817                           ; BSR set to: 0
  5818   0014FA  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  5819   0014FC  EF84  F00A         	goto	u2620
  5820   001500  EF82  F00A         	goto	u2621
  5821   001504                     u2621:
  5822   001504  EF96  F00A         	goto	l2817
  5823   001508                     u2620:
  5824   001508                     
  5825                           ; BSR set to: 0
  5826   001508  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  5827   00150A  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  5828   00150C  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  5829   00150E  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  5830   001510  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  5831   001512  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  5832   001514  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  5833   001516  6D60               	negf	___aodiv@dividend& (0+255),b
  5834   001518  0E00               	movlw	0
  5835   00151A  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  5836   00151C  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  5837   00151E  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  5838   001520  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  5839   001522  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  5840   001524  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  5841   001526  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  5842   001528                     
  5843                           ; BSR set to: 0
  5844   001528  0E01               	movlw	1
  5845   00152A  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  5846   00152C                     l2817:
  5847                           
  5848                           ; BSR set to: 0
  5849   00152C  EE20  F072         	lfsr	2,___aodiv@quotient
  5850   001530  0E07               	movlw	7
  5851   001532                     u2631:
  5852   001532  6ADE               	clrf	postinc2,c
  5853   001534  06E8               	decf	wreg,f,c
  5854   001536  E2FD               	bc	u2631
  5855   001538                     
  5856                           ; BSR set to: 0
  5857   001538  5168               	movf	___aodiv@divisor& (0+255),w,b
  5858   00153A  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  5859   00153C  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  5860   00153E  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  5861   001540  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  5862   001542  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  5863   001544  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  5864   001546  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  5865   001548  B4D8               	btfsc	status,2,c
  5866   00154A  EFA9  F00A         	goto	u2641
  5867   00154E  EFAB  F00A         	goto	u2640
  5868   001552                     u2641:
  5869   001552  EFFD  F00A         	goto	l2839
  5870   001556                     u2640:
  5871   001556                     
  5872                           ; BSR set to: 0
  5873   001556  0E01               	movlw	1
  5874   001558  6F70               	movwf	___aodiv@counter& (0+255),b
  5875   00155A  EFB9  F00A         	goto	l2825
  5876   00155E                     l2823:
  5877                           
  5878                           ; BSR set to: 0
  5879   00155E  90D8               	bcf	status,0,c
  5880   001560  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  5881   001562  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  5882   001564  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  5883   001566  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  5884   001568  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  5885   00156A  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  5886   00156C  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  5887   00156E  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  5888   001570  2B70               	incf	___aodiv@counter& (0+255),f,b
  5889   001572                     l2825:
  5890                           
  5891                           ; BSR set to: 0
  5892   001572  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  5893   001574  EFBE  F00A         	goto	u2651
  5894   001578  EFC0  F00A         	goto	u2650
  5895   00157C                     u2651:
  5896   00157C  EFAF  F00A         	goto	l2823
  5897   001580                     u2650:
  5898   001580                     l2827:
  5899                           
  5900                           ; BSR set to: 0
  5901   001580  90D8               	bcf	status,0,c
  5902   001582  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  5903   001584  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  5904   001586  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  5905   001588  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  5906   00158A  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  5907   00158C  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  5908   00158E  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  5909   001590  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  5910   001592                     
  5911                           ; BSR set to: 0
  5912   001592  5168               	movf	___aodiv@divisor& (0+255),w,b
  5913   001594  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  5914   001596  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  5915   001598  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  5916   00159A  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  5917   00159C  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  5918   00159E  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  5919   0015A0  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  5920   0015A2  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5921   0015A4  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  5922   0015A6  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5923   0015A8  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  5924   0015AA  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5925   0015AC  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  5926   0015AE  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5927   0015B0  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  5928   0015B2  A0D8               	btfss	status,0,c
  5929   0015B4  EFDE  F00A         	goto	u2661
  5930   0015B8  EFE0  F00A         	goto	u2660
  5931   0015BC                     u2661:
  5932   0015BC  EFF1  F00A         	goto	l2835
  5933   0015C0                     u2660:
  5934   0015C0                     
  5935                           ; BSR set to: 0
  5936   0015C0  5168               	movf	___aodiv@divisor& (0+255),w,b
  5937   0015C2  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  5938   0015C4  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  5939   0015C6  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  5940   0015C8  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  5941   0015CA  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  5942   0015CC  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  5943   0015CE  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  5944   0015D0  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5945   0015D2  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  5946   0015D4  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5947   0015D6  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  5948   0015D8  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5949   0015DA  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  5950   0015DC  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5951   0015DE  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  5952   0015E0                     
  5953                           ; BSR set to: 0
  5954   0015E0  8172               	bsf	___aodiv@quotient& (0+255),0,b
  5955   0015E2                     l2835:
  5956                           
  5957                           ; BSR set to: 0
  5958   0015E2  90D8               	bcf	status,0,c
  5959   0015E4  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  5960   0015E6  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  5961   0015E8  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  5962   0015EA  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  5963   0015EC  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  5964   0015EE  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  5965   0015F0  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  5966   0015F2  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  5967   0015F4                     
  5968                           ; BSR set to: 0
  5969   0015F4  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  5970   0015F6  EFC0  F00A         	goto	l2827
  5971   0015FA                     l2839:
  5972                           
  5973                           ; BSR set to: 0
  5974   0015FA  5171               	movf	___aodiv@sign& (0+255),w,b
  5975   0015FC  B4D8               	btfsc	status,2,c
  5976   0015FE  EF03  F00B         	goto	u2671
  5977   001602  EF05  F00B         	goto	u2670
  5978   001606                     u2671:
  5979   001606  EF15  F00B         	goto	l2843
  5980   00160A                     u2670:
  5981   00160A                     
  5982                           ; BSR set to: 0
  5983   00160A  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  5984   00160C  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  5985   00160E  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  5986   001610  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  5987   001612  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  5988   001614  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  5989   001616  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  5990   001618  6D72               	negf	___aodiv@quotient& (0+255),b
  5991   00161A  0E00               	movlw	0
  5992   00161C  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  5993   00161E  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  5994   001620  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  5995   001622  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  5996   001624  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  5997   001626  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  5998   001628  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  5999   00162A                     l2843:
  6000                           
  6001                           ; BSR set to: 0
  6002   00162A  C072  F060         	movff	___aodiv@quotient,?___aodiv
  6003   00162E  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  6004   001632  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  6005   001636  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  6006   00163A  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  6007   00163E  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  6008   001642  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  6009   001646  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  6010   00164A                     
  6011                           ; BSR set to: 0
  6012   00164A  0012               	return		;funcret
  6013   00164C                     __end_of___aodiv:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function _HighISR *****************
  6017 ;; Defined at:
  6018 ;;		line 25 in file "interrupts.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6034 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6036 ;;Total ram usage:        5 bytes
  6037 ;; Hardware stack levels used: 1
  6038 ;; Hardware stack levels required when called: 3
  6039 ;; This function calls:
  6040 ;;		_increment_time
  6041 ;; This function is called by:
  6042 ;;		Interrupt level 2
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	intcode
  6047   000008                     __pintcode:
  6048                           	callstack 0
  6049   000008                     _HighISR:
  6050                           	callstack 18
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;incstack = 0
  6054   000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6055   00000A  CFE1 F028          	movff	fsr1l,??_HighISR+1
  6056   00000E  CFE2 F029          	movff	fsr1h,??_HighISR+2
  6057   000012  CFD9 F02A          	movff	fsr2l,??_HighISR+3
  6058   000016  CFDA F02B          	movff	fsr2h,??_HighISR+4
  6059   00001A                     
  6060                           ;interrupts.c: 27:  if(PIR2bits.C1IF){
  6061   00001A  010E               	movlb	14	; () banked
  6062   00001C  A135               	btfss	53,0,b	;volatile
  6063   00001E  EF13  F000         	goto	i2u247_41
  6064   000022  EF15  F000         	goto	i2u247_40
  6065   000026                     i2u247_41:
  6066   000026  EF28  F000         	goto	i2l2741
  6067   00002A                     i2u247_40:
  6068   00002A                     
  6069                           ; BSR set to: 14
  6070                           ;interrupts.c: 28:         LATDbits.LATD7 = !LATDbits.LATD7;
  6071   00002A  AE7C               	btfss	124,7,c	;volatile
  6072   00002C  EF1A  F000         	goto	i2u248_41
  6073   000030  EF1E  F000         	goto	i2u248_40
  6074   000034                     i2u248_41:
  6075   000034  6A27               	clrf	??_HighISR^0,c
  6076   000036  2A27               	incf	??_HighISR^0,f,c
  6077   000038  EF1F  F000         	goto	i2u249_48
  6078   00003C                     i2u248_40:
  6079   00003C  6A27               	clrf	??_HighISR^0,c
  6080   00003E                     i2u249_48:
  6081   00003E  3227               	rrcf	??_HighISR^0,f,c
  6082   000040  3227               	rrcf	??_HighISR^0,f,c
  6083   000042  507C               	movf	124,w,c	;volatile
  6084   000044  1827               	xorwf	??_HighISR^0,w,c
  6085   000046  0B7F               	andlw	-129
  6086   000048  1827               	xorwf	??_HighISR^0,w,c
  6087   00004A  6E7C               	movwf	124,c	;volatile
  6088   00004C                     
  6089                           ;interrupts.c: 29:         PIR2bits.C1IF=0;
  6090   00004C  010E               	movlb	14	; () banked
  6091   00004E  9135               	bcf	53,0,b	;volatile
  6092   000050                     i2l2741:
  6093                           
  6094                           ; BSR set to: 14
  6095                           ;interrupts.c: 31:     if(PIR0bits.TMR0IF){
  6096   000050  AB33               	btfss	51,5,b	;volatile
  6097   000052  EF2D  F000         	goto	i2u250_41
  6098   000056  EF2F  F000         	goto	i2u250_40
  6099   00005A                     i2u250_41:
  6100   00005A  EF4E  F000         	goto	i2l168
  6101   00005E                     i2u250_40:
  6102   00005E                     
  6103                           ; BSR set to: 14
  6104                           ;interrupts.c: 33:         increment_time(1);
  6105   00005E  0E01               	movlw	1
  6106   000060  6E23               	movwf	increment_time@increment^0,c
  6107   000062  0E00               	movlw	0
  6108   000064  6E24               	movwf	(increment_time@increment+1)^0,c
  6109   000066  0E00               	movlw	0
  6110   000068  6E25               	movwf	(increment_time@increment+2)^0,c
  6111   00006A  0E00               	movlw	0
  6112   00006C  6E26               	movwf	(increment_time@increment+3)^0,c
  6113   00006E  EC20  F010         	call	_increment_time	;wreg free
  6114   000072                     
  6115                           ;interrupts.c: 35:         if(test_mode == 0){
  6116   000072  5046               	movf	_test_mode^0,w,c
  6117   000074  1047               	iorwf	(_test_mode+1)^0,w,c
  6118   000076  A4D8               	btfss	status,2,c
  6119   000078  EF40  F000         	goto	i2u251_41
  6120   00007C  EF42  F000         	goto	i2u251_40
  6121   000080                     i2u251_41:
  6122   000080  EF48  F000         	goto	i2l2749
  6123   000084                     i2u251_40:
  6124   000084                     
  6125                           ;interrupts.c: 36:             TMR0H = 0b1011;
  6126   000084  0E0B               	movlw	11
  6127   000086  6ED4               	movwf	212,c	;volatile
  6128                           
  6129                           ;interrupts.c: 37:             TMR0L = 0b11011011;
  6130   000088  0EDB               	movlw	219
  6131   00008A  6ED3               	movwf	211,c	;volatile
  6132                           
  6133                           ;interrupts.c: 38:         }else{
  6134   00008C  EF4C  F000         	goto	i2l2751
  6135   000090                     i2l2749:
  6136                           
  6137                           ;interrupts.c: 39:             TMR0H = 0;
  6138   000090  0E00               	movlw	0
  6139   000092  6ED4               	movwf	212,c	;volatile
  6140                           
  6141                           ;interrupts.c: 40:             TMR0L = 0;
  6142   000094  0E00               	movlw	0
  6143   000096  6ED3               	movwf	211,c	;volatile
  6144   000098                     i2l2751:
  6145                           
  6146                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  6147   000098  010E               	movlb	14	; () banked
  6148   00009A  9B33               	bcf	51,5,b	;volatile
  6149   00009C                     i2l168:
  6150                           
  6151                           ; BSR set to: 14
  6152   00009C  C02B  FFDA         	movff	??_HighISR+4,fsr2h
  6153   0000A0  C02A  FFD9         	movff	??_HighISR+3,fsr2l
  6154   0000A4  C029  FFE2         	movff	??_HighISR+2,fsr1h
  6155   0000A8  C028  FFE1         	movff	??_HighISR+1,fsr1l
  6156   0000AC  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6157   0000AE  0011               	retfie		f
  6158   0000B0                     __end_of_HighISR:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _increment_time *****************
  6162 ;; Defined at:
  6163 ;;		line 90 in file "timers.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  increment       4   34[COMRAM] unsigned long 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;Total ram usage:        4 bytes
  6182 ;; Hardware stack levels used: 1
  6183 ;; Hardware stack levels required when called: 2
  6184 ;; This function calls:
  6185 ;;		_increment_day
  6186 ;;		i2___lmul
  6187 ;; This function is called by:
  6188 ;;		_HighISR
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text39
  6193   002040                     __ptext39:
  6194                           	callstack 0
  6195   002040                     _increment_time:
  6196                           	callstack 18
  6197   002040                     
  6198                           ;timers.c: 91:     while(increment > 0){
  6199   002040  EF73  F010         	goto	i2l2551
  6200   002044                     i2l2537:
  6201                           
  6202                           ;timers.c: 92:         if(test_mode == 0){
  6203   002044  5046               	movf	_test_mode^0,w,c
  6204   002046  1047               	iorwf	(_test_mode+1)^0,w,c
  6205   002048  A4D8               	btfss	status,2,c
  6206   00204A  EF29  F010         	goto	i2u214_41
  6207   00204E  EF2B  F010         	goto	i2u214_40
  6208   002052                     i2u214_41:
  6209   002052  EF36  F010         	goto	i2l2541
  6210   002056                     i2u214_40:
  6211   002056                     
  6212                           ;timers.c: 93:             time_counter += increment;
  6213   002056  5023               	movf	increment_time@increment^0,w,c
  6214   002058  0100               	movlb	0	; () banked
  6215   00205A  27F0               	addwf	_time_counter& (0+255),f,b
  6216   00205C  5024               	movf	(increment_time@increment+1)^0,w,c
  6217   00205E  23F1               	addwfc	(_time_counter+1)& (0+255),f,b
  6218   002060  5025               	movf	(increment_time@increment+2)^0,w,c
  6219   002062  23F2               	addwfc	(_time_counter+2)& (0+255),f,b
  6220   002064  5026               	movf	(increment_time@increment+3)^0,w,c
  6221   002066  23F3               	addwfc	(_time_counter+3)& (0+255),f,b
  6222                           
  6223                           ;timers.c: 94:         }else{
  6224   002068  EF51  F010         	goto	i2l2543
  6225   00206C                     i2l2541:
  6226                           
  6227                           ;timers.c: 95:             time_counter += increment*15;
  6228   00206C  C023  F001         	movff	increment_time@increment,i2___lmul@multiplier
  6229   002070  C024  F002         	movff	increment_time@increment+1,i2___lmul@multiplier+1
  6230   002074  C025  F003         	movff	increment_time@increment+2,i2___lmul@multiplier+2
  6231   002078  C026  F004         	movff	increment_time@increment+3,i2___lmul@multiplier+3
  6232   00207C  0E0F               	movlw	15
  6233   00207E  6E05               	movwf	i2___lmul@multiplicand^0,c
  6234   002080  0E00               	movlw	0
  6235   002082  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  6236   002084  0E00               	movlw	0
  6237   002086  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  6238   002088  0E00               	movlw	0
  6239   00208A  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  6240   00208C  EC4E  F012         	call	i2___lmul	;wreg free
  6241   002090  5001               	movf	?i2___lmul^0,w,c
  6242   002092  0100               	movlb	0	; () banked
  6243   002094  27F0               	addwf	_time_counter& (0+255),f,b
  6244   002096  5002               	movf	(?i2___lmul+1)^0,w,c
  6245   002098  23F1               	addwfc	(_time_counter+1)& (0+255),f,b
  6246   00209A  5003               	movf	(?i2___lmul+2)^0,w,c
  6247   00209C  23F2               	addwfc	(_time_counter+2)& (0+255),f,b
  6248   00209E  5004               	movf	(?i2___lmul+3)^0,w,c
  6249   0020A0  23F3               	addwfc	(_time_counter+3)& (0+255),f,b
  6250   0020A2                     i2l2543:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;timers.c: 97:         if(time_counter >= 86400){
  6254   0020A2  51F3               	movf	(_time_counter+3)& (0+255),w,b
  6255   0020A4  E10D               	bnz	i2u215_40
  6256   0020A6  0E80               	movlw	128
  6257   0020A8  5DF0               	subwf	_time_counter& (0+255),w,b
  6258   0020AA  0E51               	movlw	81
  6259   0020AC  59F1               	subwfb	(_time_counter+1)& (0+255),w,b
  6260   0020AE  0E01               	movlw	1
  6261   0020B0  59F2               	subwfb	(_time_counter+2)& (0+255),w,b
  6262   0020B2  A0D8               	btfss	status,0,c
  6263   0020B4  EF5E  F010         	goto	i2u215_41
  6264   0020B8  EF60  F010         	goto	i2u215_40
  6265   0020BC                     i2u215_41:
  6266   0020BC  EF6E  F010         	goto	i2l2549
  6267   0020C0                     i2u215_40:
  6268   0020C0                     
  6269                           ; BSR set to: 0
  6270                           ;timers.c: 98:             time_counter = 0;
  6271   0020C0  0E00               	movlw	0
  6272   0020C2  6FF0               	movwf	_time_counter& (0+255),b
  6273   0020C4  0E00               	movlw	0
  6274   0020C6  6FF1               	movwf	(_time_counter+1)& (0+255),b
  6275   0020C8  0E00               	movlw	0
  6276   0020CA  6FF2               	movwf	(_time_counter+2)& (0+255),b
  6277   0020CC  0E00               	movlw	0
  6278   0020CE  6FF3               	movwf	(_time_counter+3)& (0+255),b
  6279   0020D0                     
  6280                           ; BSR set to: 0
  6281                           ;timers.c: 99:             increment_day(1);
  6282   0020D0  0E00               	movlw	0
  6283   0020D2  6E04               	movwf	(increment_day@increment+1)^0,c
  6284   0020D4  0E01               	movlw	1
  6285   0020D6  6E03               	movwf	increment_day@increment^0,c
  6286   0020D8  EC0A  F00E         	call	_increment_day	;wreg free
  6287   0020DC                     i2l2549:
  6288                           
  6289                           ;timers.c: 101:     increment -= 1;
  6290   0020DC  0623               	decf	increment_time@increment^0,f,c
  6291   0020DE  0E00               	movlw	0
  6292   0020E0  5A24               	subwfb	(increment_time@increment+1)^0,f,c
  6293   0020E2  5A25               	subwfb	(increment_time@increment+2)^0,f,c
  6294   0020E4  5A26               	subwfb	(increment_time@increment+3)^0,f,c
  6295   0020E6                     i2l2551:
  6296                           
  6297                           ;timers.c: 91:     while(increment > 0){
  6298   0020E6  5023               	movf	increment_time@increment^0,w,c
  6299   0020E8  1024               	iorwf	(increment_time@increment+1)^0,w,c
  6300   0020EA  1025               	iorwf	(increment_time@increment+2)^0,w,c
  6301   0020EC  1026               	iorwf	(increment_time@increment+3)^0,w,c
  6302   0020EE  A4D8               	btfss	status,2,c
  6303   0020F0  EF7C  F010         	goto	i2u216_41
  6304   0020F4  EF7E  F010         	goto	i2u216_40
  6305   0020F8                     i2u216_41:
  6306   0020F8  EF22  F010         	goto	i2l2537
  6307   0020FC                     i2u216_40:
  6308   0020FC  0012               	return		;funcret
  6309   0020FE                     __end_of_increment_time:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function i2___lmul *****************
  6313 ;; Defined at:
  6314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  multiplier      4    0[COMRAM] unsigned long 
  6317 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  product         4    8[COMRAM] unsigned long 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  4    0[COMRAM] unsigned long 
  6322 ;; Registers used:
  6323 ;;		wreg, status,2, status,0
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6329 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;Total ram usage:       12 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_increment_time
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text40
  6343   00249C                     __ptext40:
  6344                           	callstack 0
  6345   00249C                     i2___lmul:
  6346                           	callstack 19
  6347   00249C  0E00               	movlw	0
  6348   00249E  6E09               	movwf	i2___lmul@product^0,c
  6349   0024A0  0E00               	movlw	0
  6350   0024A2  6E0A               	movwf	(i2___lmul@product+1)^0,c
  6351   0024A4  0E00               	movlw	0
  6352   0024A6  6E0B               	movwf	(i2___lmul@product+2)^0,c
  6353   0024A8  0E00               	movlw	0
  6354   0024AA  6E0C               	movwf	(i2___lmul@product+3)^0,c
  6355   0024AC                     i2l2381:
  6356   0024AC  A001               	btfss	i2___lmul@multiplier^0,0,c
  6357   0024AE  EF5B  F012         	goto	i2u197_41
  6358   0024B2  EF5D  F012         	goto	i2u197_40
  6359   0024B6                     i2u197_41:
  6360   0024B6  EF65  F012         	goto	i2l2385
  6361   0024BA                     i2u197_40:
  6362   0024BA  5005               	movf	i2___lmul@multiplicand^0,w,c
  6363   0024BC  2609               	addwf	i2___lmul@product^0,f,c
  6364   0024BE  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  6365   0024C0  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  6366   0024C2  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  6367   0024C4  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  6368   0024C6  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  6369   0024C8  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  6370   0024CA                     i2l2385:
  6371   0024CA  90D8               	bcf	status,0,c
  6372   0024CC  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  6373   0024CE  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  6374   0024D0  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  6375   0024D2  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  6376   0024D4  90D8               	bcf	status,0,c
  6377   0024D6  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  6378   0024D8  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  6379   0024DA  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  6380   0024DC  3201               	rrcf	i2___lmul@multiplier^0,f,c
  6381   0024DE  5001               	movf	i2___lmul@multiplier^0,w,c
  6382   0024E0  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  6383   0024E2  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  6384   0024E4  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  6385   0024E6  A4D8               	btfss	status,2,c
  6386   0024E8  EF78  F012         	goto	i2u198_41
  6387   0024EC  EF7A  F012         	goto	i2u198_40
  6388   0024F0                     i2u198_41:
  6389   0024F0  EF56  F012         	goto	i2l2381
  6390   0024F4                     i2u198_40:
  6391   0024F4  C009  F001         	movff	i2___lmul@product,?i2___lmul
  6392   0024F8  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  6393   0024FC  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  6394   002500  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  6395   002504  0012               	return		;funcret
  6396   002506                     __end_ofi2___lmul:
  6397                           	callstack 0
  6398                           
  6399 ;; *************** function _increment_day *****************
  6400 ;; Defined at:
  6401 ;;		line 105 in file "timers.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  increment       2    2[COMRAM] unsigned int 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  day_in_month   24    8[COMRAM] unsigned int [12]
  6406 ;;  curr_day_in_    2   32[COMRAM] unsigned int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;Total ram usage:       32 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 1
  6423 ;; This function calls:
  6424 ;;		_increment_month
  6425 ;; This function is called by:
  6426 ;;		_increment_time
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text41
  6431   001C14                     __ptext41:
  6432                           	callstack 0
  6433   001C14                     _increment_day:
  6434                           	callstack 18
  6435   001C14                     
  6436                           ;timers.c: 106:     while(increment > 0){
  6437   001C14  EF77  F00E         	goto	i2l2263
  6438   001C18                     i2l2237:
  6439                           
  6440                           ;timers.c: 108:         unsigned int day_in_month[] = {31,28,31,30,31,30,31,31,30,31,30,
      +                          31};
  6441   001C18  EE21  F020         	lfsr	2,increment_day@F14261
  6442   001C1C  EE10  F009         	lfsr	1,increment_day@day_in_month
  6443   001C20  0E17               	movlw	23
  6444   001C22                     i2u172_41:
  6445   001C22  CFDB FFE3          	movff	plusw2,plusw1
  6446   001C26  06E8               	decf	wreg,f,c
  6447   001C28  E2FC               	bc	i2u172_41
  6448   001C2A                     
  6449                           ;timers.c: 109:         unsigned int curr_day_in_month = day_in_month[month - 1];
  6450   001C2A  C040  F005         	movff	_month,??_increment_day
  6451   001C2E  C041  F006         	movff	_month+1,??_increment_day+1
  6452   001C32  90D8               	bcf	status,0,c
  6453   001C34  3605               	rlcf	??_increment_day^0,f,c
  6454   001C36  3606               	rlcf	(??_increment_day+1)^0,f,c
  6455   001C38  0EFE               	movlw	254
  6456   001C3A  2405               	addwf	??_increment_day^0,w,c
  6457   001C3C  6E07               	movwf	(??_increment_day+2)^0,c
  6458   001C3E  0EFF               	movlw	255
  6459   001C40  2006               	addwfc	(??_increment_day+1)^0,w,c
  6460   001C42  6E08               	movwf	(??_increment_day+3)^0,c
  6461   001C44  0E09               	movlw	low increment_day@day_in_month
  6462   001C46  2407               	addwf	(??_increment_day+2)^0,w,c
  6463   001C48  6ED9               	movwf	fsr2l,c
  6464   001C4A  0E00               	movlw	high increment_day@day_in_month
  6465   001C4C  2008               	addwfc	(??_increment_day+3)^0,w,c
  6466   001C4E  6EDA               	movwf	fsr2h,c
  6467   001C50  CFDE F021          	movff	postinc2,increment_day@curr_day_in_month
  6468   001C54  CFDD F022          	movff	postdec2,increment_day@curr_day_in_month+1
  6469   001C58                     
  6470                           ;timers.c: 110:         if(month == 2 && (year - 2020)%4 == 0){
  6471   001C58  0E02               	movlw	2
  6472   001C5A  1840               	xorwf	_month^0,w,c
  6473   001C5C  1041               	iorwf	(_month+1)^0,w,c
  6474   001C5E  A4D8               	btfss	status,2,c
  6475   001C60  EF34  F00E         	goto	i2u173_41
  6476   001C64  EF36  F00E         	goto	i2u173_40
  6477   001C68                     i2u173_41:
  6478   001C68  EF4D  F00E         	goto	i2l2247
  6479   001C6C                     i2u173_40:
  6480   001C6C  0E1C               	movlw	28
  6481   001C6E  243E               	addwf	_year^0,w,c
  6482   001C70  6E05               	movwf	??_increment_day^0,c
  6483   001C72  0EF8               	movlw	248
  6484   001C74  203F               	addwfc	(_year+1)^0,w,c
  6485   001C76  6E06               	movwf	(??_increment_day+1)^0,c
  6486   001C78  0E03               	movlw	3
  6487   001C7A  1605               	andwf	??_increment_day^0,f,c
  6488   001C7C  0E00               	movlw	0
  6489   001C7E  1606               	andwf	(??_increment_day+1)^0,f,c
  6490   001C80  5005               	movf	??_increment_day^0,w,c
  6491   001C82  1006               	iorwf	(??_increment_day+1)^0,w,c
  6492   001C84  A4D8               	btfss	status,2,c
  6493   001C86  EF47  F00E         	goto	i2u174_41
  6494   001C8A  EF49  F00E         	goto	i2u174_40
  6495   001C8E                     i2u174_41:
  6496   001C8E  EF4D  F00E         	goto	i2l2247
  6497   001C92                     i2u174_40:
  6498   001C92                     
  6499                           ;timers.c: 111:             curr_day_in_month = 29;
  6500   001C92  0E00               	movlw	0
  6501   001C94  6E22               	movwf	(increment_day@curr_day_in_month+1)^0,c
  6502   001C96  0E1D               	movlw	29
  6503   001C98  6E21               	movwf	increment_day@curr_day_in_month^0,c
  6504   001C9A                     i2l2247:
  6505                           
  6506                           ;timers.c: 114:         day += 1;
  6507   001C9A  4A42               	infsnz	_day^0,f,c
  6508   001C9C  2A43               	incf	(_day+1)^0,f,c
  6509   001C9E                     
  6510                           ;timers.c: 115:         day_of_the_week += 1;
  6511   001C9E  4A44               	infsnz	_day_of_the_week^0,f,c
  6512   001CA0  2A45               	incf	(_day_of_the_week+1)^0,f,c
  6513   001CA2                     
  6514                           ;timers.c: 117:         if(day_of_the_week == 8){
  6515   001CA2  0E08               	movlw	8
  6516   001CA4  1844               	xorwf	_day_of_the_week^0,w,c
  6517   001CA6  1045               	iorwf	(_day_of_the_week+1)^0,w,c
  6518   001CA8  A4D8               	btfss	status,2,c
  6519   001CAA  EF59  F00E         	goto	i2u175_41
  6520   001CAE  EF5B  F00E         	goto	i2u175_40
  6521   001CB2                     i2u175_41:
  6522   001CB2  EF5F  F00E         	goto	i2l2255
  6523   001CB6                     i2u175_40:
  6524   001CB6                     
  6525                           ;timers.c: 118:             day_of_the_week = 1;
  6526   001CB6  0E00               	movlw	0
  6527   001CB8  6E45               	movwf	(_day_of_the_week+1)^0,c
  6528   001CBA  0E01               	movlw	1
  6529   001CBC  6E44               	movwf	_day_of_the_week^0,c
  6530   001CBE                     i2l2255:
  6531                           
  6532                           ;timers.c: 121:         if(day > curr_day_in_month){
  6533   001CBE  5042               	movf	_day^0,w,c
  6534   001CC0  5C21               	subwf	increment_day@curr_day_in_month^0,w,c
  6535   001CC2  5043               	movf	(_day+1)^0,w,c
  6536   001CC4  5822               	subwfb	(increment_day@curr_day_in_month+1)^0,w,c
  6537   001CC6  B0D8               	btfsc	status,0,c
  6538   001CC8  EF68  F00E         	goto	i2u176_41
  6539   001CCC  EF6A  F00E         	goto	i2u176_40
  6540   001CD0                     i2u176_41:
  6541   001CD0  EF74  F00E         	goto	i2l2261
  6542   001CD4                     i2u176_40:
  6543   001CD4                     
  6544                           ;timers.c: 122:             increment_month(1);
  6545   001CD4  0E00               	movlw	0
  6546   001CD6  6E02               	movwf	(increment_month@increment+1)^0,c
  6547   001CD8  0E01               	movlw	1
  6548   001CDA  6E01               	movwf	increment_month@increment^0,c
  6549   001CDC  EC75  F013         	call	_increment_month	;wreg free
  6550   001CE0                     
  6551                           ;timers.c: 123:             day = 1;
  6552   001CE0  0E00               	movlw	0
  6553   001CE2  6E43               	movwf	(_day+1)^0,c
  6554   001CE4  0E01               	movlw	1
  6555   001CE6  6E42               	movwf	_day^0,c
  6556   001CE8                     i2l2261:
  6557                           
  6558                           ;timers.c: 126:         increment -= 1;
  6559   001CE8  0603               	decf	increment_day@increment^0,f,c
  6560   001CEA  A0D8               	btfss	status,0,c
  6561   001CEC  0604               	decf	(increment_day@increment+1)^0,f,c
  6562   001CEE                     i2l2263:
  6563                           
  6564                           ;timers.c: 106:     while(increment > 0){
  6565   001CEE  5003               	movf	increment_day@increment^0,w,c
  6566   001CF0  1004               	iorwf	(increment_day@increment+1)^0,w,c
  6567   001CF2  A4D8               	btfss	status,2,c
  6568   001CF4  EF7E  F00E         	goto	i2u177_41
  6569   001CF8  EF80  F00E         	goto	i2u177_40
  6570   001CFC                     i2u177_41:
  6571   001CFC  EF0C  F00E         	goto	i2l2237
  6572   001D00                     i2u177_40:
  6573   001D00  0012               	return		;funcret
  6574   001D02                     __end_of_increment_day:
  6575                           	callstack 0
  6576                           
  6577 ;; *************** function _increment_month *****************
  6578 ;; Defined at:
  6579 ;;		line 143 in file "timers.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  increment       2    0[COMRAM] unsigned int 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      void 
  6586 ;; Registers used:
  6587 ;;		wreg, status,2, status,0
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6597 ;;Total ram usage:        2 bytes
  6598 ;; Hardware stack levels used: 1
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_increment_day
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text42
  6607   0026EA                     __ptext42:
  6608                           	callstack 0
  6609   0026EA                     _increment_month:
  6610                           	callstack 18
  6611   0026EA                     
  6612                           ;timers.c: 144:     while(increment > 0){
  6613   0026EA  EF8D  F013         	goto	i2l2209
  6614   0026EE                     i2l2199:
  6615                           
  6616                           ;timers.c: 146:         month += 1;
  6617   0026EE  4A40               	infsnz	_month^0,f,c
  6618   0026F0  2A41               	incf	(_month+1)^0,f,c
  6619   0026F2                     
  6620                           ;timers.c: 147:         if(month > 12){
  6621   0026F2  5041               	movf	(_month+1)^0,w,c
  6622   0026F4  E109               	bnz	i2u168_40
  6623   0026F6  0E0D               	movlw	13
  6624   0026F8  5C40               	subwf	_month^0,w,c
  6625   0026FA  A0D8               	btfss	status,0,c
  6626   0026FC  EF82  F013         	goto	i2u168_41
  6627   002700  EF84  F013         	goto	i2u168_40
  6628   002704                     i2u168_41:
  6629   002704  EF8A  F013         	goto	i2l2207
  6630   002708                     i2u168_40:
  6631   002708                     
  6632                           ;timers.c: 148:             month = 1;
  6633   002708  0E00               	movlw	0
  6634   00270A  6E41               	movwf	(_month+1)^0,c
  6635   00270C  0E01               	movlw	1
  6636   00270E  6E40               	movwf	_month^0,c
  6637   002710                     
  6638                           ;timers.c: 149:             year += 1;
  6639   002710  4A3E               	infsnz	_year^0,f,c
  6640   002712  2A3F               	incf	(_year+1)^0,f,c
  6641   002714                     i2l2207:
  6642                           
  6643                           ;timers.c: 151:         increment -= 1;
  6644   002714  0601               	decf	increment_month@increment^0,f,c
  6645   002716  A0D8               	btfss	status,0,c
  6646   002718  0602               	decf	(increment_month@increment+1)^0,f,c
  6647   00271A                     i2l2209:
  6648                           
  6649                           ;timers.c: 144:     while(increment > 0){
  6650   00271A  5001               	movf	increment_month@increment^0,w,c
  6651   00271C  1002               	iorwf	(increment_month@increment+1)^0,w,c
  6652   00271E  A4D8               	btfss	status,2,c
  6653   002720  EF94  F013         	goto	i2u169_41
  6654   002724  EF96  F013         	goto	i2u169_40
  6655   002728                     i2u169_41:
  6656   002728  EF77  F013         	goto	i2l2199
  6657   00272C                     i2u169_40:
  6658   00272C  0012               	return		;funcret
  6659   00272E                     __end_of_increment_month:
  6660                           	callstack 0
  6661                           
  6662                           	psect	rparam
  6663   000000                     
  6664                           	psect	temp
  6665   000048                     btemp:
  6666                           	callstack 0
  6667   000048                     	ds	1
  6668   000000                     int$flags	set	btemp
  6669   000000                     wtemp8	set	btemp+1
  6670   000000                     ttemp5	set	btemp+1
  6671   000000                     ttemp6	set	btemp+4
  6672   000000                     ttemp7	set	btemp+8
  6673                           
  6674                           	psect	idloc
  6675                           
  6676                           ;Config register IDLOC0 @ 0x200000
  6677                           ;	unspecified, using default values
  6678   200000                     	org	2097152
  6679   200000  0FFF               	dw	4095
  6680                           
  6681                           ;Config register IDLOC1 @ 0x200002
  6682                           ;	unspecified, using default values
  6683   200002                     	org	2097154
  6684   200002  0FFF               	dw	4095
  6685                           
  6686                           ;Config register IDLOC2 @ 0x200004
  6687                           ;	unspecified, using default values
  6688   200004                     	org	2097156
  6689   200004  0FFF               	dw	4095
  6690                           
  6691                           ;Config register IDLOC3 @ 0x200006
  6692                           ;	unspecified, using default values
  6693   200006                     	org	2097158
  6694   200006  0FFF               	dw	4095
  6695                           
  6696                           ;Config register IDLOC4 @ 0x200008
  6697                           ;	unspecified, using default values
  6698   200008                     	org	2097160
  6699   200008  0FFF               	dw	4095
  6700                           
  6701                           ;Config register IDLOC5 @ 0x20000A
  6702                           ;	unspecified, using default values
  6703   20000A                     	org	2097162
  6704   20000A  0FFF               	dw	4095
  6705                           
  6706                           ;Config register IDLOC6 @ 0x20000C
  6707                           ;	unspecified, using default values
  6708   20000C                     	org	2097164
  6709   20000C  0FFF               	dw	4095
  6710                           
  6711                           ;Config register IDLOC7 @ 0x20000E
  6712                           ;	unspecified, using default values
  6713   20000E                     	org	2097166
  6714   20000E  0FFF               	dw	4095
  6715                           
  6716                           	psect	config
  6717                           
  6718                           ;Config register CONFIG1L @ 0x300000
  6719                           ;	External Oscillator mode Selection bits
  6720                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6721                           ;	Power-up default value for COSC bits
  6722                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6723   300000                     	org	3145728
  6724   300000  AA                 	db	170
  6725                           
  6726                           ;Config register CONFIG1H @ 0x300001
  6727                           ;	unspecified, using default values
  6728                           ;	Clock Out Enable bit
  6729                           ;	CLKOUTEN = 0x1, unprogrammed default
  6730                           ;	Clock Switch Enable bit
  6731                           ;	CSWEN = 0x1, unprogrammed default
  6732                           ;	Fail-Safe Clock Monitor Enable bit
  6733                           ;	FCMEN = 0x1, unprogrammed default
  6734   300001                     	org	3145729
  6735   300001  FF                 	db	255
  6736                           
  6737                           ;Config register CONFIG2L @ 0x300002
  6738                           ;	unspecified, using default values
  6739                           ;	Master Clear Enable bit
  6740                           ;	MCLRE = 0x1, unprogrammed default
  6741                           ;	Power-up Timer Enable bit
  6742                           ;	PWRTE = 0x1, unprogrammed default
  6743                           ;	Low-power BOR enable bit
  6744                           ;	LPBOREN = 0x1, unprogrammed default
  6745                           ;	Brown-out Reset Enable bits
  6746                           ;	BOREN = 0x3, unprogrammed default
  6747   300002                     	org	3145730
  6748   300002  FF                 	db	255
  6749                           
  6750                           ;Config register CONFIG2H @ 0x300003
  6751                           ;	unspecified, using default values
  6752                           ;	Brown Out Reset Voltage selection bits
  6753                           ;	BORV = 0x3, unprogrammed default
  6754                           ;	ZCD Disable bit
  6755                           ;	ZCD = 0x1, unprogrammed default
  6756                           ;	PPSLOCK bit One-Way Set Enable bit
  6757                           ;	PPS1WAY = 0x1, unprogrammed default
  6758                           ;	Stack Full/Underflow Reset Enable bit
  6759                           ;	STVREN = 0x1, unprogrammed default
  6760                           ;	Debugger Enable bit
  6761                           ;	DEBUG = 0x1, unprogrammed default
  6762                           ;	Extended Instruction Set Enable bit
  6763                           ;	XINST = 0x1, unprogrammed default
  6764   300003                     	org	3145731
  6765   300003  FF                 	db	255
  6766                           
  6767                           ;Config register CONFIG3L @ 0x300004
  6768                           ;	WDT Period Select bits
  6769                           ;	WDTCPS = 0x1F, unprogrammed default
  6770                           ;	WDT operating mode
  6771                           ;	WDTE = OFF, WDT Disabled
  6772   300004                     	org	3145732
  6773   300004  9F                 	db	159
  6774                           
  6775                           ;Config register CONFIG3H @ 0x300005
  6776                           ;	unspecified, using default values
  6777                           ;	WDT Window Select bits
  6778                           ;	WDTCWS = 0x7, unprogrammed default
  6779                           ;	WDT input clock selector
  6780                           ;	WDTCCS = 0x7, unprogrammed default
  6781   300005                     	org	3145733
  6782   300005  FF                 	db	255
  6783                           
  6784                           ;Config register CONFIG4L @ 0x300006
  6785                           ;	unspecified, using default values
  6786                           ;	Write Protection Block 0
  6787                           ;	WRT0 = 0x1, unprogrammed default
  6788                           ;	Write Protection Block 1
  6789                           ;	WRT1 = 0x1, unprogrammed default
  6790                           ;	Write Protection Block 2
  6791                           ;	WRT2 = 0x1, unprogrammed default
  6792                           ;	Write Protection Block 3
  6793                           ;	WRT3 = 0x1, unprogrammed default
  6794                           ;	Write Protection Block 3
  6795                           ;	WRT4 = 0x1, unprogrammed default
  6796                           ;	Write Protection Block 3
  6797                           ;	WRT5 = 0x1, unprogrammed default
  6798                           ;	Write Protection Block 3
  6799                           ;	WRT6 = 0x1, unprogrammed default
  6800                           ;	Write Protection Block 3
  6801                           ;	WRT7 = 0x1, unprogrammed default
  6802   300006                     	org	3145734
  6803   300006  FF                 	db	255
  6804                           
  6805                           ;Config register CONFIG4H @ 0x300007
  6806                           ;	unspecified, using default values
  6807                           ;	Configuration Register Write Protection bit
  6808                           ;	WRTC = 0x1, unprogrammed default
  6809                           ;	Boot Block Write Protection bit
  6810                           ;	WRTB = 0x1, unprogrammed default
  6811                           ;	Data EEPROM Write Protection bit
  6812                           ;	WRTD = 0x1, unprogrammed default
  6813                           ;	Scanner Enable bit
  6814                           ;	SCANE = 0x1, unprogrammed default
  6815                           ;	Low Voltage Programming Enable bit
  6816                           ;	LVP = 0x1, unprogrammed default
  6817   300007                     	org	3145735
  6818   300007  FF                 	db	255
  6819                           
  6820                           ;Config register CONFIG5L @ 0x300008
  6821                           ;	unspecified, using default values
  6822                           ;	UserNVM Program Memory Code Protection bit
  6823                           ;	CP = 0x1, unprogrammed default
  6824                           ;	DataNVM Memory Code Protection bit
  6825                           ;	CPD = 0x1, unprogrammed default
  6826   300008                     	org	3145736
  6827   300008  FF                 	db	255
  6828                           
  6829                           ;Config register CONFIG5H @ 0x300009
  6830                           ;	unspecified, using default values
  6831   300009                     	org	3145737
  6832   300009  FF                 	db	255
  6833                           
  6834                           ;Config register CONFIG6L @ 0x30000A
  6835                           ;	unspecified, using default values
  6836                           ;	Table Read Protection Block 0
  6837                           ;	EBTR0 = 0x1, unprogrammed default
  6838                           ;	Table Read Protection Block 1
  6839                           ;	EBTR1 = 0x1, unprogrammed default
  6840                           ;	Table Read Protection Block 2
  6841                           ;	EBTR2 = 0x1, unprogrammed default
  6842                           ;	Table Read Protection Block 3
  6843                           ;	EBTR3 = 0x1, unprogrammed default
  6844                           ;	Table Read Protection Block 4
  6845                           ;	EBTR4 = 0x1, unprogrammed default
  6846                           ;	Table Read Protection Block 5
  6847                           ;	EBTR5 = 0x1, unprogrammed default
  6848                           ;	Table Read Protection Block 6
  6849                           ;	EBTR6 = 0x1, unprogrammed default
  6850                           ;	Table Read Protection Block 7
  6851                           ;	EBTR7 = 0x1, unprogrammed default
  6852   30000A                     	org	3145738
  6853   30000A  FF                 	db	255
  6854                           
  6855                           ;Config register CONFIG6H @ 0x30000B
  6856                           ;	unspecified, using default values
  6857                           ;	Boot Block Table Read Protection bit
  6858                           ;	EBTRB = 0x1, unprogrammed default
  6859   30000B                     	org	3145739
  6860   30000B  FF                 	db	255
  6861                           tosu	equ	0xFFF
  6862                           tosh	equ	0xFFE
  6863                           tosl	equ	0xFFD
  6864                           stkptr	equ	0xFFC
  6865                           pclatu	equ	0xFFB
  6866                           pclath	equ	0xFFA
  6867                           pcl	equ	0xFF9
  6868                           tblptru	equ	0xFF8
  6869                           tblptrh	equ	0xFF7
  6870                           tblptrl	equ	0xFF6
  6871                           tablat	equ	0xFF5
  6872                           prodh	equ	0xFF4
  6873                           prodl	equ	0xFF3
  6874                           indf0	equ	0xFEF
  6875                           postinc0	equ	0xFEE
  6876                           postdec0	equ	0xFED
  6877                           preinc0	equ	0xFEC
  6878                           plusw0	equ	0xFEB
  6879                           fsr0h	equ	0xFEA
  6880                           fsr0l	equ	0xFE9
  6881                           wreg	equ	0xFE8
  6882                           indf1	equ	0xFE7
  6883                           postinc1	equ	0xFE6
  6884                           postdec1	equ	0xFE5
  6885                           preinc1	equ	0xFE4
  6886                           plusw1	equ	0xFE3
  6887                           fsr1h	equ	0xFE2
  6888                           fsr1l	equ	0xFE1
  6889                           bsr	equ	0xFE0
  6890                           indf2	equ	0xFDF
  6891                           postinc2	equ	0xFDE
  6892                           postdec2	equ	0xFDD
  6893                           preinc2	equ	0xFDC
  6894                           plusw2	equ	0xFDB
  6895                           fsr2h	equ	0xFDA
  6896                           fsr2l	equ	0xFD9
  6897                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    0
    Data        32
    BSS         55
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      71
    BANK0           160    139     148
    BANK1           256      0      56
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2150$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2097$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2097$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    ADC2String@buf	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    LCD_sendstring@strlst	PTR PTR unsigned char  size(2) Largest target is 16
		 -> main@text(BANK0[16]), 

    main@text	PTR unsigned char [8] size(2) Largest target is 3561
		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[4]), NULL(NULL[0]), RAM(DATA[3561]), 

    main@F14269	PTR unsigned char [8] size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->_increment_time
    _increment_time->_increment_day
    _increment_day->_increment_month

Critical Paths under _main in BANK0

    _main->_ADC2String
    _get_seconds->___lwmod
    _get_minutes->___lwmod
    ___lwmod->___lldiv
    _get_hour->___lwdiv
    ___xxtofl->_get_hour
    _Timer0_init->___lmul
    _LEDarray_disp_bin->___fltol
    _LCD_sendstring->_LCD_setline
    _LCD_setline->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   25136
                                            111 BANK0     28    28      0
                         _ADC2String
                         _ADC_getval
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                             ___flge
                            ___fltol
                           ___xxtofl
                           _get_hour
                        _get_minutes
                        _get_seconds
 ---------------------------------------------------------------------------------
 (1) _get_seconds                                          2     0      2    1132
                                             18 BANK0      2     0      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _get_minutes                                          2     0      2    1553
                                             18 BANK0      2     0      2
                            ___lldiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1132
                                             13 BANK0      5     1      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _get_hour                                             2     0      2     961
                                              7 BANK0      2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     961
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              9 BANK0     14    10      4
                           _get_hour (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     626
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                         22     4     18    1593
                                             12 BANK0     22     4     18
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     746
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     549
                                             10 BANK0      2     0      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       6     4      2    4775
                                              4 BANK0      6     4      2
                       _LCD_sendbyte
                        _LCD_setline
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0    2355
                                              3 BANK0      1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0    2107
                                              3 BANK0      1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    2231
                                              3 BANK0      2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    2107
                                              1 BANK0      2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                              0 BANK0      1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      68
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC2String                                           4     0      4    8098
                                            107 BANK0      4     0      4
                         _ADC_getval (ARG)
                           _get_hour (ARG)
                        _get_minutes (ARG)
                        _get_seconds (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    7316
                                             88 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             80 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             62 BANK0     18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             27 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             5     5      0     533
                                             38 COMRAM     5     5      0
                     _increment_time
 ---------------------------------------------------------------------------------
 (11) _increment_time                                      4     0      4     533
                                             34 COMRAM     4     0      4
                      _increment_day
                           i2___lmul
 ---------------------------------------------------------------------------------
 (12) i2___lmul                                           12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (12) _increment_day                                      32    30      2     246
                                              2 COMRAM    32    30      2
                    _increment_month
 ---------------------------------------------------------------------------------
 (13) _increment_month                                     2     0      2      99
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC2String
     _ADC_getval (ARG)
     _get_hour (ARG)
       ___lwdiv
     _get_minutes (ARG)
       ___lldiv
       ___lwmod
         ___lldiv (ARG)
     _get_seconds (ARG)
       ___lwmod
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _ADC_getval
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
     _LCD_setline
       _LCD_sendbyte
   _LEDarray_disp_bin
     ___fltol (ARG)
   _LEDarray_init
   _Timer0_init
     ___lmul
   ___flge
   ___fltol
   ___xxtofl
     _get_hour (ARG)
   _get_hour
   _get_minutes
   _get_seconds

 _HighISR (ROOT)
   _increment_time
     _increment_day
       _increment_month
     i2___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      38       7       21.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      94       5       92.5%
BITBIGSFRllllhh     84      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      47       1       75.5%
BITBIGSFRlllllh     5C      0       0      42        0.0%
BITBIGSFRhhll       43      0       0      34        0.0%
BITBIGSFRlllllh     33      0       0      41        0.0%
BITBIGSFRllllll     32      0       0      47        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllllhh     14      0       0      36        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllhl      8      0       0      40        0.0%
BITBIGSFRllllll      7      0       0      46        0.0%
BITBIGSFRlllllh      7      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      38        0.0%
BITBIGSFRllllhh      3      0       0      37        0.0%
BITBIGSFRhlh         3      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      43        0.0%
BITBIGSFRllllll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      48        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 07 19:28:40 2022

                      ?_get_minutes 0072                        ?_get_seconds 0072  
                                l30 1EC4                                  l31 1EC6  
                                l40 1F32                                  l32 1EDA  
                                l41 1F34                                  l33 1EDC  
                                l42 1F48                                  l34 1EF0  
                                l43 1F4A                                  l35 1EF2  
                                l27 27A6                                  l44 1F5E  
                                l36 1F06                                  l45 1F60  
                                l37 1F08                                  l46 1F74  
                                l38 1F1C                                  l39 1F1E  
                                l48 1F76                   ??_Interrupts_init 0060  
                               l201 1DE0                                 l210 2848  
                               l131 28CE                                 l107 1108  
                               l108 11C0                                 l213 26E8  
                               l134 2828                                 l310 249A  
                               l302 244A                                 l304 2460  
                               l216 2868                                 l313 2804  
                               l306 2476                                 l331 1C12  
                               l308 248C                                 l316 21B6  
                               l159 28DE                                 l319 265A  
                               l280 27D8                                 l337 1C12  
                               l345 203E                                 l274 28A2  
                               l372 241E                                 l277 27AA  
                               l373 242E                                 l358 2888  
                               l279 27B8                                 l631 1B0E  
                               l626 1AC8                                 l475 164A  
                               l299 28EC                                 l395 225C  
                               l388 224C                                 l488 17B0  
                               l658 1A08                                 l852 2348  
                               l862 2562                                 l859 2350  
                               l869 256A                                 _abs 272E  
                               _day 0042                                 _pad 225E  
                               wreg 000FE8                        ___fltol@exp1 0069  
                              l1101 2766                                l1030 1458  
                              l1023 13FC                                l1104 276E  
                              l1016 1364                                l1019 14C0  
                              ?_abs 0072                                l1116 1EAC  
                              l1124 26A2                                l1061 2282  
                              l1070 0EA4                                l1127 28F6  
                              l1039 25BC                                l1072 0EAC  
                              l1065 22DA                                l1073 0EF2  
                              l1091 1900                                l3003 18D6  
                              l3011 27EA                                l1084 1098  
                              l3021 25E8                                l3013 27F4  
                              l3101 222A                                l3023 2604  
                              l3031 28CC                                l3015 27FC  
                              l3111 22E6                                l3103 223A  
                              l1097 260E                                l3017 25BE  
                              l3009 27DE                                l3041 1B52  
                              l3033 1B14                                l3201 1DAA  
                              l3121 231C                                l3113 22F8  
                              l3105 223C                                l3019 25CA  
                              l3211 288A                                l3027 28BC  
                              l3051 1BA4                                l3043 1B64  
                              l3035 1B26                                l3203 1DAC  
                              l3123 2332                                l3115 2300  
                              l3107 2246                                l3131 2506  
                              l3213 2894                                l3029 28C2  
                              l3221 20FE                                l3061 1BF2  
                              l3053 1BB2                                l3045 1B72  
                              l3037 1B34                                l3205 1DBE  
                              l3301 1A88                                l3125 233A  
                              l3117 2308                                l3109 22DC  
                              l3141 254E                                l3133 251A  
                              l3071 258E                                l3215 289C  
                              l3231 214C                                l3223 2116  
                              l3063 1C04                                l3055 1BC4  
                              l3047 1B84                                l3039 1B44  
                              l3151 1EBE                                l3207 1DD2  
                              l3311 1B0C                                l3303 1A96  
                              l3127 233C                                l3119 2316  
                              l3143 2556                                l3135 2522  
                              l3073 25AA                                l3065 256C  
                              l3217 289E                                l3241 2180  
                              l3233 2158                                l3225 2130  
                              l3057 1BD2                                l3049 1B92  
                              l3161 1F2C                                l3153 1ED4  
                              l3081 23E4                                l3209 1DDE  
                              l3305 1AA8                                l3321 192E  
                              l3129 2342                                l3145 255C  
                              l3137 252A                                l3401 1186  
                              l3067 257E                                l3219 28A0  
                              l3171 2808                                l3243 2192  
                              l3235 2160                                l3227 2136  
                              l3059 1BE4                                l3163 1F42  
                              l3155 1EEA                                l3147 2770  
                              l3083 23F4                                l3307 1AB6  
                              l3331 197C                                l3323 1958  
                              l3315 1902                                l3091 21E0  
                              l3139 2538                                l3411 1276  
                              l3403 11BA                                l3069 2586  
                              l3261 286A                                l3253 27A8  
                              l3181 2824                                l3173 281A  
                              l3245 219E                                l3237 216C  
                              l3229 2144                                l3165 1F58  
                              l3157 1F00                                l3149 1EAE  
                              l3085 23FE                                l3077 23C4  
                              l3309 1B06                                l3341 19A8  
                              l3325 195A                                l3317 191A  
                              l2621 1320                                l3093 21E8  
                              l3421 12BA                                l3413 127E  
                              l3405 11C2                                l3255 27C0  
                              l3175 281C                                l3183 28D0  
                              l3247 21AA                                l3239 2174  
                              l3271 1F78                                l3167 1F6E  
                              l3159 1F16                                l3079 23D6  
                              l3191 1D88                                l3351 19D8  
                              l3327 196A                                l2631 139E  
                              l2623 132E                                l3095 21F4  
                              l3087 21B8                                l3263 282A  
                              l3423 12D0                                l3415 1286  
                              l3407 1260                                l2801 2682  
                              l3257 27D0                                l3177 281E  
                              l3169 2806                                l3281 1FDA  
                              l3193 1D90                                l3185 1D02  
                              l3353 19E8                                l3337 1994  
                              l3329 196E                                l2641 13F2  
                              l2633 13A6                                l2625 1374  
                              l3249 284A                                l3097 2202  
                              l3089 21CA                                l3425 12D8  
                              l3417 128E                                l3409 126C  
                              l2811 14FA                                l2803 14C2  
                              l3179 2820                                l3291 2624  
                              l3283 201C                                l3195 1D98  
                              l3187 1D0A                                l3355 19F8  
                              l3347 19BC                                l3339 199E  
                              l2651 1468                                l2643 142E  
                              l2635 13B2                                l2627 138A  
                              l2619 130E                                l3099 220C  
                              l3267 26A4                                l3427 12FE  
                              l3419 12A4                                l2821 1556  
                              l2813 1508                                l2805 14C8  
                              l2901 28E0                                l3285 2022  
                              l3277 1F82                                l3197 1DA0  
                              l3189 1D80                                l3293 1A0A  
                              l3349 19C8                                l2661 14B0  
                              l2653 146C                                l2645 143A  
                              l2637 13E4                                l2831 15C0  
                              l2823 155E                                l2815 1528  
                              l2807 14D6                                l2911 0E4E  
                              l2903 28E2                                l3287 2610  
                              l3279 1F8C                                l3199 1DA8  
                              l3295 1A3A                                l2655 1490  
                              l2647 1448                                l2639 13E6  
                              l3391 10A6                                l2841 160A  
                              l2833 15E0                                l2825 1572  
                              l2817 152C                                l2809 14F6  
                              l2921 0EC4                                l2913 0E5E  
                              l2905 28EA                                l3289 2618  
                              l3297 1A4A                                l2657 14A0  
                              l2649 1466                                l3393 10AA  
                              l2843 162A                                l2835 15E2  
                              l2827 1580                                l2819 1538  
                              l2851 1660                                l2931 0EFA  
                              l2923 0ECA                                l2915 0E7E  
                              l2907 0E18                                l3299 1A78  
                              l2659 14AE                                l3395 10AE  
                              l2837 15F4                                l2829 1592  
                              l2861 16D0                                l2853 1680  
                              l2781 1DE2                                l2941 0F9A  
                              l2933 0F04                                l2925 0EDA  
                              l2917 0E98                                l2909 0E38  
                              l3397 10FC                                l3389 109A  
                              ?_pad 0070                                l2839 15FA  
                              l2871 1748                                l2863 16D8  
                              l2855 1684                                l2847 164C  
                              l2791 1E66                                l2783 1DF6  
                              l2951 1062                                l2935 0F0A  
                              l2943 0FFE                                l2927 0EE6  
                              l2919 0EB4                                l3399 1100  
                              l2873 175A                                l2865 16EC  
                              l2857 1692                                l2849 1652  
                              l2785 1E08                                l2953 1068  
                              l2945 101A                                l2937 0F8E  
                              l2929 0EEE                                l2961 2444  
                              l2867 16FA                                l2875 1760  
                              l2859 16B2                                l2787 1E12  
                              l2795 265C                                l2891 22A2  
                              l2883 225E                                l2955 1078  
                              l2947 1038                                l2939 0F94  
                              l2971 2478                                l2963 244C  
                              l2877 1770                                l2869 1728  
                              l2789 1E30                                l2797 266A  
                              l2893 22A8                                l2885 226E  
                              l2949 1052                                l2981 17D6  
                              l2973 2486                                l2965 245A  
                              l2879 1790                                l2799 267C  
                              l2895 22C6                                l2887 227A  
                              l2991 1822                                l2983 17E4  
                              l2975 248E                                l2967 2462  
                              l2959 2434                                l2897 272E  
                              l2889 228E                                l2993 183E  
                              l2985 17F2                                l2977 2492  
                              l2969 2470                                l2899 274A  
                              l2995 1894                                l2987 17F6  
                              l2979 17B2                                l2989 1806  
                              l2999 18C4                                STR_1 0E0A  
                              STR_2 0E14                                STR_3 0E11  
                              STR_4 0E01                                STR_5 0E06  
                              STR_6 0E0E                                u3000 1BA4  
                              u3001 1BA0                                u3010 1BC4  
                              u3011 1BC0                                u3020 1BE4  
                              u2300 132E                                u3100 2316  
                              u3021 1BE0                                u2301 132A  
                              u3101 2312                                u3030 1C04  
                              u2310 138A                                u3110 2332  
                              u3031 1C00                                u2311 1386  
                              u3111 232E                                u3200 1F2C  
                              u3040 23E4                                u2320 13E0  
                              u3120 251A                                u3201 1F28  
                              u3041 23E0                                u2321 13DC  
                              u3121 2516                                u3210 1F42  
                              u3050 241E                                u2330 142A  
                              u3130 2538                                u3211 1F3E  
                              u3051 241A                                u2331 1426  
                              u3131 2534                                u3220 1F58  
                              u3300 1A3A                                u2340 1448  
                              u3060 21E0                                u3140 254E  
                              u3221 1F54                                u3301 1A36  
                              u2341 1444                                u3061 21DC  
                              u3141 254A                                u3230 1F6E  
                              u3150 1EBE                                u3310 1A78  
                              u2350 1458                                u3070 2202  
                              u3231 1F6A                                u3151 1EBA  
                              u3311 1A74                                u2351 1454  
                              u3071 21FE                                u2600 26A2  
                              u3160 1ED4                                u3240 1DBE  
                              u3320 1A96                                u3400 19D8  
                              u2360 1466                                u3080 222A  
                              u2601 269E                                u3161 1ED0  
                              u3241 1DBA                                u3321 1A92  
                              u3401 19D4                                u2361 1462  
                              u3081 2226                                u2610 14D6  
                              u3250 27B8                                u3170 1EEA  
                              u3330 1AB6                                u3410 19E8  
                              u2370 14A0                                u2290 1320  
                              u3090 22F8                                u2611 14D2  
                              u3251 27B4                                u3171 1EE6  
                              u3331 1AB2                                u3411 19E4  
                              u2371 149C                                u2291 131C  
                              u3091 22F4                                u2620 1508  
                              u2700 16D0                                u3260 1FD6  
                              u3180 1F00                                u3340 1B06  
                              u2380 14AE                                u2621 1504  
                              u2701 16CC                                u3181 1EFC  
                              u3341 1B02                                u2381 14AA  
                              u2710 16FA                                u3270 200C  
                              u3190 1F16                                u3350 191A  
                              u2631 1532                                u2711 16F6  
                              u3191 1F12                                u3351 1916  
                              u2640 1556                                u2720 1728  
                              u2560 1DF6                                u2800 0E98  
                              u3280 201C                                u3360 194E  
                              u2641 1552                                u2721 1724  
                              u2561 1DF2                                u2801 0E94  
                              u3281 2018                                u2650 1580  
                              u2730 1770                                u2570 1E08  
                              u2810 0EC4                                u3290 203E  
                              u3370 197C                                u2651 157C  
                              u2731 176C                                u2571 1E04  
                              u2811 0EC0                                u3291 203A  
                              u3267 1FCC                                u3371 1978  
                              u2660 15C0                                u2580 1E30  
                              u2740 226E                                u2820 0EDA  
                              u2900 2486                                u3380 1990  
                              u2661 15BC                                u2581 1E2C  
                              u2741 226A                                u2821 0ED6  
                              u2901 2482                                u3277 2002  
                              u3381 198C                                u3365 1944  
                              u2670 160A                                u2590 1E66  
                              u2750 22C6                                u2830 101A  
                              u2910 17D6                                u3390 19B8  
                              u3470 1186                                u2671 1606  
                              u2591 1E62                                u2751 22C2  
                              u2831 1016                                u2911 17D2  
                              u3607 216E                                u3391 19B4  
                              u3471 1182                                u2680 1660  
                              u2760 274A                                u2840 1038  
                              u2920 1822                                u3480 11BA  
                              u2681 165C                                u2761 2746  
                              u2841 1034                                u2921 181E  
                              u3617 2188                                u3537 12F0  
                              u3481 11B6                                u2690 1692  
                              u2850 1052                                u2770 0E4A  
                              u2930 183E                                u2691 168E  
                              u2851 104E                                u2771 0E44  
                              u2931 183A                                u3627 27FE  
                              u3547 2612                                u3491 1266  
                              u2860 1062                                u2780 0E4C  
                              u2861 105E                                u3637 2494  
                              u3557 262C                                u2790 0E5E  
                              u2950 2604                                u2870 2444  
                              u2791 0E5A                                u2951 2600  
                              u3647 28E4                                u2871 2440  
                              u3567 2122                                u2880 245A  
                              u2960 1B26                                u2881 2456  
                              u2945 27E8                                u3577 2138  
                              u2961 1B22                                u2890 2470  
                              u2946 27EA                                u2970 1B44  
                              u2891 246C                                u3587 2146  
                              u2971 1B40                                u2980 1B64  
                              u3597 215A                                u2981 1B60  
                              u2990 1B84                                u2991 1B80  
                              abs@a 0072                                _dbuf 0100  
                              _main 109A                                _dtoa 0E18  
                              _prec 00ED                                _year 003E  
                              pad@i 0077                                pad@p 0074  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 0079  
                              fsr2l 000FD9                                btemp 0048  
                      ?_LCD_setline 0001                                start 00B0  
                  __end_of_ADC_init 28A4                    __end_of_DAC_init 28D0  
                   __end_of_HighISR 00B0                        ___param_bank 000000  
                        _Comp1_init 2806                               ??_abs 0074  
                             ??_pad 0076                    __end_of_LCD_Init 21B8  
                     ___fltol@sign1 0068                     __end_of___aodiv 164C  
                             ?_main 0001                               ?_dtoa 007B  
                   __end_of___aomod 17B2                               _ADPCH 000F5F  
                   __end_of___fltol 1A0A                     __end_of___lldiv 225E  
                   __end_of___lwdiv 2352                     __end_of___lwmod 256C  
                             i2l235 20FC                               i2l246 1D00  
                             i2l168 009C                               i2l259 272C  
                             i2l372 24F4                               i2l373 2504  
                      vfpfcnvrt@fmt 00A0                               _TMR0H 000FD4  
                             _TMR0L 000FD3                 ___lmul@multiplicand 0064  
                             _flags 00EF                               _fputc 1DE2  
                             _fputs 265C                               _month 0040  
                             pad@fp 0070                               _width 00EB  
                             _putch 28F6                               dtoa@d 007D  
                             dtoa@i 009C                               dtoa@n 0093  
                             dtoa@p 008F                               dtoa@s 009B  
                             dtoa@w 0091                       ?_LCD_sendbyte 0061  
                             tablat 000FF5                    __end_ofi2___lmul 2506  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 0049                               ttemp6 004C  
                             ttemp7 0050                               status 000FD8  
                             wtemp8 0049                     __end_of_sprintf 25BE  
                  ?_increment_month 0001                     __initialization 2352  
                      __end_of_main 130A                        __end_of_dtoa 109A  
                      ??_ADC2String 00CF                   __end_of_LCD_E_TOG 28EE  
                            ??_main 00CF                              ??_dtoa 0085  
                     __activetblptr 000002  Timer0_init@current_day_of_the_week 0078  
                 __end_of_LCD_clear 265C                              ?_fputc 0060  
                            ?_fputs 0069                              _ADRESH 000F64  
                     ADC2String@buf 00CB                      ??_LCD_sendbyte 0062  
                            ?_putch 0001                              i2l2201 26F2  
                            i2l2203 2708                              i2l2205 2710  
                            i2l2207 2714                              i2l2209 271A  
                            i2l2241 1C58                              i2l2251 1CA2  
                            i2l2243 1C6C                              i2l2235 1C14  
                            i2l2261 1CE8                              i2l2253 1CB6  
                            i2l2245 1C92                              i2l2237 1C18  
                            i2l2255 1CBE                              i2l2247 1C9A  
                            i2l2239 1C2A                              i2l2263 1CEE  
                            i2l2257 1CD4                              i2l2249 1C9E  
                            i2l2259 1CE0                              i2l2197 26EA  
                            i2l2381 24AC                              i2l2541 206C  
                            i2l2199 26EE                              i2l2383 24BA  
                            i2l2543 20A2                              i2l2551 20E6  
                            i2l2535 2040                              i2l2385 24CA  
                            i2l2545 20C0                              i2l2537 2044  
                            i2l2387 24D4                              i2l2379 249C  
                            i2l2547 20D0                              i2l2539 2056  
                            i2l2549 20DC                              i2l2741 0050  
                            i2l2751 0098                              i2l2743 005E  
                            i2l2735 001A                              i2l2745 0072  
                            i2l2737 002A                              i2l2747 0084  
                            i2l2739 004C                              i2l2749 0090  
                         ??_HighISR 0027                    i2___lmul@product 0009  
                __end_of_ADC2String 288A                       main@curr_hour 00E7  
                  __end_of___xxtofl 14C2                   _LEDarray_disp_bin 1EAE  
                ?_LEDarray_disp_bin 006A                        ??_ADC_getval 0062  
                     ??_Timer0_init 007E                        vfprintf@cfmt 00B6  
                  __end_of_get_hour 286A                              ___flge 1A0A  
                            ___lmul 23C4                           ??___aodiv 0070  
                         ??___aomod 0070                         ?_Comp1_init 0001  
                         ??___fltol 0064                           ??___lldiv 0068  
                         ??___lwdiv 0064                           ??___lwmod 0071  
               ??_LEDarray_disp_bin 006C                              clear_0 2398  
                            clear_1 23B0                              isa$std 000001  
                            pad@buf 0072                       _increment_day 1C14  
                            dtoa@fp 007B                              fputc@c 0060  
                            fputs@c 006D                              fputs@i 006E  
                      __pdataCOMRAM 003E                              fputs@s 0069  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                         ?_ADC_init 0001                              putch@c 0001  
                         ?_DAC_init 0001                    __end_of_vfprintf 2610  
                         ??_sprintf 00BE                  __end_of_ADC_getval 27DA  
                        ___flge@ff1 0060                          ___flge@ff2 0064  
                      ___xxtofl@arg 0073                        ___xxtofl@exp 0072  
         __end_of_LEDarray_disp_bin 1F78                        ___xxtofl@val 0069  
                        __accesstop 0060             __end_of__initialization 23B6  
                         ?_LCD_Init 0001                 increment_day@F14261 0120  
                     ___rparam_used 000001                          ___fltol@f1 0060  
                     _LEDarray_init 2770                     _Interrupts_init 28D0  
                    __pcstackCOMRAM 0001                        __pidataBANK1 28A4  
                     __end_of_fputc 1EAE                       __end_of_fputs 26A4  
                     __end_of_putch 28F8                      ?_increment_day 0003  
               __end_of_Timer0_init 1DE2                           ?i2___lmul 0001  
                        ??_ADC_init 0060                          ??_DAC_init 0060  
                           ??_fputc 0064                             ??_fputs 006D  
                           ??_putch 0060                          __pbssBANK0 00EB  
                        __pbssBANK1 0100                          ??_LCD_Init 0063  
                    _LCD_sendnibble 2430                          __pnvCOMRAM 0046  
                    ?_LEDarray_init 0001                      _LCD_sendstring 1F78  
                           ?___flge 0060                             ?___lmul 0060  
              __end_of_LCD_sendbyte 2806                      ___lmul@product 0068  
                        ??i2___lmul 0009                           ?___xxtofl 0069  
                         ?_get_hour 0067              __end_of_LCD_sendnibble 249C  
           __end_of_Interrupts_init 28E0                             _HighISR 0008  
            __end_of_LCD_sendstring 2040                           _ADREFbits 000F58  
                   LCD_sendstring@i 0068                             __Hparam 0000  
                           __Lparam 0000                         _Timer0_init 1D02  
                           ___aodiv 14C2                             ___aomod 164C  
                           ___fltol 1902                     ??_increment_day 0005  
                           ___lldiv 21B8                             ___lwdiv 22DC  
                           ___lwmod 2506                           ?_vfprintf 00B0  
                      __psmallconst 0E00             increment_time@increment 0023  
                           __pcinit 2352                             __ramtop 0E00  
                           __ptext0 109A                             __ptext1 282A  
                           __ptext2 26A4                             __ptext3 2506  
                           __ptext4 21B8                             __ptext5 284A  
                           __ptext6 22DC                             __ptext7 130A  
                           __ptext8 1902                             __ptext9 1A0A  
            increment_day@increment 0003                          ??___xxtofl 006D  
                         _LCD_E_TOG 28E0                     LCD_setline@line 0063  
                           main@buf 00E5                             _sprintf 256C  
                    _increment_time 2040                          ??_get_hour 0069  
                         _LCD_clear 2610                end_of_initialization 23B6  
                   ?_LCD_sendnibble 0001                    ADC_getval@tmpval 0062  
                           fputc@fp 0062                     ??_LEDarray_init 0060  
                     __Lmediumconst 0000                             fputs@fp 006B  
                   ?_LCD_sendstring 0064           Timer0_init@current_minute 006E  
                   ___lldiv@divisor 0064                     ___lldiv@counter 006C  
                 __end_of_vfpfcnvrt 1902                             postdec1 000FE5  
                           postdec2 000FDD                        ??_Comp1_init 0060  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                    vfpfcnvrt@convarg 00A6  
               i2___lmul@multiplier 0001                          main@F14269 002C  
                        ??_vfprintf 00B6              Timer0_init@current_day 0076  
                         _PORTAbits 000F89                           _PORTBbits 000F8A  
                         _PORTFbits 000F8E                           _PORTGbits 000F8F  
         Timer0_init@init_test_mode 006C                       ___xxtofl@sign 0071  
                        ?_LCD_E_TOG 0001                           _TRISAbits 000F81  
                         _TRISBbits 000F82              __end_of_increment_time 20FE  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                        ?_LCD_clear 0001                  __end_of_Comp1_init 282A  
                       _CM1CON0bits 000ED0                         _CM1CON1bits 000ED1  
                  ?_Interrupts_init 0001                       ??_get_minutes 0074  
                     ??_get_seconds 0074                      __end_of___flge 1B10  
                    __end_of___lmul 2430                         vfpfcnvrt@ap 00A2  
                       vfpfcnvrt@cp 00AE                         vfpfcnvrt@fp 009E  
              LCD_sendnibble@number 0060                       __pidataCOMRAM 28EE  
               start_initialization 2352                     ?_increment_time 0023  
                       __end_of_abs 2770                         __end_of_pad 22DC  
                      _LCD_sendbyte 27DA                       ??_LCD_setline 0063  
                       vfprintf@fmt 00B2                            ??___flge 0068  
                          ??___lmul 0068                LCD_sendstring@strlst 0064  
                       __pdataBANK1 0120                 __end_of_get_minutes 26EA  
               __end_of_get_seconds 284A                         __pbssCOMRAM 002C  
                       ??_LCD_E_TOG 0060                       __pcstackBANK0 0060  
                  ___aodiv@dividend 0060                   ??_increment_month 0003  
          increment_month@increment 0001                      _time_corrector 003C  
                       ??_LCD_clear 0063                            ?_HighISR 0001  
                         __pnvBANK0 00F0                    ___lwdiv@dividend 0060  
                         _dtoa$2178 008D                        ?_Timer0_init 006C  
         increment_day@day_in_month 0009                           __pintcode 0008  
                          ?___aodiv 0060                            ?___aomod 0060  
                  ___aodiv@quotient 0072                            ?___fltol 0060  
    increment_day@curr_day_in_month 0021                 __end_of_LCD_setline 1C14  
                          ?___lldiv 0060                            ?___lwdiv 0060  
                          ?___lwmod 006D                         __smallconst 0E00  
                   _day_of_the_week 0044                    ??_LCD_sendnibble 0060  
                          _ADC_init 288A                            _DAC_init 28BC  
                  ___lwdiv@quotient 0065                    ??_LCD_sendstring 0066  
                          ?_sprintf 00B8                    LCD_sendbyte@Byte 0062  
                          _LCD_Init 20FE                    LCD_sendbyte@type 0061  
                          _LATAbits 000F79                            _LATBbits 000F7A  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                 ADC2String@ADC_val 00CD                            _PIE0bits 000E29  
                          _IPR2bits 000E21                            _PIE2bits 000E2B  
                          i2u214_40 2056                            i2u214_41 2052  
                          i2u215_40 20C0                            i2u215_41 20BC  
                          i2u216_40 20FC                            i2u216_41 20F8  
                          i2u250_40 005E                            i2u250_41 005A  
                          i2u251_40 0084                            i2u251_41 0080  
                          i2u172_41 1C22                            i2u173_40 1C6C  
                          i2u173_41 1C68                            i2u174_40 1C92  
                          i2u174_41 1C8E                            i2u175_40 1CB6  
                          i2u247_40 002A                            i2u175_41 1CB2  
                          i2u247_41 0026                            _PIR0bits 000E33  
                          i2u168_40 2708                            i2u176_40 1CD4  
                          i2u248_40 003C                            i2u168_41 2704  
                          i2u176_41 1CD0                            i2u248_41 0034  
                          i2u169_40 272C                            i2u177_40 1D00  
                          i2u169_41 2728                            i2u177_41 1CFC  
                          i2u249_48 003E                            _PIR2bits 000E35  
                          i2u197_40 24BA                            i2u197_41 24B6  
                          i2u198_40 24F4                            i2u198_41 24F0  
                       _get_minutes 26A4                         _get_seconds 282A  
                        _ADC2String 286A                           _test_mode 0046  
                         _vfpfcnvrt 17B2               __end_of_increment_day 1D02  
                        _ADCON0bits 000F60                            i2___lmul 249C  
                        _CM1NCHbits 000ED2                          _CM1PCHbits 000ED3  
                 ___lmul@multiplier 0060                           copy_data0 2366  
                         copy_data1 2386               __end_of_LEDarray_init 27A8  
                       _LCD_setline 1B10                            __Hrparam 0000  
                        _ADC_getval 27A8                          vfprintf@ap 00B4  
                          __Lrparam 0000                          vfprintf@fp 00B0  
                        ?_vfpfcnvrt 009E                     ___aodiv@divisor 0068  
                  ??_increment_time 0027                     ___aodiv@counter 0070  
                        _ANSELAbits 000E92                          sprintf@fmt 00BA  
                          ___xxtofl 130A                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                     ___lwdiv@divisor 0062  
                   ___lwdiv@counter 0064                            __ptext10 1D02  
                          __ptext11 23C4                            __ptext20 28E0  
                          __ptext12 2770                            __ptext21 28D0  
                          __ptext13 1EAE                            __ptext30 0E18  
                          __ptext22 2806                            __ptext14 1F78  
                          __ptext31 225E                            __ptext23 28BC  
                          __ptext15 1B10                            __ptext40 249C  
                          __ptext32 265C                            __ptext24 288A  
                          __ptext16 2610                            __ptext41 1C14  
                          __ptext33 1DE2                            __ptext25 27A8  
                          __ptext17 20FE                            __ptext42 26EA  
                          __ptext34 28F6                            __ptext26 286A  
                          __ptext18 27DA                            __ptext35 272E  
                          __ptext27 256C                            __ptext19 2430  
                          __ptext36 164C                            __ptext28 25BE  
                          __ptext37 14C2                            __ptext29 17B2  
                          __ptext39 2040                            _get_hour 284A  
           LEDarray_disp_bin@number 006A                            isa$xinst 000000  
                          int$flags 0048                         ?_ADC2String 00CB  
                          _vfprintf 25BE                            main@buf1 00E1  
                          main@buf2 00E3                     _increment_month 26EA  
                          main@text 00D1                    ___aomod@dividend 0060  
                        _INTCONbits 000FF2               i2___lmul@multiplicand 0005  
                      _time_counter 00F0                            intlevel2 0000  
                         sprintf@ap 00BE                        _DAC1CON0bits 000EC6  
                      _DAC1CON1bits 000EC7                    ___lwmod@dividend 006D  
                  ___lldiv@dividend 0060                         ?_ADC_getval 0060  
          Timer0_init@current_month 007A                     ___aomod@divisor 0068  
                       ??_vfpfcnvrt 00A4                     ___aomod@counter 0070  
                          sprintf@f 00C0                            sprintf@s 00B8  
                  ___lldiv@quotient 0068                     ___lwmod@divisor 006F  
                   ___lwmod@counter 0071             Timer0_init@current_hour 0072  
           Timer0_init@current_year 007C                        ___aodiv@sign 0071  
                      ___aomod@sign 0071             __end_of_increment_month 272E  
