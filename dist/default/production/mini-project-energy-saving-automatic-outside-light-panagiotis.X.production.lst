

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 07 14:12:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.35
    41                           ; Generated 05/05/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F67K40 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataCOMRAM
    77   000EBE                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for increment_day@F14249
    81   000EBE  001F               	dw	31
    82   000EC0  001C               	dw	28
    83   000EC2  001F               	dw	31
    84   000EC4  001E               	dw	30
    85   000EC6  001F               	dw	31
    86   000EC8  001E               	dw	30
    87   000ECA  001F               	dw	31
    88   000ECC  001F               	dw	31
    89   000ECE  001E               	dw	30
    90   000ED0  001F               	dw	31
    91   000ED2  001E               	dw	30
    92   000ED4  001F               	dw	31
    93                           
    94                           ;initializer for _month
    95   000ED6  0001               	dw	1
    96                           
    97                           ;initializer for _day
    98   000ED8  0001               	dw	1
    99   000000                     _T0CON0bits	set	4053
   100   000000                     _T0CON1bits	set	4054
   101   000000                     _CM1CON1bits	set	3793
   102   000000                     _TRISHbits	set	3976
   103   000000                     _LATHbits	set	3968
   104   000000                     _PORTAbits	set	3977
   105   000000                     _PORTGbits	set	3983
   106                           
   107                           	psect	nvCOMRAM
   108   000048                     __pnvCOMRAM:
   109                           	callstack 0
   110   000048                     _leap_year_count:
   111                           	callstack 0
   112   000048                     	ds	2
   113   00004A                     _test_mode:
   114                           	callstack 0
   115   00004A                     	ds	2
   116   000000                     _IPR2bits	set	3617
   117   000000                     _PIE2bits	set	3627
   118   000000                     _DAC1CON0bits	set	3782
   119   000000                     _LATAbits	set	3961
   120   000000                     _LATGbits	set	3967
   121   000000                     _TRISAbits	set	3969
   122   000000                     _TRISGbits	set	3975
   123   000000                     _TRISDbits	set	3972
   124   000000                     _TRISBbits	set	3970
   125   000000                     _TRISFbits	set	3974
   126   000000                     _TMR0L	set	4051
   127   000000                     _TMR0H	set	4052
   128   000000                     _INTCONbits	set	4082
   129   000000                     _PORTBbits	set	3978
   130   000000                     _PORTFbits	set	3982
   131   000000                     _LATDbits	set	3964
   132   000000                     _LATBbits	set	3962
   133   000000                     _LATFbits	set	3966
   134   000000                     _CM1CON0bits	set	3792
   135   000000                     _CM1NCHbits	set	3794
   136   000000                     _DAC1CON1bits	set	3783
   137   000000                     _ADREFbits	set	3928
   138   000000                     _CM1PCHbits	set	3795
   139   000000                     _PIR0bits	set	3635
   140   000000                     _PIR2bits	set	3637
   141   000000                     _PIE0bits	set	3625
   142   000000                     _ANSELAbits	set	3730
   143   000000                     _ADPCH	set	3935
   144   000000                     _ADRESH	set	3940
   145   000000                     _ADCON0bits	set	3936
   146                           
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150   000E66                     __pcinit:
   151                           	callstack 0
   152   000E66                     start_initialization:
   153                           	callstack 0
   154   000E66                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Initialize objects allocated to COMRAM (28 bytes)
   158                           ; load TBLPTR registers with __pidataCOMRAM
   159   000E66  0EBE               	movlw	low __pidataCOMRAM
   160   000E68  6EF6               	movwf	tblptrl,c
   161   000E6A  0E0E               	movlw	high __pidataCOMRAM
   162   000E6C  6EF7               	movwf	tblptrh,c
   163   000E6E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   164   000E70  6EF8               	movwf	tblptru,c
   165   000E72  EE00  F02C         	lfsr	0,__pdataCOMRAM
   166   000E76  EE10 F01C          	lfsr	1,28
   167   000E7A                     copy_data0:
   168   000E7A  0009               	tblrd		*+
   169   000E7C  CFF5 FFEE          	movff	tablat,postinc0
   170   000E80  50E5               	movf	postdec1,w,c
   171   000E82  50E1               	movf	fsr1l,w,c
   172   000E84  E1FA               	bnz	copy_data0
   173                           
   174                           ; Clear objects allocated to BANK0 (4 bytes)
   175   000E86  0100               	movlb	0
   176   000E88  6B96               	clrf	(__pbssBANK0+3)& (0+255),b
   177   000E8A  6B95               	clrf	(__pbssBANK0+2)& (0+255),b
   178   000E8C  6B94               	clrf	(__pbssBANK0+1)& (0+255),b
   179   000E8E  6B93               	clrf	__pbssBANK0& (0+255),b
   180   000E90                     end_of_initialization:
   181                           	callstack 0
   182   000E90                     __end_of__initialization:
   183                           	callstack 0
   184   000E90  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   185   000E92  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   186   000E94  0100               	movlb	0
   187   000E96  EF04  F003         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	dataCOMRAM
   190   00002C                     __pdataCOMRAM:
   191                           	callstack 0
   192   00002C                     increment_day@F14249:
   193                           	callstack 0
   194   00002C                     	ds	24
   195   000044                     _month:
   196                           	callstack 0
   197   000044                     	ds	2
   198   000046                     _day:
   199                           	callstack 0
   200   000046                     	ds	2
   201                           
   202                           	psect	bssBANK0
   203   000093                     __pbssBANK0:
   204                           	callstack 0
   205   000093                     _time_counter:
   206                           	callstack 0
   207   000093                     	ds	4
   208                           
   209                           	psect	cstackBANK0
   210   000060                     __pcstackBANK0:
   211                           	callstack 0
   212   000060                     ?_get_day:
   213                           	callstack 0
   214   000060                     ?_get_month:
   215                           	callstack 0
   216   000060                     ?___fltol:
   217                           	callstack 0
   218   000060                     ?___xxtofl:
   219                           	callstack 0
   220   000060                     Timer0_init@init_test_mode:
   221                           	callstack 0
   222   000060                     increment_month@increment:
   223                           	callstack 0
   224   000060                     ___flge@ff1:
   225                           	callstack 0
   226   000060                     ___fltol@f1:
   227                           	callstack 0
   228   000060                     ___xxtofl@val:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0x0
   232   000060                     	ds	2
   233   000062                     Timer0_init@current_day:
   234                           	callstack 0
   235   000062                     increment_day@increment:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x2
   239   000062                     	ds	2
   240   000064                     ??_increment_day:
   241   000064                     ??___fltol:
   242   000064                     ??___xxtofl:
   243   000064                     Timer0_init@current_month:
   244                           	callstack 0
   245   000064                     ___flge@ff2:
   246                           	callstack 0
   247                           
   248                           ; 4 bytes @ 0x4
   249   000064                     	ds	2
   250   000066                     Timer0_init@leap_year:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x6
   254   000066                     	ds	2
   255   000068                     ??___flge:
   256   000068                     ___fltol@sign1:
   257                           	callstack 0
   258   000068                     ___xxtofl@sign:
   259                           	callstack 0
   260   000068                     increment_day@day_in_month:
   261                           	callstack 0
   262                           
   263                           ; 24 bytes @ 0x8
   264   000068                     	ds	1
   265   000069                     ___fltol@exp1:
   266                           	callstack 0
   267   000069                     ___xxtofl@exp:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x9
   271   000069                     	ds	1
   272   00006A                     LEDarray_disp_bin@number:
   273                           	callstack 0
   274   00006A                     ___xxtofl@arg:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0xA
   278   00006A                     	ds	2
   279   00006C                     
   280                           ; 1 bytes @ 0xC
   281   00006C                     	ds	2
   282   00006E                     ?___fldiv:
   283                           	callstack 0
   284   00006E                     ___fldiv@b:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0xE
   288   00006E                     	ds	4
   289   000072                     ___fldiv@a:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x12
   293   000072                     	ds	4
   294   000076                     ??___fldiv:
   295                           
   296                           ; 1 bytes @ 0x16
   297   000076                     	ds	4
   298   00007A                     ___fldiv@rem:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0x1A
   302   00007A                     	ds	4
   303   00007E                     ___fldiv@sign:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x1E
   307   00007E                     	ds	1
   308   00007F                     ___fldiv@new_exp:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x1F
   312   00007F                     	ds	1
   313   000080                     increment_day@curr_day_in_month:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x20
   317   000080                     	ds	1
   318   000081                     ___fldiv@grs:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0x21
   322   000081                     	ds	4
   323   000085                     ___fldiv@bexp:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x25
   327   000085                     	ds	1
   328   000086                     ___fldiv@aexp:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x26
   332   000086                     	ds	1
   333   000087                     ?_get_hour:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x27
   337   000087                     	ds	4
   338   00008B                     main@curr_day:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x2B
   342   00008B                     	ds	2
   343   00008D                     main@curr_month:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x2D
   347   00008D                     	ds	2
   348   00008F                     main@curr_hour:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x2F
   352   00008F                     	ds	4
   353                           
   354                           	psect	cstackCOMRAM
   355   000001                     __pcstackCOMRAM:
   356                           	callstack 0
   357   000001                     ?___lmul:
   358                           	callstack 0
   359   000001                     i2increment_month@increment:
   360                           	callstack 0
   361   000001                     ___lmul@multiplier:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x0
   365   000001                     	ds	2
   366   000003                     i2increment_day@increment:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x2
   370   000003                     	ds	2
   371   000005                     ??i2_increment_day:
   372   000005                     ___lmul@multiplicand:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0x4
   376   000005                     	ds	4
   377   000009                     ___lmul@product:
   378                           	callstack 0
   379   000009                     i2increment_day@day_in_month:
   380                           	callstack 0
   381                           
   382                           ; 24 bytes @ 0x8
   383   000009                     	ds	24
   384   000021                     i2increment_day@curr_day_in_month:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x20
   388   000021                     	ds	2
   389   000023                     increment_time@increment:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x22
   393   000023                     	ds	4
   394   000027                     ??_HighISR:
   395                           
   396                           ; 1 bytes @ 0x26
   397   000027                     	ds	5
   398                           
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 22 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;  curr_hour       4   47[BANK0 ] float 
   409 ;;  curr_month      2   45[BANK0 ] unsigned int 
   410 ;;  curr_day        2   43[BANK0 ] unsigned int 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   421 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   423 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   424 ;;Total ram usage:        8 bytes
   425 ;; Hardware stack levels required when called: 6
   426 ;; This function calls:
   427 ;;		_ADC_init
   428 ;;		_Comp1_init
   429 ;;		_Interrupts_init
   430 ;;		_LEDarray_disp_bin
   431 ;;		_LEDarray_init
   432 ;;		_Timer0_init
   433 ;;		___flge
   434 ;;		___fltol
   435 ;;		_get_day
   436 ;;		_get_hour
   437 ;;		_get_month
   438 ;;		_increment_day
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text0
   445   000608                     __ptext0:
   446                           	callstack 0
   447   000608                     _main:
   448                           	callstack 25
   449   000608                     
   450                           ;main.c: 24:     LATHbits.LATH3=0;
   451   000608  9680               	bcf	128,3,c	;volatile
   452                           
   453                           ;main.c: 25:     TRISHbits.TRISH3=0;
   454   00060A  9688               	bcf	136,3,c	;volatile
   455                           
   456                           ;main.c: 27:     TRISDbits.TRISD7=0;
   457   00060C  9E84               	bcf	132,7,c	;volatile
   458                           
   459                           ;main.c: 28:     LATDbits.LATD7=1;
   460   00060E  8E7C               	bsf	124,7,c	;volatile
   461                           
   462                           ;main.c: 30:     TRISAbits.TRISA3=1;
   463   000610  8681               	bsf	129,3,c	;volatile
   464                           
   465                           ;main.c: 32:     LATHbits.LATH3 = 1;
   466   000612  8680               	bsf	128,3,c	;volatile
   467   000614                     
   468                           ;main.c: 33:     Comp1_init();
   469   000614  EC4D  F007         	call	_Comp1_init	;wreg free
   470   000618                     
   471                           ;main.c: 34:     Interrupts_init();
   472   000618  EC84  F007         	call	_Interrupts_init	;wreg free
   473   00061C                     
   474                           ;main.c: 35:     Timer0_init(1,06,11,2);
   475   00061C  0E00               	movlw	0
   476   00061E  0100               	movlb	0	; () banked
   477   000620  6F61               	movwf	(Timer0_init@init_test_mode+1)& (0+255),b
   478   000622  0E01               	movlw	1
   479   000624  6F60               	movwf	Timer0_init@init_test_mode& (0+255),b
   480   000626  0E00               	movlw	0
   481   000628  6F63               	movwf	(Timer0_init@current_day+1)& (0+255),b
   482   00062A  0E06               	movlw	6
   483   00062C  6F62               	movwf	Timer0_init@current_day& (0+255),b
   484   00062E  0E00               	movlw	0
   485   000630  6F65               	movwf	(Timer0_init@current_month+1)& (0+255),b
   486   000632  0E0B               	movlw	11
   487   000634  6F64               	movwf	Timer0_init@current_month& (0+255),b
   488   000636  0E00               	movlw	0
   489   000638  6F67               	movwf	(Timer0_init@leap_year+1)& (0+255),b
   490   00063A  0E02               	movlw	2
   491   00063C  6F66               	movwf	Timer0_init@leap_year& (0+255),b
   492   00063E  EC22  F006         	call	_Timer0_init	;wreg free
   493   000642                     
   494                           ;main.c: 36:     LEDarray_init();
   495   000642  EC17  F007         	call	_LEDarray_init	;wreg free
   496   000646                     
   497                           ;main.c: 37:     ADC_init();
   498   000646  EC6D  F007         	call	_ADC_init	;wreg free
   499   00064A                     l97:
   500                           
   501                           ;main.c: 43:         float curr_hour = get_hour();
   502   00064A  ECF0  F006         	call	_get_hour	;wreg free
   503   00064E  C087  F08F         	movff	?_get_hour,main@curr_hour
   504   000652  C088  F090         	movff	?_get_hour+1,main@curr_hour+1
   505   000656  C089  F091         	movff	?_get_hour+2,main@curr_hour+2
   506   00065A  C08A  F092         	movff	?_get_hour+3,main@curr_hour+3
   507                           
   508                           ;main.c: 44:         LEDarray_disp_bin((unsigned int) curr_hour);
   509   00065E  C08F  F060         	movff	main@curr_hour,___fltol@f1
   510   000662  C090  F061         	movff	main@curr_hour+1,___fltol@f1+1
   511   000666  C091  F062         	movff	main@curr_hour+2,___fltol@f1+2
   512   00066A  C092  F063         	movff	main@curr_hour+3,___fltol@f1+3
   513   00066E  EC99  F003         	call	___fltol	;wreg free
   514   000672  C060  F06A         	movff	?___fltol,LEDarray_disp_bin@number
   515   000676  C061  F06B         	movff	?___fltol+1,LEDarray_disp_bin@number+1
   516   00067A  ECA0  F004         	call	_LEDarray_disp_bin	;wreg free
   517                           
   518                           ;main.c: 46:         if(curr_hour >= 1 && curr_hour <= 5){
   519   00067E  C08F  F060         	movff	main@curr_hour,___flge@ff1
   520   000682  C090  F061         	movff	main@curr_hour+1,___flge@ff1+1
   521   000686  C091  F062         	movff	main@curr_hour+2,___flge@ff1+2
   522   00068A  C092  F063         	movff	main@curr_hour+3,___flge@ff1+3
   523   00068E  0E00               	movlw	0
   524   000690  0100               	movlb	0	; () banked
   525   000692  6F64               	movwf	___flge@ff2& (0+255),b
   526   000694  0E00               	movlw	0
   527   000696  6F65               	movwf	(___flge@ff2+1)& (0+255),b
   528   000698  0E80               	movlw	128
   529   00069A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
   530   00069C  0E3F               	movlw	63
   531   00069E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
   532   0006A0  EC1D  F004         	call	___flge	;wreg free
   533   0006A4  0100               	movlb	0	; () banked
   534   0006A6  A0D8               	btfss	status,0,c
   535   0006A8  EF58  F003         	goto	u2251
   536   0006AC  EF5A  F003         	goto	u2250
   537   0006B0                     u2251:
   538   0006B0  EF77  F003         	goto	l98
   539   0006B4                     u2250:
   540   0006B4                     
   541                           ; BSR set to: 0
   542   0006B4  0E00               	movlw	0
   543   0006B6  6F60               	movwf	___flge@ff1& (0+255),b
   544   0006B8  0E00               	movlw	0
   545   0006BA  6F61               	movwf	(___flge@ff1+1)& (0+255),b
   546   0006BC  0EA0               	movlw	160
   547   0006BE  6F62               	movwf	(___flge@ff1+2)& (0+255),b
   548   0006C0  0E40               	movlw	64
   549   0006C2  6F63               	movwf	(___flge@ff1+3)& (0+255),b
   550   0006C4  C08F  F064         	movff	main@curr_hour,___flge@ff2
   551   0006C8  C090  F065         	movff	main@curr_hour+1,___flge@ff2+1
   552   0006CC  C091  F066         	movff	main@curr_hour+2,___flge@ff2+2
   553   0006D0  C092  F067         	movff	main@curr_hour+3,___flge@ff2+3
   554   0006D4  EC1D  F004         	call	___flge	;wreg free
   555   0006D8  0100               	movlb	0	; () banked
   556   0006DA  A0D8               	btfss	status,0,c
   557   0006DC  EF72  F003         	goto	u2261
   558   0006E0  EF74  F003         	goto	u2260
   559   0006E4                     u2261:
   560   0006E4  EF77  F003         	goto	l98
   561   0006E8                     u2260:
   562   0006E8                     
   563                           ; BSR set to: 0
   564                           ;main.c: 47:             LATHbits.LATH3 = 0;
   565   0006E8  9680               	bcf	128,3,c	;volatile
   566                           
   567                           ;main.c: 48:         }else{
   568   0006EA  EF78  F003         	goto	l2276
   569   0006EE                     l98:
   570                           
   571                           ; BSR set to: 0
   572                           ;main.c: 49:             LATHbits.LATH3 = 1;
   573   0006EE  8680               	bsf	128,3,c	;volatile
   574   0006F0                     l2276:
   575                           
   576                           ; BSR set to: 0
   577                           ;main.c: 52:         curr_day = get_day();
   578   0006F0  EC91  F007         	call	_get_day	;wreg free
   579   0006F4  C060  F08B         	movff	?_get_day,main@curr_day
   580   0006F8  C061  F08C         	movff	?_get_day+1,main@curr_day+1
   581                           
   582                           ;main.c: 53:         curr_month = get_month();
   583   0006FC  EC8C  F007         	call	_get_month	;wreg free
   584   000700  C060  F08D         	movff	?_get_month,main@curr_month
   585   000704  C061  F08E         	movff	?_get_month+1,main@curr_month+1
   586   000708                     
   587                           ;main.c: 54:         curr_day += 1;
   588   000708  0100               	movlb	0	; () banked
   589   00070A  4B8B               	infsnz	main@curr_day& (0+255),f,b
   590   00070C  2B8C               	incf	(main@curr_day+1)& (0+255),f,b
   591   00070E                     
   592                           ; BSR set to: 0
   593                           ;main.c: 55:         curr_day -=1;
   594   00070E  078B               	decf	main@curr_day& (0+255),f,b
   595   000710  A0D8               	btfss	status,0,c
   596   000712  078C               	decf	(main@curr_day+1)& (0+255),f,b
   597   000714                     
   598                           ; BSR set to: 0
   599                           ;main.c: 57:         curr_month += 1;
   600   000714  4B8D               	infsnz	main@curr_month& (0+255),f,b
   601   000716  2B8E               	incf	(main@curr_month+1)& (0+255),f,b
   602   000718                     
   603                           ; BSR set to: 0
   604                           ;main.c: 58:         curr_month -=1;
   605   000718  078D               	decf	main@curr_month& (0+255),f,b
   606   00071A  A0D8               	btfss	status,0,c
   607   00071C  078E               	decf	(main@curr_month+1)& (0+255),f,b
   608   00071E                     
   609                           ; BSR set to: 0
   610                           ;main.c: 59:         increment_day(1);
   611   00071E  0E00               	movlw	0
   612   000720  6F63               	movwf	(increment_day@increment+1)& (0+255),b
   613   000722  0E01               	movlw	1
   614   000724  6F62               	movwf	increment_day@increment& (0+255),b
   615   000726  EC05  F005         	call	_increment_day	;wreg free
   616   00072A  EF25  F003         	goto	l97
   617   00072E  EF58  F000         	goto	start
   618   000732                     __end_of_main:
   619                           	callstack 0
   620                           
   621 ;; *************** function _increment_day *****************
   622 ;; Defined at:
   623 ;;		line 93 in file "timers.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  increment       2    2[BANK0 ] unsigned int 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  day_in_month   24    8[BANK0 ] unsigned int [12]
   628 ;;  curr_day_in_    2   32[BANK0 ] unsigned int 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   639 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   640 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   641 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;Total ram usage:       32 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; Hardware stack levels required when called: 5
   645 ;; This function calls:
   646 ;;		_increment_month
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text1
   653   000A0A                     __ptext1:
   654                           	callstack 0
   655   000A0A                     _increment_day:
   656                           	callstack 25
   657   000A0A                     
   658                           ;timers.c: 94:     while(increment > 0){
   659   000A0A  EF5A  F005         	goto	l2160
   660   000A0E                     l2140:
   661                           
   662                           ; BSR set to: 0
   663                           ;timers.c: 96:         unsigned int day_in_month[] = {31,28,31,30,31,30,31,31,30,31,30,3
      +                          1};
   664   000A0E  EE20  F02C         	lfsr	2,increment_day@F14249
   665   000A12  EE10  F068         	lfsr	1,increment_day@day_in_month
   666   000A16  0E17               	movlw	23
   667   000A18                     u2031:
   668   000A18  CFDB FFE3          	movff	plusw2,plusw1
   669   000A1C  06E8               	decf	wreg,f,c
   670   000A1E  E2FC               	bc	u2031
   671   000A20                     
   672                           ; BSR set to: 0
   673                           ;timers.c: 97:         unsigned int curr_day_in_month = day_in_month[month - 1];
   674   000A20  C044  F064         	movff	_month,??_increment_day
   675   000A24  C045  F065         	movff	_month+1,??_increment_day+1
   676   000A28  90D8               	bcf	status,0,c
   677   000A2A  3764               	rlcf	??_increment_day& (0+255),f,b
   678   000A2C  3765               	rlcf	(??_increment_day+1)& (0+255),f,b
   679   000A2E  0EFE               	movlw	254
   680   000A30  2564               	addwf	??_increment_day& (0+255),w,b
   681   000A32  6F66               	movwf	(??_increment_day+2)& (0+255),b
   682   000A34  0EFF               	movlw	255
   683   000A36  2165               	addwfc	(??_increment_day+1)& (0+255),w,b
   684   000A38  6F67               	movwf	(??_increment_day+3)& (0+255),b
   685   000A3A  0E68               	movlw	low increment_day@day_in_month
   686   000A3C  2566               	addwf	(??_increment_day+2)& (0+255),w,b
   687   000A3E  6ED9               	movwf	fsr2l,c
   688   000A40  0E00               	movlw	high increment_day@day_in_month
   689   000A42  2167               	addwfc	(??_increment_day+3)& (0+255),w,b
   690   000A44  6EDA               	movwf	fsr2h,c
   691   000A46  CFDE F080          	movff	postinc2,increment_day@curr_day_in_month
   692   000A4A  CFDD F081          	movff	postdec2,increment_day@curr_day_in_month+1
   693   000A4E                     
   694                           ; BSR set to: 0
   695                           ;timers.c: 98:         if(month == 2 && leap_year_count == 3){
   696   000A4E  0E02               	movlw	2
   697   000A50  1844               	xorwf	_month^0,w,c
   698   000A52  1045               	iorwf	(_month+1)^0,w,c
   699   000A54  A4D8               	btfss	status,2,c
   700   000A56  EF2F  F005         	goto	u2041
   701   000A5A  EF31  F005         	goto	u2040
   702   000A5E                     u2041:
   703   000A5E  EF3F  F005         	goto	l2150
   704   000A62                     u2040:
   705   000A62                     
   706                           ; BSR set to: 0
   707   000A62  0E03               	movlw	3
   708   000A64  1848               	xorwf	_leap_year_count^0,w,c
   709   000A66  1049               	iorwf	(_leap_year_count+1)^0,w,c
   710   000A68  A4D8               	btfss	status,2,c
   711   000A6A  EF39  F005         	goto	u2051
   712   000A6E  EF3B  F005         	goto	u2050
   713   000A72                     u2051:
   714   000A72  EF3F  F005         	goto	l2150
   715   000A76                     u2050:
   716   000A76                     
   717                           ; BSR set to: 0
   718                           ;timers.c: 99:             curr_day_in_month = 29;
   719   000A76  0E00               	movlw	0
   720   000A78  6F81               	movwf	(increment_day@curr_day_in_month+1)& (0+255),b
   721   000A7A  0E1D               	movlw	29
   722   000A7C  6F80               	movwf	increment_day@curr_day_in_month& (0+255),b
   723   000A7E                     l2150:
   724                           
   725                           ; BSR set to: 0
   726                           ;timers.c: 102:         day += 1;
   727   000A7E  4A46               	infsnz	_day^0,f,c
   728   000A80  2A47               	incf	(_day+1)^0,f,c
   729   000A82                     
   730                           ; BSR set to: 0
   731                           ;timers.c: 103:         if(day > curr_day_in_month){
   732   000A82  5046               	movf	_day^0,w,c
   733   000A84  5D80               	subwf	increment_day@curr_day_in_month& (0+255),w,b
   734   000A86  5047               	movf	(_day+1)^0,w,c
   735   000A88  5981               	subwfb	(increment_day@curr_day_in_month+1)& (0+255),w,b
   736   000A8A  B0D8               	btfsc	status,0,c
   737   000A8C  EF4A  F005         	goto	u2061
   738   000A90  EF4C  F005         	goto	u2060
   739   000A94                     u2061:
   740   000A94  EF56  F005         	goto	l2158
   741   000A98                     u2060:
   742   000A98                     
   743                           ; BSR set to: 0
   744                           ;timers.c: 104:             increment_month(1);
   745   000A98  0E00               	movlw	0
   746   000A9A  6F61               	movwf	(increment_month@increment+1)& (0+255),b
   747   000A9C  0E01               	movlw	1
   748   000A9E  6F60               	movwf	increment_month@increment& (0+255),b
   749   000AA0  EC8D  F006         	call	_increment_month	;wreg free
   750   000AA4                     
   751                           ;timers.c: 105:             day = 1;
   752   000AA4  0E00               	movlw	0
   753   000AA6  6E47               	movwf	(_day+1)^0,c
   754   000AA8  0E01               	movlw	1
   755   000AAA  6E46               	movwf	_day^0,c
   756   000AAC                     l2158:
   757                           
   758                           ;timers.c: 107:         increment -= 1;
   759   000AAC  0100               	movlb	0	; () banked
   760   000AAE  0762               	decf	increment_day@increment& (0+255),f,b
   761   000AB0  A0D8               	btfss	status,0,c
   762   000AB2  0763               	decf	(increment_day@increment+1)& (0+255),f,b
   763   000AB4                     l2160:
   764                           
   765                           ;timers.c: 94:     while(increment > 0){
   766   000AB4  0100               	movlb	0	; () banked
   767   000AB6  5162               	movf	increment_day@increment& (0+255),w,b
   768   000AB8  1163               	iorwf	(increment_day@increment+1)& (0+255),w,b
   769   000ABA  A4D8               	btfss	status,2,c
   770   000ABC  EF62  F005         	goto	u2071
   771   000AC0  EF64  F005         	goto	u2070
   772   000AC4                     u2071:
   773   000AC4  EF07  F005         	goto	l2140
   774   000AC8                     u2070:
   775   000AC8                     
   776                           ; BSR set to: 0
   777   000AC8  0012               	return		;funcret
   778   000ACA                     __end_of_increment_day:
   779                           	callstack 0
   780                           
   781 ;; *************** function _increment_month *****************
   782 ;; Defined at:
   783 ;;		line 111 in file "timers.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  increment       2    0[BANK0 ] unsigned int 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   801 ;;Total ram usage:        2 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 4
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_increment_day
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text2
   812   000D1A                     __ptext2:
   813                           	callstack 0
   814   000D1A                     _increment_month:
   815                           	callstack 25
   816   000D1A                     
   817                           ;timers.c: 112:     while(increment > 0){
   818   000D1A  EFB4  F006         	goto	l2016
   819   000D1E                     l2002:
   820                           
   821                           ; BSR set to: 0
   822                           ;timers.c: 114:         month += 1;
   823   000D1E  4A44               	infsnz	_month^0,f,c
   824   000D20  2A45               	incf	(_month+1)^0,f,c
   825   000D22                     
   826                           ; BSR set to: 0
   827                           ;timers.c: 115:         if(month > 12){
   828   000D22  5045               	movf	(_month+1)^0,w,c
   829   000D24  E109               	bnz	u1800
   830   000D26  0E0D               	movlw	13
   831   000D28  5C44               	subwf	_month^0,w,c
   832   000D2A  A0D8               	btfss	status,0,c
   833   000D2C  EF9A  F006         	goto	u1801
   834   000D30  EF9C  F006         	goto	u1800
   835   000D34                     u1801:
   836   000D34  EFB1  F006         	goto	l2014
   837   000D38                     u1800:
   838   000D38                     
   839                           ; BSR set to: 0
   840                           ;timers.c: 116:             month = 1;
   841   000D38  0E00               	movlw	0
   842   000D3A  6E45               	movwf	(_month+1)^0,c
   843   000D3C  0E01               	movlw	1
   844   000D3E  6E44               	movwf	_month^0,c
   845   000D40                     
   846                           ; BSR set to: 0
   847                           ;timers.c: 117:             leap_year_count += 1;
   848   000D40  4A48               	infsnz	_leap_year_count^0,f,c
   849   000D42  2A49               	incf	(_leap_year_count+1)^0,f,c
   850   000D44                     
   851                           ; BSR set to: 0
   852                           ;timers.c: 118:             if(leap_year_count > 3){
   853   000D44  5049               	movf	(_leap_year_count+1)^0,w,c
   854   000D46  E109               	bnz	u1810
   855   000D48  0E04               	movlw	4
   856   000D4A  5C48               	subwf	_leap_year_count^0,w,c
   857   000D4C  A0D8               	btfss	status,0,c
   858   000D4E  EFAB  F006         	goto	u1811
   859   000D52  EFAD  F006         	goto	u1810
   860   000D56                     u1811:
   861   000D56  EFB1  F006         	goto	l2014
   862   000D5A                     u1810:
   863   000D5A                     
   864                           ; BSR set to: 0
   865                           ;timers.c: 119:                 leap_year_count = 0;
   866   000D5A  0E00               	movlw	0
   867   000D5C  6E49               	movwf	(_leap_year_count+1)^0,c
   868   000D5E  0E00               	movlw	0
   869   000D60  6E48               	movwf	_leap_year_count^0,c
   870   000D62                     l2014:
   871                           
   872                           ; BSR set to: 0
   873                           ;timers.c: 122:         increment -= 1;
   874   000D62  0760               	decf	increment_month@increment& (0+255),f,b
   875   000D64  A0D8               	btfss	status,0,c
   876   000D66  0761               	decf	(increment_month@increment+1)& (0+255),f,b
   877   000D68                     l2016:
   878                           
   879                           ;timers.c: 112:     while(increment > 0){
   880   000D68  0100               	movlb	0	; () banked
   881   000D6A  5160               	movf	increment_month@increment& (0+255),w,b
   882   000D6C  1161               	iorwf	(increment_month@increment+1)& (0+255),w,b
   883   000D6E  A4D8               	btfss	status,2,c
   884   000D70  EFBC  F006         	goto	u1821
   885   000D74  EFBE  F006         	goto	u1820
   886   000D78                     u1821:
   887   000D78  EF8F  F006         	goto	l2002
   888   000D7C                     u1820:
   889   000D7C                     
   890                           ; BSR set to: 0
   891   000D7C  0012               	return		;funcret
   892   000D7E                     __end_of_increment_month:
   893                           	callstack 0
   894                           
   895 ;; *************** function _get_month *****************
   896 ;; Defined at:
   897 ;;		line 66 in file "timers.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  2    0[BANK0 ] unsigned int 
   904 ;; Registers used:
   905 ;;		None
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 4
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text3
   926   000F18                     __ptext3:
   927                           	callstack 0
   928   000F18                     _get_month:
   929                           	callstack 26
   930   000F18                     
   931                           ;timers.c: 67:     return month;
   932   000F18  C044  F060         	movff	_month,?_get_month
   933   000F1C  C045  F061         	movff	_month+1,?_get_month+1
   934   000F20  0012               	return		;funcret
   935   000F22                     __end_of_get_month:
   936                           	callstack 0
   937                           
   938 ;; *************** function _get_hour *****************
   939 ;; Defined at:
   940 ;;		line 59 in file "timers.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  4   39[BANK0 ] float 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   957 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   958 ;;Total ram usage:        4 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; Hardware stack levels required when called: 5
   961 ;; This function calls:
   962 ;;		___fldiv
   963 ;;		___xxtofl
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text4
   970   000DE0                     __ptext4:
   971                           	callstack 0
   972   000DE0                     _get_hour:
   973                           	callstack 25
   974   000DE0                     
   975                           ;timers.c: 60:     return (float) time_counter/3600;
   976   000DE0  C093  F060         	movff	_time_counter,___xxtofl@val
   977   000DE4  C094  F061         	movff	_time_counter+1,___xxtofl@val+1
   978   000DE8  C095  F062         	movff	_time_counter+2,___xxtofl@val+2
   979   000DEC  C096  F063         	movff	_time_counter+3,___xxtofl@val+3
   980   000DF0  0E00               	movlw	0
   981   000DF2  EC28  F002         	call	___xxtofl
   982   000DF6  C060  F06E         	movff	?___xxtofl,___fldiv@b
   983   000DFA  C061  F06F         	movff	?___xxtofl+1,___fldiv@b+1
   984   000DFE  C062  F070         	movff	?___xxtofl+2,___fldiv@b+2
   985   000E02  C063  F071         	movff	?___xxtofl+3,___fldiv@b+3
   986   000E06  0E00               	movlw	0
   987   000E08  0100               	movlb	0	; () banked
   988   000E0A  6F72               	movwf	___fldiv@a& (0+255),b
   989   000E0C  0E00               	movlw	0
   990   000E0E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
   991   000E10  0E61               	movlw	97
   992   000E12  6F74               	movwf	(___fldiv@a+2)& (0+255),b
   993   000E14  0E45               	movlw	69
   994   000E16  6F75               	movwf	(___fldiv@a+3)& (0+255),b
   995   000E18  EC5A  F000         	call	___fldiv	;wreg free
   996   000E1C  C06E  F087         	movff	?___fldiv,?_get_hour
   997   000E20  C06F  F088         	movff	?___fldiv+1,?_get_hour+1
   998   000E24  C070  F089         	movff	?___fldiv+2,?_get_hour+2
   999   000E28  C071  F08A         	movff	?___fldiv+3,?_get_hour+3
  1000   000E2C  0012               	return		;funcret
  1001   000E2E                     __end_of_get_hour:
  1002                           	callstack 0
  1003                           
  1004 ;; *************** function ___xxtofl *****************
  1005 ;; Defined at:
  1006 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  sign            1    wreg     unsigned char 
  1009 ;;  val             4    0[BANK0 ] long 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  sign            1    8[BANK0 ] unsigned char 
  1012 ;;  arg             4   10[BANK0 ] unsigned long 
  1013 ;;  exp             1    9[BANK0 ] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  4    0[BANK0 ] unsigned char 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1024 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1026 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1027 ;;Total ram usage:       14 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 4
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_get_hour
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text5
  1038   000450                     __ptext5:
  1039                           	callstack 0
  1040   000450                     ___xxtofl:
  1041                           	callstack 25
  1042                           
  1043                           ;incstack = 0
  1044                           ;___xxtofl@sign stored from wreg
  1045   000450  0100               	movlb	0	; () banked
  1046   000452  6F68               	movwf	___xxtofl@sign& (0+255),b
  1047   000454  0100               	movlb	0	; () banked
  1048   000456  5168               	movf	___xxtofl@sign& (0+255),w,b
  1049   000458  B4D8               	btfsc	status,2,c
  1050   00045A  EF31  F002         	goto	u1831
  1051   00045E  EF33  F002         	goto	u1830
  1052   000462                     u1831:
  1053   000462  EF55  F002         	goto	l910
  1054   000466                     u1830:
  1055   000466                     
  1056                           ; BSR set to: 0
  1057   000466  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1058   000468  EF3A  F002         	goto	u1840
  1059   00046C  EF38  F002         	goto	u1841
  1060   000470                     u1841:
  1061   000470  EF55  F002         	goto	l910
  1062   000474                     u1840:
  1063   000474                     
  1064                           ; BSR set to: 0
  1065   000474  C060  F064         	movff	___xxtofl@val,??___xxtofl
  1066   000478  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  1067   00047C  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  1068   000480  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  1069   000484  1F64               	comf	??___xxtofl& (0+255),f,b
  1070   000486  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  1071   000488  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  1072   00048A  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  1073   00048C  2B64               	incf	??___xxtofl& (0+255),f,b
  1074   00048E  0E00               	movlw	0
  1075   000490  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  1076   000492  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  1077   000494  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  1078   000496  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  1079   00049A  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  1080   00049E  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  1081   0004A2  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  1082   0004A6  EF5D  F002         	goto	l2024
  1083   0004AA                     l910:
  1084                           
  1085                           ; BSR set to: 0
  1086   0004AA  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  1087   0004AE  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1088   0004B2  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1089   0004B6  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1090   0004BA                     l2024:
  1091                           
  1092                           ; BSR set to: 0
  1093   0004BA  5160               	movf	___xxtofl@val& (0+255),w,b
  1094   0004BC  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  1095   0004BE  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  1096   0004C0  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  1097   0004C2  A4D8               	btfss	status,2,c
  1098   0004C4  EF66  F002         	goto	u1851
  1099   0004C8  EF68  F002         	goto	u1850
  1100   0004CC                     u1851:
  1101   0004CC  EF72  F002         	goto	l2030
  1102   0004D0                     u1850:
  1103   0004D0                     
  1104                           ; BSR set to: 0
  1105   0004D0  0E00               	movlw	0
  1106   0004D2  6F60               	movwf	?___xxtofl& (0+255),b
  1107   0004D4  0E00               	movlw	0
  1108   0004D6  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  1109   0004D8  0E00               	movlw	0
  1110   0004DA  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  1111   0004DC  0E00               	movlw	0
  1112   0004DE  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  1113   0004E0  EF03  F003         	goto	l913
  1114   0004E4                     l2030:
  1115                           
  1116                           ; BSR set to: 0
  1117   0004E4  0E96               	movlw	150
  1118   0004E6  6F69               	movwf	___xxtofl@exp& (0+255),b
  1119   0004E8  EF7C  F002         	goto	l2034
  1120   0004EC                     l2032:
  1121                           
  1122                           ; BSR set to: 0
  1123   0004EC  2B69               	incf	___xxtofl@exp& (0+255),f,b
  1124   0004EE  90D8               	bcf	status,0,c
  1125   0004F0  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1126   0004F2  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1127   0004F4  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1128   0004F6  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  1129   0004F8                     l2034:
  1130                           
  1131                           ; BSR set to: 0
  1132   0004F8  0E00               	movlw	0
  1133   0004FA  156A               	andwf	___xxtofl@arg& (0+255),w,b
  1134   0004FC  6F64               	movwf	??___xxtofl& (0+255),b
  1135   0004FE  0E00               	movlw	0
  1136   000500  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1137   000502  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  1138   000504  0E00               	movlw	0
  1139   000506  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1140   000508  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  1141   00050A  0EFE               	movlw	254
  1142   00050C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1143   00050E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  1144   000510  5164               	movf	??___xxtofl& (0+255),w,b
  1145   000512  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1146   000514  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1147   000516  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1148   000518  A4D8               	btfss	status,2,c
  1149   00051A  EF91  F002         	goto	u1861
  1150   00051E  EF93  F002         	goto	u1860
  1151   000522                     u1861:
  1152   000522  EF76  F002         	goto	l2032
  1153   000526                     u1860:
  1154   000526  EFA1  F002         	goto	l917
  1155   00052A                     l2036:
  1156                           
  1157                           ; BSR set to: 0
  1158   00052A  2B69               	incf	___xxtofl@exp& (0+255),f,b
  1159   00052C                     
  1160                           ; BSR set to: 0
  1161   00052C  0E01               	movlw	1
  1162   00052E  276A               	addwf	___xxtofl@arg& (0+255),f,b
  1163   000530  0E00               	movlw	0
  1164   000532  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  1165   000534  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  1166   000536  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  1167   000538                     
  1168                           ; BSR set to: 0
  1169   000538  90D8               	bcf	status,0,c
  1170   00053A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1171   00053C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1172   00053E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1173   000540  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  1174   000542                     l917:
  1175                           
  1176                           ; BSR set to: 0
  1177   000542  0E00               	movlw	0
  1178   000544  156A               	andwf	___xxtofl@arg& (0+255),w,b
  1179   000546  6F64               	movwf	??___xxtofl& (0+255),b
  1180   000548  0E00               	movlw	0
  1181   00054A  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1182   00054C  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  1183   00054E  0E00               	movlw	0
  1184   000550  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1185   000552  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  1186   000554  0EFF               	movlw	255
  1187   000556  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1188   000558  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  1189   00055A  5164               	movf	??___xxtofl& (0+255),w,b
  1190   00055C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1191   00055E  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1192   000560  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1193   000562  A4D8               	btfss	status,2,c
  1194   000564  EFB6  F002         	goto	u1871
  1195   000568  EFB8  F002         	goto	u1870
  1196   00056C                     u1871:
  1197   00056C  EF95  F002         	goto	l2036
  1198   000570                     u1870:
  1199   000570  EFC0  F002         	goto	l2044
  1200   000574                     l2042:
  1201                           
  1202                           ; BSR set to: 0
  1203   000574  0769               	decf	___xxtofl@exp& (0+255),f,b
  1204   000576  90D8               	bcf	status,0,c
  1205   000578  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  1206   00057A  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  1207   00057C  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  1208   00057E  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  1209   000580                     l2044:
  1210                           
  1211                           ; BSR set to: 0
  1212   000580  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  1213   000582  EFC5  F002         	goto	u1881
  1214   000586  EFC7  F002         	goto	u1880
  1215   00058A                     u1881:
  1216   00058A  EFCF  F002         	goto	l924
  1217   00058E                     u1880:
  1218   00058E                     
  1219                           ; BSR set to: 0
  1220   00058E  0E02               	movlw	2
  1221   000590  6169               	cpfslt	___xxtofl@exp& (0+255),b
  1222   000592  EFCD  F002         	goto	u1891
  1223   000596  EFCF  F002         	goto	u1890
  1224   00059A                     u1891:
  1225   00059A  EFBA  F002         	goto	l2042
  1226   00059E                     u1890:
  1227   00059E                     l924:
  1228                           
  1229                           ; BSR set to: 0
  1230   00059E  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  1231   0005A0  EFD4  F002         	goto	u1901
  1232   0005A4  EFD6  F002         	goto	u1900
  1233   0005A8                     u1901:
  1234   0005A8  EFD7  F002         	goto	l2050
  1235   0005AC                     u1900:
  1236   0005AC                     
  1237                           ; BSR set to: 0
  1238   0005AC  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  1239   0005AE                     l2050:
  1240                           
  1241                           ; BSR set to: 0
  1242   0005AE  90D8               	bcf	status,0,c
  1243   0005B0  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  1244   0005B2                     
  1245                           ; BSR set to: 0
  1246   0005B2  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  1247   0005B6  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  1248   0005B8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  1249   0005BA  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  1250   0005BC  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  1251   0005C0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  1252   0005C2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  1253   0005C4  6B64               	clrf	??___xxtofl& (0+255),b
  1254   0005C6  5164               	movf	??___xxtofl& (0+255),w,b
  1255   0005C8  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  1256   0005CA  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  1257   0005CC  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  1258   0005CE  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  1259   0005D0  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  1260   0005D2  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  1261   0005D4  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  1262   0005D6                     
  1263                           ; BSR set to: 0
  1264   0005D6  5168               	movf	___xxtofl@sign& (0+255),w,b
  1265   0005D8  B4D8               	btfsc	status,2,c
  1266   0005DA  EFF1  F002         	goto	u1911
  1267   0005DE  EFF3  F002         	goto	u1910
  1268   0005E2                     u1911:
  1269   0005E2  EFFB  F002         	goto	l2060
  1270   0005E6                     u1910:
  1271   0005E6                     
  1272                           ; BSR set to: 0
  1273   0005E6  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1274   0005E8  EFFA  F002         	goto	u1920
  1275   0005EC  EFF8  F002         	goto	u1921
  1276   0005F0                     u1921:
  1277   0005F0  EFFB  F002         	goto	l2060
  1278   0005F4                     u1920:
  1279   0005F4                     
  1280                           ; BSR set to: 0
  1281   0005F4  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  1282   0005F6                     l2060:
  1283                           
  1284                           ; BSR set to: 0
  1285   0005F6  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  1286   0005FA  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  1287   0005FE  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  1288   000602  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  1289   000606                     l913:
  1290                           
  1291                           ; BSR set to: 0
  1292   000606  0012               	return		;funcret
  1293   000608                     __end_of___xxtofl:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function ___fldiv *****************
  1297 ;; Defined at:
  1298 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  b               4   14[BANK0 ] unsigned char 
  1301 ;;  a               4   18[BANK0 ] unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  grs             4   33[BANK0 ] unsigned long 
  1304 ;;  rem             4   26[BANK0 ] unsigned long 
  1305 ;;  new_exp         2   31[BANK0 ] short 
  1306 ;;  aexp            1   38[BANK0 ] unsigned char 
  1307 ;;  bexp            1   37[BANK0 ] unsigned char 
  1308 ;;  sign            1   30[BANK0 ] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  4   14[BANK0 ] unsigned char 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1318 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;Total ram usage:       25 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 4
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_get_hour
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text6
  1333   0000B4                     __ptext6:
  1334                           	callstack 0
  1335   0000B4                     ___fldiv:
  1336                           	callstack 25
  1337   0000B4  0100               	movlb	0	; () banked
  1338   0000B6  5171               	movf	(___fldiv@b+3)& (0+255),w,b
  1339   0000B8  0B80               	andlw	128
  1340   0000BA  6F7E               	movwf	___fldiv@sign& (0+255),b
  1341   0000BC  5171               	movf	(___fldiv@b+3)& (0+255),w,b
  1342   0000BE  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
  1343   0000C0  6F85               	movwf	___fldiv@bexp& (0+255),b
  1344   0000C2                     
  1345                           ; BSR set to: 0
  1346   0000C2  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
  1347   0000C4  EF66  F000         	goto	u991
  1348   0000C8  EF68  F000         	goto	u990
  1349   0000CC                     u991:
  1350   0000CC  EF69  F000         	goto	l1526
  1351   0000D0                     u990:
  1352   0000D0                     
  1353                           ; BSR set to: 0
  1354   0000D0  8185               	bsf	___fldiv@bexp& (0+255),0,b
  1355   0000D2                     l1526:
  1356                           
  1357                           ; BSR set to: 0
  1358   0000D2  5185               	movf	___fldiv@bexp& (0+255),w,b
  1359   0000D4  B4D8               	btfsc	status,2,c
  1360   0000D6  EF6F  F000         	goto	u1001
  1361   0000DA  EF71  F000         	goto	u1000
  1362   0000DE                     u1001:
  1363   0000DE  EF86  F000         	goto	l1536
  1364   0000E2                     u1000:
  1365   0000E2                     
  1366                           ; BSR set to: 0
  1367   0000E2  2985               	incf	___fldiv@bexp& (0+255),w,b
  1368   0000E4  A4D8               	btfss	status,2,c
  1369   0000E6  EF77  F000         	goto	u1011
  1370   0000EA  EF79  F000         	goto	u1010
  1371   0000EE                     u1011:
  1372   0000EE  EF81  F000         	goto	l1532
  1373   0000F2                     u1010:
  1374   0000F2                     
  1375                           ; BSR set to: 0
  1376   0000F2  0E00               	movlw	0
  1377   0000F4  6F6E               	movwf	___fldiv@b& (0+255),b
  1378   0000F6  0E00               	movlw	0
  1379   0000F8  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1380   0000FA  0E00               	movlw	0
  1381   0000FC  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1382   0000FE  0E00               	movlw	0
  1383   000100  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1384   000102                     l1532:
  1385                           
  1386                           ; BSR set to: 0
  1387   000102  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
  1388   000104                     
  1389                           ; BSR set to: 0
  1390   000104  0E00               	movlw	0
  1391   000106  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1392   000108  EF8E  F000         	goto	l1538
  1393   00010C                     l1536:
  1394                           
  1395                           ; BSR set to: 0
  1396   00010C  0E00               	movlw	0
  1397   00010E  6F6E               	movwf	___fldiv@b& (0+255),b
  1398   000110  0E00               	movlw	0
  1399   000112  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1400   000114  0E00               	movlw	0
  1401   000116  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1402   000118  0E00               	movlw	0
  1403   00011A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1404   00011C                     l1538:
  1405                           
  1406                           ; BSR set to: 0
  1407   00011C  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1408   00011E  0B80               	andlw	128
  1409   000120  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
  1410   000122                     
  1411                           ; BSR set to: 0
  1412   000122  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1413   000124  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
  1414   000126  6F86               	movwf	___fldiv@aexp& (0+255),b
  1415   000128                     
  1416                           ; BSR set to: 0
  1417   000128  AF74               	btfss	(___fldiv@a+2)& (0+255),7,b
  1418   00012A  EF99  F000         	goto	u1021
  1419   00012E  EF9B  F000         	goto	u1020
  1420   000132                     u1021:
  1421   000132  EF9C  F000         	goto	l1546
  1422   000136                     u1020:
  1423   000136                     
  1424                           ; BSR set to: 0
  1425   000136  8186               	bsf	___fldiv@aexp& (0+255),0,b
  1426   000138                     l1546:
  1427                           
  1428                           ; BSR set to: 0
  1429   000138  5186               	movf	___fldiv@aexp& (0+255),w,b
  1430   00013A  B4D8               	btfsc	status,2,c
  1431   00013C  EFA2  F000         	goto	u1031
  1432   000140  EFA4  F000         	goto	u1030
  1433   000144                     u1031:
  1434   000144  EFB9  F000         	goto	l1556
  1435   000148                     u1030:
  1436   000148                     
  1437                           ; BSR set to: 0
  1438   000148  2986               	incf	___fldiv@aexp& (0+255),w,b
  1439   00014A  A4D8               	btfss	status,2,c
  1440   00014C  EFAA  F000         	goto	u1041
  1441   000150  EFAC  F000         	goto	u1040
  1442   000154                     u1041:
  1443   000154  EFB4  F000         	goto	l1552
  1444   000158                     u1040:
  1445   000158                     
  1446                           ; BSR set to: 0
  1447   000158  0E00               	movlw	0
  1448   00015A  6F72               	movwf	___fldiv@a& (0+255),b
  1449   00015C  0E00               	movlw	0
  1450   00015E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  1451   000160  0E00               	movlw	0
  1452   000162  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  1453   000164  0E00               	movlw	0
  1454   000166  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  1455   000168                     l1552:
  1456                           
  1457                           ; BSR set to: 0
  1458   000168  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
  1459   00016A                     
  1460                           ; BSR set to: 0
  1461   00016A  0E00               	movlw	0
  1462   00016C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  1463   00016E  EFC1  F000         	goto	l1558
  1464   000172                     l1556:
  1465                           
  1466                           ; BSR set to: 0
  1467   000172  0E00               	movlw	0
  1468   000174  6F72               	movwf	___fldiv@a& (0+255),b
  1469   000176  0E00               	movlw	0
  1470   000178  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  1471   00017A  0E00               	movlw	0
  1472   00017C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  1473   00017E  0E00               	movlw	0
  1474   000180  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  1475   000182                     l1558:
  1476                           
  1477                           ; BSR set to: 0
  1478   000182  5172               	movf	___fldiv@a& (0+255),w,b
  1479   000184  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
  1480   000186  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
  1481   000188  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
  1482   00018A  A4D8               	btfss	status,2,c
  1483   00018C  EFCA  F000         	goto	u1051
  1484   000190  EFCC  F000         	goto	u1050
  1485   000194                     u1051:
  1486   000194  EFE4  F000         	goto	l1570
  1487   000198                     u1050:
  1488   000198                     
  1489                           ; BSR set to: 0
  1490   000198  0E00               	movlw	0
  1491   00019A  6F6E               	movwf	___fldiv@b& (0+255),b
  1492   00019C  0E00               	movlw	0
  1493   00019E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1494   0001A0  0E00               	movlw	0
  1495   0001A2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1496   0001A4  0E00               	movlw	0
  1497   0001A6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1498   0001A8                     
  1499                           ; BSR set to: 0
  1500   0001A8  0E80               	movlw	128
  1501   0001AA  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
  1502   0001AC  0E7F               	movlw	127
  1503   0001AE  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
  1504   0001B0                     l1564:
  1505                           
  1506                           ; BSR set to: 0
  1507   0001B0  517E               	movf	___fldiv@sign& (0+255),w,b
  1508   0001B2  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
  1509   0001B4                     
  1510                           ; BSR set to: 0
  1511   0001B4  C06E  F06E         	movff	___fldiv@b,?___fldiv
  1512   0001B8  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
  1513   0001BC  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
  1514   0001C0  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
  1515   0001C4  EF27  F002         	goto	l837
  1516   0001C8                     l1570:
  1517                           
  1518                           ; BSR set to: 0
  1519   0001C8  5185               	movf	___fldiv@bexp& (0+255),w,b
  1520   0001CA  A4D8               	btfss	status,2,c
  1521   0001CC  EFEA  F000         	goto	u1061
  1522   0001D0  EFEC  F000         	goto	u1060
  1523   0001D4                     u1061:
  1524   0001D4  EFF6  F000         	goto	l1578
  1525   0001D8                     u1060:
  1526   0001D8                     
  1527                           ; BSR set to: 0
  1528   0001D8  0E00               	movlw	0
  1529   0001DA  6F6E               	movwf	?___fldiv& (0+255),b
  1530   0001DC  0E00               	movlw	0
  1531   0001DE  6F6F               	movwf	(?___fldiv+1)& (0+255),b
  1532   0001E0  0E00               	movlw	0
  1533   0001E2  6F70               	movwf	(?___fldiv+2)& (0+255),b
  1534   0001E4  0E00               	movlw	0
  1535   0001E6  6F71               	movwf	(?___fldiv+3)& (0+255),b
  1536   0001E8  EF27  F002         	goto	l837
  1537   0001EC                     l1578:
  1538                           
  1539                           ; BSR set to: 0
  1540   0001EC  5186               	movf	___fldiv@aexp& (0+255),w,b
  1541   0001EE  C085  F076         	movff	___fldiv@bexp,??___fldiv
  1542   0001F2  6B77               	clrf	(??___fldiv+1)& (0+255),b
  1543   0001F4  5F76               	subwf	??___fldiv& (0+255),f,b
  1544   0001F6  0E00               	movlw	0
  1545   0001F8  5B77               	subwfb	(??___fldiv+1)& (0+255),f,b
  1546   0001FA  0E7F               	movlw	127
  1547   0001FC  2576               	addwf	??___fldiv& (0+255),w,b
  1548   0001FE  6F7F               	movwf	___fldiv@new_exp& (0+255),b
  1549   000200  0E00               	movlw	0
  1550   000202  2177               	addwfc	(??___fldiv+1)& (0+255),w,b
  1551   000204  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
  1552   000206                     
  1553                           ; BSR set to: 0
  1554   000206  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
  1555   00020A  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
  1556   00020E  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
  1557   000212  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
  1558   000216                     
  1559                           ; BSR set to: 0
  1560   000216  0E00               	movlw	0
  1561   000218  6F6E               	movwf	___fldiv@b& (0+255),b
  1562   00021A  0E00               	movlw	0
  1563   00021C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1564   00021E  0E00               	movlw	0
  1565   000220  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1566   000222  0E00               	movlw	0
  1567   000224  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1568   000226                     
  1569                           ; BSR set to: 0
  1570   000226  0E00               	movlw	0
  1571   000228  6F81               	movwf	___fldiv@grs& (0+255),b
  1572   00022A  0E00               	movlw	0
  1573   00022C  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
  1574   00022E  0E00               	movlw	0
  1575   000230  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
  1576   000232  0E00               	movlw	0
  1577   000234  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
  1578   000236                     
  1579                           ; BSR set to: 0
  1580   000236  0E00               	movlw	0
  1581   000238  6F86               	movwf	___fldiv@aexp& (0+255),b
  1582   00023A  EF57  F001         	goto	l839
  1583   00023E                     l1588:
  1584                           
  1585                           ; BSR set to: 0
  1586   00023E  5186               	movf	___fldiv@aexp& (0+255),w,b
  1587   000240  B4D8               	btfsc	status,2,c
  1588   000242  EF25  F001         	goto	u1071
  1589   000246  EF27  F001         	goto	u1070
  1590   00024A                     u1071:
  1591   00024A  EF3E  F001         	goto	l1596
  1592   00024E                     u1070:
  1593   00024E                     
  1594                           ; BSR set to: 0
  1595   00024E  90D8               	bcf	status,0,c
  1596   000250  377A               	rlcf	___fldiv@rem& (0+255),f,b
  1597   000252  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  1598   000254  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  1599   000256  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  1600   000258  90D8               	bcf	status,0,c
  1601   00025A  376E               	rlcf	___fldiv@b& (0+255),f,b
  1602   00025C  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  1603   00025E  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
  1604   000260  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
  1605   000262                     
  1606                           ; BSR set to: 0
  1607   000262  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
  1608   000264  EF36  F001         	goto	u1081
  1609   000268  EF38  F001         	goto	u1080
  1610   00026C                     u1081:
  1611   00026C  EF39  F001         	goto	l842
  1612   000270                     u1080:
  1613   000270                     
  1614                           ; BSR set to: 0
  1615   000270  816E               	bsf	___fldiv@b& (0+255),0,b
  1616   000272                     l842:
  1617                           
  1618                           ; BSR set to: 0
  1619   000272  90D8               	bcf	status,0,c
  1620   000274  3781               	rlcf	___fldiv@grs& (0+255),f,b
  1621   000276  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  1622   000278  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  1623   00027A  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  1624   00027C                     l1596:
  1625                           
  1626                           ; BSR set to: 0
  1627   00027C  5172               	movf	___fldiv@a& (0+255),w,b
  1628   00027E  5D7A               	subwf	___fldiv@rem& (0+255),w,b
  1629   000280  5173               	movf	(___fldiv@a+1)& (0+255),w,b
  1630   000282  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  1631   000284  5174               	movf	(___fldiv@a+2)& (0+255),w,b
  1632   000286  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  1633   000288  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1634   00028A  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  1635   00028C  A0D8               	btfss	status,0,c
  1636   00028E  EF4B  F001         	goto	u1091
  1637   000292  EF4D  F001         	goto	u1090
  1638   000296                     u1091:
  1639   000296  EF56  F001         	goto	l1602
  1640   00029A                     u1090:
  1641   00029A                     
  1642                           ; BSR set to: 0
  1643   00029A  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
  1644   00029C                     
  1645                           ; BSR set to: 0
  1646   00029C  5172               	movf	___fldiv@a& (0+255),w,b
  1647   00029E  5F7A               	subwf	___fldiv@rem& (0+255),f,b
  1648   0002A0  5173               	movf	(___fldiv@a+1)& (0+255),w,b
  1649   0002A2  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  1650   0002A4  5174               	movf	(___fldiv@a+2)& (0+255),w,b
  1651   0002A6  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  1652   0002A8  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1653   0002AA  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  1654   0002AC                     l1602:
  1655                           
  1656                           ; BSR set to: 0
  1657   0002AC  2B86               	incf	___fldiv@aexp& (0+255),f,b
  1658   0002AE                     l839:
  1659                           
  1660                           ; BSR set to: 0
  1661   0002AE  0E19               	movlw	25
  1662   0002B0  6586               	cpfsgt	___fldiv@aexp& (0+255),b
  1663   0002B2  EF5D  F001         	goto	u1101
  1664   0002B6  EF5F  F001         	goto	u1100
  1665   0002BA                     u1101:
  1666   0002BA  EF1F  F001         	goto	l1588
  1667   0002BE                     u1100:
  1668   0002BE                     
  1669                           ; BSR set to: 0
  1670   0002BE  517A               	movf	___fldiv@rem& (0+255),w,b
  1671   0002C0  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  1672   0002C2  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  1673   0002C4  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  1674   0002C6  B4D8               	btfsc	status,2,c
  1675   0002C8  EF68  F001         	goto	u1111
  1676   0002CC  EF6A  F001         	goto	u1110
  1677   0002D0                     u1111:
  1678   0002D0  EF82  F001         	goto	l1614
  1679   0002D4                     u1110:
  1680   0002D4                     
  1681                           ; BSR set to: 0
  1682   0002D4  8181               	bsf	___fldiv@grs& (0+255),0,b
  1683   0002D6  EF82  F001         	goto	l1614
  1684   0002DA                     l1608:
  1685                           
  1686                           ; BSR set to: 0
  1687   0002DA  90D8               	bcf	status,0,c
  1688   0002DC  376E               	rlcf	___fldiv@b& (0+255),f,b
  1689   0002DE  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  1690   0002E0  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
  1691   0002E2  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
  1692   0002E4                     
  1693                           ; BSR set to: 0
  1694   0002E4  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
  1695   0002E6  EF77  F001         	goto	u1121
  1696   0002EA  EF79  F001         	goto	u1120
  1697   0002EE                     u1121:
  1698   0002EE  EF7A  F001         	goto	l848
  1699   0002F2                     u1120:
  1700   0002F2                     
  1701                           ; BSR set to: 0
  1702   0002F2  816E               	bsf	___fldiv@b& (0+255),0,b
  1703   0002F4                     l848:
  1704                           
  1705                           ; BSR set to: 0
  1706   0002F4  90D8               	bcf	status,0,c
  1707   0002F6  3781               	rlcf	___fldiv@grs& (0+255),f,b
  1708   0002F8  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  1709   0002FA  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  1710   0002FC  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  1711   0002FE  077F               	decf	___fldiv@new_exp& (0+255),f,b
  1712   000300  A0D8               	btfss	status,0,c
  1713   000302  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  1714   000304                     l1614:
  1715                           
  1716                           ; BSR set to: 0
  1717   000304  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
  1718   000306  EF87  F001         	goto	u1131
  1719   00030A  EF89  F001         	goto	u1130
  1720   00030E                     u1131:
  1721   00030E  EF6D  F001         	goto	l1608
  1722   000312                     u1130:
  1723   000312                     
  1724                           ; BSR set to: 0
  1725   000312  0E00               	movlw	0
  1726   000314  6F86               	movwf	___fldiv@aexp& (0+255),b
  1727   000316                     
  1728                           ; BSR set to: 0
  1729   000316  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
  1730   000318  EF90  F001         	goto	u1141
  1731   00031C  EF92  F001         	goto	u1140
  1732   000320                     u1141:
  1733   000320  EFB6  F001         	goto	l850
  1734   000324                     u1140:
  1735   000324                     
  1736                           ; BSR set to: 0
  1737   000324  0EFF               	movlw	255
  1738   000326  1581               	andwf	___fldiv@grs& (0+255),w,b
  1739   000328  6F76               	movwf	??___fldiv& (0+255),b
  1740   00032A  0EFF               	movlw	255
  1741   00032C  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
  1742   00032E  6F77               	movwf	(??___fldiv+1)& (0+255),b
  1743   000330  0EFF               	movlw	255
  1744   000332  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
  1745   000334  6F78               	movwf	(??___fldiv+2)& (0+255),b
  1746   000336  0E7F               	movlw	127
  1747   000338  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
  1748   00033A  6F79               	movwf	(??___fldiv+3)& (0+255),b
  1749   00033C  5176               	movf	??___fldiv& (0+255),w,b
  1750   00033E  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
  1751   000340  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
  1752   000342  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
  1753   000344  B4D8               	btfsc	status,2,c
  1754   000346  EFA7  F001         	goto	u1151
  1755   00034A  EFA9  F001         	goto	u1150
  1756   00034E                     u1151:
  1757   00034E  EFAD  F001         	goto	l851
  1758   000352                     u1150:
  1759   000352                     l1622:
  1760                           
  1761                           ; BSR set to: 0
  1762   000352  0E01               	movlw	1
  1763   000354  6F86               	movwf	___fldiv@aexp& (0+255),b
  1764   000356  EFB6  F001         	goto	l850
  1765   00035A                     l851:
  1766                           
  1767                           ; BSR set to: 0
  1768   00035A  A16E               	btfss	___fldiv@b& (0+255),0,b
  1769   00035C  EFB2  F001         	goto	u1161
  1770   000360  EFB4  F001         	goto	u1160
  1771   000364                     u1161:
  1772   000364  EFB6  F001         	goto	l850
  1773   000368                     u1160:
  1774   000368  EFA9  F001         	goto	l1622
  1775   00036C                     l850:
  1776                           
  1777                           ; BSR set to: 0
  1778   00036C  5186               	movf	___fldiv@aexp& (0+255),w,b
  1779   00036E  B4D8               	btfsc	status,2,c
  1780   000370  EFBC  F001         	goto	u1171
  1781   000374  EFBE  F001         	goto	u1170
  1782   000378                     u1171:
  1783   000378  EFE2  F001         	goto	l1634
  1784   00037C                     u1170:
  1785   00037C                     
  1786                           ; BSR set to: 0
  1787   00037C  0E01               	movlw	1
  1788   00037E  276E               	addwf	___fldiv@b& (0+255),f,b
  1789   000380  0E00               	movlw	0
  1790   000382  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
  1791   000384  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
  1792   000386  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
  1793   000388                     
  1794                           ; BSR set to: 0
  1795   000388  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
  1796   00038A  EFC9  F001         	goto	u1181
  1797   00038E  EFCB  F001         	goto	u1180
  1798   000392                     u1181:
  1799   000392  EFE2  F001         	goto	l1634
  1800   000396                     u1180:
  1801   000396                     
  1802                           ; BSR set to: 0
  1803   000396  C06E  F076         	movff	___fldiv@b,??___fldiv
  1804   00039A  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
  1805   00039E  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
  1806   0003A2  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
  1807   0003A6  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
  1808   0003A8  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
  1809   0003AA  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
  1810   0003AC  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
  1811   0003AE  3376               	rrcf	??___fldiv& (0+255),f,b
  1812   0003B0  C076  F06E         	movff	??___fldiv,___fldiv@b
  1813   0003B4  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
  1814   0003B8  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
  1815   0003BC  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
  1816   0003C0                     
  1817                           ; BSR set to: 0
  1818   0003C0  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
  1819   0003C2  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  1820   0003C4                     l1634:
  1821                           
  1822                           ; BSR set to: 0
  1823   0003C4  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  1824   0003C6  EFED  F001         	goto	u1191
  1825   0003CA  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  1826   0003CC  E108               	bnz	u1190
  1827   0003CE  297F               	incf	___fldiv@new_exp& (0+255),w,b
  1828   0003D0  A0D8               	btfss	status,0,c
  1829   0003D2  EFED  F001         	goto	u1191
  1830   0003D6  EFEF  F001         	goto	u1190
  1831   0003DA                     u1191:
  1832   0003DA  EFFA  F001         	goto	l1638
  1833   0003DE                     u1190:
  1834   0003DE                     
  1835                           ; BSR set to: 0
  1836   0003DE  0E00               	movlw	0
  1837   0003E0  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
  1838   0003E2  697F               	setf	___fldiv@new_exp& (0+255),b
  1839   0003E4  0E00               	movlw	0
  1840   0003E6  6F6E               	movwf	___fldiv@b& (0+255),b
  1841   0003E8  0E00               	movlw	0
  1842   0003EA  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1843   0003EC  0E00               	movlw	0
  1844   0003EE  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1845   0003F0  0E00               	movlw	0
  1846   0003F2  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1847   0003F4                     l1638:
  1848                           
  1849                           ; BSR set to: 0
  1850   0003F4  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  1851   0003F6  EF07  F002         	goto	u1200
  1852   0003FA  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  1853   0003FC  E106               	bnz	u1201
  1854   0003FE  057F               	decf	___fldiv@new_exp& (0+255),w,b
  1855   000400  B0D8               	btfsc	status,0,c
  1856   000402  EF05  F002         	goto	u1201
  1857   000406  EF07  F002         	goto	u1200
  1858   00040A                     u1201:
  1859   00040A  EF15  F002         	goto	l1642
  1860   00040E                     u1200:
  1861   00040E                     
  1862                           ; BSR set to: 0
  1863   00040E  0E00               	movlw	0
  1864   000410  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
  1865   000412  0E00               	movlw	0
  1866   000414  6F7F               	movwf	___fldiv@new_exp& (0+255),b
  1867   000416  0E00               	movlw	0
  1868   000418  6F6E               	movwf	___fldiv@b& (0+255),b
  1869   00041A  0E00               	movlw	0
  1870   00041C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1871   00041E  0E00               	movlw	0
  1872   000420  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1873   000422  0E00               	movlw	0
  1874   000424  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1875   000426  0E00               	movlw	0
  1876   000428  6F7E               	movwf	___fldiv@sign& (0+255),b
  1877   00042A                     l1642:
  1878                           
  1879                           ; BSR set to: 0
  1880   00042A  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
  1881   00042E                     
  1882                           ; BSR set to: 0
  1883   00042E  A185               	btfss	___fldiv@bexp& (0+255),0,b
  1884   000430  EF1C  F002         	goto	u1211
  1885   000434  EF1E  F002         	goto	u1210
  1886   000438                     u1211:
  1887   000438  EF21  F002         	goto	l1648
  1888   00043C                     u1210:
  1889   00043C                     
  1890                           ; BSR set to: 0
  1891   00043C  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
  1892   00043E  EF22  F002         	goto	l1650
  1893   000442                     l1648:
  1894                           
  1895                           ; BSR set to: 0
  1896   000442  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
  1897   000444                     l1650:
  1898                           
  1899                           ; BSR set to: 0
  1900   000444  90D8               	bcf	status,0,c
  1901   000446  3185               	rrcf	___fldiv@bexp& (0+255),w,b
  1902   000448  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1903   00044A  EFD8  F000         	goto	l1564
  1904   00044E                     l837:
  1905                           
  1906                           ; BSR set to: 0
  1907   00044E  0012               	return		;funcret
  1908   000450                     __end_of___fldiv:
  1909                           	callstack 0
  1910                           
  1911 ;; *************** function _get_day *****************
  1912 ;; Defined at:
  1913 ;;		line 63 in file "timers.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  2    0[BANK0 ] unsigned int 
  1920 ;; Registers used:
  1921 ;;		None
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 4
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text7
  1942   000F22                     __ptext7:
  1943                           	callstack 0
  1944   000F22                     _get_day:
  1945                           	callstack 26
  1946   000F22                     
  1947                           ;timers.c: 64:     return day;
  1948   000F22  C046  F060         	movff	_day,?_get_day
  1949   000F26  C047  F061         	movff	_day+1,?_get_day+1
  1950   000F2A  0012               	return		;funcret
  1951   000F2C                     __end_of_get_day:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function ___fltol *****************
  1955 ;; Defined at:
  1956 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  f1              4    0[BANK0 ] unsigned int 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  exp1            1    9[BANK0 ] unsigned char 
  1961 ;;  sign1           1    8[BANK0 ] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  4    0[BANK0 ] long 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1974 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1975 ;;Total ram usage:       10 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 4
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text8
  1986   000732                     __ptext8:
  1987                           	callstack 0
  1988   000732                     ___fltol:
  1989                           	callstack 26
  1990   000732  0100               	movlb	0	; () banked
  1991   000734  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  1992   000736  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  1993   000738  6F69               	movwf	___fltol@exp1& (0+255),b
  1994   00073A  5169               	movf	___fltol@exp1& (0+255),w,b
  1995   00073C  A4D8               	btfss	status,2,c
  1996   00073E  EFA3  F003         	goto	u2131
  1997   000742  EFA5  F003         	goto	u2130
  1998   000746                     u2131:
  1999   000746  EFAF  F003         	goto	l2190
  2000   00074A                     u2130:
  2001   00074A                     l2186:
  2002                           
  2003                           ; BSR set to: 0
  2004   00074A  0E00               	movlw	0
  2005   00074C  6F60               	movwf	?___fltol& (0+255),b
  2006   00074E  0E00               	movlw	0
  2007   000750  6F61               	movwf	(?___fltol+1)& (0+255),b
  2008   000752  0E00               	movlw	0
  2009   000754  6F62               	movwf	(?___fltol+2)& (0+255),b
  2010   000756  0E00               	movlw	0
  2011   000758  6F63               	movwf	(?___fltol+3)& (0+255),b
  2012   00075A  EF1C  F004         	goto	l552
  2013   00075E                     l2190:
  2014                           
  2015                           ; BSR set to: 0
  2016   00075E  C060  F064         	movff	___fltol@f1,??___fltol
  2017   000762  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  2018   000766  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  2019   00076A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  2020   00076E  0E20               	movlw	32
  2021   000770  EFBF  F003         	goto	u2140
  2022   000774                     u2145:
  2023   000774  90D8               	bcf	status,0,c
  2024   000776  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  2025   000778  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  2026   00077A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  2027   00077C  3364               	rrcf	??___fltol& (0+255),f,b
  2028   00077E                     u2140:
  2029   00077E  2EE8               	decfsz	wreg,f,c
  2030   000780  EFBA  F003         	goto	u2145
  2031   000784  5164               	movf	??___fltol& (0+255),w,b
  2032   000786  6F68               	movwf	___fltol@sign1& (0+255),b
  2033   000788                     
  2034                           ; BSR set to: 0
  2035   000788  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  2036   00078A                     
  2037                           ; BSR set to: 0
  2038   00078A  0EFF               	movlw	255
  2039   00078C  1760               	andwf	___fltol@f1& (0+255),f,b
  2040   00078E  0EFF               	movlw	255
  2041   000790  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  2042   000792  0EFF               	movlw	255
  2043   000794  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  2044   000796  0E00               	movlw	0
  2045   000798  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  2046   00079A                     
  2047                           ; BSR set to: 0
  2048   00079A  0E96               	movlw	150
  2049   00079C  5F69               	subwf	___fltol@exp1& (0+255),f,b
  2050   00079E                     
  2051                           ; BSR set to: 0
  2052   00079E  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  2053   0007A0  EFD6  F003         	goto	u2150
  2054   0007A4  EFD4  F003         	goto	u2151
  2055   0007A8                     u2151:
  2056   0007A8  EFEC  F003         	goto	l2210
  2057   0007AC                     u2150:
  2058   0007AC                     
  2059                           ; BSR set to: 0
  2060   0007AC  5169               	movf	___fltol@exp1& (0+255),w,b
  2061   0007AE  0A80               	xorlw	128
  2062   0007B0  0F97               	addlw	151
  2063   0007B2  B0D8               	btfsc	status,0,c
  2064   0007B4  EFDE  F003         	goto	u2161
  2065   0007B8  EFE0  F003         	goto	u2160
  2066   0007BC                     u2161:
  2067   0007BC  EFE2  F003         	goto	l2206
  2068   0007C0                     u2160:
  2069   0007C0  EFA5  F003         	goto	l2186
  2070   0007C4                     l2206:
  2071                           
  2072                           ; BSR set to: 0
  2073   0007C4  90D8               	bcf	status,0,c
  2074   0007C6  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  2075   0007C8  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  2076   0007CA  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  2077   0007CC  3360               	rrcf	___fltol@f1& (0+255),f,b
  2078   0007CE                     
  2079                           ; BSR set to: 0
  2080   0007CE  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  2081   0007D0  EFE2  F003         	goto	l2206
  2082   0007D4  EF04  F004         	goto	l2220
  2083   0007D8                     l2210:
  2084                           
  2085                           ; BSR set to: 0
  2086   0007D8  0E1F               	movlw	31
  2087   0007DA  6569               	cpfsgt	___fltol@exp1& (0+255),b
  2088   0007DC  EFF2  F003         	goto	u2171
  2089   0007E0  EFF4  F003         	goto	u2170
  2090   0007E4                     u2171:
  2091   0007E4  EFFC  F003         	goto	l2218
  2092   0007E8                     u2170:
  2093   0007E8  EFA5  F003         	goto	l2186
  2094   0007EC                     l2216:
  2095                           
  2096                           ; BSR set to: 0
  2097   0007EC  90D8               	bcf	status,0,c
  2098   0007EE  3760               	rlcf	___fltol@f1& (0+255),f,b
  2099   0007F0  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  2100   0007F2  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  2101   0007F4  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  2102   0007F6  0769               	decf	___fltol@exp1& (0+255),f,b
  2103   0007F8                     l2218:
  2104                           
  2105                           ; BSR set to: 0
  2106   0007F8  5169               	movf	___fltol@exp1& (0+255),w,b
  2107   0007FA  A4D8               	btfss	status,2,c
  2108   0007FC  EF02  F004         	goto	u2181
  2109   000800  EF04  F004         	goto	u2180
  2110   000804                     u2181:
  2111   000804  EFF6  F003         	goto	l2216
  2112   000808                     u2180:
  2113   000808                     l2220:
  2114                           
  2115                           ; BSR set to: 0
  2116   000808  5168               	movf	___fltol@sign1& (0+255),w,b
  2117   00080A  B4D8               	btfsc	status,2,c
  2118   00080C  EF0A  F004         	goto	u2191
  2119   000810  EF0C  F004         	goto	u2190
  2120   000814                     u2191:
  2121   000814  EF14  F004         	goto	l2224
  2122   000818                     u2190:
  2123   000818                     
  2124                           ; BSR set to: 0
  2125   000818  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  2126   00081A  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  2127   00081C  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  2128   00081E  6D60               	negf	___fltol@f1& (0+255),b
  2129   000820  0E00               	movlw	0
  2130   000822  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  2131   000824  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  2132   000826  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  2133   000828                     l2224:
  2134                           
  2135                           ; BSR set to: 0
  2136   000828  C060  F060         	movff	___fltol@f1,?___fltol
  2137   00082C  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  2138   000830  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  2139   000834  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  2140   000838                     l552:
  2141                           
  2142                           ; BSR set to: 0
  2143   000838  0012               	return		;funcret
  2144   00083A                     __end_of___fltol:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function ___flge *****************
  2148 ;; Defined at:
  2149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  ff1             4    0[BANK0 ] long 
  2152 ;;  ff2             4    4[BANK0 ] long 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;		None               void
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2164 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;Total ram usage:       12 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 4
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text9
  2179   00083A                     __ptext9:
  2180                           	callstack 0
  2181   00083A                     ___flge:
  2182                           	callstack 26
  2183   00083A  0E00               	movlw	0
  2184   00083C  0100               	movlb	0	; () banked
  2185   00083E  1560               	andwf	___flge@ff1& (0+255),w,b
  2186   000840  6F68               	movwf	??___flge& (0+255),b
  2187   000842  0E00               	movlw	0
  2188   000844  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  2189   000846  6F69               	movwf	(??___flge+1)& (0+255),b
  2190   000848  0E80               	movlw	128
  2191   00084A  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  2192   00084C  6F6A               	movwf	(??___flge+2)& (0+255),b
  2193   00084E  0E7F               	movlw	127
  2194   000850  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  2195   000852  6F6B               	movwf	(??___flge+3)& (0+255),b
  2196   000854  5168               	movf	??___flge& (0+255),w,b
  2197   000856  1169               	iorwf	(??___flge+1)& (0+255),w,b
  2198   000858  116A               	iorwf	(??___flge+2)& (0+255),w,b
  2199   00085A  116B               	iorwf	(??___flge+3)& (0+255),w,b
  2200   00085C  A4D8               	btfss	status,2,c
  2201   00085E  EF33  F004         	goto	u2081
  2202   000862  EF35  F004         	goto	u2080
  2203   000866                     u2081:
  2204   000866  EF3D  F004         	goto	l2166
  2205   00086A                     u2080:
  2206   00086A                     
  2207                           ; BSR set to: 0
  2208   00086A  0E00               	movlw	0
  2209   00086C  6F60               	movwf	___flge@ff1& (0+255),b
  2210   00086E  0E00               	movlw	0
  2211   000870  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2212   000872  0E00               	movlw	0
  2213   000874  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2214   000876  0E00               	movlw	0
  2215   000878  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2216   00087A                     l2166:
  2217                           
  2218                           ; BSR set to: 0
  2219   00087A  0E00               	movlw	0
  2220   00087C  1564               	andwf	___flge@ff2& (0+255),w,b
  2221   00087E  6F68               	movwf	??___flge& (0+255),b
  2222   000880  0E00               	movlw	0
  2223   000882  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  2224   000884  6F69               	movwf	(??___flge+1)& (0+255),b
  2225   000886  0E80               	movlw	128
  2226   000888  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  2227   00088A  6F6A               	movwf	(??___flge+2)& (0+255),b
  2228   00088C  0E7F               	movlw	127
  2229   00088E  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  2230   000890  6F6B               	movwf	(??___flge+3)& (0+255),b
  2231   000892  5168               	movf	??___flge& (0+255),w,b
  2232   000894  1169               	iorwf	(??___flge+1)& (0+255),w,b
  2233   000896  116A               	iorwf	(??___flge+2)& (0+255),w,b
  2234   000898  116B               	iorwf	(??___flge+3)& (0+255),w,b
  2235   00089A  A4D8               	btfss	status,2,c
  2236   00089C  EF52  F004         	goto	u2091
  2237   0008A0  EF54  F004         	goto	u2090
  2238   0008A4                     u2091:
  2239   0008A4  EF5C  F004         	goto	l2170
  2240   0008A8                     u2090:
  2241   0008A8                     
  2242                           ; BSR set to: 0
  2243   0008A8  0E00               	movlw	0
  2244   0008AA  6F64               	movwf	___flge@ff2& (0+255),b
  2245   0008AC  0E00               	movlw	0
  2246   0008AE  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2247   0008B0  0E00               	movlw	0
  2248   0008B2  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2249   0008B4  0E00               	movlw	0
  2250   0008B6  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2251   0008B8                     l2170:
  2252                           
  2253                           ; BSR set to: 0
  2254   0008B8  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  2255   0008BA  EF61  F004         	goto	u2101
  2256   0008BE  EF63  F004         	goto	u2100
  2257   0008C2                     u2101:
  2258   0008C2  EF6C  F004         	goto	l2174
  2259   0008C6                     u2100:
  2260   0008C6                     
  2261                           ; BSR set to: 0
  2262   0008C6  6D60               	negf	___flge@ff1& (0+255),b
  2263   0008C8  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  2264   0008CA  B0D8               	btfsc	status,0,c
  2265   0008CC  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  2266   0008CE  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  2267   0008D0  B0D8               	btfsc	status,0,c
  2268   0008D2  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  2269   0008D4  0E80               	movlw	128
  2270   0008D6  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  2271   0008D8                     l2174:
  2272                           
  2273                           ; BSR set to: 0
  2274   0008D8  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  2275   0008DA  EF71  F004         	goto	u2111
  2276   0008DE  EF73  F004         	goto	u2110
  2277   0008E2                     u2111:
  2278   0008E2  EF7C  F004         	goto	l520
  2279   0008E6                     u2110:
  2280   0008E6                     
  2281                           ; BSR set to: 0
  2282   0008E6  6D64               	negf	___flge@ff2& (0+255),b
  2283   0008E8  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  2284   0008EA  B0D8               	btfsc	status,0,c
  2285   0008EC  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  2286   0008EE  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  2287   0008F0  B0D8               	btfsc	status,0,c
  2288   0008F2  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  2289   0008F4  0E80               	movlw	128
  2290   0008F6  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  2291   0008F8                     l520:
  2292                           
  2293                           ; BSR set to: 0
  2294   0008F8  0E00               	movlw	0
  2295   0008FA  1B60               	xorwf	___flge@ff1& (0+255),f,b
  2296   0008FC  0E00               	movlw	0
  2297   0008FE  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  2298   000900  0E00               	movlw	0
  2299   000902  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  2300   000904  0E80               	movlw	128
  2301   000906  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  2302   000908  0E00               	movlw	0
  2303   00090A  1B64               	xorwf	___flge@ff2& (0+255),f,b
  2304   00090C  0E00               	movlw	0
  2305   00090E  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  2306   000910  0E00               	movlw	0
  2307   000912  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  2308   000914  0E80               	movlw	128
  2309   000916  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  2310   000918  5164               	movf	___flge@ff2& (0+255),w,b
  2311   00091A  5D60               	subwf	___flge@ff1& (0+255),w,b
  2312   00091C  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  2313   00091E  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  2314   000920  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  2315   000922  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  2316   000924  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  2317   000926  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  2318   000928  B0D8               	btfsc	status,0,c
  2319   00092A  EF99  F004         	goto	u2121
  2320   00092E  EF9B  F004         	goto	u2120
  2321   000932                     u2121:
  2322   000932  EF9E  F004         	goto	l2180
  2323   000936                     u2120:
  2324   000936                     
  2325                           ; BSR set to: 0
  2326   000936  90D8               	bcf	status,0,c
  2327   000938  EF9F  F004         	goto	l525
  2328   00093C                     l2180:
  2329                           
  2330                           ; BSR set to: 0
  2331   00093C  80D8               	bsf	status,0,c
  2332   00093E                     l525:
  2333                           
  2334                           ; BSR set to: 0
  2335   00093E  0012               	return		;funcret
  2336   000940                     __end_of___flge:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _Timer0_init *****************
  2340 ;; Defined at:
  2341 ;;		line 15 in file "timers.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  init_test_mo    2    0[BANK0 ] unsigned short 
  2344 ;;  current_day     2    2[BANK0 ] unsigned int 
  2345 ;;  current_mont    2    4[BANK0 ] unsigned int 
  2346 ;;  leap_year       2    6[BANK0 ] unsigned int 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2358 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;Total ram usage:        8 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 4
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text10
  2373   000C44                     __ptext10:
  2374                           	callstack 0
  2375   000C44                     _Timer0_init:
  2376                           	callstack 26
  2377   000C44                     
  2378                           ;timers.c: 15: void Timer0_init(unsigned short init_test_mode,unsigned int current_day,u
      +                          nsigned int current_month, unsigned int leap_year);timers.c: 16: {;timers.c: 17:     tes
      +                          t_mode = init_test_mode;
  2379   000C44  C060  F04A         	movff	Timer0_init@init_test_mode,_test_mode
  2380   000C48  C061  F04B         	movff	Timer0_init@init_test_mode+1,_test_mode+1
  2381                           
  2382                           ;timers.c: 18:     day = current_day;
  2383   000C4C  C062  F046         	movff	Timer0_init@current_day,_day
  2384   000C50  C063  F047         	movff	Timer0_init@current_day+1,_day+1
  2385                           
  2386                           ;timers.c: 19:     month = current_month;
  2387   000C54  C064  F044         	movff	Timer0_init@current_month,_month
  2388   000C58  C065  F045         	movff	Timer0_init@current_month+1,_month+1
  2389   000C5C                     
  2390                           ;timers.c: 20:     leap_year_count = 3 - leap_year;
  2391   000C5C  0100               	movlb	0	; () banked
  2392   000C5E  5166               	movf	Timer0_init@leap_year& (0+255),w,b
  2393   000C60  0803               	sublw	3
  2394   000C62  6E48               	movwf	_leap_year_count^0,c
  2395   000C64  5167               	movf	(Timer0_init@leap_year+1)& (0+255),w,b
  2396   000C66  A0D8               	btfss	status,0,c
  2397   000C68  2AE8               	incf	wreg,f,c
  2398   000C6A  0800               	sublw	0
  2399   000C6C  6E49               	movwf	(_leap_year_count+1)^0,c
  2400   000C6E                     
  2401                           ; BSR set to: 0
  2402                           ;timers.c: 22:     T0CON1bits.T0CS=0b010;
  2403   000C6E  50D6               	movf	214,w,c	;volatile
  2404   000C70  0B1F               	andlw	-225
  2405   000C72  0940               	iorlw	64
  2406   000C74  6ED6               	movwf	214,c	;volatile
  2407   000C76                     
  2408                           ; BSR set to: 0
  2409                           ;timers.c: 23:     T0CON1bits.T0ASYNC=1;
  2410   000C76  88D6               	bsf	214,4,c	;volatile
  2411   000C78                     
  2412                           ; BSR set to: 0
  2413                           ;timers.c: 25:     T0CON0bits.T016BIT=1;
  2414   000C78  88D5               	bsf	213,4,c	;volatile
  2415   000C7A                     
  2416                           ; BSR set to: 0
  2417                           ;timers.c: 27:     if(test_mode == 0){
  2418   000C7A  504A               	movf	_test_mode^0,w,c
  2419   000C7C  104B               	iorwf	(_test_mode+1)^0,w,c
  2420   000C7E  A4D8               	btfss	status,2,c
  2421   000C80  EF44  F006         	goto	u2021
  2422   000C84  EF46  F006         	goto	u2020
  2423   000C88                     u2021:
  2424   000C88  EF50  F006         	goto	l2116
  2425   000C8C                     u2020:
  2426   000C8C                     
  2427                           ; BSR set to: 0
  2428                           ;timers.c: 29:         T0CON1bits.T0CKPS=8;
  2429   000C8C  50D6               	movf	214,w,c	;volatile
  2430   000C8E  0BF0               	andlw	-16
  2431   000C90  0908               	iorlw	8
  2432   000C92  6ED6               	movwf	214,c	;volatile
  2433                           
  2434                           ;timers.c: 31:         TMR0H = 0b1011;
  2435   000C94  0E0B               	movlw	11
  2436   000C96  6ED4               	movwf	212,c	;volatile
  2437                           
  2438                           ;timers.c: 32:         TMR0L = 0b11011100;
  2439   000C98  0EDC               	movlw	220
  2440   000C9A  6ED3               	movwf	211,c	;volatile
  2441                           
  2442                           ;timers.c: 33:     }else{
  2443   000C9C  EF56  F006         	goto	l2118
  2444   000CA0                     l2116:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;timers.c: 34:         T0CON1bits.T0CKPS=0;
  2448   000CA0  0EF0               	movlw	-16
  2449   000CA2  16D6               	andwf	214,f,c	;volatile
  2450                           
  2451                           ;timers.c: 36:         TMR0H = 0;
  2452   000CA4  0E00               	movlw	0
  2453   000CA6  6ED4               	movwf	212,c	;volatile
  2454                           
  2455                           ;timers.c: 37:         TMR0L = 0;
  2456   000CA8  0E00               	movlw	0
  2457   000CAA  6ED3               	movwf	211,c	;volatile
  2458   000CAC                     l2118:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;timers.c: 39:     T0CON0bits.T0EN=1;
  2462   000CAC  8ED5               	bsf	213,7,c	;volatile
  2463   000CAE                     
  2464                           ; BSR set to: 0
  2465   000CAE  0012               	return		;funcret
  2466   000CB0                     __end_of_Timer0_init:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _LEDarray_init *****************
  2470 ;; Defined at:
  2471 ;;		line 8 in file "LEDarray.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		None
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 4
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text11
  2500   000E2E                     __ptext11:
  2501                           	callstack 0
  2502   000E2E                     _LEDarray_init:
  2503                           	callstack 26
  2504   000E2E                     
  2505                           ;LEDarray.c: 14:     TRISGbits.TRISG0 = 0;
  2506   000E2E  9087               	bcf	135,0,c	;volatile
  2507                           
  2508                           ;LEDarray.c: 15:     TRISGbits.TRISG1 = 0;
  2509   000E30  9287               	bcf	135,1,c	;volatile
  2510                           
  2511                           ;LEDarray.c: 16:     TRISAbits.TRISA2 = 0;
  2512   000E32  9481               	bcf	129,2,c	;volatile
  2513                           
  2514                           ;LEDarray.c: 17:     TRISFbits.TRISF6 = 0;
  2515   000E34  9C86               	bcf	134,6,c	;volatile
  2516                           
  2517                           ;LEDarray.c: 18:     TRISAbits.TRISA4 = 0;
  2518   000E36  9881               	bcf	129,4,c	;volatile
  2519                           
  2520                           ;LEDarray.c: 19:     TRISAbits.TRISA5 = 0;
  2521   000E38  9A81               	bcf	129,5,c	;volatile
  2522                           
  2523                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2524   000E3A  9086               	bcf	134,0,c	;volatile
  2525                           
  2526                           ;LEDarray.c: 21:     TRISBbits.TRISB0 = 0;
  2527   000E3C  9082               	bcf	130,0,c	;volatile
  2528                           
  2529                           ;LEDarray.c: 22:     TRISBbits.TRISB1 = 0;
  2530   000E3E  9282               	bcf	130,1,c	;volatile
  2531                           
  2532                           ;LEDarray.c: 24:     PORTGbits.RG0 = 1;
  2533   000E40  808F               	bsf	143,0,c	;volatile
  2534                           
  2535                           ;LEDarray.c: 25:     PORTGbits.RG1 = 1;
  2536   000E42  828F               	bsf	143,1,c	;volatile
  2537                           
  2538                           ;LEDarray.c: 26:     PORTAbits.RA2 = 1;
  2539   000E44  8489               	bsf	137,2,c	;volatile
  2540                           
  2541                           ;LEDarray.c: 27:     PORTFbits.RF6 = 1;
  2542   000E46  8C8E               	bsf	142,6,c	;volatile
  2543                           
  2544                           ;LEDarray.c: 28:     PORTAbits.RA4 = 1;
  2545   000E48  8889               	bsf	137,4,c	;volatile
  2546                           
  2547                           ;LEDarray.c: 29:     PORTAbits.RA5 = 1;
  2548   000E4A  8A89               	bsf	137,5,c	;volatile
  2549                           
  2550                           ;LEDarray.c: 30:     PORTFbits.RF0 = 1;
  2551   000E4C  808E               	bsf	142,0,c	;volatile
  2552                           
  2553                           ;LEDarray.c: 31:     PORTBbits.RB0 = 1;
  2554   000E4E  808A               	bsf	138,0,c	;volatile
  2555                           
  2556                           ;LEDarray.c: 32:     PORTBbits.RB1 = 1;
  2557   000E50  828A               	bsf	138,1,c	;volatile
  2558                           
  2559                           ;LEDarray.c: 34:     LATGbits.LATG0 = 0;
  2560   000E52  907F               	bcf	127,0,c	;volatile
  2561                           
  2562                           ;LEDarray.c: 35:     LATGbits.LATG1 = 0;
  2563   000E54  927F               	bcf	127,1,c	;volatile
  2564                           
  2565                           ;LEDarray.c: 36:     LATAbits.LATA2 = 0;
  2566   000E56  9479               	bcf	121,2,c	;volatile
  2567                           
  2568                           ;LEDarray.c: 37:     LATFbits.LATF6 = 0;
  2569   000E58  9C7E               	bcf	126,6,c	;volatile
  2570                           
  2571                           ;LEDarray.c: 38:     LATAbits.LATA4 = 0;
  2572   000E5A  9879               	bcf	121,4,c	;volatile
  2573                           
  2574                           ;LEDarray.c: 39:     LATAbits.LATA5 = 0;
  2575   000E5C  9A79               	bcf	121,5,c	;volatile
  2576                           
  2577                           ;LEDarray.c: 40:     LATFbits.LATF0 = 0;
  2578   000E5E  907E               	bcf	126,0,c	;volatile
  2579                           
  2580                           ;LEDarray.c: 41:     LATBbits.LATB0 = 0;
  2581   000E60  907A               	bcf	122,0,c	;volatile
  2582                           
  2583                           ;LEDarray.c: 42:     LATBbits.LATB1 = 0;
  2584   000E62  927A               	bcf	122,1,c	;volatile
  2585   000E64  0012               	return		;funcret
  2586   000E66                     __end_of_LEDarray_init:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _LEDarray_disp_bin *****************
  2590 ;; Defined at:
  2591 ;;		line 49 in file "LEDarray.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  number          2   10[BANK0 ] unsigned int 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		None
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:        2 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 4
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;;		_LEDarray_disp_dec
  2617 ;;		_LEDarray_disp_PPM
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text12
  2622   000940                     __ptext12:
  2623                           	callstack 0
  2624   000940                     _LEDarray_disp_bin:
  2625                           	callstack 26
  2626   000940                     
  2627                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 54:     if(number & 0b000000001){LATGbits.LATG0 = 1;}else{LATGbits.LATG0 = 0;}
  2628   000940  0100               	movlb	0	; () banked
  2629   000942  A16A               	btfss	LEDarray_disp_bin@number& (0+255),0,b
  2630   000944  EFA6  F004         	goto	u1931
  2631   000948  EFA8  F004         	goto	u1930
  2632   00094C                     u1931:
  2633   00094C  EFAB  F004         	goto	l30
  2634   000950                     u1930:
  2635   000950                     
  2636                           ; BSR set to: 0
  2637   000950  807F               	bsf	127,0,c	;volatile
  2638   000952  EFAC  F004         	goto	l31
  2639   000956                     l30:
  2640                           
  2641                           ; BSR set to: 0
  2642   000956  907F               	bcf	127,0,c	;volatile
  2643   000958                     l31:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;LEDarray.c: 55:     if(number & 0b000000010){LATGbits.LATG1 = 1;}else{LATGbits.LATG1 = 
      +                          0;}
  2647   000958  A36A               	btfss	LEDarray_disp_bin@number& (0+255),1,b
  2648   00095A  EFB1  F004         	goto	u1941
  2649   00095E  EFB3  F004         	goto	u1940
  2650   000962                     u1941:
  2651   000962  EFB6  F004         	goto	l32
  2652   000966                     u1940:
  2653   000966                     
  2654                           ; BSR set to: 0
  2655   000966  827F               	bsf	127,1,c	;volatile
  2656   000968  EFB7  F004         	goto	l33
  2657   00096C                     l32:
  2658                           
  2659                           ; BSR set to: 0
  2660   00096C  927F               	bcf	127,1,c	;volatile
  2661   00096E                     l33:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;LEDarray.c: 56:     if(number & 0b000000100){LATAbits.LATA2 = 1;}else{LATAbits.LATA2 = 
      +                          0;}
  2665   00096E  A56A               	btfss	LEDarray_disp_bin@number& (0+255),2,b
  2666   000970  EFBC  F004         	goto	u1951
  2667   000974  EFBE  F004         	goto	u1950
  2668   000978                     u1951:
  2669   000978  EFC1  F004         	goto	l34
  2670   00097C                     u1950:
  2671   00097C                     
  2672                           ; BSR set to: 0
  2673   00097C  8479               	bsf	121,2,c	;volatile
  2674   00097E  EFC2  F004         	goto	l35
  2675   000982                     l34:
  2676                           
  2677                           ; BSR set to: 0
  2678   000982  9479               	bcf	121,2,c	;volatile
  2679   000984                     l35:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;LEDarray.c: 57:     if(number & 0b000001000){LATFbits.LATF6 = 1;}else{LATFbits.LATF6 = 
      +                          0;}
  2683   000984  A76A               	btfss	LEDarray_disp_bin@number& (0+255),3,b
  2684   000986  EFC7  F004         	goto	u1961
  2685   00098A  EFC9  F004         	goto	u1960
  2686   00098E                     u1961:
  2687   00098E  EFCC  F004         	goto	l36
  2688   000992                     u1960:
  2689   000992                     
  2690                           ; BSR set to: 0
  2691   000992  8C7E               	bsf	126,6,c	;volatile
  2692   000994  EFCD  F004         	goto	l37
  2693   000998                     l36:
  2694                           
  2695                           ; BSR set to: 0
  2696   000998  9C7E               	bcf	126,6,c	;volatile
  2697   00099A                     l37:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;LEDarray.c: 58:     if(number & 0b000010000){LATAbits.LATA4 = 1;}else{LATAbits.LATA4 = 
      +                          0;}
  2701   00099A  A96A               	btfss	LEDarray_disp_bin@number& (0+255),4,b
  2702   00099C  EFD2  F004         	goto	u1971
  2703   0009A0  EFD4  F004         	goto	u1970
  2704   0009A4                     u1971:
  2705   0009A4  EFD7  F004         	goto	l38
  2706   0009A8                     u1970:
  2707   0009A8                     
  2708                           ; BSR set to: 0
  2709   0009A8  8879               	bsf	121,4,c	;volatile
  2710   0009AA  EFD8  F004         	goto	l39
  2711   0009AE                     l38:
  2712                           
  2713                           ; BSR set to: 0
  2714   0009AE  9879               	bcf	121,4,c	;volatile
  2715   0009B0                     l39:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;LEDarray.c: 59:     if(number & 0b000100000){LATAbits.LATA5 = 1;}else{LATAbits.LATA5 = 
      +                          0;}
  2719   0009B0  AB6A               	btfss	LEDarray_disp_bin@number& (0+255),5,b
  2720   0009B2  EFDD  F004         	goto	u1981
  2721   0009B6  EFDF  F004         	goto	u1980
  2722   0009BA                     u1981:
  2723   0009BA  EFE2  F004         	goto	l40
  2724   0009BE                     u1980:
  2725   0009BE                     
  2726                           ; BSR set to: 0
  2727   0009BE  8A79               	bsf	121,5,c	;volatile
  2728   0009C0  EFE3  F004         	goto	l41
  2729   0009C4                     l40:
  2730                           
  2731                           ; BSR set to: 0
  2732   0009C4  9A79               	bcf	121,5,c	;volatile
  2733   0009C6                     l41:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;LEDarray.c: 60:     if(number & 0b001000000){LATFbits.LATF0 = 1;}else{LATFbits.LATF0 = 
      +                          0;}
  2737   0009C6  AD6A               	btfss	LEDarray_disp_bin@number& (0+255),6,b
  2738   0009C8  EFE8  F004         	goto	u1991
  2739   0009CC  EFEA  F004         	goto	u1990
  2740   0009D0                     u1991:
  2741   0009D0  EFED  F004         	goto	l42
  2742   0009D4                     u1990:
  2743   0009D4                     
  2744                           ; BSR set to: 0
  2745   0009D4  807E               	bsf	126,0,c	;volatile
  2746   0009D6  EFEE  F004         	goto	l43
  2747   0009DA                     l42:
  2748                           
  2749                           ; BSR set to: 0
  2750   0009DA  907E               	bcf	126,0,c	;volatile
  2751   0009DC                     l43:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;LEDarray.c: 61:     if(number & 0b010000000){LATBbits.LATB0 = 1;}else{LATBbits.LATB0 = 
      +                          0;}
  2755   0009DC  AF6A               	btfss	LEDarray_disp_bin@number& (0+255),7,b
  2756   0009DE  EFF3  F004         	goto	u2001
  2757   0009E2  EFF5  F004         	goto	u2000
  2758   0009E6                     u2001:
  2759   0009E6  EFF8  F004         	goto	l44
  2760   0009EA                     u2000:
  2761   0009EA                     
  2762                           ; BSR set to: 0
  2763   0009EA  807A               	bsf	122,0,c	;volatile
  2764   0009EC  EFF9  F004         	goto	l45
  2765   0009F0                     l44:
  2766                           
  2767                           ; BSR set to: 0
  2768   0009F0  907A               	bcf	122,0,c	;volatile
  2769   0009F2                     l45:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;LEDarray.c: 62:     if(number & 0b100000000){LATBbits.LATB1 = 1;}else{LATBbits.LATB1 = 
      +                          0;}
  2773   0009F2  A16B               	btfss	(LEDarray_disp_bin@number+1)& (0+255),0,b
  2774   0009F4  EFFE  F004         	goto	u2011
  2775   0009F8  EF00  F005         	goto	u2010
  2776   0009FC                     u2011:
  2777   0009FC  EF03  F005         	goto	l46
  2778   000A00                     u2010:
  2779   000A00                     
  2780                           ; BSR set to: 0
  2781   000A00  827A               	bsf	122,1,c	;volatile
  2782   000A02  EF04  F005         	goto	l48
  2783   000A06                     l46:
  2784                           
  2785                           ; BSR set to: 0
  2786   000A06  927A               	bcf	122,1,c	;volatile
  2787   000A08                     l48:
  2788                           
  2789                           ; BSR set to: 0
  2790   000A08  0012               	return		;funcret
  2791   000A0A                     __end_of_LEDarray_disp_bin:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _Interrupts_init *****************
  2795 ;; Defined at:
  2796 ;;		line 9 in file "interrupts.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		None
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 4
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text13
  2825   000F08                     __ptext13:
  2826                           	callstack 0
  2827   000F08                     _Interrupts_init:
  2828                           	callstack 26
  2829   000F08                     
  2830                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  2831   000F08  010E               	movlb	14	; () banked
  2832   000F0A  812B               	bsf	43,0,b	;volatile
  2833                           
  2834                           ;interrupts.c: 14:     INTCONbits.IPEN = 1;
  2835   000F0C  8AF2               	bsf	242,5,c	;volatile
  2836                           
  2837                           ;interrupts.c: 15:     INTCONbits.GIEL=1;
  2838   000F0E  8CF2               	bsf	242,6,c	;volatile
  2839                           
  2840                           ;interrupts.c: 16:     IPR2bits.C1IP=1;
  2841   000F10  8121               	bsf	33,0,b	;volatile
  2842                           
  2843                           ;interrupts.c: 17:     PIE0bits.TMR0IE=1;
  2844   000F12  8B29               	bsf	41,5,b	;volatile
  2845                           
  2846                           ;interrupts.c: 18:     INTCONbits.GIEH=1;
  2847   000F14  8EF2               	bsf	242,7,c	;volatile
  2848   000F16                     
  2849                           ; BSR set to: 14
  2850   000F16  0012               	return		;funcret
  2851   000F18                     __end_of_Interrupts_init:
  2852                           	callstack 0
  2853                           
  2854 ;; *************** function _Comp1_init *****************
  2855 ;; Defined at:
  2856 ;;		line 22 in file "comparator.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;Total ram usage:        0 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 5
  2877 ;; This function calls:
  2878 ;;		_DAC_init
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text14
  2885   000E9A                     __ptext14:
  2886                           	callstack 0
  2887   000E9A                     _Comp1_init:
  2888                           	callstack 25
  2889   000E9A                     
  2890                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  2891   000E9A  8E86               	bsf	134,7,c	;volatile
  2892   000E9C                     
  2893                           ;comparator.c: 25:     CM1NCHbits.NCH=0b011;
  2894   000E9C  010E               	movlb	14	; () banked
  2895   000E9E  51D2               	movf	210,w,b	;volatile
  2896   000EA0  0BF8               	andlw	-8
  2897   000EA2  0903               	iorlw	3
  2898   000EA4  6FD2               	movwf	210,b	;volatile
  2899                           
  2900                           ;comparator.c: 26:     CM1PCHbits.PCH=0b101;
  2901   000EA6  51D3               	movf	211,w,b	;volatile
  2902   000EA8  0BF8               	andlw	-8
  2903   000EAA  0905               	iorlw	5
  2904   000EAC  6FD3               	movwf	211,b	;volatile
  2905   000EAE                     
  2906                           ; BSR set to: 14
  2907                           ;comparator.c: 27:     CM1CON0bits.HYS=1;
  2908   000EAE  83D0               	bsf	208,1,b	;volatile
  2909   000EB0                     
  2910                           ; BSR set to: 14
  2911                           ;comparator.c: 28:     CM1CON0bits.POL=1;
  2912   000EB0  89D0               	bsf	208,4,b	;volatile
  2913   000EB2                     
  2914                           ; BSR set to: 14
  2915                           ;comparator.c: 29:     CM1CON1bits.INTP=1;
  2916   000EB2  83D1               	bsf	209,1,b	;volatile
  2917   000EB4                     
  2918                           ; BSR set to: 14
  2919                           ;comparator.c: 30:     DAC_init();
  2920   000EB4  EC7A  F007         	call	_DAC_init	;wreg free
  2921   000EB8                     
  2922                           ;comparator.c: 31:     CM1CON0bits.EN=1;
  2923   000EB8  010E               	movlb	14	; () banked
  2924   000EBA  8FD0               	bsf	208,7,b	;volatile
  2925   000EBC                     
  2926                           ; BSR set to: 14
  2927   000EBC  0012               	return		;funcret
  2928   000EBE                     __end_of_Comp1_init:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _DAC_init *****************
  2932 ;; Defined at:
  2933 ;;		line 7 in file "comparator.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 4
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_Comp1_init
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text15
  2962   000EF4                     __ptext15:
  2963                           	callstack 0
  2964   000EF4                     _DAC_init:
  2965                           	callstack 25
  2966   000EF4                     
  2967                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  2968   000EF4  0EF3               	movlw	-13
  2969   000EF6  010E               	movlb	14	; () banked
  2970   000EF8  17C6               	andwf	198,f,b	;volatile
  2971   000EFA                     
  2972                           ; BSR set to: 14
  2973                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  2974   000EFA  91C6               	bcf	198,0,b	;volatile
  2975                           
  2976                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  2977   000EFC  51C7               	movf	199,w,b	;volatile
  2978   000EFE  0BE0               	andlw	-32
  2979   000F00  0914               	iorlw	20
  2980   000F02  6FC7               	movwf	199,b	;volatile
  2981   000F04                     
  2982                           ; BSR set to: 14
  2983                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  2984   000F04  8FC6               	bsf	198,7,b	;volatile
  2985   000F06                     
  2986                           ; BSR set to: 14
  2987   000F06  0012               	return		;funcret
  2988   000F08                     __end_of_DAC_init:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _ADC_init *****************
  2992 ;; Defined at:
  2993 ;;		line 9 in file "ADC.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 4
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text16
  3022   000EDA                     __ptext16:
  3023                           	callstack 0
  3024   000EDA                     _ADC_init:
  3025                           	callstack 26
  3026   000EDA                     
  3027                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  3028   000EDA  8681               	bsf	129,3,c	;volatile
  3029                           
  3030                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  3031   000EDC  010E               	movlb	14	; () banked
  3032   000EDE  8792               	bsf	146,3,b	;volatile
  3033                           
  3034                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  3035   000EE0  010F               	movlb	15	; () banked
  3036   000EE2  9958               	bcf	88,4,b	;volatile
  3037   000EE4                     
  3038                           ; BSR set to: 15
  3039                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  3040   000EE4  0EFC               	movlw	-4
  3041   000EE6  1758               	andwf	88,f,b	;volatile
  3042                           
  3043                           ;ADC.c: 17:     ADPCH=0b11;
  3044   000EE8  0E03               	movlw	3
  3045   000EEA  6F5F               	movwf	95,b	;volatile
  3046   000EEC                     
  3047                           ; BSR set to: 15
  3048                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  3049   000EEC  9460               	bcf	96,2,c	;volatile
  3050   000EEE                     
  3051                           ; BSR set to: 15
  3052                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  3053   000EEE  8860               	bsf	96,4,c	;volatile
  3054   000EF0                     
  3055                           ; BSR set to: 15
  3056                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  3057   000EF0  8E60               	bsf	96,7,c	;volatile
  3058   000EF2                     
  3059                           ; BSR set to: 15
  3060   000EF2  0012               	return		;funcret
  3061   000EF4                     __end_of_ADC_init:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _HighISR *****************
  3065 ;; Defined at:
  3066 ;;		line 25 in file "interrupts.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;Total ram usage:        5 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 3
  3087 ;; This function calls:
  3088 ;;		_increment_time
  3089 ;; This function is called by:
  3090 ;;		Interrupt level 2
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	intcode
  3095   000008                     __pintcode:
  3096                           	callstack 0
  3097   000008                     _HighISR:
  3098                           	callstack 25
  3099                           
  3100                           ; BSR set to: 15
  3101                           ;incstack = 0
  3102   000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3103   00000A  CFE1 F028          	movff	fsr1l,??_HighISR+1
  3104   00000E  CFE2 F029          	movff	fsr1h,??_HighISR+2
  3105   000012  CFD9 F02A          	movff	fsr2l,??_HighISR+3
  3106   000016  CFDA F02B          	movff	fsr2h,??_HighISR+4
  3107   00001A                     
  3108                           ;interrupts.c: 27:  if(PIR2bits.C1IF){
  3109   00001A  010E               	movlb	14	; () banked
  3110   00001C  A135               	btfss	53,0,b	;volatile
  3111   00001E  EF13  F000         	goto	i2u174_41
  3112   000022  EF15  F000         	goto	i2u174_40
  3113   000026                     i2u174_41:
  3114   000026  EF28  F000         	goto	i2l1976
  3115   00002A                     i2u174_40:
  3116   00002A                     
  3117                           ; BSR set to: 14
  3118                           ;interrupts.c: 28:         LATDbits.LATD7 = !LATDbits.LATD7;
  3119   00002A  AE7C               	btfss	124,7,c	;volatile
  3120   00002C  EF1A  F000         	goto	i2u175_41
  3121   000030  EF1E  F000         	goto	i2u175_40
  3122   000034                     i2u175_41:
  3123   000034  6A27               	clrf	??_HighISR^0,c
  3124   000036  2A27               	incf	??_HighISR^0,f,c
  3125   000038  EF1F  F000         	goto	i2u176_48
  3126   00003C                     i2u175_40:
  3127   00003C  6A27               	clrf	??_HighISR^0,c
  3128   00003E                     i2u176_48:
  3129   00003E  3227               	rrcf	??_HighISR^0,f,c
  3130   000040  3227               	rrcf	??_HighISR^0,f,c
  3131   000042  507C               	movf	124,w,c	;volatile
  3132   000044  1827               	xorwf	??_HighISR^0,w,c
  3133   000046  0B7F               	andlw	-129
  3134   000048  1827               	xorwf	??_HighISR^0,w,c
  3135   00004A  6E7C               	movwf	124,c	;volatile
  3136   00004C                     
  3137                           ;interrupts.c: 29:         PIR2bits.C1IF=0;
  3138   00004C  010E               	movlb	14	; () banked
  3139   00004E  9135               	bcf	53,0,b	;volatile
  3140   000050                     i2l1976:
  3141                           
  3142                           ; BSR set to: 14
  3143                           ;interrupts.c: 31:     if(PIR0bits.TMR0IF){
  3144   000050  AB33               	btfss	51,5,b	;volatile
  3145   000052  EF2D  F000         	goto	i2u177_41
  3146   000056  EF2F  F000         	goto	i2u177_40
  3147   00005A                     i2u177_41:
  3148   00005A  EF4E  F000         	goto	i2l156
  3149   00005E                     i2u177_40:
  3150   00005E                     
  3151                           ; BSR set to: 14
  3152                           ;interrupts.c: 33:         increment_time(1);
  3153   00005E  0E01               	movlw	1
  3154   000060  6E23               	movwf	increment_time@increment^0,c
  3155   000062  0E00               	movlw	0
  3156   000064  6E24               	movwf	(increment_time@increment+1)^0,c
  3157   000066  0E00               	movlw	0
  3158   000068  6E25               	movwf	(increment_time@increment+2)^0,c
  3159   00006A  0E00               	movlw	0
  3160   00006C  6E26               	movwf	(increment_time@increment+3)^0,c
  3161   00006E  EC65  F005         	call	_increment_time	;wreg free
  3162   000072                     
  3163                           ;interrupts.c: 35:         if(test_mode == 0){
  3164   000072  504A               	movf	_test_mode^0,w,c
  3165   000074  104B               	iorwf	(_test_mode+1)^0,w,c
  3166   000076  A4D8               	btfss	status,2,c
  3167   000078  EF40  F000         	goto	i2u178_41
  3168   00007C  EF42  F000         	goto	i2u178_40
  3169   000080                     i2u178_41:
  3170   000080  EF48  F000         	goto	i2l1984
  3171   000084                     i2u178_40:
  3172   000084                     
  3173                           ;interrupts.c: 36:             TMR0H = 0b1011;
  3174   000084  0E0B               	movlw	11
  3175   000086  6ED4               	movwf	212,c	;volatile
  3176                           
  3177                           ;interrupts.c: 37:             TMR0L = 0b11011100;
  3178   000088  0EDC               	movlw	220
  3179   00008A  6ED3               	movwf	211,c	;volatile
  3180                           
  3181                           ;interrupts.c: 38:         }else{
  3182   00008C  EF4C  F000         	goto	i2l1986
  3183   000090                     i2l1984:
  3184                           
  3185                           ;interrupts.c: 39:             TMR0H = 0;
  3186   000090  0E00               	movlw	0
  3187   000092  6ED4               	movwf	212,c	;volatile
  3188                           
  3189                           ;interrupts.c: 40:             TMR0L = 0;
  3190   000094  0E00               	movlw	0
  3191   000096  6ED3               	movwf	211,c	;volatile
  3192   000098                     i2l1986:
  3193                           
  3194                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  3195   000098  010E               	movlb	14	; () banked
  3196   00009A  9B33               	bcf	51,5,b	;volatile
  3197   00009C                     i2l156:
  3198                           
  3199                           ; BSR set to: 14
  3200   00009C  C02B  FFDA         	movff	??_HighISR+4,fsr2h
  3201   0000A0  C02A  FFD9         	movff	??_HighISR+3,fsr2l
  3202   0000A4  C029  FFE2         	movff	??_HighISR+2,fsr1h
  3203   0000A8  C028  FFE1         	movff	??_HighISR+1,fsr1l
  3204   0000AC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3205   0000AE  0011               	retfie		f
  3206   0000B0                     __end_of_HighISR:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _increment_time *****************
  3210 ;; Defined at:
  3211 ;;		line 78 in file "timers.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  increment       4   34[COMRAM] unsigned long 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;Total ram usage:        4 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 2
  3232 ;; This function calls:
  3233 ;;		___lmul
  3234 ;;		i2_increment_day
  3235 ;; This function is called by:
  3236 ;;		_HighISR
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text18
  3241   000ACA                     __ptext18:
  3242                           	callstack 0
  3243   000ACA                     _increment_time:
  3244                           	callstack 25
  3245   000ACA                     
  3246                           ;timers.c: 79:     while(increment > 0){
  3247   000ACA  EFB8  F005         	goto	i2l1842
  3248   000ACE                     i2l1828:
  3249                           
  3250                           ;timers.c: 80:         if(test_mode == 0){
  3251   000ACE  504A               	movf	_test_mode^0,w,c
  3252   000AD0  104B               	iorwf	(_test_mode+1)^0,w,c
  3253   000AD2  A4D8               	btfss	status,2,c
  3254   000AD4  EF6E  F005         	goto	i2u152_41
  3255   000AD8  EF70  F005         	goto	i2u152_40
  3256   000ADC                     i2u152_41:
  3257   000ADC  EF7B  F005         	goto	i2l1832
  3258   000AE0                     i2u152_40:
  3259   000AE0                     
  3260                           ;timers.c: 81:             time_counter += increment;
  3261   000AE0  5023               	movf	increment_time@increment^0,w,c
  3262   000AE2  0100               	movlb	0	; () banked
  3263   000AE4  2793               	addwf	_time_counter& (0+255),f,b
  3264   000AE6  5024               	movf	(increment_time@increment+1)^0,w,c
  3265   000AE8  2394               	addwfc	(_time_counter+1)& (0+255),f,b
  3266   000AEA  5025               	movf	(increment_time@increment+2)^0,w,c
  3267   000AEC  2395               	addwfc	(_time_counter+2)& (0+255),f,b
  3268   000AEE  5026               	movf	(increment_time@increment+3)^0,w,c
  3269   000AF0  2396               	addwfc	(_time_counter+3)& (0+255),f,b
  3270                           
  3271                           ;timers.c: 82:         }else{
  3272   000AF2  EF96  F005         	goto	i2l1834
  3273   000AF6                     i2l1832:
  3274                           
  3275                           ;timers.c: 83:             time_counter += increment*15;
  3276   000AF6  C023  F001         	movff	increment_time@increment,___lmul@multiplier
  3277   000AFA  C024  F002         	movff	increment_time@increment+1,___lmul@multiplier+1
  3278   000AFE  C025  F003         	movff	increment_time@increment+2,___lmul@multiplier+2
  3279   000B02  C026  F004         	movff	increment_time@increment+3,___lmul@multiplier+3
  3280   000B06  0E0F               	movlw	15
  3281   000B08  6E05               	movwf	___lmul@multiplicand^0,c
  3282   000B0A  0E00               	movlw	0
  3283   000B0C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3284   000B0E  0E00               	movlw	0
  3285   000B10  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3286   000B12  0E00               	movlw	0
  3287   000B14  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3288   000B16  EC58  F006         	call	___lmul	;wreg free
  3289   000B1A  5001               	movf	?___lmul^0,w,c
  3290   000B1C  0100               	movlb	0	; () banked
  3291   000B1E  2793               	addwf	_time_counter& (0+255),f,b
  3292   000B20  5002               	movf	(?___lmul+1)^0,w,c
  3293   000B22  2394               	addwfc	(_time_counter+1)& (0+255),f,b
  3294   000B24  5003               	movf	(?___lmul+2)^0,w,c
  3295   000B26  2395               	addwfc	(_time_counter+2)& (0+255),f,b
  3296   000B28  5004               	movf	(?___lmul+3)^0,w,c
  3297   000B2A  2396               	addwfc	(_time_counter+3)& (0+255),f,b
  3298   000B2C                     i2l1834:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;timers.c: 85:         if(time_counter >= 86400){
  3302   000B2C  5196               	movf	(_time_counter+3)& (0+255),w,b
  3303   000B2E  E10D               	bnz	i2u153_40
  3304   000B30  0E80               	movlw	128
  3305   000B32  5D93               	subwf	_time_counter& (0+255),w,b
  3306   000B34  0E51               	movlw	81
  3307   000B36  5994               	subwfb	(_time_counter+1)& (0+255),w,b
  3308   000B38  0E01               	movlw	1
  3309   000B3A  5995               	subwfb	(_time_counter+2)& (0+255),w,b
  3310   000B3C  A0D8               	btfss	status,0,c
  3311   000B3E  EFA3  F005         	goto	i2u153_41
  3312   000B42  EFA5  F005         	goto	i2u153_40
  3313   000B46                     i2u153_41:
  3314   000B46  EFB3  F005         	goto	i2l1840
  3315   000B4A                     i2u153_40:
  3316   000B4A                     
  3317                           ; BSR set to: 0
  3318                           ;timers.c: 86:             time_counter = 0;
  3319   000B4A  0E00               	movlw	0
  3320   000B4C  6F93               	movwf	_time_counter& (0+255),b
  3321   000B4E  0E00               	movlw	0
  3322   000B50  6F94               	movwf	(_time_counter+1)& (0+255),b
  3323   000B52  0E00               	movlw	0
  3324   000B54  6F95               	movwf	(_time_counter+2)& (0+255),b
  3325   000B56  0E00               	movlw	0
  3326   000B58  6F96               	movwf	(_time_counter+3)& (0+255),b
  3327   000B5A                     
  3328                           ; BSR set to: 0
  3329                           ;timers.c: 87:             increment_day(1);
  3330   000B5A  0E00               	movlw	0
  3331   000B5C  6E04               	movwf	(i2increment_day@increment+1)^0,c
  3332   000B5E  0E01               	movlw	1
  3333   000B60  6E03               	movwf	i2increment_day@increment^0,c
  3334   000B62  ECC4  F005         	call	i2_increment_day	;wreg free
  3335   000B66                     i2l1840:
  3336                           
  3337                           ;timers.c: 89:     increment -= 1;
  3338   000B66  0623               	decf	increment_time@increment^0,f,c
  3339   000B68  0E00               	movlw	0
  3340   000B6A  5A24               	subwfb	(increment_time@increment+1)^0,f,c
  3341   000B6C  5A25               	subwfb	(increment_time@increment+2)^0,f,c
  3342   000B6E  5A26               	subwfb	(increment_time@increment+3)^0,f,c
  3343   000B70                     i2l1842:
  3344                           
  3345                           ;timers.c: 79:     while(increment > 0){
  3346   000B70  5023               	movf	increment_time@increment^0,w,c
  3347   000B72  1024               	iorwf	(increment_time@increment+1)^0,w,c
  3348   000B74  1025               	iorwf	(increment_time@increment+2)^0,w,c
  3349   000B76  1026               	iorwf	(increment_time@increment+3)^0,w,c
  3350   000B78  A4D8               	btfss	status,2,c
  3351   000B7A  EFC1  F005         	goto	i2u154_41
  3352   000B7E  EFC3  F005         	goto	i2u154_40
  3353   000B82                     i2u154_41:
  3354   000B82  EF67  F005         	goto	i2l1828
  3355   000B86                     i2u154_40:
  3356   000B86  0012               	return		;funcret
  3357   000B88                     __end_of_increment_time:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function i2_increment_day *****************
  3361 ;; Defined at:
  3362 ;;		line 93 in file "timers.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  increment       2    2[COMRAM] unsigned int 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  day_in_month   24    8[COMRAM] unsigned int [12]
  3367 ;;  curr_day_in_    2   32[COMRAM] unsigned int 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;Total ram usage:       32 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 1
  3384 ;; This function calls:
  3385 ;;		i2_increment_month
  3386 ;; This function is called by:
  3387 ;;		_increment_time
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text19
  3392   000B88                     __ptext19:
  3393                           	callstack 0
  3394   000B88                     i2_increment_day:
  3395                           	callstack 25
  3396   000B88                     
  3397                           ;timers.c: 94:     while(increment > 0){
  3398   000B88  EF18  F006         	goto	i2l1726
  3399   000B8C                     i2l1706:
  3400                           
  3401                           ;timers.c: 96:         unsigned int day_in_month[] = {31,28,31,30,31,30,31,31,30,31,30,3
      +                          1};
  3402   000B8C  EE20  F02C         	lfsr	2,increment_day@F14249
  3403   000B90  EE10  F009         	lfsr	1,i2increment_day@day_in_month
  3404   000B94  0E17               	movlw	23
  3405   000B96                     i2u132_41:
  3406   000B96  CFDB FFE3          	movff	plusw2,plusw1
  3407   000B9A  06E8               	decf	wreg,f,c
  3408   000B9C  E2FC               	bc	i2u132_41
  3409   000B9E                     
  3410                           ;timers.c: 97:         unsigned int curr_day_in_month = day_in_month[month - 1];
  3411   000B9E  C044  F005         	movff	_month,??i2_increment_day
  3412   000BA2  C045  F006         	movff	_month+1,??i2_increment_day+1
  3413   000BA6  90D8               	bcf	status,0,c
  3414   000BA8  3605               	rlcf	??i2_increment_day^0,f,c
  3415   000BAA  3606               	rlcf	(??i2_increment_day+1)^0,f,c
  3416   000BAC  0EFE               	movlw	254
  3417   000BAE  2405               	addwf	??i2_increment_day^0,w,c
  3418   000BB0  6E07               	movwf	(??i2_increment_day+2)^0,c
  3419   000BB2  0EFF               	movlw	255
  3420   000BB4  2006               	addwfc	(??i2_increment_day+1)^0,w,c
  3421   000BB6  6E08               	movwf	(??i2_increment_day+3)^0,c
  3422   000BB8  0E09               	movlw	low i2increment_day@day_in_month
  3423   000BBA  2407               	addwf	(??i2_increment_day+2)^0,w,c
  3424   000BBC  6ED9               	movwf	fsr2l,c
  3425   000BBE  0E00               	movlw	high i2increment_day@day_in_month
  3426   000BC0  2008               	addwfc	(??i2_increment_day+3)^0,w,c
  3427   000BC2  6EDA               	movwf	fsr2h,c
  3428   000BC4  CFDE F021          	movff	postinc2,i2increment_day@curr_day_in_month
  3429   000BC8  CFDD F022          	movff	postdec2,i2increment_day@curr_day_in_month+1
  3430   000BCC                     
  3431                           ;timers.c: 98:         if(month == 2 && leap_year_count == 3){
  3432   000BCC  0E02               	movlw	2
  3433   000BCE  1844               	xorwf	_month^0,w,c
  3434   000BD0  1045               	iorwf	(_month+1)^0,w,c
  3435   000BD2  A4D8               	btfss	status,2,c
  3436   000BD4  EFEE  F005         	goto	i2u133_41
  3437   000BD8  EFF0  F005         	goto	i2u133_40
  3438   000BDC                     i2u133_41:
  3439   000BDC  EFFE  F005         	goto	i2l1716
  3440   000BE0                     i2u133_40:
  3441   000BE0  0E03               	movlw	3
  3442   000BE2  1848               	xorwf	_leap_year_count^0,w,c
  3443   000BE4  1049               	iorwf	(_leap_year_count+1)^0,w,c
  3444   000BE6  A4D8               	btfss	status,2,c
  3445   000BE8  EFF8  F005         	goto	i2u134_41
  3446   000BEC  EFFA  F005         	goto	i2u134_40
  3447   000BF0                     i2u134_41:
  3448   000BF0  EFFE  F005         	goto	i2l1716
  3449   000BF4                     i2u134_40:
  3450   000BF4                     
  3451                           ;timers.c: 99:             curr_day_in_month = 29;
  3452   000BF4  0E00               	movlw	0
  3453   000BF6  6E22               	movwf	(i2increment_day@curr_day_in_month+1)^0,c
  3454   000BF8  0E1D               	movlw	29
  3455   000BFA  6E21               	movwf	i2increment_day@curr_day_in_month^0,c
  3456   000BFC                     i2l1716:
  3457                           
  3458                           ;timers.c: 102:         day += 1;
  3459   000BFC  4A46               	infsnz	_day^0,f,c
  3460   000BFE  2A47               	incf	(_day+1)^0,f,c
  3461   000C00                     
  3462                           ;timers.c: 103:         if(day > curr_day_in_month){
  3463   000C00  5046               	movf	_day^0,w,c
  3464   000C02  5C21               	subwf	i2increment_day@curr_day_in_month^0,w,c
  3465   000C04  5047               	movf	(_day+1)^0,w,c
  3466   000C06  5822               	subwfb	(i2increment_day@curr_day_in_month+1)^0,w,c
  3467   000C08  B0D8               	btfsc	status,0,c
  3468   000C0A  EF09  F006         	goto	i2u135_41
  3469   000C0E  EF0B  F006         	goto	i2u135_40
  3470   000C12                     i2u135_41:
  3471   000C12  EF15  F006         	goto	i2l1724
  3472   000C16                     i2u135_40:
  3473   000C16                     
  3474                           ;timers.c: 104:             increment_month(1);
  3475   000C16  0E00               	movlw	0
  3476   000C18  6E02               	movwf	(i2increment_month@increment+1)^0,c
  3477   000C1A  0E01               	movlw	1
  3478   000C1C  6E01               	movwf	i2increment_month@increment^0,c
  3479   000C1E  ECBF  F006         	call	i2_increment_month	;wreg free
  3480   000C22                     
  3481                           ;timers.c: 105:             day = 1;
  3482   000C22  0E00               	movlw	0
  3483   000C24  6E47               	movwf	(_day+1)^0,c
  3484   000C26  0E01               	movlw	1
  3485   000C28  6E46               	movwf	_day^0,c
  3486   000C2A                     i2l1724:
  3487                           
  3488                           ;timers.c: 107:         increment -= 1;
  3489   000C2A  0603               	decf	i2increment_day@increment^0,f,c
  3490   000C2C  A0D8               	btfss	status,0,c
  3491   000C2E  0604               	decf	(i2increment_day@increment+1)^0,f,c
  3492   000C30                     i2l1726:
  3493                           
  3494                           ;timers.c: 94:     while(increment > 0){
  3495   000C30  5003               	movf	i2increment_day@increment^0,w,c
  3496   000C32  1004               	iorwf	(i2increment_day@increment+1)^0,w,c
  3497   000C34  A4D8               	btfss	status,2,c
  3498   000C36  EF1F  F006         	goto	i2u136_41
  3499   000C3A  EF21  F006         	goto	i2u136_40
  3500   000C3E                     i2u136_41:
  3501   000C3E  EFC6  F005         	goto	i2l1706
  3502   000C42                     i2u136_40:
  3503   000C42  0012               	return		;funcret
  3504   000C44                     __end_ofi2_increment_day:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function i2_increment_month *****************
  3508 ;; Defined at:
  3509 ;;		line 111 in file "timers.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  increment       2    0[COMRAM] unsigned int 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;Total ram usage:        2 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		i2_increment_day
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text20
  3537   000D7E                     __ptext20:
  3538                           	callstack 0
  3539   000D7E                     i2_increment_month:
  3540                           	callstack 25
  3541   000D7E                     
  3542                           ;timers.c: 112:     while(increment > 0){
  3543   000D7E  EFE6  F006         	goto	i2l1484
  3544   000D82                     i2l1470:
  3545                           
  3546                           ;timers.c: 114:         month += 1;
  3547   000D82  4A44               	infsnz	_month^0,f,c
  3548   000D84  2A45               	incf	(_month+1)^0,f,c
  3549   000D86                     
  3550                           ;timers.c: 115:         if(month > 12){
  3551   000D86  5045               	movf	(_month+1)^0,w,c
  3552   000D88  E109               	bnz	i2u91_40
  3553   000D8A  0E0D               	movlw	13
  3554   000D8C  5C44               	subwf	_month^0,w,c
  3555   000D8E  A0D8               	btfss	status,0,c
  3556   000D90  EFCC  F006         	goto	i2u91_41
  3557   000D94  EFCE  F006         	goto	i2u91_40
  3558   000D98                     i2u91_41:
  3559   000D98  EFE3  F006         	goto	i2l1482
  3560   000D9C                     i2u91_40:
  3561   000D9C                     
  3562                           ;timers.c: 116:             month = 1;
  3563   000D9C  0E00               	movlw	0
  3564   000D9E  6E45               	movwf	(_month+1)^0,c
  3565   000DA0  0E01               	movlw	1
  3566   000DA2  6E44               	movwf	_month^0,c
  3567   000DA4                     
  3568                           ;timers.c: 117:             leap_year_count += 1;
  3569   000DA4  4A48               	infsnz	_leap_year_count^0,f,c
  3570   000DA6  2A49               	incf	(_leap_year_count+1)^0,f,c
  3571   000DA8                     
  3572                           ;timers.c: 118:             if(leap_year_count > 3){
  3573   000DA8  5049               	movf	(_leap_year_count+1)^0,w,c
  3574   000DAA  E109               	bnz	i2u92_40
  3575   000DAC  0E04               	movlw	4
  3576   000DAE  5C48               	subwf	_leap_year_count^0,w,c
  3577   000DB0  A0D8               	btfss	status,0,c
  3578   000DB2  EFDD  F006         	goto	i2u92_41
  3579   000DB6  EFDF  F006         	goto	i2u92_40
  3580   000DBA                     i2u92_41:
  3581   000DBA  EFE3  F006         	goto	i2l1482
  3582   000DBE                     i2u92_40:
  3583   000DBE                     
  3584                           ;timers.c: 119:                 leap_year_count = 0;
  3585   000DBE  0E00               	movlw	0
  3586   000DC0  6E49               	movwf	(_leap_year_count+1)^0,c
  3587   000DC2  0E00               	movlw	0
  3588   000DC4  6E48               	movwf	_leap_year_count^0,c
  3589   000DC6                     i2l1482:
  3590                           
  3591                           ;timers.c: 122:         increment -= 1;
  3592   000DC6  0601               	decf	i2increment_month@increment^0,f,c
  3593   000DC8  A0D8               	btfss	status,0,c
  3594   000DCA  0602               	decf	(i2increment_month@increment+1)^0,f,c
  3595   000DCC                     i2l1484:
  3596                           
  3597                           ;timers.c: 112:     while(increment > 0){
  3598   000DCC  5001               	movf	i2increment_month@increment^0,w,c
  3599   000DCE  1002               	iorwf	(i2increment_month@increment+1)^0,w,c
  3600   000DD0  A4D8               	btfss	status,2,c
  3601   000DD2  EFED  F006         	goto	i2u93_41
  3602   000DD6  EFEF  F006         	goto	i2u93_40
  3603   000DDA                     i2u93_41:
  3604   000DDA  EFC1  F006         	goto	i2l1470
  3605   000DDE                     i2u93_40:
  3606   000DDE  0012               	return		;funcret
  3607   000DE0                     __end_ofi2_increment_month:
  3608                           	callstack 0
  3609                           
  3610 ;; *************** function ___lmul *****************
  3611 ;; Defined at:
  3612 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  multiplier      4    0[COMRAM] unsigned long 
  3615 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  product         4    8[COMRAM] unsigned long 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  4    0[COMRAM] unsigned long 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3627 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;Total ram usage:       12 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_increment_time
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text21
  3641   000CB0                     __ptext21:
  3642                           	callstack 0
  3643   000CB0                     ___lmul:
  3644                           	callstack 26
  3645   000CB0  0E00               	movlw	0
  3646   000CB2  6E09               	movwf	___lmul@product^0,c
  3647   000CB4  0E00               	movlw	0
  3648   000CB6  6E0A               	movwf	(___lmul@product+1)^0,c
  3649   000CB8  0E00               	movlw	0
  3650   000CBA  6E0B               	movwf	(___lmul@product+2)^0,c
  3651   000CBC  0E00               	movlw	0
  3652   000CBE  6E0C               	movwf	(___lmul@product+3)^0,c
  3653   000CC0                     i2l1512:
  3654   000CC0  A001               	btfss	___lmul@multiplier^0,0,c
  3655   000CC2  EF65  F006         	goto	i2u97_41
  3656   000CC6  EF67  F006         	goto	i2u97_40
  3657   000CCA                     i2u97_41:
  3658   000CCA  EF6F  F006         	goto	i2l1516
  3659   000CCE                     i2u97_40:
  3660   000CCE  5005               	movf	___lmul@multiplicand^0,w,c
  3661   000CD0  2609               	addwf	___lmul@product^0,f,c
  3662   000CD2  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3663   000CD4  220A               	addwfc	(___lmul@product+1)^0,f,c
  3664   000CD6  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3665   000CD8  220B               	addwfc	(___lmul@product+2)^0,f,c
  3666   000CDA  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3667   000CDC  220C               	addwfc	(___lmul@product+3)^0,f,c
  3668   000CDE                     i2l1516:
  3669   000CDE  90D8               	bcf	status,0,c
  3670   000CE0  3605               	rlcf	___lmul@multiplicand^0,f,c
  3671   000CE2  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3672   000CE4  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3673   000CE6  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3674   000CE8  90D8               	bcf	status,0,c
  3675   000CEA  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3676   000CEC  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3677   000CEE  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3678   000CF0  3201               	rrcf	___lmul@multiplier^0,f,c
  3679   000CF2  5001               	movf	___lmul@multiplier^0,w,c
  3680   000CF4  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3681   000CF6  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3682   000CF8  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3683   000CFA  A4D8               	btfss	status,2,c
  3684   000CFC  EF82  F006         	goto	i2u98_41
  3685   000D00  EF84  F006         	goto	i2u98_40
  3686   000D04                     i2u98_41:
  3687   000D04  EF60  F006         	goto	i2l1512
  3688   000D08                     i2u98_40:
  3689   000D08  C009  F001         	movff	___lmul@product,?___lmul
  3690   000D0C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3691   000D10  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3692   000D14  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3693   000D18  0012               	return		;funcret
  3694   000D1A                     __end_of___lmul:
  3695                           	callstack 0
  3696   000000                     
  3697                           	psect	rparam
  3698   000000                     
  3699                           	psect	temp
  3700   00004C                     btemp:
  3701                           	callstack 0
  3702   00004C                     	ds	1
  3703   000000                     int$flags	set	btemp
  3704   000000                     wtemp8	set	btemp+1
  3705   000000                     ttemp5	set	btemp+1
  3706   000000                     ttemp6	set	btemp+4
  3707   000000                     ttemp7	set	btemp+8
  3708                           
  3709                           	psect	idloc
  3710                           
  3711                           ;Config register IDLOC0 @ 0x200000
  3712                           ;	unspecified, using default values
  3713   200000                     	org	2097152
  3714   200000  0FFF               	dw	4095
  3715                           
  3716                           ;Config register IDLOC1 @ 0x200002
  3717                           ;	unspecified, using default values
  3718   200002                     	org	2097154
  3719   200002  0FFF               	dw	4095
  3720                           
  3721                           ;Config register IDLOC2 @ 0x200004
  3722                           ;	unspecified, using default values
  3723   200004                     	org	2097156
  3724   200004  0FFF               	dw	4095
  3725                           
  3726                           ;Config register IDLOC3 @ 0x200006
  3727                           ;	unspecified, using default values
  3728   200006                     	org	2097158
  3729   200006  0FFF               	dw	4095
  3730                           
  3731                           ;Config register IDLOC4 @ 0x200008
  3732                           ;	unspecified, using default values
  3733   200008                     	org	2097160
  3734   200008  0FFF               	dw	4095
  3735                           
  3736                           ;Config register IDLOC5 @ 0x20000A
  3737                           ;	unspecified, using default values
  3738   20000A                     	org	2097162
  3739   20000A  0FFF               	dw	4095
  3740                           
  3741                           ;Config register IDLOC6 @ 0x20000C
  3742                           ;	unspecified, using default values
  3743   20000C                     	org	2097164
  3744   20000C  0FFF               	dw	4095
  3745                           
  3746                           ;Config register IDLOC7 @ 0x20000E
  3747                           ;	unspecified, using default values
  3748   20000E                     	org	2097166
  3749   20000E  0FFF               	dw	4095
  3750                           
  3751                           	psect	config
  3752                           
  3753                           ;Config register CONFIG1L @ 0x300000
  3754                           ;	External Oscillator mode Selection bits
  3755                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3756                           ;	Power-up default value for COSC bits
  3757                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3758   300000                     	org	3145728
  3759   300000  AA                 	db	170
  3760                           
  3761                           ;Config register CONFIG1H @ 0x300001
  3762                           ;	unspecified, using default values
  3763                           ;	Clock Out Enable bit
  3764                           ;	CLKOUTEN = 0x1, unprogrammed default
  3765                           ;	Clock Switch Enable bit
  3766                           ;	CSWEN = 0x1, unprogrammed default
  3767                           ;	Fail-Safe Clock Monitor Enable bit
  3768                           ;	FCMEN = 0x1, unprogrammed default
  3769   300001                     	org	3145729
  3770   300001  FF                 	db	255
  3771                           
  3772                           ;Config register CONFIG2L @ 0x300002
  3773                           ;	unspecified, using default values
  3774                           ;	Master Clear Enable bit
  3775                           ;	MCLRE = 0x1, unprogrammed default
  3776                           ;	Power-up Timer Enable bit
  3777                           ;	PWRTE = 0x1, unprogrammed default
  3778                           ;	Low-power BOR enable bit
  3779                           ;	LPBOREN = 0x1, unprogrammed default
  3780                           ;	Brown-out Reset Enable bits
  3781                           ;	BOREN = 0x3, unprogrammed default
  3782   300002                     	org	3145730
  3783   300002  FF                 	db	255
  3784                           
  3785                           ;Config register CONFIG2H @ 0x300003
  3786                           ;	unspecified, using default values
  3787                           ;	Brown Out Reset Voltage selection bits
  3788                           ;	BORV = 0x3, unprogrammed default
  3789                           ;	ZCD Disable bit
  3790                           ;	ZCD = 0x1, unprogrammed default
  3791                           ;	PPSLOCK bit One-Way Set Enable bit
  3792                           ;	PPS1WAY = 0x1, unprogrammed default
  3793                           ;	Stack Full/Underflow Reset Enable bit
  3794                           ;	STVREN = 0x1, unprogrammed default
  3795                           ;	Debugger Enable bit
  3796                           ;	DEBUG = 0x1, unprogrammed default
  3797                           ;	Extended Instruction Set Enable bit
  3798                           ;	XINST = 0x1, unprogrammed default
  3799   300003                     	org	3145731
  3800   300003  FF                 	db	255
  3801                           
  3802                           ;Config register CONFIG3L @ 0x300004
  3803                           ;	WDT Period Select bits
  3804                           ;	WDTCPS = 0x1F, unprogrammed default
  3805                           ;	WDT operating mode
  3806                           ;	WDTE = OFF, WDT Disabled
  3807   300004                     	org	3145732
  3808   300004  9F                 	db	159
  3809                           
  3810                           ;Config register CONFIG3H @ 0x300005
  3811                           ;	unspecified, using default values
  3812                           ;	WDT Window Select bits
  3813                           ;	WDTCWS = 0x7, unprogrammed default
  3814                           ;	WDT input clock selector
  3815                           ;	WDTCCS = 0x7, unprogrammed default
  3816   300005                     	org	3145733
  3817   300005  FF                 	db	255
  3818                           
  3819                           ;Config register CONFIG4L @ 0x300006
  3820                           ;	unspecified, using default values
  3821                           ;	Write Protection Block 0
  3822                           ;	WRT0 = 0x1, unprogrammed default
  3823                           ;	Write Protection Block 1
  3824                           ;	WRT1 = 0x1, unprogrammed default
  3825                           ;	Write Protection Block 2
  3826                           ;	WRT2 = 0x1, unprogrammed default
  3827                           ;	Write Protection Block 3
  3828                           ;	WRT3 = 0x1, unprogrammed default
  3829                           ;	Write Protection Block 3
  3830                           ;	WRT4 = 0x1, unprogrammed default
  3831                           ;	Write Protection Block 3
  3832                           ;	WRT5 = 0x1, unprogrammed default
  3833                           ;	Write Protection Block 3
  3834                           ;	WRT6 = 0x1, unprogrammed default
  3835                           ;	Write Protection Block 3
  3836                           ;	WRT7 = 0x1, unprogrammed default
  3837   300006                     	org	3145734
  3838   300006  FF                 	db	255
  3839                           
  3840                           ;Config register CONFIG4H @ 0x300007
  3841                           ;	unspecified, using default values
  3842                           ;	Configuration Register Write Protection bit
  3843                           ;	WRTC = 0x1, unprogrammed default
  3844                           ;	Boot Block Write Protection bit
  3845                           ;	WRTB = 0x1, unprogrammed default
  3846                           ;	Data EEPROM Write Protection bit
  3847                           ;	WRTD = 0x1, unprogrammed default
  3848                           ;	Scanner Enable bit
  3849                           ;	SCANE = 0x1, unprogrammed default
  3850                           ;	Low Voltage Programming Enable bit
  3851                           ;	LVP = 0x1, unprogrammed default
  3852   300007                     	org	3145735
  3853   300007  FF                 	db	255
  3854                           
  3855                           ;Config register CONFIG5L @ 0x300008
  3856                           ;	unspecified, using default values
  3857                           ;	UserNVM Program Memory Code Protection bit
  3858                           ;	CP = 0x1, unprogrammed default
  3859                           ;	DataNVM Memory Code Protection bit
  3860                           ;	CPD = 0x1, unprogrammed default
  3861   300008                     	org	3145736
  3862   300008  FF                 	db	255
  3863                           
  3864                           ;Config register CONFIG5H @ 0x300009
  3865                           ;	unspecified, using default values
  3866   300009                     	org	3145737
  3867   300009  FF                 	db	255
  3868                           
  3869                           ;Config register CONFIG6L @ 0x30000A
  3870                           ;	unspecified, using default values
  3871                           ;	Table Read Protection Block 0
  3872                           ;	EBTR0 = 0x1, unprogrammed default
  3873                           ;	Table Read Protection Block 1
  3874                           ;	EBTR1 = 0x1, unprogrammed default
  3875                           ;	Table Read Protection Block 2
  3876                           ;	EBTR2 = 0x1, unprogrammed default
  3877                           ;	Table Read Protection Block 3
  3878                           ;	EBTR3 = 0x1, unprogrammed default
  3879                           ;	Table Read Protection Block 4
  3880                           ;	EBTR4 = 0x1, unprogrammed default
  3881                           ;	Table Read Protection Block 5
  3882                           ;	EBTR5 = 0x1, unprogrammed default
  3883                           ;	Table Read Protection Block 6
  3884                           ;	EBTR6 = 0x1, unprogrammed default
  3885                           ;	Table Read Protection Block 7
  3886                           ;	EBTR7 = 0x1, unprogrammed default
  3887   30000A                     	org	3145738
  3888   30000A  FF                 	db	255
  3889                           
  3890                           ;Config register CONFIG6H @ 0x30000B
  3891                           ;	unspecified, using default values
  3892                           ;	Boot Block Table Read Protection bit
  3893                           ;	EBTRB = 0x1, unprogrammed default
  3894   30000B                     	org	3145739
  3895   30000B  FF                 	db	255
  3896                           tosu	equ	0xFFF
  3897                           tosh	equ	0xFFE
  3898                           tosl	equ	0xFFD
  3899                           stkptr	equ	0xFFC
  3900                           pclatu	equ	0xFFB
  3901                           pclath	equ	0xFFA
  3902                           pcl	equ	0xFF9
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           indf0	equ	0xFEF
  3910                           postinc0	equ	0xFEE
  3911                           postdec0	equ	0xFED
  3912                           preinc0	equ	0xFEC
  3913                           plusw0	equ	0xFEB
  3914                           fsr0h	equ	0xFEA
  3915                           fsr0l	equ	0xFE9
  3916                           wreg	equ	0xFE8
  3917                           indf1	equ	0xFE7
  3918                           postinc1	equ	0xFE6
  3919                           postdec1	equ	0xFE5
  3920                           preinc1	equ	0xFE4
  3921                           plusw1	equ	0xFE3
  3922                           fsr1h	equ	0xFE2
  3923                           fsr1l	equ	0xFE1
  3924                           bsr	equ	0xFE0
  3925                           indf2	equ	0xFDF
  3926                           postinc2	equ	0xFDE
  3927                           postdec2	equ	0xFDD
  3928                           preinc2	equ	0xFDC
  3929                           plusw2	equ	0xFDB
  3930                           fsr2h	equ	0xFDA
  3931                           fsr2l	equ	0xFD9
  3932                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         4
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      75
    BANK0           160     51      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->_increment_time
    _increment_time->i2_increment_day
    i2_increment_day->i2_increment_month

Critical Paths under _main in BANK0

    _main->_get_hour
    _increment_day->_increment_month
    _get_hour->___fldiv
    ___fldiv->___xxtofl
    _LEDarray_disp_bin->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    4542
                                             43 BANK0      8     8      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                             ___flge
                            ___fltol
                            _get_day
                           _get_hour
                          _get_month
                      _increment_day
 ---------------------------------------------------------------------------------
 (1) _increment_day                                       32    30      2     377
                                              2 BANK0     32    30      2
                    _increment_month
 ---------------------------------------------------------------------------------
 (2) _increment_month                                      2     0      2     124
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_month                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_hour                                             4     0      4    1965
                                             39 BANK0      4     0      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _get_day                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     626
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          8     0      8     484
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     549
                                             10 BANK0      2     0      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighISR                                              5     5      0     659
                                             38 COMRAM     5     5      0
                     _increment_time
 ---------------------------------------------------------------------------------
 (4) _increment_time                                       4     0      4     659
                                             34 COMRAM     4     0      4
                             ___lmul
                    i2_increment_day
 ---------------------------------------------------------------------------------
 (5) i2_increment_day                                     32    30      2     146
                                              2 COMRAM    32    30      2
                  i2_increment_month
 ---------------------------------------------------------------------------------
 (6) i2_increment_month                                    2     0      2      49
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
     ___fltol (ARG)
   _LEDarray_init
   _Timer0_init
   ___flge
   ___fltol
   _get_day
   _get_hour
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _get_month
   _increment_day
     _increment_month

 _HighISR (ROOT)
   _increment_time
     ___lmul
     i2_increment_day
       i2_increment_month

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      37       5       34.4%
BITBIGSFRllllhh     84      0       0      43        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      4B       1       79.8%
BITBIGSFRlllllh     5C      0       0      46        0.0%
BITBIGSFRhhll       43      0       0      34        0.0%
BITBIGSFRlllllh     33      0       0      45        0.0%
BITBIGSFRllllll     32      0       0      51        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllllhh     14      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      7      0       0      50        0.0%
BITBIGSFRlllllh      7      0       0      48        0.0%
BITBIGSFRllllhh      6      0       0      42        0.0%
BITBIGSFRllllhh      3      0       0      41        0.0%
BITBIGSFRhlh         3      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRlllhh       1      0       0      38        0.0%
BITBIGSFRlhh         1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      52        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 07 14:12:23 2022

                    ___fldiv@aexp 0086                      ___fldiv@bexp 0085  
                    ___fldiv@sign 007E                                l30 0956  
                              l31 0958                                l40 09C4  
                              l32 096C                                l41 09C6  
                              l33 096E                                l42 09DA  
                              l34 0982                                l43 09DC  
                              l35 0984                                l27 0E64  
                              l44 09F0                                l36 0998  
                              l45 09F2                                l37 099A  
                              l46 0A06                                l38 09AE  
                              l39 09B0                                l48 0A08  
                              l97 064A                                l98 06EE  
               ??_Interrupts_init 0060                               l200 0F20  
                             l122 0EBC                               l119 0F06  
                             l231 0D7C                               l223 0AC8  
                             l147 0F16                               l246 0EF2  
                             l520 08F8                               l185 0CAE  
                             l194 0E2C                               l525 093E  
                             l197 0F2A                               l552 0838  
                             l910 04AA                               l913 0606  
                             l850 036C                               l842 0272  
                             l851 035A                               l924 059E  
                             l837 044E                               l917 0542  
                             l839 02AE                               l848 02F4  
                             u990 00D0                               u991 00CC  
                             _day 0046                               wreg 000FE8  
                    ___fltol@exp1 0069                              l2000 0D1A  
                            l2010 0D44                              l2002 0D1E  
                            l2100 0F08                              l2020 0466  
                            l2012 0D5A                              l2004 0D22  
                            l2110 0C78                              l2102 0C44  
                            l2030 04E4                              l2022 0474  
                            l2006 0D38                              l2014 0D62  
                            l2120 0EDA                              l2112 0C7A  
                            l2104 0C5C                              l2200 07AC  
                            l2040 0538                              l2032 04EC  
                            l2024 04BA                              l2008 0D40  
                            l2016 0D68                              l2122 0EE4  
                            l2114 0C8C                              l2106 0C6E  
                            l2210 07D8                              l2050 05AE  
                            l2042 0574                              l2034 04F8  
                            l2026 04D0                              l2018 0454  
                            l2130 0DE0                              l2124 0EEC  
                            l2116 0CA0                              l2108 0C76  
                            l2220 0808                              l2060 05F6  
                            l2052 05B2                              l2044 0580  
                            l2036 052A                              l2140 0A0E  
                            l2126 0EEE                              l2070 0966  
                            l2118 0CAC                              l2222 0818  
                            l2206 07C4                              l2134 0F22  
                            l2054 05D6                              l2046 058E  
                            l2038 052C                              l2150 0A7E  
                            l2142 0A20                              l2128 0EF0  
                            l2080 09D4                              l2072 097C  
                            l2064 0E2E                              l2224 0828  
                            l2216 07EC                              l2208 07CE  
                            l1600 029C                              l1520 00B4  
                            l2056 05E6                              l2048 05AC  
                            l2136 0F18                              l2152 0A82  
                            l2144 0A4E                              l2160 0AB4  
                            l2090 0EAE                              l2082 09EA  
                            l2074 0992                              l2066 0940  
                            l2170 08B8                              l2162 083A  
                            l2218 07F8                              l1610 02E4  
                            l1602 02AC                              l1530 00F2  
                            l1522 00C2                              l2058 05F4  
                            l2154 0A98                              l2146 0A62  
                            l2138 0A0A                              l2092 0EB0  
                            l2084 0A00                              l2076 09A8  
                            l2068 0950                              l2180 093C  
                            l2172 08C6                              l2164 086A  
                            l1620 0324                              l1612 02F2  
                            l1604 02BE                              l1540 0122  
                            l1532 0102                              l1524 00D0  
                            l2156 0AA4                              l2148 0A76  
                            l2260 0608                              l2094 0EB2  
                            l2086 0E9A                              l2078 09BE  
                            l2174 08D8                              l2166 087A  
                            l2190 075E                              l1630 0396  
                            l1622 0352                              l1606 02D4  
                            l1614 0304                              l1550 0158  
                            l1542 0128                              l1534 0104  
                            l1526 00D2                              l2158 0AAC  
                            l2270 0646                              l2262 0614  
                            l2096 0EB4                              l2088 0E9C  
                            l2176 08E6                              l2168 08A8  
                            l2192 0788                              l2184 0732  
                            l1640 040E                              l1632 03C0  
                            l1616 0312                              l1608 02DA  
                            l1560 0198                              l1552 0168  
                            l1544 0136                              l1528 00E2  
                            l1536 010C                              l2280 070E  
                            l2272 06B4                              l2264 0618  
                            l2098 0EB8                              l2178 0936  
                            l2194 078A                              l2186 074A  
                            l1650 0444                              l1642 042A  
                            l1626 037C                              l1634 03C4  
                            l1618 0316                              l1562 01A8  
                            l1570 01C8                              l1554 016A  
                            l1546 0138                              l1538 011C  
                            l2282 0714                              l2274 06E8  
                            l2266 061C                              l2196 079A  
                            l1644 042E                              l1636 03DE  
                            l1628 0388                              l1580 0206  
                            l1572 01D8                              l1564 01B0  
                            l1548 0148                              l1556 0172  
                            l2284 0718                              l2276 06F0  
                            l2268 0642                              l2198 079E  
                            l1646 043C                              l1638 03F4  
                            l1590 024E                              l1582 0216  
                            l1574 01D8                              l1566 01B4  
                            l1558 0182                              l2286 071E  
                            l2278 0708                              l1648 0442  
                            l1592 0262                              l1584 0226  
                            l1594 0270                              l1586 0236  
                            l1578 01EC                              l1596 027C  
                            l1588 023E                              l1598 029A  
                            l1994 0EF4                              l1996 0EFA  
                            l1998 0F04                              u1000 00E2  
                            u1001 00DE                              u1010 00F2  
                            u1011 00EE                              u1100 02BE  
                            u1020 0136                              u1101 02BA  
                            u1021 0132                              u1110 02D4  
                            u1030 0148                              u1111 02D0  
                            u1031 0144                              u2000 09EA  
                            u1200 040E                              u1120 02F2  
                            u1040 0158                              u2001 09E6  
                            u1201 040A                              u1121 02EE  
                            u1041 0154                              u2010 0A00  
                            u1210 043C                              u1130 0312  
                            u1050 0198                              u2011 09FC  
                            u1211 0438                              u1131 030E  
                            u1051 0194                              u2020 0C8C  
                            u2100 08C6                              u1140 0324  
                            u1060 01D8                              u2021 0C88  
                            u2101 08C2                              u1141 0320  
                            u1061 01D4                              u2110 08E6  
                            u1150 0352                              u1070 024E  
                            u2111 08E2                              u1151 034E  
                            u1071 024A                              u2031 0A18  
                            u2120 0936                              u1160 0368  
                            u1080 0270                              u2040 0A62  
                            u2121 0932                              u1161 0364  
                            u1081 026C                              u2041 0A5E  
                            u2130 074A                              u1170 037C  
                            u1090 029A                              u2050 0A76  
                            u2131 0746                              u1171 0378  
                            u1091 0296                              u2051 0A72  
                            u2140 077E                              u1180 0396  
                            u2060 0A98                              u1181 0392  
                            u2061 0A94                              u2150 07AC  
                            u1190 03DE                              u2070 0AC8  
                            u2151 07A8                              u1191 03DA  
                            u2071 0AC4                              u2080 086A  
                            u2160 07C0                              u2081 0866  
                            u2161 07BC                              u2145 0774  
                            u2090 08A8                              u2170 07E8  
                            u2250 06B4                              u2091 08A4  
                            u2171 07E4                              u2251 06B0  
                            u2180 0808                              u2260 06E8  
                            u2181 0804                              u2261 06E4  
                            u2190 0818                              u2191 0814  
                            u1800 0D38                              u1801 0D34  
                            u1810 0D5A                              u1811 0D56  
                            u1900 05AC                              u1820 0D7C  
                            u1901 05A8                              u1821 0D78  
                            u1910 05E6                              u1830 0466  
                            u1911 05E2                              u1831 0462  
                            u1920 05F4                              u1840 0474  
                            u1921 05F0                              u1841 0470  
                            u1930 0950                              u1850 04D0  
                            u1931 094C                              u1851 04CC  
                            u1940 0966                              u1860 0526  
                            u1941 0962                              u1861 0522  
                            u1950 097C                              u1870 0570  
                            u1951 0978                              u1871 056C  
                            u1960 0992                              u1880 058E  
                            u1961 098E                              u1881 058A  
                            u1970 09A8                              u1890 059E  
                            u1971 09A4                              u1891 059A  
                            u1980 09BE                              u1981 09BA  
                            u1990 09D4                              u1991 09D0  
                            _main 0608                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 004C  
                            start 00B0                  __end_of_ADC_init 0EF4  
                 ___fldiv@new_exp 007F                  __end_of_DAC_init 0F08  
                 __end_of_HighISR 00B0                      ___param_bank 000000  
                      _Comp1_init 0E9A                     ___fltol@sign1 0068  
                           ?_main 0001                             _ADPCH 000F5F  
                 __end_of___fldiv 0450                   __end_of___fltol 083A  
                           i2l213 0B86                             i2l231 0DDE  
                           i2l223 0C42                             i2l156 009C  
                           i2l266 0D08                             i2l267 0D18  
                           _TMR0H 000FD4                             _TMR0L 000FD3  
                    main@curr_day 008B               ___lmul@multiplicand 0005  
                 __end_of_get_day 0F2C              Timer0_init@leap_year 0066  
                           _month 0044                             tablat 000FF5  
                           plusw1 000FE3                             plusw2 000FDB  
                           ttemp5 004D                             ttemp6 0050  
                           ttemp7 0054                             status 000FD8  
                           wtemp8 004D       i2increment_day@day_in_month 0009  
                ?_increment_month 0060                   __initialization 0E66  
                    __end_of_main 0732                            ??_main 008B  
                   __activetblptr 000000                            _ADRESH 000F64  
                          i2l1510 0CB0                            i2l1512 0CC0  
                          i2l1514 0CCE                            i2l1516 0CDE  
                          i2l1518 0CE8                            i2l1470 0D82  
                          i2l1710 0BCC                            i2l1480 0DBE  
                          i2l1472 0D86                            i2l1720 0C16  
                          i2l1712 0BE0                            i2l1704 0B88  
                          i2l1474 0D9C                            i2l1482 0DC6  
                          i2l1722 0C22                            i2l1714 0BF4  
                          i2l1706 0B8C                            i2l1476 0DA4  
                          i2l1484 0DCC                            i2l1468 0D7E  
                          i2l1724 0C2A                            i2l1716 0BFC  
                          i2l1708 0B9E                            i2l1478 0DA8  
                          i2l1718 0C00                            i2l1726 0C30  
                          i2l1830 0AE0                            i2l1840 0B66  
                          i2l1832 0AF6                            i2l1834 0B2C  
                          i2l1842 0B70                            i2l1826 0ACA  
                          i2l1836 0B4A                            i2l1828 0ACE  
                          i2l1838 0B5A                            i2l1970 001A  
                          i2l1980 0072                            i2l1972 002A  
                          i2l1982 0084                            i2l1974 004C  
                          i2l1984 0090                            i2l1976 0050  
                          i2l1986 0098                            i2l1978 005E  
                       ??_HighISR 0027                     main@curr_hour 008F  
                __end_of___xxtofl 0608                 _LEDarray_disp_bin 0940  
              ?_LEDarray_disp_bin 006A                     ??_Timer0_init 0068  
                __end_of_get_hour 0E2E                            ___flge 083A  
                          ___lmul 0CB0                       ?_Comp1_init 0001  
                       ??___fldiv 0076                         ??___fltol 0064  
             ??_LEDarray_disp_bin 006C                            isa$std 000001  
                   _increment_day 0A0A                         ??_get_day 0062  
                    __pdataCOMRAM 002C                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ?_ADC_init 0001                         ?_DAC_init 0001  
                 _leap_year_count 0048                        ___flge@ff1 0060  
                      ___flge@ff2 0064                      ___xxtofl@arg 006A  
                    ___xxtofl@exp 0069         __end_of_LEDarray_disp_bin 0A0A  
                    ___xxtofl@val 0060                        __accesstop 0060  
         __end_of__initialization 0E90               increment_day@F14249 002C  
                   ___rparam_used 000001                        ___fltol@f1 0060  
                   _LEDarray_init 0E2E                   _Interrupts_init 0F08  
                  __pcstackCOMRAM 0001                    ?_increment_day 0062  
             __end_of_Timer0_init 0CB0                        ??_ADC_init 0060  
                      ??_DAC_init 0060                        __pbssBANK0 0093  
                      __pnvCOMRAM 0048                    ?_LEDarray_init 0001  
                         ?___flge 0060                           ?___lmul 0001  
                  ___lmul@product 0009                         ?___xxtofl 0060  
                         i2u91_40 0D9C                           i2u91_41 0D98  
                         i2u92_40 0DBE                           i2u92_41 0DBA  
      i2increment_month@increment 0001                           i2u93_40 0DDE  
                         i2u93_41 0DDA                           i2u97_40 0CCE  
                         i2u97_41 0CCA                           i2u98_40 0D08  
                         i2u98_41 0D04                         ?_get_hour 0087  
                  main@curr_month 008D           __end_of_Interrupts_init 0F18  
                         _HighISR 0008                         _ADREFbits 000F58  
               ??i2_increment_day 0005                           __Hparam 0000  
                         __Lparam 0000                       _Timer0_init 0C44  
               __end_of_get_month 0F22                           ___fldiv 00B4  
                         ___fltol 0732                   ??_increment_day 0064  
         increment_time@increment 0023                           __pcinit 0E66  
                         __ramtop 0E00                           __ptext0 0608  
                         __ptext1 0A0A                           __ptext2 0D1A  
                         __ptext3 0F18                           __ptext4 0DE0  
                         __ptext5 0450                           __ptext6 00B4  
                         __ptext7 0F22                           __ptext8 0732  
                         __ptext9 083A            increment_day@increment 0062  
                         _get_day 0F22                        ??___xxtofl 0064  
                  _increment_time 0ACA                        ??_get_hour 008B  
            end_of_initialization 0E90                   ??_LEDarray_init 0060  
                         postdec1 000FE5                           postdec2 000FDD  
                    ??_Comp1_init 0060                           postinc0 000FEE  
                         postinc2 000FDE            Timer0_init@current_day 0062  
                       _PORTAbits 000F89                         _PORTBbits 000F8A  
                       _PORTFbits 000F8E                         _PORTGbits 000F8F  
       Timer0_init@init_test_mode 0060                     ___xxtofl@sign 0068  
                       _TRISAbits 000F81                         _TRISBbits 000F82  
          __end_of_increment_time 0B88                         _TRISDbits 000F84  
                       _TRISFbits 000F86                         _TRISGbits 000F87  
                       _TRISHbits 000F88                       ___fldiv@grs 0081  
                     ___fldiv@rem 007A                __end_of_Comp1_init 0EBE  
                     _CM1CON0bits 000ED0                       _CM1CON1bits 000ED1  
                ?_Interrupts_init 0001                    __end_of___flge 0940  
                  __end_of___lmul 0D1A                     __pidataCOMRAM 0EBE  
               i2_increment_month 0D7E               start_initialization 0E66  
              ?i2_increment_month 0001                   ?_increment_time 0023  
             ??i2_increment_month 0003                          ??___flge 0068  
                        ??___lmul 0009         __end_ofi2_increment_month 0DE0  
                       ___fldiv@a 0072                         ___fldiv@b 006E  
                   __pcstackBANK0 0060                 ??_increment_month 0062  
        increment_month@increment 0060                   i2_increment_day 0B88  
                        ?_HighISR 0001                      ?_Timer0_init 0060  
       increment_day@day_in_month 0068                         __pintcode 0008  
                        ?___fldiv 006E                          ?___fltol 0060  
i2increment_day@curr_day_in_month 0021    increment_day@curr_day_in_month 0080  
                       _get_month 0F18                          ?_get_day 0060  
                        _ADC_init 0EDA                          _DAC_init 0EF4  
                        _LATAbits 000F79                          _LATBbits 000F7A  
                        _LATDbits 000F7C                          _LATFbits 000F7E  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                        _PIE0bits 000E29                          _IPR2bits 000E21  
                        _PIE2bits 000E2B                          i2u132_41 0B96  
                        i2u133_40 0BE0                          i2u133_41 0BDC  
                        i2u134_40 0BF4                          i2u134_41 0BF0  
                        i2u135_40 0C16                          i2u135_41 0C12  
                        i2u136_40 0C42                          i2u152_40 0AE0  
                        i2u136_41 0C3E                          i2u152_41 0ADC  
                        i2u153_40 0B4A                          i2u153_41 0B46  
                        i2u154_40 0B86                          i2u154_41 0B82  
                        i2u174_40 002A                          i2u174_41 0026  
                        i2u175_40 003C                          i2u175_41 0034  
                        _PIR0bits 000E33                          i2u177_40 005E  
                        i2u176_48 003E                          i2u177_41 005A  
                        i2u178_40 0084                          i2u178_41 0080  
                        _PIR2bits 000E35                         _test_mode 004A  
           __end_of_increment_day 0ACA                        ?_get_month 0060  
                      _ADCON0bits 000F60           __end_ofi2_increment_day 0C44  
                      _CM1NCHbits 000ED2                        _CM1PCHbits 000ED3  
               ___lmul@multiplier 0001                         copy_data0 0E7A  
           __end_of_LEDarray_init 0E66                          __Hrparam 0000  
                        __Lrparam 0000          i2increment_day@increment 0003  
                ??_increment_time 0027                        _ANSELAbits 000E92  
                        ___xxtofl 0450                        _T0CON0bits 000FD5  
                      _T0CON1bits 000FD6                          __ptext10 0C44  
                        __ptext11 0E2E                          __ptext20 0D7E  
                        __ptext12 0940                          __ptext21 0CB0  
                        __ptext13 0F08                          __ptext14 0E9A  
                        __ptext15 0EF4                          __ptext16 0EDA  
                        __ptext18 0ACA                          __ptext19 0B88  
                        _get_hour 0DE0           LEDarray_disp_bin@number 006A  
                        isa$xinst 000000                          int$flags 004C  
                 _increment_month 0D1A                       ??_get_month 0062  
                ?i2_increment_day 0003                        _INTCONbits 000FF2  
                    _time_counter 0093                          intlevel2 0000  
                    _DAC1CON0bits 000EC6                      _DAC1CON1bits 000EC7  
        Timer0_init@current_month 0064           __end_of_increment_month 0D7E  
