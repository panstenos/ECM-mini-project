

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 07 14:10:20 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.35
    41                           ; Generated 05/05/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F67K40 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataCOMRAM
    77   000E30                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for increment_day@F14250
    81   000E30  001F               	dw	31
    82   000E32  001C               	dw	28
    83   000E34  001F               	dw	31
    84   000E36  001E               	dw	30
    85   000E38  001F               	dw	31
    86   000E3A  001E               	dw	30
    87   000E3C  001F               	dw	31
    88   000E3E  001F               	dw	31
    89   000E40  001E               	dw	30
    90   000E42  001F               	dw	31
    91   000E44  001E               	dw	30
    92   000E46  001F               	dw	31
    93                           
    94                           ;initializer for _month
    95   000E48  0001               	dw	1
    96                           
    97                           ;initializer for _day
    98   000E4A  0001               	dw	1
    99   000000                     _T0CON0bits	set	4053
   100   000000                     _T0CON1bits	set	4054
   101   000000                     _CM1CON1bits	set	3793
   102   000000                     _TRISHbits	set	3976
   103   000000                     _LATHbits	set	3968
   104   000000                     _PORTAbits	set	3977
   105   000000                     _PORTGbits	set	3983
   106                           
   107                           	psect	nvCOMRAM
   108   000048                     __pnvCOMRAM:
   109                           	callstack 0
   110   000048                     _leap_year_count:
   111                           	callstack 0
   112   000048                     	ds	2
   113   00004A                     _test_mode:
   114                           	callstack 0
   115   00004A                     	ds	2
   116   000000                     _IPR2bits	set	3617
   117   000000                     _PIE2bits	set	3627
   118   000000                     _DAC1CON0bits	set	3782
   119   000000                     _LATAbits	set	3961
   120   000000                     _LATGbits	set	3967
   121   000000                     _TRISAbits	set	3969
   122   000000                     _TRISGbits	set	3975
   123   000000                     _TRISDbits	set	3972
   124   000000                     _TRISBbits	set	3970
   125   000000                     _TRISFbits	set	3974
   126   000000                     _TMR0L	set	4051
   127   000000                     _TMR0H	set	4052
   128   000000                     _INTCONbits	set	4082
   129   000000                     _PORTBbits	set	3978
   130   000000                     _PORTFbits	set	3982
   131   000000                     _LATDbits	set	3964
   132   000000                     _LATBbits	set	3962
   133   000000                     _LATFbits	set	3966
   134   000000                     _CM1CON0bits	set	3792
   135   000000                     _CM1NCHbits	set	3794
   136   000000                     _DAC1CON1bits	set	3783
   137   000000                     _ADREFbits	set	3928
   138   000000                     _CM1PCHbits	set	3795
   139   000000                     _PIR0bits	set	3635
   140   000000                     _PIR2bits	set	3637
   141   000000                     _PIE0bits	set	3625
   142   000000                     _ANSELAbits	set	3730
   143   000000                     _ADPCH	set	3935
   144   000000                     _ADRESH	set	3940
   145   000000                     _ADCON0bits	set	3936
   146                           
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150   000D98                     __pcinit:
   151                           	callstack 0
   152   000D98                     start_initialization:
   153                           	callstack 0
   154   000D98                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Initialize objects allocated to COMRAM (28 bytes)
   158                           ; load TBLPTR registers with __pidataCOMRAM
   159   000D98  0E30               	movlw	low __pidataCOMRAM
   160   000D9A  6EF6               	movwf	tblptrl,c
   161   000D9C  0E0E               	movlw	high __pidataCOMRAM
   162   000D9E  6EF7               	movwf	tblptrh,c
   163   000DA0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   164   000DA2  6EF8               	movwf	tblptru,c
   165   000DA4  EE00  F02C         	lfsr	0,__pdataCOMRAM
   166   000DA8  EE10 F01C          	lfsr	1,28
   167   000DAC                     copy_data0:
   168   000DAC  0009               	tblrd		*+
   169   000DAE  CFF5 FFEE          	movff	tablat,postinc0
   170   000DB2  50E5               	movf	postdec1,w,c
   171   000DB4  50E1               	movf	fsr1l,w,c
   172   000DB6  E1FA               	bnz	copy_data0
   173                           
   174                           ; Clear objects allocated to BANK0 (4 bytes)
   175   000DB8  0100               	movlb	0
   176   000DBA  6B96               	clrf	(__pbssBANK0+3)& (0+255),b
   177   000DBC  6B95               	clrf	(__pbssBANK0+2)& (0+255),b
   178   000DBE  6B94               	clrf	(__pbssBANK0+1)& (0+255),b
   179   000DC0  6B93               	clrf	__pbssBANK0& (0+255),b
   180                           
   181                           ; Clear objects allocated to COMRAM (4 bytes)
   182   000DC2  6A4F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   183   000DC4  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   184   000DC6  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   185   000DC8  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   186   000DCA                     end_of_initialization:
   187                           	callstack 0
   188   000DCA                     __end_of__initialization:
   189                           	callstack 0
   190   000DCA  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   191   000DCC  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   192   000DCE  0100               	movlb	0
   193   000DD0  EF04  F003         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMRAM
   196   00004C                     __pbssCOMRAM:
   197                           	callstack 0
   198   00004C                     _test_time_corrector:
   199                           	callstack 0
   200   00004C                     	ds	4
   201                           
   202                           	psect	dataCOMRAM
   203   00002C                     __pdataCOMRAM:
   204                           	callstack 0
   205   00002C                     increment_day@F14250:
   206                           	callstack 0
   207   00002C                     	ds	24
   208   000044                     _month:
   209                           	callstack 0
   210   000044                     	ds	2
   211   000046                     _day:
   212                           	callstack 0
   213   000046                     	ds	2
   214                           
   215                           	psect	bssBANK0
   216   000093                     __pbssBANK0:
   217                           	callstack 0
   218   000093                     _time_counter:
   219                           	callstack 0
   220   000093                     	ds	4
   221                           
   222                           	psect	cstackBANK0
   223   000060                     __pcstackBANK0:
   224                           	callstack 0
   225   000060                     ?_get_day:
   226                           	callstack 0
   227   000060                     ?_get_month:
   228                           	callstack 0
   229   000060                     ?___fltol:
   230                           	callstack 0
   231   000060                     ?___xxtofl:
   232                           	callstack 0
   233   000060                     Timer0_init@init_test_mode:
   234                           	callstack 0
   235   000060                     increment_month@increment:
   236                           	callstack 0
   237   000060                     ___flge@ff1:
   238                           	callstack 0
   239   000060                     ___fltol@f1:
   240                           	callstack 0
   241   000060                     ___xxtofl@val:
   242                           	callstack 0
   243                           
   244                           ; 4 bytes @ 0x0
   245   000060                     	ds	2
   246   000062                     Timer0_init@current_day:
   247                           	callstack 0
   248   000062                     increment_day@increment:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x2
   252   000062                     	ds	2
   253   000064                     ??_increment_day:
   254   000064                     ??___fltol:
   255   000064                     ??___xxtofl:
   256   000064                     Timer0_init@current_month:
   257                           	callstack 0
   258   000064                     ___flge@ff2:
   259                           	callstack 0
   260                           
   261                           ; 4 bytes @ 0x4
   262   000064                     	ds	2
   263   000066                     Timer0_init@leap_year:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x6
   267   000066                     	ds	2
   268   000068                     ??___flge:
   269   000068                     ___fltol@sign1:
   270                           	callstack 0
   271   000068                     ___xxtofl@sign:
   272                           	callstack 0
   273   000068                     increment_day@day_in_month:
   274                           	callstack 0
   275                           
   276                           ; 24 bytes @ 0x8
   277   000068                     	ds	1
   278   000069                     ___fltol@exp1:
   279                           	callstack 0
   280   000069                     ___xxtofl@exp:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x9
   284   000069                     	ds	1
   285   00006A                     LEDarray_disp_bin@number:
   286                           	callstack 0
   287   00006A                     ___xxtofl@arg:
   288                           	callstack 0
   289                           
   290                           ; 4 bytes @ 0xA
   291   00006A                     	ds	2
   292   00006C                     
   293                           ; 1 bytes @ 0xC
   294   00006C                     	ds	2
   295   00006E                     ?___fldiv:
   296                           	callstack 0
   297   00006E                     ___fldiv@b:
   298                           	callstack 0
   299                           
   300                           ; 4 bytes @ 0xE
   301   00006E                     	ds	4
   302   000072                     ___fldiv@a:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0x12
   306   000072                     	ds	4
   307   000076                     ??___fldiv:
   308                           
   309                           ; 1 bytes @ 0x16
   310   000076                     	ds	4
   311   00007A                     ___fldiv@rem:
   312                           	callstack 0
   313                           
   314                           ; 4 bytes @ 0x1A
   315   00007A                     	ds	4
   316   00007E                     ___fldiv@sign:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1E
   320   00007E                     	ds	1
   321   00007F                     ___fldiv@new_exp:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x1F
   325   00007F                     	ds	1
   326   000080                     increment_day@curr_day_in_month:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x20
   330   000080                     	ds	1
   331   000081                     ___fldiv@grs:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0x21
   335   000081                     	ds	4
   336   000085                     ___fldiv@bexp:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x25
   340   000085                     	ds	1
   341   000086                     ___fldiv@aexp:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x26
   345   000086                     	ds	1
   346   000087                     ?_get_hour:
   347                           	callstack 0
   348                           
   349                           ; 4 bytes @ 0x27
   350   000087                     	ds	4
   351   00008B                     main@curr_day:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x2B
   355   00008B                     	ds	2
   356   00008D                     main@curr_month:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x2D
   360   00008D                     	ds	2
   361   00008F                     main@curr_hour:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x2F
   365   00008F                     	ds	4
   366                           
   367                           	psect	cstackCOMRAM
   368   000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370   000001                     i2increment_month@increment:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x0
   374   000001                     	ds	2
   375   000003                     i2increment_day@increment:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x2
   379   000003                     	ds	2
   380   000005                     ??i2_increment_day:
   381                           
   382                           ; 1 bytes @ 0x4
   383   000005                     	ds	4
   384   000009                     i2increment_day@day_in_month:
   385                           	callstack 0
   386                           
   387                           ; 24 bytes @ 0x8
   388   000009                     	ds	24
   389   000021                     i2increment_day@curr_day_in_month:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x20
   393   000021                     	ds	2
   394   000023                     increment_time@increment:
   395                           	callstack 0
   396                           
   397                           ; 4 bytes @ 0x22
   398   000023                     	ds	4
   399   000027                     ??_HighISR:
   400                           
   401                           ; 1 bytes @ 0x26
   402   000027                     	ds	5
   403                           
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 22 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  curr_hour       4   47[BANK0 ] float 
   414 ;;  curr_month      2   45[BANK0 ] unsigned int 
   415 ;;  curr_day        2   43[BANK0 ] unsigned int 
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   426 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   428 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   429 ;;Total ram usage:        8 bytes
   430 ;; Hardware stack levels required when called: 6
   431 ;; This function calls:
   432 ;;		_ADC_init
   433 ;;		_Comp1_init
   434 ;;		_Interrupts_init
   435 ;;		_LEDarray_disp_bin
   436 ;;		_LEDarray_init
   437 ;;		_Timer0_init
   438 ;;		___flge
   439 ;;		___fltol
   440 ;;		_get_day
   441 ;;		_get_hour
   442 ;;		_get_month
   443 ;;		_increment_day
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text0
   450   000608                     __ptext0:
   451                           	callstack 0
   452   000608                     _main:
   453                           	callstack 25
   454   000608                     
   455                           ;main.c: 24:     LATHbits.LATH3=0;
   456   000608  9680               	bcf	128,3,c	;volatile
   457                           
   458                           ;main.c: 25:     TRISHbits.TRISH3=0;
   459   00060A  9688               	bcf	136,3,c	;volatile
   460                           
   461                           ;main.c: 27:     TRISDbits.TRISD7=0;
   462   00060C  9E84               	bcf	132,7,c	;volatile
   463                           
   464                           ;main.c: 28:     LATDbits.LATD7=1;
   465   00060E  8E7C               	bsf	124,7,c	;volatile
   466                           
   467                           ;main.c: 30:     TRISAbits.TRISA3=1;
   468   000610  8681               	bsf	129,3,c	;volatile
   469                           
   470                           ;main.c: 32:     LATHbits.LATH3 = 1;
   471   000612  8680               	bsf	128,3,c	;volatile
   472   000614                     
   473                           ;main.c: 33:     Comp1_init();
   474   000614  EC06  F007         	call	_Comp1_init	;wreg free
   475   000618                     
   476                           ;main.c: 34:     Interrupts_init();
   477   000618  EC3D  F007         	call	_Interrupts_init	;wreg free
   478   00061C                     
   479                           ;main.c: 35:     Timer0_init(1,06,11,2);
   480   00061C  0E00               	movlw	0
   481   00061E  0100               	movlb	0	; () banked
   482   000620  6F61               	movwf	(Timer0_init@init_test_mode+1)& (0+255),b
   483   000622  0E01               	movlw	1
   484   000624  6F60               	movwf	Timer0_init@init_test_mode& (0+255),b
   485   000626  0E00               	movlw	0
   486   000628  6F63               	movwf	(Timer0_init@current_day+1)& (0+255),b
   487   00062A  0E06               	movlw	6
   488   00062C  6F62               	movwf	Timer0_init@current_day& (0+255),b
   489   00062E  0E00               	movlw	0
   490   000630  6F65               	movwf	(Timer0_init@current_month+1)& (0+255),b
   491   000632  0E0B               	movlw	11
   492   000634  6F64               	movwf	Timer0_init@current_month& (0+255),b
   493   000636  0E00               	movlw	0
   494   000638  6F67               	movwf	(Timer0_init@leap_year+1)& (0+255),b
   495   00063A  0E02               	movlw	2
   496   00063C  6F66               	movwf	Timer0_init@leap_year& (0+255),b
   497   00063E  EC0C  F006         	call	_Timer0_init	;wreg free
   498   000642                     
   499                           ;main.c: 36:     LEDarray_init();
   500   000642  ECEA  F006         	call	_LEDarray_init	;wreg free
   501   000646                     
   502                           ;main.c: 37:     ADC_init();
   503   000646  EC26  F007         	call	_ADC_init	;wreg free
   504   00064A                     l97:
   505                           
   506                           ;main.c: 43:         float curr_hour = get_hour();
   507   00064A  ECA5  F006         	call	_get_hour	;wreg free
   508   00064E  C087  F08F         	movff	?_get_hour,main@curr_hour
   509   000652  C088  F090         	movff	?_get_hour+1,main@curr_hour+1
   510   000656  C089  F091         	movff	?_get_hour+2,main@curr_hour+2
   511   00065A  C08A  F092         	movff	?_get_hour+3,main@curr_hour+3
   512                           
   513                           ;main.c: 44:         LEDarray_disp_bin((unsigned int) curr_hour);
   514   00065E  C08F  F060         	movff	main@curr_hour,___fltol@f1
   515   000662  C090  F061         	movff	main@curr_hour+1,___fltol@f1+1
   516   000666  C091  F062         	movff	main@curr_hour+2,___fltol@f1+2
   517   00066A  C092  F063         	movff	main@curr_hour+3,___fltol@f1+3
   518   00066E  EC99  F003         	call	___fltol	;wreg free
   519   000672  C060  F06A         	movff	?___fltol,LEDarray_disp_bin@number
   520   000676  C061  F06B         	movff	?___fltol+1,LEDarray_disp_bin@number+1
   521   00067A  ECA0  F004         	call	_LEDarray_disp_bin	;wreg free
   522                           
   523                           ;main.c: 46:         if(curr_hour >= 1 && curr_hour <= 5){
   524   00067E  C08F  F060         	movff	main@curr_hour,___flge@ff1
   525   000682  C090  F061         	movff	main@curr_hour+1,___flge@ff1+1
   526   000686  C091  F062         	movff	main@curr_hour+2,___flge@ff1+2
   527   00068A  C092  F063         	movff	main@curr_hour+3,___flge@ff1+3
   528   00068E  0E00               	movlw	0
   529   000690  0100               	movlb	0	; () banked
   530   000692  6F64               	movwf	___flge@ff2& (0+255),b
   531   000694  0E00               	movlw	0
   532   000696  6F65               	movwf	(___flge@ff2+1)& (0+255),b
   533   000698  0E80               	movlw	128
   534   00069A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
   535   00069C  0E3F               	movlw	63
   536   00069E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
   537   0006A0  EC1D  F004         	call	___flge	;wreg free
   538   0006A4  0100               	movlb	0	; () banked
   539   0006A6  A0D8               	btfss	status,0,c
   540   0006A8  EF58  F003         	goto	u2211
   541   0006AC  EF5A  F003         	goto	u2210
   542   0006B0                     u2211:
   543   0006B0  EF77  F003         	goto	l98
   544   0006B4                     u2210:
   545   0006B4                     
   546                           ; BSR set to: 0
   547   0006B4  0E00               	movlw	0
   548   0006B6  6F60               	movwf	___flge@ff1& (0+255),b
   549   0006B8  0E00               	movlw	0
   550   0006BA  6F61               	movwf	(___flge@ff1+1)& (0+255),b
   551   0006BC  0EA0               	movlw	160
   552   0006BE  6F62               	movwf	(___flge@ff1+2)& (0+255),b
   553   0006C0  0E40               	movlw	64
   554   0006C2  6F63               	movwf	(___flge@ff1+3)& (0+255),b
   555   0006C4  C08F  F064         	movff	main@curr_hour,___flge@ff2
   556   0006C8  C090  F065         	movff	main@curr_hour+1,___flge@ff2+1
   557   0006CC  C091  F066         	movff	main@curr_hour+2,___flge@ff2+2
   558   0006D0  C092  F067         	movff	main@curr_hour+3,___flge@ff2+3
   559   0006D4  EC1D  F004         	call	___flge	;wreg free
   560   0006D8  0100               	movlb	0	; () banked
   561   0006DA  A0D8               	btfss	status,0,c
   562   0006DC  EF72  F003         	goto	u2221
   563   0006E0  EF74  F003         	goto	u2220
   564   0006E4                     u2221:
   565   0006E4  EF77  F003         	goto	l98
   566   0006E8                     u2220:
   567   0006E8                     
   568                           ; BSR set to: 0
   569                           ;main.c: 47:             LATHbits.LATH3 = 0;
   570   0006E8  9680               	bcf	128,3,c	;volatile
   571                           
   572                           ;main.c: 48:         }else{
   573   0006EA  EF78  F003         	goto	l2254
   574   0006EE                     l98:
   575                           
   576                           ; BSR set to: 0
   577                           ;main.c: 49:             LATHbits.LATH3 = 1;
   578   0006EE  8680               	bsf	128,3,c	;volatile
   579   0006F0                     l2254:
   580                           
   581                           ; BSR set to: 0
   582                           ;main.c: 52:         curr_day = get_day();
   583   0006F0  EC4A  F007         	call	_get_day	;wreg free
   584   0006F4  C060  F08B         	movff	?_get_day,main@curr_day
   585   0006F8  C061  F08C         	movff	?_get_day+1,main@curr_day+1
   586                           
   587                           ;main.c: 53:         curr_month = get_month();
   588   0006FC  EC45  F007         	call	_get_month	;wreg free
   589   000700  C060  F08D         	movff	?_get_month,main@curr_month
   590   000704  C061  F08E         	movff	?_get_month+1,main@curr_month+1
   591   000708                     
   592                           ;main.c: 54:         curr_day += 1;
   593   000708  0100               	movlb	0	; () banked
   594   00070A  4B8B               	infsnz	main@curr_day& (0+255),f,b
   595   00070C  2B8C               	incf	(main@curr_day+1)& (0+255),f,b
   596   00070E                     
   597                           ; BSR set to: 0
   598                           ;main.c: 55:         curr_day -=1;
   599   00070E  078B               	decf	main@curr_day& (0+255),f,b
   600   000710  A0D8               	btfss	status,0,c
   601   000712  078C               	decf	(main@curr_day+1)& (0+255),f,b
   602   000714                     
   603                           ; BSR set to: 0
   604                           ;main.c: 57:         curr_month += 1;
   605   000714  4B8D               	infsnz	main@curr_month& (0+255),f,b
   606   000716  2B8E               	incf	(main@curr_month+1)& (0+255),f,b
   607   000718                     
   608                           ; BSR set to: 0
   609                           ;main.c: 58:         curr_month -=1;
   610   000718  078D               	decf	main@curr_month& (0+255),f,b
   611   00071A  A0D8               	btfss	status,0,c
   612   00071C  078E               	decf	(main@curr_month+1)& (0+255),f,b
   613   00071E                     
   614                           ; BSR set to: 0
   615                           ;main.c: 59:         increment_day(1);
   616   00071E  0E00               	movlw	0
   617   000720  6F63               	movwf	(increment_day@increment+1)& (0+255),b
   618   000722  0E01               	movlw	1
   619   000724  6F62               	movwf	increment_day@increment& (0+255),b
   620   000726  EC05  F005         	call	_increment_day	;wreg free
   621   00072A  EF25  F003         	goto	l97
   622   00072E  EF58  F000         	goto	start
   623   000732                     __end_of_main:
   624                           	callstack 0
   625                           
   626 ;; *************** function _increment_day *****************
   627 ;; Defined at:
   628 ;;		line 100 in file "timers.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  increment       2    2[BANK0 ] unsigned int 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  day_in_month   24    8[BANK0 ] unsigned int [12]
   633 ;;  curr_day_in_    2   32[BANK0 ] unsigned int 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   646 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   647 ;;Total ram usage:       32 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 5
   650 ;; This function calls:
   651 ;;		_increment_month
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text1
   658   000A0A                     __ptext1:
   659                           	callstack 0
   660   000A0A                     _increment_day:
   661                           	callstack 25
   662   000A0A                     
   663                           ;timers.c: 101:     while(increment > 0){
   664   000A0A  EF5A  F005         	goto	l2138
   665   000A0E                     l2118:
   666                           
   667                           ; BSR set to: 0
   668                           ;timers.c: 103:         unsigned int day_in_month[] = {31,28,31,30,31,30,31,31,30,31,30,
      +                          31};
   669   000A0E  EE20  F02C         	lfsr	2,increment_day@F14250
   670   000A12  EE10  F068         	lfsr	1,increment_day@day_in_month
   671   000A16  0E17               	movlw	23
   672   000A18                     u1991:
   673   000A18  CFDB FFE3          	movff	plusw2,plusw1
   674   000A1C  06E8               	decf	wreg,f,c
   675   000A1E  E2FC               	bc	u1991
   676   000A20                     
   677                           ; BSR set to: 0
   678                           ;timers.c: 104:         unsigned int curr_day_in_month = day_in_month[month - 1];
   679   000A20  C044  F064         	movff	_month,??_increment_day
   680   000A24  C045  F065         	movff	_month+1,??_increment_day+1
   681   000A28  90D8               	bcf	status,0,c
   682   000A2A  3764               	rlcf	??_increment_day& (0+255),f,b
   683   000A2C  3765               	rlcf	(??_increment_day+1)& (0+255),f,b
   684   000A2E  0EFE               	movlw	254
   685   000A30  2564               	addwf	??_increment_day& (0+255),w,b
   686   000A32  6F66               	movwf	(??_increment_day+2)& (0+255),b
   687   000A34  0EFF               	movlw	255
   688   000A36  2165               	addwfc	(??_increment_day+1)& (0+255),w,b
   689   000A38  6F67               	movwf	(??_increment_day+3)& (0+255),b
   690   000A3A  0E68               	movlw	low increment_day@day_in_month
   691   000A3C  2566               	addwf	(??_increment_day+2)& (0+255),w,b
   692   000A3E  6ED9               	movwf	fsr2l,c
   693   000A40  0E00               	movlw	high increment_day@day_in_month
   694   000A42  2167               	addwfc	(??_increment_day+3)& (0+255),w,b
   695   000A44  6EDA               	movwf	fsr2h,c
   696   000A46  CFDE F080          	movff	postinc2,increment_day@curr_day_in_month
   697   000A4A  CFDD F081          	movff	postdec2,increment_day@curr_day_in_month+1
   698   000A4E                     
   699                           ; BSR set to: 0
   700                           ;timers.c: 105:         if(month == 2 && leap_year_count == 3){
   701   000A4E  0E02               	movlw	2
   702   000A50  1844               	xorwf	_month^0,w,c
   703   000A52  1045               	iorwf	(_month+1)^0,w,c
   704   000A54  A4D8               	btfss	status,2,c
   705   000A56  EF2F  F005         	goto	u2001
   706   000A5A  EF31  F005         	goto	u2000
   707   000A5E                     u2001:
   708   000A5E  EF3F  F005         	goto	l2128
   709   000A62                     u2000:
   710   000A62                     
   711                           ; BSR set to: 0
   712   000A62  0E03               	movlw	3
   713   000A64  1848               	xorwf	_leap_year_count^0,w,c
   714   000A66  1049               	iorwf	(_leap_year_count+1)^0,w,c
   715   000A68  A4D8               	btfss	status,2,c
   716   000A6A  EF39  F005         	goto	u2011
   717   000A6E  EF3B  F005         	goto	u2010
   718   000A72                     u2011:
   719   000A72  EF3F  F005         	goto	l2128
   720   000A76                     u2010:
   721   000A76                     
   722                           ; BSR set to: 0
   723                           ;timers.c: 106:             curr_day_in_month = 29;
   724   000A76  0E00               	movlw	0
   725   000A78  6F81               	movwf	(increment_day@curr_day_in_month+1)& (0+255),b
   726   000A7A  0E1D               	movlw	29
   727   000A7C  6F80               	movwf	increment_day@curr_day_in_month& (0+255),b
   728   000A7E                     l2128:
   729                           
   730                           ; BSR set to: 0
   731                           ;timers.c: 109:         day += 1;
   732   000A7E  4A46               	infsnz	_day^0,f,c
   733   000A80  2A47               	incf	(_day+1)^0,f,c
   734   000A82                     
   735                           ; BSR set to: 0
   736                           ;timers.c: 110:         if(day > curr_day_in_month){
   737   000A82  5046               	movf	_day^0,w,c
   738   000A84  5D80               	subwf	increment_day@curr_day_in_month& (0+255),w,b
   739   000A86  5047               	movf	(_day+1)^0,w,c
   740   000A88  5981               	subwfb	(increment_day@curr_day_in_month+1)& (0+255),w,b
   741   000A8A  B0D8               	btfsc	status,0,c
   742   000A8C  EF4A  F005         	goto	u2021
   743   000A90  EF4C  F005         	goto	u2020
   744   000A94                     u2021:
   745   000A94  EF56  F005         	goto	l2136
   746   000A98                     u2020:
   747   000A98                     
   748                           ; BSR set to: 0
   749                           ;timers.c: 111:             increment_month(1);
   750   000A98  0E00               	movlw	0
   751   000A9A  6F61               	movwf	(increment_month@increment+1)& (0+255),b
   752   000A9C  0E01               	movlw	1
   753   000A9E  6F60               	movwf	increment_month@increment& (0+255),b
   754   000AA0  EC42  F006         	call	_increment_month	;wreg free
   755   000AA4                     
   756                           ;timers.c: 112:             day = 1;
   757   000AA4  0E00               	movlw	0
   758   000AA6  6E47               	movwf	(_day+1)^0,c
   759   000AA8  0E01               	movlw	1
   760   000AAA  6E46               	movwf	_day^0,c
   761   000AAC                     l2136:
   762                           
   763                           ;timers.c: 114:         increment -= 1;
   764   000AAC  0100               	movlb	0	; () banked
   765   000AAE  0762               	decf	increment_day@increment& (0+255),f,b
   766   000AB0  A0D8               	btfss	status,0,c
   767   000AB2  0763               	decf	(increment_day@increment+1)& (0+255),f,b
   768   000AB4                     l2138:
   769                           
   770                           ;timers.c: 101:     while(increment > 0){
   771   000AB4  0100               	movlb	0	; () banked
   772   000AB6  5162               	movf	increment_day@increment& (0+255),w,b
   773   000AB8  1163               	iorwf	(increment_day@increment+1)& (0+255),w,b
   774   000ABA  A4D8               	btfss	status,2,c
   775   000ABC  EF62  F005         	goto	u2031
   776   000AC0  EF64  F005         	goto	u2030
   777   000AC4                     u2031:
   778   000AC4  EF07  F005         	goto	l2118
   779   000AC8                     u2030:
   780   000AC8                     
   781                           ; BSR set to: 0
   782   000AC8  0012               	return		;funcret
   783   000ACA                     __end_of_increment_day:
   784                           	callstack 0
   785                           
   786 ;; *************** function _increment_month *****************
   787 ;; Defined at:
   788 ;;		line 118 in file "timers.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;  increment       2    0[BANK0 ] unsigned int 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   806 ;;Total ram usage:        2 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 4
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_increment_day
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text2
   817   000C84                     __ptext2:
   818                           	callstack 0
   819   000C84                     _increment_month:
   820                           	callstack 25
   821   000C84                     
   822                           ;timers.c: 119:     while(increment > 0){
   823   000C84  EF69  F006         	goto	l1994
   824   000C88                     l1980:
   825                           
   826                           ; BSR set to: 0
   827                           ;timers.c: 121:         month += 1;
   828   000C88  4A44               	infsnz	_month^0,f,c
   829   000C8A  2A45               	incf	(_month+1)^0,f,c
   830   000C8C                     
   831                           ; BSR set to: 0
   832                           ;timers.c: 122:         if(month > 12){
   833   000C8C  5045               	movf	(_month+1)^0,w,c
   834   000C8E  E109               	bnz	u1760
   835   000C90  0E0D               	movlw	13
   836   000C92  5C44               	subwf	_month^0,w,c
   837   000C94  A0D8               	btfss	status,0,c
   838   000C96  EF4F  F006         	goto	u1761
   839   000C9A  EF51  F006         	goto	u1760
   840   000C9E                     u1761:
   841   000C9E  EF66  F006         	goto	l1992
   842   000CA2                     u1760:
   843   000CA2                     
   844                           ; BSR set to: 0
   845                           ;timers.c: 123:             month = 1;
   846   000CA2  0E00               	movlw	0
   847   000CA4  6E45               	movwf	(_month+1)^0,c
   848   000CA6  0E01               	movlw	1
   849   000CA8  6E44               	movwf	_month^0,c
   850   000CAA                     
   851                           ; BSR set to: 0
   852                           ;timers.c: 124:             leap_year_count += 1;
   853   000CAA  4A48               	infsnz	_leap_year_count^0,f,c
   854   000CAC  2A49               	incf	(_leap_year_count+1)^0,f,c
   855   000CAE                     
   856                           ; BSR set to: 0
   857                           ;timers.c: 125:             if(leap_year_count > 3){
   858   000CAE  5049               	movf	(_leap_year_count+1)^0,w,c
   859   000CB0  E109               	bnz	u1770
   860   000CB2  0E04               	movlw	4
   861   000CB4  5C48               	subwf	_leap_year_count^0,w,c
   862   000CB6  A0D8               	btfss	status,0,c
   863   000CB8  EF60  F006         	goto	u1771
   864   000CBC  EF62  F006         	goto	u1770
   865   000CC0                     u1771:
   866   000CC0  EF66  F006         	goto	l1992
   867   000CC4                     u1770:
   868   000CC4                     
   869                           ; BSR set to: 0
   870                           ;timers.c: 126:                 leap_year_count = 0;
   871   000CC4  0E00               	movlw	0
   872   000CC6  6E49               	movwf	(_leap_year_count+1)^0,c
   873   000CC8  0E00               	movlw	0
   874   000CCA  6E48               	movwf	_leap_year_count^0,c
   875   000CCC                     l1992:
   876                           
   877                           ; BSR set to: 0
   878                           ;timers.c: 129:         increment -= 1;
   879   000CCC  0760               	decf	increment_month@increment& (0+255),f,b
   880   000CCE  A0D8               	btfss	status,0,c
   881   000CD0  0761               	decf	(increment_month@increment+1)& (0+255),f,b
   882   000CD2                     l1994:
   883                           
   884                           ;timers.c: 119:     while(increment > 0){
   885   000CD2  0100               	movlb	0	; () banked
   886   000CD4  5160               	movf	increment_month@increment& (0+255),w,b
   887   000CD6  1161               	iorwf	(increment_month@increment+1)& (0+255),w,b
   888   000CD8  A4D8               	btfss	status,2,c
   889   000CDA  EF71  F006         	goto	u1781
   890   000CDE  EF73  F006         	goto	u1780
   891   000CE2                     u1781:
   892   000CE2  EF44  F006         	goto	l1980
   893   000CE6                     u1780:
   894   000CE6                     
   895                           ; BSR set to: 0
   896   000CE6  0012               	return		;funcret
   897   000CE8                     __end_of_increment_month:
   898                           	callstack 0
   899                           
   900 ;; *************** function _get_month *****************
   901 ;; Defined at:
   902 ;;		line 67 in file "timers.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2    0[BANK0 ] unsigned int 
   909 ;; Registers used:
   910 ;;		None
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;Total ram usage:        2 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 4
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text3
   931   000E8A                     __ptext3:
   932                           	callstack 0
   933   000E8A                     _get_month:
   934                           	callstack 26
   935   000E8A                     
   936                           ;timers.c: 68:     return month;
   937   000E8A  C044  F060         	movff	_month,?_get_month
   938   000E8E  C045  F061         	movff	_month+1,?_get_month+1
   939   000E92  0012               	return		;funcret
   940   000E94                     __end_of_get_month:
   941                           	callstack 0
   942                           
   943 ;; *************** function _get_hour *****************
   944 ;; Defined at:
   945 ;;		line 60 in file "timers.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  4   39[BANK0 ] float 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   962 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   963 ;;Total ram usage:        4 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 5
   966 ;; This function calls:
   967 ;;		___fldiv
   968 ;;		___xxtofl
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text4
   975   000D4A                     __ptext4:
   976                           	callstack 0
   977   000D4A                     _get_hour:
   978                           	callstack 25
   979   000D4A                     
   980                           ;timers.c: 61:     return (float) time_counter/3600;
   981   000D4A  C093  F060         	movff	_time_counter,___xxtofl@val
   982   000D4E  C094  F061         	movff	_time_counter+1,___xxtofl@val+1
   983   000D52  C095  F062         	movff	_time_counter+2,___xxtofl@val+2
   984   000D56  C096  F063         	movff	_time_counter+3,___xxtofl@val+3
   985   000D5A  0E00               	movlw	0
   986   000D5C  EC28  F002         	call	___xxtofl
   987   000D60  C060  F06E         	movff	?___xxtofl,___fldiv@b
   988   000D64  C061  F06F         	movff	?___xxtofl+1,___fldiv@b+1
   989   000D68  C062  F070         	movff	?___xxtofl+2,___fldiv@b+2
   990   000D6C  C063  F071         	movff	?___xxtofl+3,___fldiv@b+3
   991   000D70  0E00               	movlw	0
   992   000D72  0100               	movlb	0	; () banked
   993   000D74  6F72               	movwf	___fldiv@a& (0+255),b
   994   000D76  0E00               	movlw	0
   995   000D78  6F73               	movwf	(___fldiv@a+1)& (0+255),b
   996   000D7A  0E61               	movlw	97
   997   000D7C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
   998   000D7E  0E45               	movlw	69
   999   000D80  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  1000   000D82  EC5A  F000         	call	___fldiv	;wreg free
  1001   000D86  C06E  F087         	movff	?___fldiv,?_get_hour
  1002   000D8A  C06F  F088         	movff	?___fldiv+1,?_get_hour+1
  1003   000D8E  C070  F089         	movff	?___fldiv+2,?_get_hour+2
  1004   000D92  C071  F08A         	movff	?___fldiv+3,?_get_hour+3
  1005   000D96  0012               	return		;funcret
  1006   000D98                     __end_of_get_hour:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function ___xxtofl *****************
  1010 ;; Defined at:
  1011 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  sign            1    wreg     unsigned char 
  1014 ;;  val             4    0[BANK0 ] long 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  sign            1    8[BANK0 ] unsigned char 
  1017 ;;  arg             4   10[BANK0 ] unsigned long 
  1018 ;;  exp             1    9[BANK0 ] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  4    0[BANK0 ] unsigned char 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1028 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1031 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;Total ram usage:       14 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 4
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_get_hour
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text5
  1043   000450                     __ptext5:
  1044                           	callstack 0
  1045   000450                     ___xxtofl:
  1046                           	callstack 25
  1047                           
  1048                           ;incstack = 0
  1049                           ;___xxtofl@sign stored from wreg
  1050   000450  0100               	movlb	0	; () banked
  1051   000452  6F68               	movwf	___xxtofl@sign& (0+255),b
  1052   000454  0100               	movlb	0	; () banked
  1053   000456  5168               	movf	___xxtofl@sign& (0+255),w,b
  1054   000458  B4D8               	btfsc	status,2,c
  1055   00045A  EF31  F002         	goto	u1791
  1056   00045E  EF33  F002         	goto	u1790
  1057   000462                     u1791:
  1058   000462  EF55  F002         	goto	l912
  1059   000466                     u1790:
  1060   000466                     
  1061                           ; BSR set to: 0
  1062   000466  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1063   000468  EF3A  F002         	goto	u1800
  1064   00046C  EF38  F002         	goto	u1801
  1065   000470                     u1801:
  1066   000470  EF55  F002         	goto	l912
  1067   000474                     u1800:
  1068   000474                     
  1069                           ; BSR set to: 0
  1070   000474  C060  F064         	movff	___xxtofl@val,??___xxtofl
  1071   000478  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  1072   00047C  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  1073   000480  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  1074   000484  1F64               	comf	??___xxtofl& (0+255),f,b
  1075   000486  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  1076   000488  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  1077   00048A  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  1078   00048C  2B64               	incf	??___xxtofl& (0+255),f,b
  1079   00048E  0E00               	movlw	0
  1080   000490  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  1081   000492  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  1082   000494  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  1083   000496  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  1084   00049A  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  1085   00049E  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  1086   0004A2  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  1087   0004A6  EF5D  F002         	goto	l2002
  1088   0004AA                     l912:
  1089                           
  1090                           ; BSR set to: 0
  1091   0004AA  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  1092   0004AE  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1093   0004B2  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1094   0004B6  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1095   0004BA                     l2002:
  1096                           
  1097                           ; BSR set to: 0
  1098   0004BA  5160               	movf	___xxtofl@val& (0+255),w,b
  1099   0004BC  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  1100   0004BE  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  1101   0004C0  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  1102   0004C2  A4D8               	btfss	status,2,c
  1103   0004C4  EF66  F002         	goto	u1811
  1104   0004C8  EF68  F002         	goto	u1810
  1105   0004CC                     u1811:
  1106   0004CC  EF72  F002         	goto	l2008
  1107   0004D0                     u1810:
  1108   0004D0                     
  1109                           ; BSR set to: 0
  1110   0004D0  0E00               	movlw	0
  1111   0004D2  6F60               	movwf	?___xxtofl& (0+255),b
  1112   0004D4  0E00               	movlw	0
  1113   0004D6  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  1114   0004D8  0E00               	movlw	0
  1115   0004DA  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  1116   0004DC  0E00               	movlw	0
  1117   0004DE  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  1118   0004E0  EF03  F003         	goto	l915
  1119   0004E4                     l2008:
  1120                           
  1121                           ; BSR set to: 0
  1122   0004E4  0E96               	movlw	150
  1123   0004E6  6F69               	movwf	___xxtofl@exp& (0+255),b
  1124   0004E8  EF7C  F002         	goto	l2012
  1125   0004EC                     l2010:
  1126                           
  1127                           ; BSR set to: 0
  1128   0004EC  2B69               	incf	___xxtofl@exp& (0+255),f,b
  1129   0004EE  90D8               	bcf	status,0,c
  1130   0004F0  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1131   0004F2  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1132   0004F4  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1133   0004F6  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  1134   0004F8                     l2012:
  1135                           
  1136                           ; BSR set to: 0
  1137   0004F8  0E00               	movlw	0
  1138   0004FA  156A               	andwf	___xxtofl@arg& (0+255),w,b
  1139   0004FC  6F64               	movwf	??___xxtofl& (0+255),b
  1140   0004FE  0E00               	movlw	0
  1141   000500  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1142   000502  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  1143   000504  0E00               	movlw	0
  1144   000506  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1145   000508  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  1146   00050A  0EFE               	movlw	254
  1147   00050C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1148   00050E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  1149   000510  5164               	movf	??___xxtofl& (0+255),w,b
  1150   000512  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1151   000514  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1152   000516  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1153   000518  A4D8               	btfss	status,2,c
  1154   00051A  EF91  F002         	goto	u1821
  1155   00051E  EF93  F002         	goto	u1820
  1156   000522                     u1821:
  1157   000522  EF76  F002         	goto	l2010
  1158   000526                     u1820:
  1159   000526  EFA1  F002         	goto	l919
  1160   00052A                     l2014:
  1161                           
  1162                           ; BSR set to: 0
  1163   00052A  2B69               	incf	___xxtofl@exp& (0+255),f,b
  1164   00052C                     
  1165                           ; BSR set to: 0
  1166   00052C  0E01               	movlw	1
  1167   00052E  276A               	addwf	___xxtofl@arg& (0+255),f,b
  1168   000530  0E00               	movlw	0
  1169   000532  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  1170   000534  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  1171   000536  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  1172   000538                     
  1173                           ; BSR set to: 0
  1174   000538  90D8               	bcf	status,0,c
  1175   00053A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1176   00053C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1177   00053E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1178   000540  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  1179   000542                     l919:
  1180                           
  1181                           ; BSR set to: 0
  1182   000542  0E00               	movlw	0
  1183   000544  156A               	andwf	___xxtofl@arg& (0+255),w,b
  1184   000546  6F64               	movwf	??___xxtofl& (0+255),b
  1185   000548  0E00               	movlw	0
  1186   00054A  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1187   00054C  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  1188   00054E  0E00               	movlw	0
  1189   000550  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1190   000552  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  1191   000554  0EFF               	movlw	255
  1192   000556  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1193   000558  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  1194   00055A  5164               	movf	??___xxtofl& (0+255),w,b
  1195   00055C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1196   00055E  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1197   000560  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1198   000562  A4D8               	btfss	status,2,c
  1199   000564  EFB6  F002         	goto	u1831
  1200   000568  EFB8  F002         	goto	u1830
  1201   00056C                     u1831:
  1202   00056C  EF95  F002         	goto	l2014
  1203   000570                     u1830:
  1204   000570  EFC0  F002         	goto	l2022
  1205   000574                     l2020:
  1206                           
  1207                           ; BSR set to: 0
  1208   000574  0769               	decf	___xxtofl@exp& (0+255),f,b
  1209   000576  90D8               	bcf	status,0,c
  1210   000578  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  1211   00057A  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  1212   00057C  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  1213   00057E  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  1214   000580                     l2022:
  1215                           
  1216                           ; BSR set to: 0
  1217   000580  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  1218   000582  EFC5  F002         	goto	u1841
  1219   000586  EFC7  F002         	goto	u1840
  1220   00058A                     u1841:
  1221   00058A  EFCF  F002         	goto	l926
  1222   00058E                     u1840:
  1223   00058E                     
  1224                           ; BSR set to: 0
  1225   00058E  0E02               	movlw	2
  1226   000590  6169               	cpfslt	___xxtofl@exp& (0+255),b
  1227   000592  EFCD  F002         	goto	u1851
  1228   000596  EFCF  F002         	goto	u1850
  1229   00059A                     u1851:
  1230   00059A  EFBA  F002         	goto	l2020
  1231   00059E                     u1850:
  1232   00059E                     l926:
  1233                           
  1234                           ; BSR set to: 0
  1235   00059E  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  1236   0005A0  EFD4  F002         	goto	u1861
  1237   0005A4  EFD6  F002         	goto	u1860
  1238   0005A8                     u1861:
  1239   0005A8  EFD7  F002         	goto	l2028
  1240   0005AC                     u1860:
  1241   0005AC                     
  1242                           ; BSR set to: 0
  1243   0005AC  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  1244   0005AE                     l2028:
  1245                           
  1246                           ; BSR set to: 0
  1247   0005AE  90D8               	bcf	status,0,c
  1248   0005B0  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  1249   0005B2                     
  1250                           ; BSR set to: 0
  1251   0005B2  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  1252   0005B6  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  1253   0005B8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  1254   0005BA  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  1255   0005BC  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  1256   0005C0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  1257   0005C2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  1258   0005C4  6B64               	clrf	??___xxtofl& (0+255),b
  1259   0005C6  5164               	movf	??___xxtofl& (0+255),w,b
  1260   0005C8  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  1261   0005CA  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  1262   0005CC  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  1263   0005CE  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  1264   0005D0  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  1265   0005D2  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  1266   0005D4  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  1267   0005D6                     
  1268                           ; BSR set to: 0
  1269   0005D6  5168               	movf	___xxtofl@sign& (0+255),w,b
  1270   0005D8  B4D8               	btfsc	status,2,c
  1271   0005DA  EFF1  F002         	goto	u1871
  1272   0005DE  EFF3  F002         	goto	u1870
  1273   0005E2                     u1871:
  1274   0005E2  EFFB  F002         	goto	l2038
  1275   0005E6                     u1870:
  1276   0005E6                     
  1277                           ; BSR set to: 0
  1278   0005E6  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1279   0005E8  EFFA  F002         	goto	u1880
  1280   0005EC  EFF8  F002         	goto	u1881
  1281   0005F0                     u1881:
  1282   0005F0  EFFB  F002         	goto	l2038
  1283   0005F4                     u1880:
  1284   0005F4                     
  1285                           ; BSR set to: 0
  1286   0005F4  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  1287   0005F6                     l2038:
  1288                           
  1289                           ; BSR set to: 0
  1290   0005F6  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  1291   0005FA  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  1292   0005FE  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  1293   000602  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  1294   000606                     l915:
  1295                           
  1296                           ; BSR set to: 0
  1297   000606  0012               	return		;funcret
  1298   000608                     __end_of___xxtofl:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function ___fldiv *****************
  1302 ;; Defined at:
  1303 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  b               4   14[BANK0 ] unsigned char 
  1306 ;;  a               4   18[BANK0 ] unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  grs             4   33[BANK0 ] unsigned long 
  1309 ;;  rem             4   26[BANK0 ] unsigned long 
  1310 ;;  new_exp         2   31[BANK0 ] short 
  1311 ;;  aexp            1   38[BANK0 ] unsigned char 
  1312 ;;  bexp            1   37[BANK0 ] unsigned char 
  1313 ;;  sign            1   30[BANK0 ] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  4   14[BANK0 ] unsigned char 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1323 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1327 ;;Total ram usage:       25 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 4
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_get_hour
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text6
  1338   0000B4                     __ptext6:
  1339                           	callstack 0
  1340   0000B4                     ___fldiv:
  1341                           	callstack 25
  1342   0000B4  0100               	movlb	0	; () banked
  1343   0000B6  5171               	movf	(___fldiv@b+3)& (0+255),w,b
  1344   0000B8  0B80               	andlw	128
  1345   0000BA  6F7E               	movwf	___fldiv@sign& (0+255),b
  1346   0000BC  5171               	movf	(___fldiv@b+3)& (0+255),w,b
  1347   0000BE  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
  1348   0000C0  6F85               	movwf	___fldiv@bexp& (0+255),b
  1349   0000C2                     
  1350                           ; BSR set to: 0
  1351   0000C2  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
  1352   0000C4  EF66  F000         	goto	u951
  1353   0000C8  EF68  F000         	goto	u950
  1354   0000CC                     u951:
  1355   0000CC  EF69  F000         	goto	l1506
  1356   0000D0                     u950:
  1357   0000D0                     
  1358                           ; BSR set to: 0
  1359   0000D0  8185               	bsf	___fldiv@bexp& (0+255),0,b
  1360   0000D2                     l1506:
  1361                           
  1362                           ; BSR set to: 0
  1363   0000D2  5185               	movf	___fldiv@bexp& (0+255),w,b
  1364   0000D4  B4D8               	btfsc	status,2,c
  1365   0000D6  EF6F  F000         	goto	u961
  1366   0000DA  EF71  F000         	goto	u960
  1367   0000DE                     u961:
  1368   0000DE  EF86  F000         	goto	l1516
  1369   0000E2                     u960:
  1370   0000E2                     
  1371                           ; BSR set to: 0
  1372   0000E2  2985               	incf	___fldiv@bexp& (0+255),w,b
  1373   0000E4  A4D8               	btfss	status,2,c
  1374   0000E6  EF77  F000         	goto	u971
  1375   0000EA  EF79  F000         	goto	u970
  1376   0000EE                     u971:
  1377   0000EE  EF81  F000         	goto	l1512
  1378   0000F2                     u970:
  1379   0000F2                     
  1380                           ; BSR set to: 0
  1381   0000F2  0E00               	movlw	0
  1382   0000F4  6F6E               	movwf	___fldiv@b& (0+255),b
  1383   0000F6  0E00               	movlw	0
  1384   0000F8  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1385   0000FA  0E00               	movlw	0
  1386   0000FC  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1387   0000FE  0E00               	movlw	0
  1388   000100  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1389   000102                     l1512:
  1390                           
  1391                           ; BSR set to: 0
  1392   000102  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
  1393   000104                     
  1394                           ; BSR set to: 0
  1395   000104  0E00               	movlw	0
  1396   000106  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1397   000108  EF8E  F000         	goto	l1518
  1398   00010C                     l1516:
  1399                           
  1400                           ; BSR set to: 0
  1401   00010C  0E00               	movlw	0
  1402   00010E  6F6E               	movwf	___fldiv@b& (0+255),b
  1403   000110  0E00               	movlw	0
  1404   000112  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1405   000114  0E00               	movlw	0
  1406   000116  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1407   000118  0E00               	movlw	0
  1408   00011A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1409   00011C                     l1518:
  1410                           
  1411                           ; BSR set to: 0
  1412   00011C  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1413   00011E  0B80               	andlw	128
  1414   000120  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
  1415   000122                     
  1416                           ; BSR set to: 0
  1417   000122  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1418   000124  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
  1419   000126  6F86               	movwf	___fldiv@aexp& (0+255),b
  1420   000128                     
  1421                           ; BSR set to: 0
  1422   000128  AF74               	btfss	(___fldiv@a+2)& (0+255),7,b
  1423   00012A  EF99  F000         	goto	u981
  1424   00012E  EF9B  F000         	goto	u980
  1425   000132                     u981:
  1426   000132  EF9C  F000         	goto	l1526
  1427   000136                     u980:
  1428   000136                     
  1429                           ; BSR set to: 0
  1430   000136  8186               	bsf	___fldiv@aexp& (0+255),0,b
  1431   000138                     l1526:
  1432                           
  1433                           ; BSR set to: 0
  1434   000138  5186               	movf	___fldiv@aexp& (0+255),w,b
  1435   00013A  B4D8               	btfsc	status,2,c
  1436   00013C  EFA2  F000         	goto	u991
  1437   000140  EFA4  F000         	goto	u990
  1438   000144                     u991:
  1439   000144  EFB9  F000         	goto	l1536
  1440   000148                     u990:
  1441   000148                     
  1442                           ; BSR set to: 0
  1443   000148  2986               	incf	___fldiv@aexp& (0+255),w,b
  1444   00014A  A4D8               	btfss	status,2,c
  1445   00014C  EFAA  F000         	goto	u1001
  1446   000150  EFAC  F000         	goto	u1000
  1447   000154                     u1001:
  1448   000154  EFB4  F000         	goto	l1532
  1449   000158                     u1000:
  1450   000158                     
  1451                           ; BSR set to: 0
  1452   000158  0E00               	movlw	0
  1453   00015A  6F72               	movwf	___fldiv@a& (0+255),b
  1454   00015C  0E00               	movlw	0
  1455   00015E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  1456   000160  0E00               	movlw	0
  1457   000162  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  1458   000164  0E00               	movlw	0
  1459   000166  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  1460   000168                     l1532:
  1461                           
  1462                           ; BSR set to: 0
  1463   000168  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
  1464   00016A                     
  1465                           ; BSR set to: 0
  1466   00016A  0E00               	movlw	0
  1467   00016C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  1468   00016E  EFC1  F000         	goto	l1538
  1469   000172                     l1536:
  1470                           
  1471                           ; BSR set to: 0
  1472   000172  0E00               	movlw	0
  1473   000174  6F72               	movwf	___fldiv@a& (0+255),b
  1474   000176  0E00               	movlw	0
  1475   000178  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  1476   00017A  0E00               	movlw	0
  1477   00017C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  1478   00017E  0E00               	movlw	0
  1479   000180  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  1480   000182                     l1538:
  1481                           
  1482                           ; BSR set to: 0
  1483   000182  5172               	movf	___fldiv@a& (0+255),w,b
  1484   000184  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
  1485   000186  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
  1486   000188  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
  1487   00018A  A4D8               	btfss	status,2,c
  1488   00018C  EFCA  F000         	goto	u1011
  1489   000190  EFCC  F000         	goto	u1010
  1490   000194                     u1011:
  1491   000194  EFE4  F000         	goto	l1550
  1492   000198                     u1010:
  1493   000198                     
  1494                           ; BSR set to: 0
  1495   000198  0E00               	movlw	0
  1496   00019A  6F6E               	movwf	___fldiv@b& (0+255),b
  1497   00019C  0E00               	movlw	0
  1498   00019E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1499   0001A0  0E00               	movlw	0
  1500   0001A2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1501   0001A4  0E00               	movlw	0
  1502   0001A6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1503   0001A8                     
  1504                           ; BSR set to: 0
  1505   0001A8  0E80               	movlw	128
  1506   0001AA  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
  1507   0001AC  0E7F               	movlw	127
  1508   0001AE  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
  1509   0001B0                     l1544:
  1510                           
  1511                           ; BSR set to: 0
  1512   0001B0  517E               	movf	___fldiv@sign& (0+255),w,b
  1513   0001B2  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
  1514   0001B4                     
  1515                           ; BSR set to: 0
  1516   0001B4  C06E  F06E         	movff	___fldiv@b,?___fldiv
  1517   0001B8  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
  1518   0001BC  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
  1519   0001C0  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
  1520   0001C4  EF27  F002         	goto	l839
  1521   0001C8                     l1550:
  1522                           
  1523                           ; BSR set to: 0
  1524   0001C8  5185               	movf	___fldiv@bexp& (0+255),w,b
  1525   0001CA  A4D8               	btfss	status,2,c
  1526   0001CC  EFEA  F000         	goto	u1021
  1527   0001D0  EFEC  F000         	goto	u1020
  1528   0001D4                     u1021:
  1529   0001D4  EFF6  F000         	goto	l1558
  1530   0001D8                     u1020:
  1531   0001D8                     
  1532                           ; BSR set to: 0
  1533   0001D8  0E00               	movlw	0
  1534   0001DA  6F6E               	movwf	?___fldiv& (0+255),b
  1535   0001DC  0E00               	movlw	0
  1536   0001DE  6F6F               	movwf	(?___fldiv+1)& (0+255),b
  1537   0001E0  0E00               	movlw	0
  1538   0001E2  6F70               	movwf	(?___fldiv+2)& (0+255),b
  1539   0001E4  0E00               	movlw	0
  1540   0001E6  6F71               	movwf	(?___fldiv+3)& (0+255),b
  1541   0001E8  EF27  F002         	goto	l839
  1542   0001EC                     l1558:
  1543                           
  1544                           ; BSR set to: 0
  1545   0001EC  5186               	movf	___fldiv@aexp& (0+255),w,b
  1546   0001EE  C085  F076         	movff	___fldiv@bexp,??___fldiv
  1547   0001F2  6B77               	clrf	(??___fldiv+1)& (0+255),b
  1548   0001F4  5F76               	subwf	??___fldiv& (0+255),f,b
  1549   0001F6  0E00               	movlw	0
  1550   0001F8  5B77               	subwfb	(??___fldiv+1)& (0+255),f,b
  1551   0001FA  0E7F               	movlw	127
  1552   0001FC  2576               	addwf	??___fldiv& (0+255),w,b
  1553   0001FE  6F7F               	movwf	___fldiv@new_exp& (0+255),b
  1554   000200  0E00               	movlw	0
  1555   000202  2177               	addwfc	(??___fldiv+1)& (0+255),w,b
  1556   000204  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
  1557   000206                     
  1558                           ; BSR set to: 0
  1559   000206  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
  1560   00020A  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
  1561   00020E  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
  1562   000212  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
  1563   000216                     
  1564                           ; BSR set to: 0
  1565   000216  0E00               	movlw	0
  1566   000218  6F6E               	movwf	___fldiv@b& (0+255),b
  1567   00021A  0E00               	movlw	0
  1568   00021C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1569   00021E  0E00               	movlw	0
  1570   000220  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1571   000222  0E00               	movlw	0
  1572   000224  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1573   000226                     
  1574                           ; BSR set to: 0
  1575   000226  0E00               	movlw	0
  1576   000228  6F81               	movwf	___fldiv@grs& (0+255),b
  1577   00022A  0E00               	movlw	0
  1578   00022C  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
  1579   00022E  0E00               	movlw	0
  1580   000230  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
  1581   000232  0E00               	movlw	0
  1582   000234  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
  1583   000236                     
  1584                           ; BSR set to: 0
  1585   000236  0E00               	movlw	0
  1586   000238  6F86               	movwf	___fldiv@aexp& (0+255),b
  1587   00023A  EF57  F001         	goto	l841
  1588   00023E                     l1568:
  1589                           
  1590                           ; BSR set to: 0
  1591   00023E  5186               	movf	___fldiv@aexp& (0+255),w,b
  1592   000240  B4D8               	btfsc	status,2,c
  1593   000242  EF25  F001         	goto	u1031
  1594   000246  EF27  F001         	goto	u1030
  1595   00024A                     u1031:
  1596   00024A  EF3E  F001         	goto	l1576
  1597   00024E                     u1030:
  1598   00024E                     
  1599                           ; BSR set to: 0
  1600   00024E  90D8               	bcf	status,0,c
  1601   000250  377A               	rlcf	___fldiv@rem& (0+255),f,b
  1602   000252  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  1603   000254  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  1604   000256  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  1605   000258  90D8               	bcf	status,0,c
  1606   00025A  376E               	rlcf	___fldiv@b& (0+255),f,b
  1607   00025C  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  1608   00025E  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
  1609   000260  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
  1610   000262                     
  1611                           ; BSR set to: 0
  1612   000262  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
  1613   000264  EF36  F001         	goto	u1041
  1614   000268  EF38  F001         	goto	u1040
  1615   00026C                     u1041:
  1616   00026C  EF39  F001         	goto	l844
  1617   000270                     u1040:
  1618   000270                     
  1619                           ; BSR set to: 0
  1620   000270  816E               	bsf	___fldiv@b& (0+255),0,b
  1621   000272                     l844:
  1622                           
  1623                           ; BSR set to: 0
  1624   000272  90D8               	bcf	status,0,c
  1625   000274  3781               	rlcf	___fldiv@grs& (0+255),f,b
  1626   000276  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  1627   000278  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  1628   00027A  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  1629   00027C                     l1576:
  1630                           
  1631                           ; BSR set to: 0
  1632   00027C  5172               	movf	___fldiv@a& (0+255),w,b
  1633   00027E  5D7A               	subwf	___fldiv@rem& (0+255),w,b
  1634   000280  5173               	movf	(___fldiv@a+1)& (0+255),w,b
  1635   000282  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  1636   000284  5174               	movf	(___fldiv@a+2)& (0+255),w,b
  1637   000286  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  1638   000288  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1639   00028A  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  1640   00028C  A0D8               	btfss	status,0,c
  1641   00028E  EF4B  F001         	goto	u1051
  1642   000292  EF4D  F001         	goto	u1050
  1643   000296                     u1051:
  1644   000296  EF56  F001         	goto	l1582
  1645   00029A                     u1050:
  1646   00029A                     
  1647                           ; BSR set to: 0
  1648   00029A  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
  1649   00029C                     
  1650                           ; BSR set to: 0
  1651   00029C  5172               	movf	___fldiv@a& (0+255),w,b
  1652   00029E  5F7A               	subwf	___fldiv@rem& (0+255),f,b
  1653   0002A0  5173               	movf	(___fldiv@a+1)& (0+255),w,b
  1654   0002A2  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  1655   0002A4  5174               	movf	(___fldiv@a+2)& (0+255),w,b
  1656   0002A6  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  1657   0002A8  5175               	movf	(___fldiv@a+3)& (0+255),w,b
  1658   0002AA  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  1659   0002AC                     l1582:
  1660                           
  1661                           ; BSR set to: 0
  1662   0002AC  2B86               	incf	___fldiv@aexp& (0+255),f,b
  1663   0002AE                     l841:
  1664                           
  1665                           ; BSR set to: 0
  1666   0002AE  0E19               	movlw	25
  1667   0002B0  6586               	cpfsgt	___fldiv@aexp& (0+255),b
  1668   0002B2  EF5D  F001         	goto	u1061
  1669   0002B6  EF5F  F001         	goto	u1060
  1670   0002BA                     u1061:
  1671   0002BA  EF1F  F001         	goto	l1568
  1672   0002BE                     u1060:
  1673   0002BE                     
  1674                           ; BSR set to: 0
  1675   0002BE  517A               	movf	___fldiv@rem& (0+255),w,b
  1676   0002C0  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  1677   0002C2  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  1678   0002C4  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  1679   0002C6  B4D8               	btfsc	status,2,c
  1680   0002C8  EF68  F001         	goto	u1071
  1681   0002CC  EF6A  F001         	goto	u1070
  1682   0002D0                     u1071:
  1683   0002D0  EF82  F001         	goto	l1594
  1684   0002D4                     u1070:
  1685   0002D4                     
  1686                           ; BSR set to: 0
  1687   0002D4  8181               	bsf	___fldiv@grs& (0+255),0,b
  1688   0002D6  EF82  F001         	goto	l1594
  1689   0002DA                     l1588:
  1690                           
  1691                           ; BSR set to: 0
  1692   0002DA  90D8               	bcf	status,0,c
  1693   0002DC  376E               	rlcf	___fldiv@b& (0+255),f,b
  1694   0002DE  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  1695   0002E0  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
  1696   0002E2  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
  1697   0002E4                     
  1698                           ; BSR set to: 0
  1699   0002E4  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
  1700   0002E6  EF77  F001         	goto	u1081
  1701   0002EA  EF79  F001         	goto	u1080
  1702   0002EE                     u1081:
  1703   0002EE  EF7A  F001         	goto	l850
  1704   0002F2                     u1080:
  1705   0002F2                     
  1706                           ; BSR set to: 0
  1707   0002F2  816E               	bsf	___fldiv@b& (0+255),0,b
  1708   0002F4                     l850:
  1709                           
  1710                           ; BSR set to: 0
  1711   0002F4  90D8               	bcf	status,0,c
  1712   0002F6  3781               	rlcf	___fldiv@grs& (0+255),f,b
  1713   0002F8  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  1714   0002FA  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  1715   0002FC  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  1716   0002FE  077F               	decf	___fldiv@new_exp& (0+255),f,b
  1717   000300  A0D8               	btfss	status,0,c
  1718   000302  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  1719   000304                     l1594:
  1720                           
  1721                           ; BSR set to: 0
  1722   000304  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
  1723   000306  EF87  F001         	goto	u1091
  1724   00030A  EF89  F001         	goto	u1090
  1725   00030E                     u1091:
  1726   00030E  EF6D  F001         	goto	l1588
  1727   000312                     u1090:
  1728   000312                     
  1729                           ; BSR set to: 0
  1730   000312  0E00               	movlw	0
  1731   000314  6F86               	movwf	___fldiv@aexp& (0+255),b
  1732   000316                     
  1733                           ; BSR set to: 0
  1734   000316  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
  1735   000318  EF90  F001         	goto	u1101
  1736   00031C  EF92  F001         	goto	u1100
  1737   000320                     u1101:
  1738   000320  EFB6  F001         	goto	l852
  1739   000324                     u1100:
  1740   000324                     
  1741                           ; BSR set to: 0
  1742   000324  0EFF               	movlw	255
  1743   000326  1581               	andwf	___fldiv@grs& (0+255),w,b
  1744   000328  6F76               	movwf	??___fldiv& (0+255),b
  1745   00032A  0EFF               	movlw	255
  1746   00032C  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
  1747   00032E  6F77               	movwf	(??___fldiv+1)& (0+255),b
  1748   000330  0EFF               	movlw	255
  1749   000332  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
  1750   000334  6F78               	movwf	(??___fldiv+2)& (0+255),b
  1751   000336  0E7F               	movlw	127
  1752   000338  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
  1753   00033A  6F79               	movwf	(??___fldiv+3)& (0+255),b
  1754   00033C  5176               	movf	??___fldiv& (0+255),w,b
  1755   00033E  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
  1756   000340  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
  1757   000342  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
  1758   000344  B4D8               	btfsc	status,2,c
  1759   000346  EFA7  F001         	goto	u1111
  1760   00034A  EFA9  F001         	goto	u1110
  1761   00034E                     u1111:
  1762   00034E  EFAD  F001         	goto	l853
  1763   000352                     u1110:
  1764   000352                     l1602:
  1765                           
  1766                           ; BSR set to: 0
  1767   000352  0E01               	movlw	1
  1768   000354  6F86               	movwf	___fldiv@aexp& (0+255),b
  1769   000356  EFB6  F001         	goto	l852
  1770   00035A                     l853:
  1771                           
  1772                           ; BSR set to: 0
  1773   00035A  A16E               	btfss	___fldiv@b& (0+255),0,b
  1774   00035C  EFB2  F001         	goto	u1121
  1775   000360  EFB4  F001         	goto	u1120
  1776   000364                     u1121:
  1777   000364  EFB6  F001         	goto	l852
  1778   000368                     u1120:
  1779   000368  EFA9  F001         	goto	l1602
  1780   00036C                     l852:
  1781                           
  1782                           ; BSR set to: 0
  1783   00036C  5186               	movf	___fldiv@aexp& (0+255),w,b
  1784   00036E  B4D8               	btfsc	status,2,c
  1785   000370  EFBC  F001         	goto	u1131
  1786   000374  EFBE  F001         	goto	u1130
  1787   000378                     u1131:
  1788   000378  EFE2  F001         	goto	l1614
  1789   00037C                     u1130:
  1790   00037C                     
  1791                           ; BSR set to: 0
  1792   00037C  0E01               	movlw	1
  1793   00037E  276E               	addwf	___fldiv@b& (0+255),f,b
  1794   000380  0E00               	movlw	0
  1795   000382  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
  1796   000384  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
  1797   000386  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
  1798   000388                     
  1799                           ; BSR set to: 0
  1800   000388  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
  1801   00038A  EFC9  F001         	goto	u1141
  1802   00038E  EFCB  F001         	goto	u1140
  1803   000392                     u1141:
  1804   000392  EFE2  F001         	goto	l1614
  1805   000396                     u1140:
  1806   000396                     
  1807                           ; BSR set to: 0
  1808   000396  C06E  F076         	movff	___fldiv@b,??___fldiv
  1809   00039A  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
  1810   00039E  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
  1811   0003A2  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
  1812   0003A6  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
  1813   0003A8  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
  1814   0003AA  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
  1815   0003AC  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
  1816   0003AE  3376               	rrcf	??___fldiv& (0+255),f,b
  1817   0003B0  C076  F06E         	movff	??___fldiv,___fldiv@b
  1818   0003B4  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
  1819   0003B8  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
  1820   0003BC  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
  1821   0003C0                     
  1822                           ; BSR set to: 0
  1823   0003C0  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
  1824   0003C2  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  1825   0003C4                     l1614:
  1826                           
  1827                           ; BSR set to: 0
  1828   0003C4  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  1829   0003C6  EFED  F001         	goto	u1151
  1830   0003CA  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  1831   0003CC  E108               	bnz	u1150
  1832   0003CE  297F               	incf	___fldiv@new_exp& (0+255),w,b
  1833   0003D0  A0D8               	btfss	status,0,c
  1834   0003D2  EFED  F001         	goto	u1151
  1835   0003D6  EFEF  F001         	goto	u1150
  1836   0003DA                     u1151:
  1837   0003DA  EFFA  F001         	goto	l1618
  1838   0003DE                     u1150:
  1839   0003DE                     
  1840                           ; BSR set to: 0
  1841   0003DE  0E00               	movlw	0
  1842   0003E0  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
  1843   0003E2  697F               	setf	___fldiv@new_exp& (0+255),b
  1844   0003E4  0E00               	movlw	0
  1845   0003E6  6F6E               	movwf	___fldiv@b& (0+255),b
  1846   0003E8  0E00               	movlw	0
  1847   0003EA  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1848   0003EC  0E00               	movlw	0
  1849   0003EE  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1850   0003F0  0E00               	movlw	0
  1851   0003F2  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1852   0003F4                     l1618:
  1853                           
  1854                           ; BSR set to: 0
  1855   0003F4  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  1856   0003F6  EF07  F002         	goto	u1160
  1857   0003FA  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  1858   0003FC  E106               	bnz	u1161
  1859   0003FE  057F               	decf	___fldiv@new_exp& (0+255),w,b
  1860   000400  B0D8               	btfsc	status,0,c
  1861   000402  EF05  F002         	goto	u1161
  1862   000406  EF07  F002         	goto	u1160
  1863   00040A                     u1161:
  1864   00040A  EF15  F002         	goto	l1622
  1865   00040E                     u1160:
  1866   00040E                     
  1867                           ; BSR set to: 0
  1868   00040E  0E00               	movlw	0
  1869   000410  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
  1870   000412  0E00               	movlw	0
  1871   000414  6F7F               	movwf	___fldiv@new_exp& (0+255),b
  1872   000416  0E00               	movlw	0
  1873   000418  6F6E               	movwf	___fldiv@b& (0+255),b
  1874   00041A  0E00               	movlw	0
  1875   00041C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
  1876   00041E  0E00               	movlw	0
  1877   000420  6F70               	movwf	(___fldiv@b+2)& (0+255),b
  1878   000422  0E00               	movlw	0
  1879   000424  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1880   000426  0E00               	movlw	0
  1881   000428  6F7E               	movwf	___fldiv@sign& (0+255),b
  1882   00042A                     l1622:
  1883                           
  1884                           ; BSR set to: 0
  1885   00042A  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
  1886   00042E                     
  1887                           ; BSR set to: 0
  1888   00042E  A185               	btfss	___fldiv@bexp& (0+255),0,b
  1889   000430  EF1C  F002         	goto	u1171
  1890   000434  EF1E  F002         	goto	u1170
  1891   000438                     u1171:
  1892   000438  EF21  F002         	goto	l1628
  1893   00043C                     u1170:
  1894   00043C                     
  1895                           ; BSR set to: 0
  1896   00043C  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
  1897   00043E  EF22  F002         	goto	l1630
  1898   000442                     l1628:
  1899                           
  1900                           ; BSR set to: 0
  1901   000442  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
  1902   000444                     l1630:
  1903                           
  1904                           ; BSR set to: 0
  1905   000444  90D8               	bcf	status,0,c
  1906   000446  3185               	rrcf	___fldiv@bexp& (0+255),w,b
  1907   000448  6F71               	movwf	(___fldiv@b+3)& (0+255),b
  1908   00044A  EFD8  F000         	goto	l1544
  1909   00044E                     l839:
  1910                           
  1911                           ; BSR set to: 0
  1912   00044E  0012               	return		;funcret
  1913   000450                     __end_of___fldiv:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _get_day *****************
  1917 ;; Defined at:
  1918 ;;		line 64 in file "timers.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  2    0[BANK0 ] unsigned int 
  1925 ;; Registers used:
  1926 ;;		None
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1935 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1936 ;;Total ram usage:        2 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 4
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text7
  1947   000E94                     __ptext7:
  1948                           	callstack 0
  1949   000E94                     _get_day:
  1950                           	callstack 26
  1951   000E94                     
  1952                           ;timers.c: 65:     return day;
  1953   000E94  C046  F060         	movff	_day,?_get_day
  1954   000E98  C047  F061         	movff	_day+1,?_get_day+1
  1955   000E9C  0012               	return		;funcret
  1956   000E9E                     __end_of_get_day:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function ___fltol *****************
  1960 ;; Defined at:
  1961 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  f1              4    0[BANK0 ] unsigned int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  exp1            1    9[BANK0 ] unsigned char 
  1966 ;;  sign1           1    8[BANK0 ] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  4    0[BANK0 ] long 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;Total ram usage:       10 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 4
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text8
  1991   000732                     __ptext8:
  1992                           	callstack 0
  1993   000732                     ___fltol:
  1994                           	callstack 26
  1995   000732  0100               	movlb	0	; () banked
  1996   000734  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  1997   000736  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  1998   000738  6F69               	movwf	___fltol@exp1& (0+255),b
  1999   00073A  5169               	movf	___fltol@exp1& (0+255),w,b
  2000   00073C  A4D8               	btfss	status,2,c
  2001   00073E  EFA3  F003         	goto	u2091
  2002   000742  EFA5  F003         	goto	u2090
  2003   000746                     u2091:
  2004   000746  EFAF  F003         	goto	l2168
  2005   00074A                     u2090:
  2006   00074A                     l2164:
  2007                           
  2008                           ; BSR set to: 0
  2009   00074A  0E00               	movlw	0
  2010   00074C  6F60               	movwf	?___fltol& (0+255),b
  2011   00074E  0E00               	movlw	0
  2012   000750  6F61               	movwf	(?___fltol+1)& (0+255),b
  2013   000752  0E00               	movlw	0
  2014   000754  6F62               	movwf	(?___fltol+2)& (0+255),b
  2015   000756  0E00               	movlw	0
  2016   000758  6F63               	movwf	(?___fltol+3)& (0+255),b
  2017   00075A  EF1C  F004         	goto	l554
  2018   00075E                     l2168:
  2019                           
  2020                           ; BSR set to: 0
  2021   00075E  C060  F064         	movff	___fltol@f1,??___fltol
  2022   000762  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  2023   000766  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  2024   00076A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  2025   00076E  0E20               	movlw	32
  2026   000770  EFBF  F003         	goto	u2100
  2027   000774                     u2105:
  2028   000774  90D8               	bcf	status,0,c
  2029   000776  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  2030   000778  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  2031   00077A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  2032   00077C  3364               	rrcf	??___fltol& (0+255),f,b
  2033   00077E                     u2100:
  2034   00077E  2EE8               	decfsz	wreg,f,c
  2035   000780  EFBA  F003         	goto	u2105
  2036   000784  5164               	movf	??___fltol& (0+255),w,b
  2037   000786  6F68               	movwf	___fltol@sign1& (0+255),b
  2038   000788                     
  2039                           ; BSR set to: 0
  2040   000788  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  2041   00078A                     
  2042                           ; BSR set to: 0
  2043   00078A  0EFF               	movlw	255
  2044   00078C  1760               	andwf	___fltol@f1& (0+255),f,b
  2045   00078E  0EFF               	movlw	255
  2046   000790  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  2047   000792  0EFF               	movlw	255
  2048   000794  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  2049   000796  0E00               	movlw	0
  2050   000798  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  2051   00079A                     
  2052                           ; BSR set to: 0
  2053   00079A  0E96               	movlw	150
  2054   00079C  5F69               	subwf	___fltol@exp1& (0+255),f,b
  2055   00079E                     
  2056                           ; BSR set to: 0
  2057   00079E  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  2058   0007A0  EFD6  F003         	goto	u2110
  2059   0007A4  EFD4  F003         	goto	u2111
  2060   0007A8                     u2111:
  2061   0007A8  EFEC  F003         	goto	l2188
  2062   0007AC                     u2110:
  2063   0007AC                     
  2064                           ; BSR set to: 0
  2065   0007AC  5169               	movf	___fltol@exp1& (0+255),w,b
  2066   0007AE  0A80               	xorlw	128
  2067   0007B0  0F97               	addlw	151
  2068   0007B2  B0D8               	btfsc	status,0,c
  2069   0007B4  EFDE  F003         	goto	u2121
  2070   0007B8  EFE0  F003         	goto	u2120
  2071   0007BC                     u2121:
  2072   0007BC  EFE2  F003         	goto	l2184
  2073   0007C0                     u2120:
  2074   0007C0  EFA5  F003         	goto	l2164
  2075   0007C4                     l2184:
  2076                           
  2077                           ; BSR set to: 0
  2078   0007C4  90D8               	bcf	status,0,c
  2079   0007C6  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  2080   0007C8  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  2081   0007CA  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  2082   0007CC  3360               	rrcf	___fltol@f1& (0+255),f,b
  2083   0007CE                     
  2084                           ; BSR set to: 0
  2085   0007CE  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  2086   0007D0  EFE2  F003         	goto	l2184
  2087   0007D4  EF04  F004         	goto	l2198
  2088   0007D8                     l2188:
  2089                           
  2090                           ; BSR set to: 0
  2091   0007D8  0E1F               	movlw	31
  2092   0007DA  6569               	cpfsgt	___fltol@exp1& (0+255),b
  2093   0007DC  EFF2  F003         	goto	u2131
  2094   0007E0  EFF4  F003         	goto	u2130
  2095   0007E4                     u2131:
  2096   0007E4  EFFC  F003         	goto	l2196
  2097   0007E8                     u2130:
  2098   0007E8  EFA5  F003         	goto	l2164
  2099   0007EC                     l2194:
  2100                           
  2101                           ; BSR set to: 0
  2102   0007EC  90D8               	bcf	status,0,c
  2103   0007EE  3760               	rlcf	___fltol@f1& (0+255),f,b
  2104   0007F0  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  2105   0007F2  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  2106   0007F4  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  2107   0007F6  0769               	decf	___fltol@exp1& (0+255),f,b
  2108   0007F8                     l2196:
  2109                           
  2110                           ; BSR set to: 0
  2111   0007F8  5169               	movf	___fltol@exp1& (0+255),w,b
  2112   0007FA  A4D8               	btfss	status,2,c
  2113   0007FC  EF02  F004         	goto	u2141
  2114   000800  EF04  F004         	goto	u2140
  2115   000804                     u2141:
  2116   000804  EFF6  F003         	goto	l2194
  2117   000808                     u2140:
  2118   000808                     l2198:
  2119                           
  2120                           ; BSR set to: 0
  2121   000808  5168               	movf	___fltol@sign1& (0+255),w,b
  2122   00080A  B4D8               	btfsc	status,2,c
  2123   00080C  EF0A  F004         	goto	u2151
  2124   000810  EF0C  F004         	goto	u2150
  2125   000814                     u2151:
  2126   000814  EF14  F004         	goto	l2202
  2127   000818                     u2150:
  2128   000818                     
  2129                           ; BSR set to: 0
  2130   000818  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  2131   00081A  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  2132   00081C  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  2133   00081E  6D60               	negf	___fltol@f1& (0+255),b
  2134   000820  0E00               	movlw	0
  2135   000822  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  2136   000824  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  2137   000826  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  2138   000828                     l2202:
  2139                           
  2140                           ; BSR set to: 0
  2141   000828  C060  F060         	movff	___fltol@f1,?___fltol
  2142   00082C  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  2143   000830  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  2144   000834  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  2145   000838                     l554:
  2146                           
  2147                           ; BSR set to: 0
  2148   000838  0012               	return		;funcret
  2149   00083A                     __end_of___fltol:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function ___flge *****************
  2153 ;; Defined at:
  2154 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  ff1             4    0[BANK0 ] long 
  2157 ;;  ff2             4    4[BANK0 ] long 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;		None               void
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2169 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;Total ram usage:       12 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 4
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text9
  2184   00083A                     __ptext9:
  2185                           	callstack 0
  2186   00083A                     ___flge:
  2187                           	callstack 26
  2188   00083A  0E00               	movlw	0
  2189   00083C  0100               	movlb	0	; () banked
  2190   00083E  1560               	andwf	___flge@ff1& (0+255),w,b
  2191   000840  6F68               	movwf	??___flge& (0+255),b
  2192   000842  0E00               	movlw	0
  2193   000844  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  2194   000846  6F69               	movwf	(??___flge+1)& (0+255),b
  2195   000848  0E80               	movlw	128
  2196   00084A  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  2197   00084C  6F6A               	movwf	(??___flge+2)& (0+255),b
  2198   00084E  0E7F               	movlw	127
  2199   000850  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  2200   000852  6F6B               	movwf	(??___flge+3)& (0+255),b
  2201   000854  5168               	movf	??___flge& (0+255),w,b
  2202   000856  1169               	iorwf	(??___flge+1)& (0+255),w,b
  2203   000858  116A               	iorwf	(??___flge+2)& (0+255),w,b
  2204   00085A  116B               	iorwf	(??___flge+3)& (0+255),w,b
  2205   00085C  A4D8               	btfss	status,2,c
  2206   00085E  EF33  F004         	goto	u2041
  2207   000862  EF35  F004         	goto	u2040
  2208   000866                     u2041:
  2209   000866  EF3D  F004         	goto	l2144
  2210   00086A                     u2040:
  2211   00086A                     
  2212                           ; BSR set to: 0
  2213   00086A  0E00               	movlw	0
  2214   00086C  6F60               	movwf	___flge@ff1& (0+255),b
  2215   00086E  0E00               	movlw	0
  2216   000870  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2217   000872  0E00               	movlw	0
  2218   000874  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2219   000876  0E00               	movlw	0
  2220   000878  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2221   00087A                     l2144:
  2222                           
  2223                           ; BSR set to: 0
  2224   00087A  0E00               	movlw	0
  2225   00087C  1564               	andwf	___flge@ff2& (0+255),w,b
  2226   00087E  6F68               	movwf	??___flge& (0+255),b
  2227   000880  0E00               	movlw	0
  2228   000882  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  2229   000884  6F69               	movwf	(??___flge+1)& (0+255),b
  2230   000886  0E80               	movlw	128
  2231   000888  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  2232   00088A  6F6A               	movwf	(??___flge+2)& (0+255),b
  2233   00088C  0E7F               	movlw	127
  2234   00088E  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  2235   000890  6F6B               	movwf	(??___flge+3)& (0+255),b
  2236   000892  5168               	movf	??___flge& (0+255),w,b
  2237   000894  1169               	iorwf	(??___flge+1)& (0+255),w,b
  2238   000896  116A               	iorwf	(??___flge+2)& (0+255),w,b
  2239   000898  116B               	iorwf	(??___flge+3)& (0+255),w,b
  2240   00089A  A4D8               	btfss	status,2,c
  2241   00089C  EF52  F004         	goto	u2051
  2242   0008A0  EF54  F004         	goto	u2050
  2243   0008A4                     u2051:
  2244   0008A4  EF5C  F004         	goto	l2148
  2245   0008A8                     u2050:
  2246   0008A8                     
  2247                           ; BSR set to: 0
  2248   0008A8  0E00               	movlw	0
  2249   0008AA  6F64               	movwf	___flge@ff2& (0+255),b
  2250   0008AC  0E00               	movlw	0
  2251   0008AE  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2252   0008B0  0E00               	movlw	0
  2253   0008B2  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2254   0008B4  0E00               	movlw	0
  2255   0008B6  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2256   0008B8                     l2148:
  2257                           
  2258                           ; BSR set to: 0
  2259   0008B8  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  2260   0008BA  EF61  F004         	goto	u2061
  2261   0008BE  EF63  F004         	goto	u2060
  2262   0008C2                     u2061:
  2263   0008C2  EF6C  F004         	goto	l2152
  2264   0008C6                     u2060:
  2265   0008C6                     
  2266                           ; BSR set to: 0
  2267   0008C6  6D60               	negf	___flge@ff1& (0+255),b
  2268   0008C8  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  2269   0008CA  B0D8               	btfsc	status,0,c
  2270   0008CC  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  2271   0008CE  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  2272   0008D0  B0D8               	btfsc	status,0,c
  2273   0008D2  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  2274   0008D4  0E80               	movlw	128
  2275   0008D6  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  2276   0008D8                     l2152:
  2277                           
  2278                           ; BSR set to: 0
  2279   0008D8  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  2280   0008DA  EF71  F004         	goto	u2071
  2281   0008DE  EF73  F004         	goto	u2070
  2282   0008E2                     u2071:
  2283   0008E2  EF7C  F004         	goto	l522
  2284   0008E6                     u2070:
  2285   0008E6                     
  2286                           ; BSR set to: 0
  2287   0008E6  6D64               	negf	___flge@ff2& (0+255),b
  2288   0008E8  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  2289   0008EA  B0D8               	btfsc	status,0,c
  2290   0008EC  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  2291   0008EE  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  2292   0008F0  B0D8               	btfsc	status,0,c
  2293   0008F2  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  2294   0008F4  0E80               	movlw	128
  2295   0008F6  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  2296   0008F8                     l522:
  2297                           
  2298                           ; BSR set to: 0
  2299   0008F8  0E00               	movlw	0
  2300   0008FA  1B60               	xorwf	___flge@ff1& (0+255),f,b
  2301   0008FC  0E00               	movlw	0
  2302   0008FE  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  2303   000900  0E00               	movlw	0
  2304   000902  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  2305   000904  0E80               	movlw	128
  2306   000906  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  2307   000908  0E00               	movlw	0
  2308   00090A  1B64               	xorwf	___flge@ff2& (0+255),f,b
  2309   00090C  0E00               	movlw	0
  2310   00090E  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  2311   000910  0E00               	movlw	0
  2312   000912  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  2313   000914  0E80               	movlw	128
  2314   000916  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  2315   000918  5164               	movf	___flge@ff2& (0+255),w,b
  2316   00091A  5D60               	subwf	___flge@ff1& (0+255),w,b
  2317   00091C  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  2318   00091E  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  2319   000920  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  2320   000922  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  2321   000924  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  2322   000926  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  2323   000928  B0D8               	btfsc	status,0,c
  2324   00092A  EF99  F004         	goto	u2081
  2325   00092E  EF9B  F004         	goto	u2080
  2326   000932                     u2081:
  2327   000932  EF9E  F004         	goto	l2158
  2328   000936                     u2080:
  2329   000936                     
  2330                           ; BSR set to: 0
  2331   000936  90D8               	bcf	status,0,c
  2332   000938  EF9F  F004         	goto	l527
  2333   00093C                     l2158:
  2334                           
  2335                           ; BSR set to: 0
  2336   00093C  80D8               	bsf	status,0,c
  2337   00093E                     l527:
  2338                           
  2339                           ; BSR set to: 0
  2340   00093E  0012               	return		;funcret
  2341   000940                     __end_of___flge:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function _Timer0_init *****************
  2345 ;; Defined at:
  2346 ;;		line 16 in file "timers.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  init_test_mo    2    0[BANK0 ] unsigned short 
  2349 ;;  current_day     2    2[BANK0 ] unsigned int 
  2350 ;;  current_mont    2    4[BANK0 ] unsigned int 
  2351 ;;  leap_year       2    6[BANK0 ] unsigned int 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2363 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;Total ram usage:        8 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 4
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text10
  2378   000C18                     __ptext10:
  2379                           	callstack 0
  2380   000C18                     _Timer0_init:
  2381                           	callstack 26
  2382   000C18                     
  2383                           ;timers.c: 16: void Timer0_init(unsigned short init_test_mode,unsigned int current_day,u
      +                          nsigned int current_month, unsigned int leap_year);timers.c: 17: {;timers.c: 18:     tes
      +                          t_mode = init_test_mode;
  2384   000C18  C060  F04A         	movff	Timer0_init@init_test_mode,_test_mode
  2385   000C1C  C061  F04B         	movff	Timer0_init@init_test_mode+1,_test_mode+1
  2386                           
  2387                           ;timers.c: 19:     day = current_day;
  2388   000C20  C062  F046         	movff	Timer0_init@current_day,_day
  2389   000C24  C063  F047         	movff	Timer0_init@current_day+1,_day+1
  2390                           
  2391                           ;timers.c: 20:     month = current_month;
  2392   000C28  C064  F044         	movff	Timer0_init@current_month,_month
  2393   000C2C  C065  F045         	movff	Timer0_init@current_month+1,_month+1
  2394   000C30                     
  2395                           ;timers.c: 21:     leap_year_count = 3 - leap_year;
  2396   000C30  0100               	movlb	0	; () banked
  2397   000C32  5166               	movf	Timer0_init@leap_year& (0+255),w,b
  2398   000C34  0803               	sublw	3
  2399   000C36  6E48               	movwf	_leap_year_count^0,c
  2400   000C38  5167               	movf	(Timer0_init@leap_year+1)& (0+255),w,b
  2401   000C3A  A0D8               	btfss	status,0,c
  2402   000C3C  2AE8               	incf	wreg,f,c
  2403   000C3E  0800               	sublw	0
  2404   000C40  6E49               	movwf	(_leap_year_count+1)^0,c
  2405   000C42                     
  2406                           ; BSR set to: 0
  2407                           ;timers.c: 23:     T0CON1bits.T0CS=0b010;
  2408   000C42  50D6               	movf	214,w,c	;volatile
  2409   000C44  0B1F               	andlw	-225
  2410   000C46  0940               	iorlw	64
  2411   000C48  6ED6               	movwf	214,c	;volatile
  2412   000C4A                     
  2413                           ; BSR set to: 0
  2414                           ;timers.c: 24:     T0CON1bits.T0ASYNC=1;
  2415   000C4A  88D6               	bsf	214,4,c	;volatile
  2416   000C4C                     
  2417                           ; BSR set to: 0
  2418                           ;timers.c: 26:     T0CON0bits.T016BIT=1;
  2419   000C4C  88D5               	bsf	213,4,c	;volatile
  2420   000C4E                     
  2421                           ; BSR set to: 0
  2422                           ;timers.c: 28:     if(test_mode == 0){
  2423   000C4E  504A               	movf	_test_mode^0,w,c
  2424   000C50  104B               	iorwf	(_test_mode+1)^0,w,c
  2425   000C52  A4D8               	btfss	status,2,c
  2426   000C54  EF2E  F006         	goto	u1981
  2427   000C58  EF30  F006         	goto	u1980
  2428   000C5C                     u1981:
  2429   000C5C  EF3A  F006         	goto	l2094
  2430   000C60                     u1980:
  2431   000C60                     
  2432                           ; BSR set to: 0
  2433                           ;timers.c: 30:         T0CON1bits.T0CKPS=8;
  2434   000C60  50D6               	movf	214,w,c	;volatile
  2435   000C62  0BF0               	andlw	-16
  2436   000C64  0908               	iorlw	8
  2437   000C66  6ED6               	movwf	214,c	;volatile
  2438                           
  2439                           ;timers.c: 32:         TMR0H = 0b1011;
  2440   000C68  0E0B               	movlw	11
  2441   000C6A  6ED4               	movwf	212,c	;volatile
  2442                           
  2443                           ;timers.c: 33:         TMR0L = 0b11011100;
  2444   000C6C  0EDC               	movlw	220
  2445   000C6E  6ED3               	movwf	211,c	;volatile
  2446                           
  2447                           ;timers.c: 34:     }else{
  2448   000C70  EF40  F006         	goto	l2096
  2449   000C74                     l2094:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;timers.c: 35:         T0CON1bits.T0CKPS=0;
  2453   000C74  0EF0               	movlw	-16
  2454   000C76  16D6               	andwf	214,f,c	;volatile
  2455                           
  2456                           ;timers.c: 37:         TMR0H = 0;
  2457   000C78  0E00               	movlw	0
  2458   000C7A  6ED4               	movwf	212,c	;volatile
  2459                           
  2460                           ;timers.c: 38:         TMR0L = 0;
  2461   000C7C  0E00               	movlw	0
  2462   000C7E  6ED3               	movwf	211,c	;volatile
  2463   000C80                     l2096:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;timers.c: 40:     T0CON0bits.T0EN=1;
  2467   000C80  8ED5               	bsf	213,7,c	;volatile
  2468   000C82                     
  2469                           ; BSR set to: 0
  2470   000C82  0012               	return		;funcret
  2471   000C84                     __end_of_Timer0_init:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function _LEDarray_init *****************
  2475 ;; Defined at:
  2476 ;;		line 8 in file "LEDarray.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		None
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;Total ram usage:        0 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 4
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text11
  2505   000DD4                     __ptext11:
  2506                           	callstack 0
  2507   000DD4                     _LEDarray_init:
  2508                           	callstack 26
  2509   000DD4                     
  2510                           ;LEDarray.c: 14:     TRISGbits.TRISG0 = 0;
  2511   000DD4  9087               	bcf	135,0,c	;volatile
  2512                           
  2513                           ;LEDarray.c: 15:     TRISGbits.TRISG1 = 0;
  2514   000DD6  9287               	bcf	135,1,c	;volatile
  2515                           
  2516                           ;LEDarray.c: 16:     TRISAbits.TRISA2 = 0;
  2517   000DD8  9481               	bcf	129,2,c	;volatile
  2518                           
  2519                           ;LEDarray.c: 17:     TRISFbits.TRISF6 = 0;
  2520   000DDA  9C86               	bcf	134,6,c	;volatile
  2521                           
  2522                           ;LEDarray.c: 18:     TRISAbits.TRISA4 = 0;
  2523   000DDC  9881               	bcf	129,4,c	;volatile
  2524                           
  2525                           ;LEDarray.c: 19:     TRISAbits.TRISA5 = 0;
  2526   000DDE  9A81               	bcf	129,5,c	;volatile
  2527                           
  2528                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2529   000DE0  9086               	bcf	134,0,c	;volatile
  2530                           
  2531                           ;LEDarray.c: 21:     TRISBbits.TRISB0 = 0;
  2532   000DE2  9082               	bcf	130,0,c	;volatile
  2533                           
  2534                           ;LEDarray.c: 22:     TRISBbits.TRISB1 = 0;
  2535   000DE4  9282               	bcf	130,1,c	;volatile
  2536                           
  2537                           ;LEDarray.c: 24:     PORTGbits.RG0 = 1;
  2538   000DE6  808F               	bsf	143,0,c	;volatile
  2539                           
  2540                           ;LEDarray.c: 25:     PORTGbits.RG1 = 1;
  2541   000DE8  828F               	bsf	143,1,c	;volatile
  2542                           
  2543                           ;LEDarray.c: 26:     PORTAbits.RA2 = 1;
  2544   000DEA  8489               	bsf	137,2,c	;volatile
  2545                           
  2546                           ;LEDarray.c: 27:     PORTFbits.RF6 = 1;
  2547   000DEC  8C8E               	bsf	142,6,c	;volatile
  2548                           
  2549                           ;LEDarray.c: 28:     PORTAbits.RA4 = 1;
  2550   000DEE  8889               	bsf	137,4,c	;volatile
  2551                           
  2552                           ;LEDarray.c: 29:     PORTAbits.RA5 = 1;
  2553   000DF0  8A89               	bsf	137,5,c	;volatile
  2554                           
  2555                           ;LEDarray.c: 30:     PORTFbits.RF0 = 1;
  2556   000DF2  808E               	bsf	142,0,c	;volatile
  2557                           
  2558                           ;LEDarray.c: 31:     PORTBbits.RB0 = 1;
  2559   000DF4  808A               	bsf	138,0,c	;volatile
  2560                           
  2561                           ;LEDarray.c: 32:     PORTBbits.RB1 = 1;
  2562   000DF6  828A               	bsf	138,1,c	;volatile
  2563                           
  2564                           ;LEDarray.c: 34:     LATGbits.LATG0 = 0;
  2565   000DF8  907F               	bcf	127,0,c	;volatile
  2566                           
  2567                           ;LEDarray.c: 35:     LATGbits.LATG1 = 0;
  2568   000DFA  927F               	bcf	127,1,c	;volatile
  2569                           
  2570                           ;LEDarray.c: 36:     LATAbits.LATA2 = 0;
  2571   000DFC  9479               	bcf	121,2,c	;volatile
  2572                           
  2573                           ;LEDarray.c: 37:     LATFbits.LATF6 = 0;
  2574   000DFE  9C7E               	bcf	126,6,c	;volatile
  2575                           
  2576                           ;LEDarray.c: 38:     LATAbits.LATA4 = 0;
  2577   000E00  9879               	bcf	121,4,c	;volatile
  2578                           
  2579                           ;LEDarray.c: 39:     LATAbits.LATA5 = 0;
  2580   000E02  9A79               	bcf	121,5,c	;volatile
  2581                           
  2582                           ;LEDarray.c: 40:     LATFbits.LATF0 = 0;
  2583   000E04  907E               	bcf	126,0,c	;volatile
  2584                           
  2585                           ;LEDarray.c: 41:     LATBbits.LATB0 = 0;
  2586   000E06  907A               	bcf	122,0,c	;volatile
  2587                           
  2588                           ;LEDarray.c: 42:     LATBbits.LATB1 = 0;
  2589   000E08  927A               	bcf	122,1,c	;volatile
  2590   000E0A  0012               	return		;funcret
  2591   000E0C                     __end_of_LEDarray_init:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _LEDarray_disp_bin *****************
  2595 ;; Defined at:
  2596 ;;		line 49 in file "LEDarray.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  number          2   10[BANK0 ] unsigned int 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		None
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2610 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2613 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 4
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;;		_LEDarray_disp_dec
  2622 ;;		_LEDarray_disp_PPM
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text12
  2627   000940                     __ptext12:
  2628                           	callstack 0
  2629   000940                     _LEDarray_disp_bin:
  2630                           	callstack 26
  2631   000940                     
  2632                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 54:     if(number & 0b000000001){LATGbits.LATG0 = 1;}else{LATGbits.LATG0 = 0;}
  2633   000940  0100               	movlb	0	; () banked
  2634   000942  A16A               	btfss	LEDarray_disp_bin@number& (0+255),0,b
  2635   000944  EFA6  F004         	goto	u1891
  2636   000948  EFA8  F004         	goto	u1890
  2637   00094C                     u1891:
  2638   00094C  EFAB  F004         	goto	l30
  2639   000950                     u1890:
  2640   000950                     
  2641                           ; BSR set to: 0
  2642   000950  807F               	bsf	127,0,c	;volatile
  2643   000952  EFAC  F004         	goto	l31
  2644   000956                     l30:
  2645                           
  2646                           ; BSR set to: 0
  2647   000956  907F               	bcf	127,0,c	;volatile
  2648   000958                     l31:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;LEDarray.c: 55:     if(number & 0b000000010){LATGbits.LATG1 = 1;}else{LATGbits.LATG1 = 
      +                          0;}
  2652   000958  A36A               	btfss	LEDarray_disp_bin@number& (0+255),1,b
  2653   00095A  EFB1  F004         	goto	u1901
  2654   00095E  EFB3  F004         	goto	u1900
  2655   000962                     u1901:
  2656   000962  EFB6  F004         	goto	l32
  2657   000966                     u1900:
  2658   000966                     
  2659                           ; BSR set to: 0
  2660   000966  827F               	bsf	127,1,c	;volatile
  2661   000968  EFB7  F004         	goto	l33
  2662   00096C                     l32:
  2663                           
  2664                           ; BSR set to: 0
  2665   00096C  927F               	bcf	127,1,c	;volatile
  2666   00096E                     l33:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;LEDarray.c: 56:     if(number & 0b000000100){LATAbits.LATA2 = 1;}else{LATAbits.LATA2 = 
      +                          0;}
  2670   00096E  A56A               	btfss	LEDarray_disp_bin@number& (0+255),2,b
  2671   000970  EFBC  F004         	goto	u1911
  2672   000974  EFBE  F004         	goto	u1910
  2673   000978                     u1911:
  2674   000978  EFC1  F004         	goto	l34
  2675   00097C                     u1910:
  2676   00097C                     
  2677                           ; BSR set to: 0
  2678   00097C  8479               	bsf	121,2,c	;volatile
  2679   00097E  EFC2  F004         	goto	l35
  2680   000982                     l34:
  2681                           
  2682                           ; BSR set to: 0
  2683   000982  9479               	bcf	121,2,c	;volatile
  2684   000984                     l35:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;LEDarray.c: 57:     if(number & 0b000001000){LATFbits.LATF6 = 1;}else{LATFbits.LATF6 = 
      +                          0;}
  2688   000984  A76A               	btfss	LEDarray_disp_bin@number& (0+255),3,b
  2689   000986  EFC7  F004         	goto	u1921
  2690   00098A  EFC9  F004         	goto	u1920
  2691   00098E                     u1921:
  2692   00098E  EFCC  F004         	goto	l36
  2693   000992                     u1920:
  2694   000992                     
  2695                           ; BSR set to: 0
  2696   000992  8C7E               	bsf	126,6,c	;volatile
  2697   000994  EFCD  F004         	goto	l37
  2698   000998                     l36:
  2699                           
  2700                           ; BSR set to: 0
  2701   000998  9C7E               	bcf	126,6,c	;volatile
  2702   00099A                     l37:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;LEDarray.c: 58:     if(number & 0b000010000){LATAbits.LATA4 = 1;}else{LATAbits.LATA4 = 
      +                          0;}
  2706   00099A  A96A               	btfss	LEDarray_disp_bin@number& (0+255),4,b
  2707   00099C  EFD2  F004         	goto	u1931
  2708   0009A0  EFD4  F004         	goto	u1930
  2709   0009A4                     u1931:
  2710   0009A4  EFD7  F004         	goto	l38
  2711   0009A8                     u1930:
  2712   0009A8                     
  2713                           ; BSR set to: 0
  2714   0009A8  8879               	bsf	121,4,c	;volatile
  2715   0009AA  EFD8  F004         	goto	l39
  2716   0009AE                     l38:
  2717                           
  2718                           ; BSR set to: 0
  2719   0009AE  9879               	bcf	121,4,c	;volatile
  2720   0009B0                     l39:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;LEDarray.c: 59:     if(number & 0b000100000){LATAbits.LATA5 = 1;}else{LATAbits.LATA5 = 
      +                          0;}
  2724   0009B0  AB6A               	btfss	LEDarray_disp_bin@number& (0+255),5,b
  2725   0009B2  EFDD  F004         	goto	u1941
  2726   0009B6  EFDF  F004         	goto	u1940
  2727   0009BA                     u1941:
  2728   0009BA  EFE2  F004         	goto	l40
  2729   0009BE                     u1940:
  2730   0009BE                     
  2731                           ; BSR set to: 0
  2732   0009BE  8A79               	bsf	121,5,c	;volatile
  2733   0009C0  EFE3  F004         	goto	l41
  2734   0009C4                     l40:
  2735                           
  2736                           ; BSR set to: 0
  2737   0009C4  9A79               	bcf	121,5,c	;volatile
  2738   0009C6                     l41:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;LEDarray.c: 60:     if(number & 0b001000000){LATFbits.LATF0 = 1;}else{LATFbits.LATF0 = 
      +                          0;}
  2742   0009C6  AD6A               	btfss	LEDarray_disp_bin@number& (0+255),6,b
  2743   0009C8  EFE8  F004         	goto	u1951
  2744   0009CC  EFEA  F004         	goto	u1950
  2745   0009D0                     u1951:
  2746   0009D0  EFED  F004         	goto	l42
  2747   0009D4                     u1950:
  2748   0009D4                     
  2749                           ; BSR set to: 0
  2750   0009D4  807E               	bsf	126,0,c	;volatile
  2751   0009D6  EFEE  F004         	goto	l43
  2752   0009DA                     l42:
  2753                           
  2754                           ; BSR set to: 0
  2755   0009DA  907E               	bcf	126,0,c	;volatile
  2756   0009DC                     l43:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;LEDarray.c: 61:     if(number & 0b010000000){LATBbits.LATB0 = 1;}else{LATBbits.LATB0 = 
      +                          0;}
  2760   0009DC  AF6A               	btfss	LEDarray_disp_bin@number& (0+255),7,b
  2761   0009DE  EFF3  F004         	goto	u1961
  2762   0009E2  EFF5  F004         	goto	u1960
  2763   0009E6                     u1961:
  2764   0009E6  EFF8  F004         	goto	l44
  2765   0009EA                     u1960:
  2766   0009EA                     
  2767                           ; BSR set to: 0
  2768   0009EA  807A               	bsf	122,0,c	;volatile
  2769   0009EC  EFF9  F004         	goto	l45
  2770   0009F0                     l44:
  2771                           
  2772                           ; BSR set to: 0
  2773   0009F0  907A               	bcf	122,0,c	;volatile
  2774   0009F2                     l45:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;LEDarray.c: 62:     if(number & 0b100000000){LATBbits.LATB1 = 1;}else{LATBbits.LATB1 = 
      +                          0;}
  2778   0009F2  A16B               	btfss	(LEDarray_disp_bin@number+1)& (0+255),0,b
  2779   0009F4  EFFE  F004         	goto	u1971
  2780   0009F8  EF00  F005         	goto	u1970
  2781   0009FC                     u1971:
  2782   0009FC  EF03  F005         	goto	l46
  2783   000A00                     u1970:
  2784   000A00                     
  2785                           ; BSR set to: 0
  2786   000A00  827A               	bsf	122,1,c	;volatile
  2787   000A02  EF04  F005         	goto	l48
  2788   000A06                     l46:
  2789                           
  2790                           ; BSR set to: 0
  2791   000A06  927A               	bcf	122,1,c	;volatile
  2792   000A08                     l48:
  2793                           
  2794                           ; BSR set to: 0
  2795   000A08  0012               	return		;funcret
  2796   000A0A                     __end_of_LEDarray_disp_bin:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _Interrupts_init *****************
  2800 ;; Defined at:
  2801 ;;		line 9 in file "interrupts.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		None
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 4
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text13
  2830   000E7A                     __ptext13:
  2831                           	callstack 0
  2832   000E7A                     _Interrupts_init:
  2833                           	callstack 26
  2834   000E7A                     
  2835                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  2836   000E7A  010E               	movlb	14	; () banked
  2837   000E7C  812B               	bsf	43,0,b	;volatile
  2838                           
  2839                           ;interrupts.c: 14:     INTCONbits.IPEN = 1;
  2840   000E7E  8AF2               	bsf	242,5,c	;volatile
  2841                           
  2842                           ;interrupts.c: 15:     INTCONbits.GIEL=1;
  2843   000E80  8CF2               	bsf	242,6,c	;volatile
  2844                           
  2845                           ;interrupts.c: 16:     IPR2bits.C1IP=1;
  2846   000E82  8121               	bsf	33,0,b	;volatile
  2847                           
  2848                           ;interrupts.c: 17:     PIE0bits.TMR0IE=1;
  2849   000E84  8B29               	bsf	41,5,b	;volatile
  2850                           
  2851                           ;interrupts.c: 18:     INTCONbits.GIEH=1;
  2852   000E86  8EF2               	bsf	242,7,c	;volatile
  2853   000E88                     
  2854                           ; BSR set to: 14
  2855   000E88  0012               	return		;funcret
  2856   000E8A                     __end_of_Interrupts_init:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _Comp1_init *****************
  2860 ;; Defined at:
  2861 ;;		line 22 in file "comparator.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 5
  2882 ;; This function calls:
  2883 ;;		_DAC_init
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text14
  2890   000E0C                     __ptext14:
  2891                           	callstack 0
  2892   000E0C                     _Comp1_init:
  2893                           	callstack 25
  2894   000E0C                     
  2895                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  2896   000E0C  8E86               	bsf	134,7,c	;volatile
  2897   000E0E                     
  2898                           ;comparator.c: 25:     CM1NCHbits.NCH=0b011;
  2899   000E0E  010E               	movlb	14	; () banked
  2900   000E10  51D2               	movf	210,w,b	;volatile
  2901   000E12  0BF8               	andlw	-8
  2902   000E14  0903               	iorlw	3
  2903   000E16  6FD2               	movwf	210,b	;volatile
  2904                           
  2905                           ;comparator.c: 26:     CM1PCHbits.PCH=0b101;
  2906   000E18  51D3               	movf	211,w,b	;volatile
  2907   000E1A  0BF8               	andlw	-8
  2908   000E1C  0905               	iorlw	5
  2909   000E1E  6FD3               	movwf	211,b	;volatile
  2910   000E20                     
  2911                           ; BSR set to: 14
  2912                           ;comparator.c: 27:     CM1CON0bits.HYS=1;
  2913   000E20  83D0               	bsf	208,1,b	;volatile
  2914   000E22                     
  2915                           ; BSR set to: 14
  2916                           ;comparator.c: 28:     CM1CON0bits.POL=1;
  2917   000E22  89D0               	bsf	208,4,b	;volatile
  2918   000E24                     
  2919                           ; BSR set to: 14
  2920                           ;comparator.c: 29:     CM1CON1bits.INTP=1;
  2921   000E24  83D1               	bsf	209,1,b	;volatile
  2922   000E26                     
  2923                           ; BSR set to: 14
  2924                           ;comparator.c: 30:     DAC_init();
  2925   000E26  EC33  F007         	call	_DAC_init	;wreg free
  2926   000E2A                     
  2927                           ;comparator.c: 31:     CM1CON0bits.EN=1;
  2928   000E2A  010E               	movlb	14	; () banked
  2929   000E2C  8FD0               	bsf	208,7,b	;volatile
  2930   000E2E                     
  2931                           ; BSR set to: 14
  2932   000E2E  0012               	return		;funcret
  2933   000E30                     __end_of_Comp1_init:
  2934                           	callstack 0
  2935                           
  2936 ;; *************** function _DAC_init *****************
  2937 ;; Defined at:
  2938 ;;		line 7 in file "comparator.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 4
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_Comp1_init
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text15
  2967   000E66                     __ptext15:
  2968                           	callstack 0
  2969   000E66                     _DAC_init:
  2970                           	callstack 25
  2971   000E66                     
  2972                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  2973   000E66  0EF3               	movlw	-13
  2974   000E68  010E               	movlb	14	; () banked
  2975   000E6A  17C6               	andwf	198,f,b	;volatile
  2976   000E6C                     
  2977                           ; BSR set to: 14
  2978                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  2979   000E6C  91C6               	bcf	198,0,b	;volatile
  2980                           
  2981                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  2982   000E6E  51C7               	movf	199,w,b	;volatile
  2983   000E70  0BE0               	andlw	-32
  2984   000E72  0914               	iorlw	20
  2985   000E74  6FC7               	movwf	199,b	;volatile
  2986   000E76                     
  2987                           ; BSR set to: 14
  2988                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  2989   000E76  8FC6               	bsf	198,7,b	;volatile
  2990   000E78                     
  2991                           ; BSR set to: 14
  2992   000E78  0012               	return		;funcret
  2993   000E7A                     __end_of_DAC_init:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _ADC_init *****************
  2997 ;; Defined at:
  2998 ;;		line 9 in file "ADC.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 4
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text16
  3027   000E4C                     __ptext16:
  3028                           	callstack 0
  3029   000E4C                     _ADC_init:
  3030                           	callstack 26
  3031   000E4C                     
  3032                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  3033   000E4C  8681               	bsf	129,3,c	;volatile
  3034                           
  3035                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  3036   000E4E  010E               	movlb	14	; () banked
  3037   000E50  8792               	bsf	146,3,b	;volatile
  3038                           
  3039                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  3040   000E52  010F               	movlb	15	; () banked
  3041   000E54  9958               	bcf	88,4,b	;volatile
  3042   000E56                     
  3043                           ; BSR set to: 15
  3044                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  3045   000E56  0EFC               	movlw	-4
  3046   000E58  1758               	andwf	88,f,b	;volatile
  3047                           
  3048                           ;ADC.c: 17:     ADPCH=0b11;
  3049   000E5A  0E03               	movlw	3
  3050   000E5C  6F5F               	movwf	95,b	;volatile
  3051   000E5E                     
  3052                           ; BSR set to: 15
  3053                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  3054   000E5E  9460               	bcf	96,2,c	;volatile
  3055   000E60                     
  3056                           ; BSR set to: 15
  3057                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  3058   000E60  8860               	bsf	96,4,c	;volatile
  3059   000E62                     
  3060                           ; BSR set to: 15
  3061                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  3062   000E62  8E60               	bsf	96,7,c	;volatile
  3063   000E64                     
  3064                           ; BSR set to: 15
  3065   000E64  0012               	return		;funcret
  3066   000E66                     __end_of_ADC_init:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _HighISR *****************
  3070 ;; Defined at:
  3071 ;;		line 25 in file "interrupts.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:        5 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 3
  3092 ;; This function calls:
  3093 ;;		_increment_time
  3094 ;; This function is called by:
  3095 ;;		Interrupt level 2
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	intcode
  3100   000008                     __pintcode:
  3101                           	callstack 0
  3102   000008                     _HighISR:
  3103                           	callstack 25
  3104                           
  3105                           ; BSR set to: 15
  3106                           ;incstack = 0
  3107   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3108   00000A  CFE1 F028          	movff	fsr1l,??_HighISR+1
  3109   00000E  CFE2 F029          	movff	fsr1h,??_HighISR+2
  3110   000012  CFD9 F02A          	movff	fsr2l,??_HighISR+3
  3111   000016  CFDA F02B          	movff	fsr2h,??_HighISR+4
  3112   00001A                     
  3113                           ;interrupts.c: 27:  if(PIR2bits.C1IF){
  3114   00001A  010E               	movlb	14	; () banked
  3115   00001C  A135               	btfss	53,0,b	;volatile
  3116   00001E  EF13  F000         	goto	i2u170_41
  3117   000022  EF15  F000         	goto	i2u170_40
  3118   000026                     i2u170_41:
  3119   000026  EF28  F000         	goto	i2l1954
  3120   00002A                     i2u170_40:
  3121   00002A                     
  3122                           ; BSR set to: 14
  3123                           ;interrupts.c: 28:         LATDbits.LATD7 = !LATDbits.LATD7;
  3124   00002A  AE7C               	btfss	124,7,c	;volatile
  3125   00002C  EF1A  F000         	goto	i2u171_41
  3126   000030  EF1E  F000         	goto	i2u171_40
  3127   000034                     i2u171_41:
  3128   000034  6A27               	clrf	??_HighISR^0,c
  3129   000036  2A27               	incf	??_HighISR^0,f,c
  3130   000038  EF1F  F000         	goto	i2u172_48
  3131   00003C                     i2u171_40:
  3132   00003C  6A27               	clrf	??_HighISR^0,c
  3133   00003E                     i2u172_48:
  3134   00003E  3227               	rrcf	??_HighISR^0,f,c
  3135   000040  3227               	rrcf	??_HighISR^0,f,c
  3136   000042  507C               	movf	124,w,c	;volatile
  3137   000044  1827               	xorwf	??_HighISR^0,w,c
  3138   000046  0B7F               	andlw	-129
  3139   000048  1827               	xorwf	??_HighISR^0,w,c
  3140   00004A  6E7C               	movwf	124,c	;volatile
  3141   00004C                     
  3142                           ;interrupts.c: 29:         PIR2bits.C1IF=0;
  3143   00004C  010E               	movlb	14	; () banked
  3144   00004E  9135               	bcf	53,0,b	;volatile
  3145   000050                     i2l1954:
  3146                           
  3147                           ; BSR set to: 14
  3148                           ;interrupts.c: 31:     if(PIR0bits.TMR0IF){
  3149   000050  AB33               	btfss	51,5,b	;volatile
  3150   000052  EF2D  F000         	goto	i2u173_41
  3151   000056  EF2F  F000         	goto	i2u173_40
  3152   00005A                     i2u173_41:
  3153   00005A  EF4E  F000         	goto	i2l156
  3154   00005E                     i2u173_40:
  3155   00005E                     
  3156                           ; BSR set to: 14
  3157                           ;interrupts.c: 33:         increment_time(1);
  3158   00005E  0E01               	movlw	1
  3159   000060  6E23               	movwf	increment_time@increment^0,c
  3160   000062  0E00               	movlw	0
  3161   000064  6E24               	movwf	(increment_time@increment+1)^0,c
  3162   000066  0E00               	movlw	0
  3163   000068  6E25               	movwf	(increment_time@increment+2)^0,c
  3164   00006A  0E00               	movlw	0
  3165   00006C  6E26               	movwf	(increment_time@increment+3)^0,c
  3166   00006E  ECC3  F005         	call	_increment_time	;wreg free
  3167   000072                     
  3168                           ;interrupts.c: 35:         if(test_mode == 0){
  3169   000072  504A               	movf	_test_mode^0,w,c
  3170   000074  104B               	iorwf	(_test_mode+1)^0,w,c
  3171   000076  A4D8               	btfss	status,2,c
  3172   000078  EF40  F000         	goto	i2u174_41
  3173   00007C  EF42  F000         	goto	i2u174_40
  3174   000080                     i2u174_41:
  3175   000080  EF48  F000         	goto	i2l1962
  3176   000084                     i2u174_40:
  3177   000084                     
  3178                           ;interrupts.c: 36:             TMR0H = 0b1011;
  3179   000084  0E0B               	movlw	11
  3180   000086  6ED4               	movwf	212,c	;volatile
  3181                           
  3182                           ;interrupts.c: 37:             TMR0L = 0b11011100;
  3183   000088  0EDC               	movlw	220
  3184   00008A  6ED3               	movwf	211,c	;volatile
  3185                           
  3186                           ;interrupts.c: 38:         }else{
  3187   00008C  EF4C  F000         	goto	i2l1964
  3188   000090                     i2l1962:
  3189                           
  3190                           ;interrupts.c: 39:             TMR0H = 0;
  3191   000090  0E00               	movlw	0
  3192   000092  6ED4               	movwf	212,c	;volatile
  3193                           
  3194                           ;interrupts.c: 40:             TMR0L = 0;
  3195   000094  0E00               	movlw	0
  3196   000096  6ED3               	movwf	211,c	;volatile
  3197   000098                     i2l1964:
  3198                           
  3199                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  3200   000098  010E               	movlb	14	; () banked
  3201   00009A  9B33               	bcf	51,5,b	;volatile
  3202   00009C                     i2l156:
  3203                           
  3204                           ; BSR set to: 14
  3205   00009C  C02B  FFDA         	movff	??_HighISR+4,fsr2h
  3206   0000A0  C02A  FFD9         	movff	??_HighISR+3,fsr2l
  3207   0000A4  C029  FFE2         	movff	??_HighISR+2,fsr1h
  3208   0000A8  C028  FFE1         	movff	??_HighISR+1,fsr1l
  3209   0000AC  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3210   0000AE  0011               	retfie		f
  3211   0000B0                     __end_of_HighISR:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _increment_time *****************
  3215 ;; Defined at:
  3216 ;;		line 79 in file "timers.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  increment       4   34[COMRAM] unsigned long 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3234 ;;Total ram usage:        4 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 2
  3237 ;; This function calls:
  3238 ;;		i2_increment_day
  3239 ;; This function is called by:
  3240 ;;		_HighISR
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text18
  3245   000B86                     __ptext18:
  3246                           	callstack 0
  3247   000B86                     _increment_time:
  3248                           	callstack 25
  3249   000B86                     
  3250                           ;timers.c: 80:     while(increment > 0){
  3251   000B86  EF00  F006         	goto	i2l1820
  3252   000B8A                     i2l1808:
  3253                           
  3254                           ;timers.c: 81:         if(test_mode == 0){
  3255   000B8A  504A               	movf	_test_mode^0,w,c
  3256   000B8C  104B               	iorwf	(_test_mode+1)^0,w,c
  3257   000B8E  A4D8               	btfss	status,2,c
  3258   000B90  EFCC  F005         	goto	i2u148_41
  3259   000B94  EFCE  F005         	goto	i2u148_40
  3260   000B98                     i2u148_41:
  3261   000B98  EFD7  F005         	goto	i2l1812
  3262   000B9C                     i2u148_40:
  3263   000B9C                     
  3264                           ;timers.c: 82:             time_counter += 1;
  3265   000B9C  0E01               	movlw	1
  3266   000B9E  0100               	movlb	0	; () banked
  3267   000BA0  2793               	addwf	_time_counter& (0+255),f,b
  3268   000BA2  0E00               	movlw	0
  3269   000BA4  2394               	addwfc	(_time_counter+1)& (0+255),f,b
  3270   000BA6  2395               	addwfc	(_time_counter+2)& (0+255),f,b
  3271   000BA8  2396               	addwfc	(_time_counter+3)& (0+255),f,b
  3272                           
  3273                           ;timers.c: 83:         }else{
  3274   000BAA  EFDE  F005         	goto	i2l212
  3275   000BAE                     i2l1812:
  3276                           
  3277                           ;timers.c: 84:             time_counter += 1*15;
  3278   000BAE  0E0F               	movlw	15
  3279   000BB0  0100               	movlb	0	; () banked
  3280   000BB2  2793               	addwf	_time_counter& (0+255),f,b
  3281   000BB4  0E00               	movlw	0
  3282   000BB6  2394               	addwfc	(_time_counter+1)& (0+255),f,b
  3283   000BB8  2395               	addwfc	(_time_counter+2)& (0+255),f,b
  3284   000BBA  2396               	addwfc	(_time_counter+3)& (0+255),f,b
  3285   000BBC                     i2l212:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;timers.c: 92:         if(time_counter >= 86400){
  3289   000BBC  5196               	movf	(_time_counter+3)& (0+255),w,b
  3290   000BBE  E10D               	bnz	i2u149_40
  3291   000BC0  0E80               	movlw	128
  3292   000BC2  5D93               	subwf	_time_counter& (0+255),w,b
  3293   000BC4  0E51               	movlw	81
  3294   000BC6  5994               	subwfb	(_time_counter+1)& (0+255),w,b
  3295   000BC8  0E01               	movlw	1
  3296   000BCA  5995               	subwfb	(_time_counter+2)& (0+255),w,b
  3297   000BCC  A0D8               	btfss	status,0,c
  3298   000BCE  EFEB  F005         	goto	i2u149_41
  3299   000BD2  EFED  F005         	goto	i2u149_40
  3300   000BD6                     i2u149_41:
  3301   000BD6  EFFB  F005         	goto	i2l1818
  3302   000BDA                     i2u149_40:
  3303   000BDA                     
  3304                           ; BSR set to: 0
  3305                           ;timers.c: 93:             time_counter = 0;
  3306   000BDA  0E00               	movlw	0
  3307   000BDC  6F93               	movwf	_time_counter& (0+255),b
  3308   000BDE  0E00               	movlw	0
  3309   000BE0  6F94               	movwf	(_time_counter+1)& (0+255),b
  3310   000BE2  0E00               	movlw	0
  3311   000BE4  6F95               	movwf	(_time_counter+2)& (0+255),b
  3312   000BE6  0E00               	movlw	0
  3313   000BE8  6F96               	movwf	(_time_counter+3)& (0+255),b
  3314   000BEA                     
  3315                           ; BSR set to: 0
  3316                           ;timers.c: 94:             increment_day(1);
  3317   000BEA  0E00               	movlw	0
  3318   000BEC  6E04               	movwf	(i2increment_day@increment+1)^0,c
  3319   000BEE  0E01               	movlw	1
  3320   000BF0  6E03               	movwf	i2increment_day@increment^0,c
  3321   000BF2  EC65  F005         	call	i2_increment_day	;wreg free
  3322   000BF6                     i2l1818:
  3323                           
  3324                           ;timers.c: 96:     increment -= 1;
  3325   000BF6  0623               	decf	increment_time@increment^0,f,c
  3326   000BF8  0E00               	movlw	0
  3327   000BFA  5A24               	subwfb	(increment_time@increment+1)^0,f,c
  3328   000BFC  5A25               	subwfb	(increment_time@increment+2)^0,f,c
  3329   000BFE  5A26               	subwfb	(increment_time@increment+3)^0,f,c
  3330   000C00                     i2l1820:
  3331                           
  3332                           ;timers.c: 80:     while(increment > 0){
  3333   000C00  5023               	movf	increment_time@increment^0,w,c
  3334   000C02  1024               	iorwf	(increment_time@increment+1)^0,w,c
  3335   000C04  1025               	iorwf	(increment_time@increment+2)^0,w,c
  3336   000C06  1026               	iorwf	(increment_time@increment+3)^0,w,c
  3337   000C08  A4D8               	btfss	status,2,c
  3338   000C0A  EF09  F006         	goto	i2u150_41
  3339   000C0E  EF0B  F006         	goto	i2u150_40
  3340   000C12                     i2u150_41:
  3341   000C12  EFC5  F005         	goto	i2l1808
  3342   000C16                     i2u150_40:
  3343   000C16  0012               	return		;funcret
  3344   000C18                     __end_of_increment_time:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function i2_increment_day *****************
  3348 ;; Defined at:
  3349 ;;		line 100 in file "timers.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  increment       2    2[COMRAM] unsigned int 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  day_in_month   24    8[COMRAM] unsigned int [12]
  3354 ;;  curr_day_in_    2   32[COMRAM] unsigned int 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;Total ram usage:       32 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 1
  3371 ;; This function calls:
  3372 ;;		i2_increment_month
  3373 ;; This function is called by:
  3374 ;;		_increment_time
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text19
  3379   000ACA                     __ptext19:
  3380                           	callstack 0
  3381   000ACA                     i2_increment_day:
  3382                           	callstack 25
  3383   000ACA                     
  3384                           ;timers.c: 101:     while(increment > 0){
  3385   000ACA  EFB9  F005         	goto	i2l1706
  3386   000ACE                     i2l1686:
  3387                           
  3388                           ;timers.c: 103:         unsigned int day_in_month[] = {31,28,31,30,31,30,31,31,30,31,30,
      +                          31};
  3389   000ACE  EE20  F02C         	lfsr	2,increment_day@F14250
  3390   000AD2  EE10  F009         	lfsr	1,i2increment_day@day_in_month
  3391   000AD6  0E17               	movlw	23
  3392   000AD8                     i2u128_41:
  3393   000AD8  CFDB FFE3          	movff	plusw2,plusw1
  3394   000ADC  06E8               	decf	wreg,f,c
  3395   000ADE  E2FC               	bc	i2u128_41
  3396   000AE0                     
  3397                           ;timers.c: 104:         unsigned int curr_day_in_month = day_in_month[month - 1];
  3398   000AE0  C044  F005         	movff	_month,??i2_increment_day
  3399   000AE4  C045  F006         	movff	_month+1,??i2_increment_day+1
  3400   000AE8  90D8               	bcf	status,0,c
  3401   000AEA  3605               	rlcf	??i2_increment_day^0,f,c
  3402   000AEC  3606               	rlcf	(??i2_increment_day+1)^0,f,c
  3403   000AEE  0EFE               	movlw	254
  3404   000AF0  2405               	addwf	??i2_increment_day^0,w,c
  3405   000AF2  6E07               	movwf	(??i2_increment_day+2)^0,c
  3406   000AF4  0EFF               	movlw	255
  3407   000AF6  2006               	addwfc	(??i2_increment_day+1)^0,w,c
  3408   000AF8  6E08               	movwf	(??i2_increment_day+3)^0,c
  3409   000AFA  0E09               	movlw	low i2increment_day@day_in_month
  3410   000AFC  2407               	addwf	(??i2_increment_day+2)^0,w,c
  3411   000AFE  6ED9               	movwf	fsr2l,c
  3412   000B00  0E00               	movlw	high i2increment_day@day_in_month
  3413   000B02  2008               	addwfc	(??i2_increment_day+3)^0,w,c
  3414   000B04  6EDA               	movwf	fsr2h,c
  3415   000B06  CFDE F021          	movff	postinc2,i2increment_day@curr_day_in_month
  3416   000B0A  CFDD F022          	movff	postdec2,i2increment_day@curr_day_in_month+1
  3417   000B0E                     
  3418                           ;timers.c: 105:         if(month == 2 && leap_year_count == 3){
  3419   000B0E  0E02               	movlw	2
  3420   000B10  1844               	xorwf	_month^0,w,c
  3421   000B12  1045               	iorwf	(_month+1)^0,w,c
  3422   000B14  A4D8               	btfss	status,2,c
  3423   000B16  EF8F  F005         	goto	i2u129_41
  3424   000B1A  EF91  F005         	goto	i2u129_40
  3425   000B1E                     i2u129_41:
  3426   000B1E  EF9F  F005         	goto	i2l1696
  3427   000B22                     i2u129_40:
  3428   000B22  0E03               	movlw	3
  3429   000B24  1848               	xorwf	_leap_year_count^0,w,c
  3430   000B26  1049               	iorwf	(_leap_year_count+1)^0,w,c
  3431   000B28  A4D8               	btfss	status,2,c
  3432   000B2A  EF99  F005         	goto	i2u130_41
  3433   000B2E  EF9B  F005         	goto	i2u130_40
  3434   000B32                     i2u130_41:
  3435   000B32  EF9F  F005         	goto	i2l1696
  3436   000B36                     i2u130_40:
  3437   000B36                     
  3438                           ;timers.c: 106:             curr_day_in_month = 29;
  3439   000B36  0E00               	movlw	0
  3440   000B38  6E22               	movwf	(i2increment_day@curr_day_in_month+1)^0,c
  3441   000B3A  0E1D               	movlw	29
  3442   000B3C  6E21               	movwf	i2increment_day@curr_day_in_month^0,c
  3443   000B3E                     i2l1696:
  3444                           
  3445                           ;timers.c: 109:         day += 1;
  3446   000B3E  4A46               	infsnz	_day^0,f,c
  3447   000B40  2A47               	incf	(_day+1)^0,f,c
  3448   000B42                     
  3449                           ;timers.c: 110:         if(day > curr_day_in_month){
  3450   000B42  5046               	movf	_day^0,w,c
  3451   000B44  5C21               	subwf	i2increment_day@curr_day_in_month^0,w,c
  3452   000B46  5047               	movf	(_day+1)^0,w,c
  3453   000B48  5822               	subwfb	(i2increment_day@curr_day_in_month+1)^0,w,c
  3454   000B4A  B0D8               	btfsc	status,0,c
  3455   000B4C  EFAA  F005         	goto	i2u131_41
  3456   000B50  EFAC  F005         	goto	i2u131_40
  3457   000B54                     i2u131_41:
  3458   000B54  EFB6  F005         	goto	i2l1704
  3459   000B58                     i2u131_40:
  3460   000B58                     
  3461                           ;timers.c: 111:             increment_month(1);
  3462   000B58  0E00               	movlw	0
  3463   000B5A  6E02               	movwf	(i2increment_month@increment+1)^0,c
  3464   000B5C  0E01               	movlw	1
  3465   000B5E  6E01               	movwf	i2increment_month@increment^0,c
  3466   000B60  EC74  F006         	call	i2_increment_month	;wreg free
  3467   000B64                     
  3468                           ;timers.c: 112:             day = 1;
  3469   000B64  0E00               	movlw	0
  3470   000B66  6E47               	movwf	(_day+1)^0,c
  3471   000B68  0E01               	movlw	1
  3472   000B6A  6E46               	movwf	_day^0,c
  3473   000B6C                     i2l1704:
  3474                           
  3475                           ;timers.c: 114:         increment -= 1;
  3476   000B6C  0603               	decf	i2increment_day@increment^0,f,c
  3477   000B6E  A0D8               	btfss	status,0,c
  3478   000B70  0604               	decf	(i2increment_day@increment+1)^0,f,c
  3479   000B72                     i2l1706:
  3480                           
  3481                           ;timers.c: 101:     while(increment > 0){
  3482   000B72  5003               	movf	i2increment_day@increment^0,w,c
  3483   000B74  1004               	iorwf	(i2increment_day@increment+1)^0,w,c
  3484   000B76  A4D8               	btfss	status,2,c
  3485   000B78  EFC0  F005         	goto	i2u132_41
  3486   000B7C  EFC2  F005         	goto	i2u132_40
  3487   000B80                     i2u132_41:
  3488   000B80  EF67  F005         	goto	i2l1686
  3489   000B84                     i2u132_40:
  3490   000B84  0012               	return		;funcret
  3491   000B86                     __end_ofi2_increment_day:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function i2_increment_month *****************
  3495 ;; Defined at:
  3496 ;;		line 118 in file "timers.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  increment       2    0[COMRAM] unsigned int 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;Total ram usage:        2 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		i2_increment_day
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text20
  3524   000CE8                     __ptext20:
  3525                           	callstack 0
  3526   000CE8                     i2_increment_month:
  3527                           	callstack 25
  3528   000CE8                     
  3529                           ;timers.c: 119:     while(increment > 0){
  3530   000CE8  EF9B  F006         	goto	i2l1474
  3531   000CEC                     i2l1460:
  3532                           
  3533                           ;timers.c: 121:         month += 1;
  3534   000CEC  4A44               	infsnz	_month^0,f,c
  3535   000CEE  2A45               	incf	(_month+1)^0,f,c
  3536   000CF0                     
  3537                           ;timers.c: 122:         if(month > 12){
  3538   000CF0  5045               	movf	(_month+1)^0,w,c
  3539   000CF2  E109               	bnz	i2u89_40
  3540   000CF4  0E0D               	movlw	13
  3541   000CF6  5C44               	subwf	_month^0,w,c
  3542   000CF8  A0D8               	btfss	status,0,c
  3543   000CFA  EF81  F006         	goto	i2u89_41
  3544   000CFE  EF83  F006         	goto	i2u89_40
  3545   000D02                     i2u89_41:
  3546   000D02  EF98  F006         	goto	i2l1472
  3547   000D06                     i2u89_40:
  3548   000D06                     
  3549                           ;timers.c: 123:             month = 1;
  3550   000D06  0E00               	movlw	0
  3551   000D08  6E45               	movwf	(_month+1)^0,c
  3552   000D0A  0E01               	movlw	1
  3553   000D0C  6E44               	movwf	_month^0,c
  3554   000D0E                     
  3555                           ;timers.c: 124:             leap_year_count += 1;
  3556   000D0E  4A48               	infsnz	_leap_year_count^0,f,c
  3557   000D10  2A49               	incf	(_leap_year_count+1)^0,f,c
  3558   000D12                     
  3559                           ;timers.c: 125:             if(leap_year_count > 3){
  3560   000D12  5049               	movf	(_leap_year_count+1)^0,w,c
  3561   000D14  E109               	bnz	i2u90_40
  3562   000D16  0E04               	movlw	4
  3563   000D18  5C48               	subwf	_leap_year_count^0,w,c
  3564   000D1A  A0D8               	btfss	status,0,c
  3565   000D1C  EF92  F006         	goto	i2u90_41
  3566   000D20  EF94  F006         	goto	i2u90_40
  3567   000D24                     i2u90_41:
  3568   000D24  EF98  F006         	goto	i2l1472
  3569   000D28                     i2u90_40:
  3570   000D28                     
  3571                           ;timers.c: 126:                 leap_year_count = 0;
  3572   000D28  0E00               	movlw	0
  3573   000D2A  6E49               	movwf	(_leap_year_count+1)^0,c
  3574   000D2C  0E00               	movlw	0
  3575   000D2E  6E48               	movwf	_leap_year_count^0,c
  3576   000D30                     i2l1472:
  3577                           
  3578                           ;timers.c: 129:         increment -= 1;
  3579   000D30  0601               	decf	i2increment_month@increment^0,f,c
  3580   000D32  A0D8               	btfss	status,0,c
  3581   000D34  0602               	decf	(i2increment_month@increment+1)^0,f,c
  3582   000D36                     i2l1474:
  3583                           
  3584                           ;timers.c: 119:     while(increment > 0){
  3585   000D36  5001               	movf	i2increment_month@increment^0,w,c
  3586   000D38  1002               	iorwf	(i2increment_month@increment+1)^0,w,c
  3587   000D3A  A4D8               	btfss	status,2,c
  3588   000D3C  EFA2  F006         	goto	i2u91_41
  3589   000D40  EFA4  F006         	goto	i2u91_40
  3590   000D44                     i2u91_41:
  3591   000D44  EF76  F006         	goto	i2l1460
  3592   000D48                     i2u91_40:
  3593   000D48  0012               	return		;funcret
  3594   000D4A                     __end_ofi2_increment_month:
  3595                           	callstack 0
  3596   000000                     
  3597                           	psect	rparam
  3598   000000                     
  3599                           	psect	temp
  3600   000050                     btemp:
  3601                           	callstack 0
  3602   000050                     	ds	1
  3603   000000                     int$flags	set	btemp
  3604   000000                     wtemp8	set	btemp+1
  3605   000000                     ttemp5	set	btemp+1
  3606   000000                     ttemp6	set	btemp+4
  3607   000000                     ttemp7	set	btemp+8
  3608                           
  3609                           	psect	idloc
  3610                           
  3611                           ;Config register IDLOC0 @ 0x200000
  3612                           ;	unspecified, using default values
  3613   200000                     	org	2097152
  3614   200000  0FFF               	dw	4095
  3615                           
  3616                           ;Config register IDLOC1 @ 0x200002
  3617                           ;	unspecified, using default values
  3618   200002                     	org	2097154
  3619   200002  0FFF               	dw	4095
  3620                           
  3621                           ;Config register IDLOC2 @ 0x200004
  3622                           ;	unspecified, using default values
  3623   200004                     	org	2097156
  3624   200004  0FFF               	dw	4095
  3625                           
  3626                           ;Config register IDLOC3 @ 0x200006
  3627                           ;	unspecified, using default values
  3628   200006                     	org	2097158
  3629   200006  0FFF               	dw	4095
  3630                           
  3631                           ;Config register IDLOC4 @ 0x200008
  3632                           ;	unspecified, using default values
  3633   200008                     	org	2097160
  3634   200008  0FFF               	dw	4095
  3635                           
  3636                           ;Config register IDLOC5 @ 0x20000A
  3637                           ;	unspecified, using default values
  3638   20000A                     	org	2097162
  3639   20000A  0FFF               	dw	4095
  3640                           
  3641                           ;Config register IDLOC6 @ 0x20000C
  3642                           ;	unspecified, using default values
  3643   20000C                     	org	2097164
  3644   20000C  0FFF               	dw	4095
  3645                           
  3646                           ;Config register IDLOC7 @ 0x20000E
  3647                           ;	unspecified, using default values
  3648   20000E                     	org	2097166
  3649   20000E  0FFF               	dw	4095
  3650                           
  3651                           	psect	config
  3652                           
  3653                           ;Config register CONFIG1L @ 0x300000
  3654                           ;	External Oscillator mode Selection bits
  3655                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3656                           ;	Power-up default value for COSC bits
  3657                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3658   300000                     	org	3145728
  3659   300000  AA                 	db	170
  3660                           
  3661                           ;Config register CONFIG1H @ 0x300001
  3662                           ;	unspecified, using default values
  3663                           ;	Clock Out Enable bit
  3664                           ;	CLKOUTEN = 0x1, unprogrammed default
  3665                           ;	Clock Switch Enable bit
  3666                           ;	CSWEN = 0x1, unprogrammed default
  3667                           ;	Fail-Safe Clock Monitor Enable bit
  3668                           ;	FCMEN = 0x1, unprogrammed default
  3669   300001                     	org	3145729
  3670   300001  FF                 	db	255
  3671                           
  3672                           ;Config register CONFIG2L @ 0x300002
  3673                           ;	unspecified, using default values
  3674                           ;	Master Clear Enable bit
  3675                           ;	MCLRE = 0x1, unprogrammed default
  3676                           ;	Power-up Timer Enable bit
  3677                           ;	PWRTE = 0x1, unprogrammed default
  3678                           ;	Low-power BOR enable bit
  3679                           ;	LPBOREN = 0x1, unprogrammed default
  3680                           ;	Brown-out Reset Enable bits
  3681                           ;	BOREN = 0x3, unprogrammed default
  3682   300002                     	org	3145730
  3683   300002  FF                 	db	255
  3684                           
  3685                           ;Config register CONFIG2H @ 0x300003
  3686                           ;	unspecified, using default values
  3687                           ;	Brown Out Reset Voltage selection bits
  3688                           ;	BORV = 0x3, unprogrammed default
  3689                           ;	ZCD Disable bit
  3690                           ;	ZCD = 0x1, unprogrammed default
  3691                           ;	PPSLOCK bit One-Way Set Enable bit
  3692                           ;	PPS1WAY = 0x1, unprogrammed default
  3693                           ;	Stack Full/Underflow Reset Enable bit
  3694                           ;	STVREN = 0x1, unprogrammed default
  3695                           ;	Debugger Enable bit
  3696                           ;	DEBUG = 0x1, unprogrammed default
  3697                           ;	Extended Instruction Set Enable bit
  3698                           ;	XINST = 0x1, unprogrammed default
  3699   300003                     	org	3145731
  3700   300003  FF                 	db	255
  3701                           
  3702                           ;Config register CONFIG3L @ 0x300004
  3703                           ;	WDT Period Select bits
  3704                           ;	WDTCPS = 0x1F, unprogrammed default
  3705                           ;	WDT operating mode
  3706                           ;	WDTE = OFF, WDT Disabled
  3707   300004                     	org	3145732
  3708   300004  9F                 	db	159
  3709                           
  3710                           ;Config register CONFIG3H @ 0x300005
  3711                           ;	unspecified, using default values
  3712                           ;	WDT Window Select bits
  3713                           ;	WDTCWS = 0x7, unprogrammed default
  3714                           ;	WDT input clock selector
  3715                           ;	WDTCCS = 0x7, unprogrammed default
  3716   300005                     	org	3145733
  3717   300005  FF                 	db	255
  3718                           
  3719                           ;Config register CONFIG4L @ 0x300006
  3720                           ;	unspecified, using default values
  3721                           ;	Write Protection Block 0
  3722                           ;	WRT0 = 0x1, unprogrammed default
  3723                           ;	Write Protection Block 1
  3724                           ;	WRT1 = 0x1, unprogrammed default
  3725                           ;	Write Protection Block 2
  3726                           ;	WRT2 = 0x1, unprogrammed default
  3727                           ;	Write Protection Block 3
  3728                           ;	WRT3 = 0x1, unprogrammed default
  3729                           ;	Write Protection Block 3
  3730                           ;	WRT4 = 0x1, unprogrammed default
  3731                           ;	Write Protection Block 3
  3732                           ;	WRT5 = 0x1, unprogrammed default
  3733                           ;	Write Protection Block 3
  3734                           ;	WRT6 = 0x1, unprogrammed default
  3735                           ;	Write Protection Block 3
  3736                           ;	WRT7 = 0x1, unprogrammed default
  3737   300006                     	org	3145734
  3738   300006  FF                 	db	255
  3739                           
  3740                           ;Config register CONFIG4H @ 0x300007
  3741                           ;	unspecified, using default values
  3742                           ;	Configuration Register Write Protection bit
  3743                           ;	WRTC = 0x1, unprogrammed default
  3744                           ;	Boot Block Write Protection bit
  3745                           ;	WRTB = 0x1, unprogrammed default
  3746                           ;	Data EEPROM Write Protection bit
  3747                           ;	WRTD = 0x1, unprogrammed default
  3748                           ;	Scanner Enable bit
  3749                           ;	SCANE = 0x1, unprogrammed default
  3750                           ;	Low Voltage Programming Enable bit
  3751                           ;	LVP = 0x1, unprogrammed default
  3752   300007                     	org	3145735
  3753   300007  FF                 	db	255
  3754                           
  3755                           ;Config register CONFIG5L @ 0x300008
  3756                           ;	unspecified, using default values
  3757                           ;	UserNVM Program Memory Code Protection bit
  3758                           ;	CP = 0x1, unprogrammed default
  3759                           ;	DataNVM Memory Code Protection bit
  3760                           ;	CPD = 0x1, unprogrammed default
  3761   300008                     	org	3145736
  3762   300008  FF                 	db	255
  3763                           
  3764                           ;Config register CONFIG5H @ 0x300009
  3765                           ;	unspecified, using default values
  3766   300009                     	org	3145737
  3767   300009  FF                 	db	255
  3768                           
  3769                           ;Config register CONFIG6L @ 0x30000A
  3770                           ;	unspecified, using default values
  3771                           ;	Table Read Protection Block 0
  3772                           ;	EBTR0 = 0x1, unprogrammed default
  3773                           ;	Table Read Protection Block 1
  3774                           ;	EBTR1 = 0x1, unprogrammed default
  3775                           ;	Table Read Protection Block 2
  3776                           ;	EBTR2 = 0x1, unprogrammed default
  3777                           ;	Table Read Protection Block 3
  3778                           ;	EBTR3 = 0x1, unprogrammed default
  3779                           ;	Table Read Protection Block 4
  3780                           ;	EBTR4 = 0x1, unprogrammed default
  3781                           ;	Table Read Protection Block 5
  3782                           ;	EBTR5 = 0x1, unprogrammed default
  3783                           ;	Table Read Protection Block 6
  3784                           ;	EBTR6 = 0x1, unprogrammed default
  3785                           ;	Table Read Protection Block 7
  3786                           ;	EBTR7 = 0x1, unprogrammed default
  3787   30000A                     	org	3145738
  3788   30000A  FF                 	db	255
  3789                           
  3790                           ;Config register CONFIG6H @ 0x30000B
  3791                           ;	unspecified, using default values
  3792                           ;	Boot Block Table Read Protection bit
  3793                           ;	EBTRB = 0x1, unprogrammed default
  3794   30000B                     	org	3145739
  3795   30000B  FF                 	db	255
  3796                           tosu	equ	0xFFF
  3797                           tosh	equ	0xFFE
  3798                           tosl	equ	0xFFD
  3799                           stkptr	equ	0xFFC
  3800                           pclatu	equ	0xFFB
  3801                           pclath	equ	0xFFA
  3802                           pcl	equ	0xFF9
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           prodh	equ	0xFF4
  3808                           prodl	equ	0xFF3
  3809                           indf0	equ	0xFEF
  3810                           postinc0	equ	0xFEE
  3811                           postdec0	equ	0xFED
  3812                           preinc0	equ	0xFEC
  3813                           plusw0	equ	0xFEB
  3814                           fsr0h	equ	0xFEA
  3815                           fsr0l	equ	0xFE9
  3816                           wreg	equ	0xFE8
  3817                           indf1	equ	0xFE7
  3818                           postinc1	equ	0xFE6
  3819                           postdec1	equ	0xFE5
  3820                           preinc1	equ	0xFE4
  3821                           plusw1	equ	0xFE3
  3822                           fsr1h	equ	0xFE2
  3823                           fsr1l	equ	0xFE1
  3824                           bsr	equ	0xFE0
  3825                           indf2	equ	0xFDF
  3826                           postinc2	equ	0xFDE
  3827                           postdec2	equ	0xFDD
  3828                           preinc2	equ	0xFDC
  3829                           plusw2	equ	0xFDB
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         8
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      79
    BANK0           160     51      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->_increment_time
    _increment_time->i2_increment_day
    i2_increment_day->i2_increment_month

Critical Paths under _main in BANK0

    _main->_get_hour
    _increment_day->_increment_month
    _get_hour->___fldiv
    ___fldiv->___xxtofl
    _LEDarray_disp_bin->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    4542
                                             43 BANK0      8     8      0
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                             ___flge
                            ___fltol
                            _get_day
                           _get_hour
                          _get_month
                      _increment_day
 ---------------------------------------------------------------------------------
 (1) _increment_day                                       32    30      2     377
                                              2 BANK0     32    30      2
                    _increment_month
 ---------------------------------------------------------------------------------
 (2) _increment_month                                      2     0      2     124
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_month                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_hour                                             4     0      4    1965
                                             39 BANK0      4     0      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _get_day                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     626
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          8     0      8     484
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     549
                                             10 BANK0      2     0      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighISR                                              5     5      0     245
                                             38 COMRAM     5     5      0
                     _increment_time
 ---------------------------------------------------------------------------------
 (4) _increment_time                                       4     0      4     245
                                             34 COMRAM     4     0      4
                    i2_increment_day
 ---------------------------------------------------------------------------------
 (5) i2_increment_day                                     32    30      2     146
                                              2 COMRAM    32    30      2
                  i2_increment_month
 ---------------------------------------------------------------------------------
 (6) i2_increment_month                                    2     0      2      49
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
     ___fltol (ARG)
   _LEDarray_init
   _Timer0_init
   ___flge
   ___fltol
   _get_day
   _get_hour
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _get_month
   _increment_day
     _increment_month

 _HighISR (ROOT)
   _increment_time
     i2_increment_day
       i2_increment_month

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      37       5       34.4%
BITBIGSFRllllhh     84      0       0      43        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      4F       1       84.0%
BITBIGSFRlllllh     5C      0       0      46        0.0%
BITBIGSFRhhll       43      0       0      34        0.0%
BITBIGSFRlllllh     33      0       0      45        0.0%
BITBIGSFRllllll     32      0       0      51        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllllhh     14      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      7      0       0      50        0.0%
BITBIGSFRlllllh      7      0       0      48        0.0%
BITBIGSFRllllhh      6      0       0      42        0.0%
BITBIGSFRllllhh      3      0       0      41        0.0%
BITBIGSFRhlh         3      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRlllhh       1      0       0      38        0.0%
BITBIGSFRlhh         1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86      52        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 07 14:10:20 2022

                    ___fldiv@aexp 0086                      ___fldiv@bexp 0085  
                    ___fldiv@sign 007E                                l30 0956  
                              l31 0958                                l40 09C4  
                              l32 096C                                l41 09C6  
                              l33 096E                                l42 09DA  
                              l34 0982                                l43 09DC  
                              l35 0984                                l27 0E0A  
                              l44 09F0                                l36 0998  
                              l45 09F2                                l37 099A  
                              l46 0A06                                l38 09AE  
                              l39 09B0                                l48 0A08  
                              l97 064A                                l98 06EE  
               ??_Interrupts_init 0060                               l122 0E2E  
                             l202 0E92                               l119 0E78  
                             l233 0CE6                               l225 0AC8  
                             l147 0E88                               l248 0E64  
                             l522 08F8                               l187 0C82  
                             l196 0D96                               l527 093E  
                             l199 0E9C                               l554 0838  
                             l912 04AA                               l841 02AE  
                             l850 02F4                               l915 0606  
                             l852 036C                               l844 0272  
                             l853 035A                               l926 059E  
                             l839 044E                               l919 0542  
                             u950 00D0                               u951 00CC  
                             u960 00E2                               u961 00DE  
                             u970 00F2                               u971 00EE  
                             u980 0136                               u981 0132  
                             u990 0148                               u991 0144  
                             _day 0046                               wreg 000FE8  
                    ___fltol@exp1 0069                              l2000 0474  
                            l2010 04EC                              l2002 04BA  
                            l2100 0E56                              l2020 0574  
                            l2012 04F8                              l2004 04D0  
                            l2102 0E5E                              l2030 05B2  
                            l2022 0580                              l2014 052A  
                            l2104 0E60                              l2200 0818  
                            l2112 0E94                              l2032 05D6  
                            l2024 058E                              l2016 052C  
                            l2008 04E4                              l2120 0A20  
                            l2106 0E62                              l2050 097C  
                            l2042 0DD4                              l2202 0828  
                            l2034 05E6                              l2026 05AC  
                            l2018 0538                              l2114 0E8A  
                            l2130 0A82                              l2122 0A4E  
                            l2060 09EA                              l2052 0992  
                            l2044 0940                              l2140 083A  
                            l1500 00B4                              l2036 05F4  
                            l2028 05AE                              l2108 0D4A  
                            l2132 0A98                              l2124 0A62  
                            l2116 0A0A                              l2070 0E22  
                            l2062 0A00                              l2054 09A8  
                            l2046 0950                              l2150 08C6  
                            l2142 086A                              l1510 00F2  
                            l1502 00C2                              l2038 05F6  
                            l2134 0AA4                              l2126 0A76  
                            l2118 0A0E                              l2072 0E24  
                            l2064 0E0C                              l2056 09BE  
                            l2048 0966                              l2080 0C18  
                            l2152 08D8                              l2144 087A  
                            l1600 0324                              l1520 0122  
                            l1512 0102                              l1504 00D0  
                            l2136 0AAC                              l2128 0A7E  
                            l2240 0614                              l2074 0E26  
                            l2066 0E0E                              l2058 09D4  
                            l2090 0C4E                              l2082 0C30  
                            l2154 08E6                              l2146 08A8  
                            l2170 0788                              l2162 0732  
                            l1610 0396                              l1602 0352  
                            l1530 0158                              l1522 0128  
                            l1514 0104                              l1506 00D2  
                            l2138 0AB4                              l2250 06B4  
                            l2242 0618                              l2076 0E2A  
                            l2068 0E20                              l2092 0C60  
                            l2084 0C42                              l2156 0936  
                            l2148 08B8                              l2172 078A  
                            l2164 074A                              l1620 040E  
                            l1612 03C0                              l1540 0198  
                            l1532 0168                              l1524 0136  
                            l1508 00E2                              l1516 010C  
                            l2260 0714                              l2252 06E8  
                            l2244 061C                              l2078 0E7A  
                            l2094 0C74                              l2086 0C4A  
                            l2158 093C                              l2174 079A  
                            l1630 0444                              l1622 042A  
                            l1606 037C                              l1614 03C4  
                            l1542 01A8                              l1550 01C8  
                            l1534 016A                              l1526 0138  
                            l1518 011C                              l2262 0718  
                            l2254 06F0                              l2246 0642  
                            l2238 0608                              l2096 0C80  
                            l2088 0C4C                              l2184 07C4  
                            l2176 079E                              l2168 075E  
                            l1624 042E                              l1616 03DE  
                            l1608 0388                              l1560 0206  
                            l1552 01D8                              l1544 01B0  
                            l1528 0148                              l1536 0172  
                            l2264 071E                              l2256 0708  
                            l2248 0646                              l2098 0E4C  
                            l2194 07EC                              l2186 07CE  
                            l2178 07AC                              l1626 043C  
                            l1618 03F4                              l1570 024E  
                            l1562 0216                              l1554 01D8  
                            l1546 01B4                              l1538 0182  
                            l2258 070E                              l2196 07F8  
                            l2188 07D8                              l1628 0442  
                            l1580 029C                              l1572 0262  
                            l1564 0226                              l2198 0808  
                            l1590 02E4                              l1582 02AC  
                            l1574 0270                              l1566 0236  
                            l1558 01EC                              l1592 02F2  
                            l1584 02BE                              l1576 027C  
                            l1568 023E                              l1586 02D4  
                            l1594 0304                              l1578 029A  
                            l1596 0312                              l1588 02DA  
                            l1598 0316                              l1972 0E66  
                            l1980 0C88                              l1974 0E6C  
                            l1990 0CC4                              l1982 0C8C  
                            l1976 0E76                              l1984 0CA2  
                            l1992 0CCC                              l1986 0CAA  
                            l1994 0CD2                              l1978 0C84  
                            l1996 0454                              l1988 0CAE  
                            l1998 0466                              u1000 0158  
                            u1001 0154                              u1010 0198  
                            u1011 0194                              u1100 0324  
                            u1020 01D8                              u1101 0320  
                            u1021 01D4                              u1110 0352  
                            u1030 024E                              u1111 034E  
                            u1031 024A                              u1120 0368  
                            u1040 0270                              u2000 0A62  
                            u1121 0364                              u1041 026C  
                            u2001 0A5E                              u1130 037C  
                            u1050 029A                              u2010 0A76  
                            u1131 0378                              u1051 0296  
                            u2011 0A72                              u2100 077E  
                            u1140 0396                              u1060 02BE  
                            u2020 0A98                              u1141 0392  
                            u1061 02BA                              u2021 0A94  
                            u2110 07AC                              u1150 03DE  
                            u1070 02D4                              u2030 0AC8  
                            u2111 07A8                              u1151 03DA  
                            u1071 02D0                              u2031 0AC4  
                            u2040 086A                              u2120 07C0  
                            u1160 040E                              u1080 02F2  
                            u2041 0866                              u2121 07BC  
                            u2105 0774                              u1161 040A  
                            u1081 02EE                              u2050 08A8  
                            u2130 07E8                              u1170 043C  
                            u1090 0312                              u2210 06B4  
                            u2051 08A4                              u2131 07E4  
                            u1171 0438                              u1091 030E  
                            u2211 06B0                              u2060 08C6  
                            u2140 0808                              u2220 06E8  
                            u2061 08C2                              u2141 0804  
                            u2221 06E4                              u2070 08E6  
                            u2150 0818                              u2071 08E2  
                            u2151 0814                              u2080 0936  
                            u2081 0932                              u2090 074A  
                            u2091 0746                              u1800 0474  
                            u1801 0470                              u1810 04D0  
                            u1811 04CC                              u1900 0966  
                            u1820 0526                              u1901 0962  
                            u1821 0522                              u1910 097C  
                            u1830 0570                              u1911 0978  
                            u1831 056C                              u1920 0992  
                            u1840 058E                              u1760 0CA2  
                            u1921 098E                              u1841 058A  
                            u1761 0C9E                              u1930 09A8  
                            u1850 059E                              u1770 0CC4  
                            u1931 09A4                              u1851 059A  
                            u1771 0CC0                              u1940 09BE  
                            u1860 05AC                              u1780 0CE6  
                            u1941 09BA                              u1861 05A8  
                            u1781 0CE2                              u1950 09D4  
                            u1870 05E6                              u1790 0466  
                            u1951 09D0                              u1871 05E2  
                            u1791 0462                              u1960 09EA  
                            u1880 05F4                              u1961 09E6  
                            u1881 05F0                              u1970 0A00  
                            u1890 0950                              u1971 09FC  
                            u1891 094C                              u1980 0C60  
                            u1981 0C5C                              u1991 0A18  
                            _main 0608                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0050  
                            start 00B0                  __end_of_ADC_init 0E66  
                 ___fldiv@new_exp 007F                  __end_of_DAC_init 0E7A  
                 __end_of_HighISR 00B0                      ___param_bank 000000  
                      _Comp1_init 0E0C                     ___fltol@sign1 0068  
                           ?_main 0001                             _ADPCH 000F5F  
                 __end_of___fldiv 0450                   __end_of___fltol 083A  
                           i2l212 0BBC                             i2l215 0C16  
                           i2l233 0D48                             i2l225 0B84  
                           i2l156 009C                             _TMR0H 000FD4  
                           _TMR0L 000FD3                      main@curr_day 008B  
                 __end_of_get_day 0E9E              Timer0_init@leap_year 0066  
                           _month 0044                             tablat 000FF5  
                           plusw1 000FE3                             plusw2 000FDB  
                           ttemp5 0051                             ttemp6 0054  
                           ttemp7 0058                             status 000FD8  
                           wtemp8 0051       i2increment_day@day_in_month 0009  
                ?_increment_month 0060                   __initialization 0D98  
                    __end_of_main 0732                            ??_main 008B  
                   __activetblptr 000000                            _ADRESH 000F64  
                          i2l1460 0CEC                            i2l1700 0B58  
                          i2l1470 0D28                            i2l1462 0CF0  
                          i2l1702 0B64                            i2l1464 0D06  
                          i2l1472 0D30                            i2l1704 0B6C  
                          i2l1466 0D0E                            i2l1474 0D36  
                          i2l1458 0CE8                            i2l1706 0B72  
                          i2l1810 0B9C                            i2l1468 0D12  
                          i2l1812 0BAE                            i2l1820 0C00  
                          i2l1814 0BDA                            i2l1806 0B86  
                          i2l1816 0BEA                            i2l1808 0B8A  
                          i2l1690 0B0E                            i2l1818 0BF6  
                          i2l1692 0B22                            i2l1684 0ACA  
                          i2l1694 0B36                            i2l1686 0ACE  
                          i2l1950 002A                            i2l1696 0B3E  
                          i2l1688 0AE0                            i2l1960 0084  
                          i2l1952 004C                            i2l1698 0B42  
                          i2l1962 0090                            i2l1954 0050  
                          i2l1964 0098                            i2l1956 005E  
                          i2l1948 001A                            i2l1958 0072  
                       ??_HighISR 0027                     main@curr_hour 008F  
                __end_of___xxtofl 0608                 _LEDarray_disp_bin 0940  
              ?_LEDarray_disp_bin 006A                     ??_Timer0_init 0068  
                __end_of_get_hour 0D98                            ___flge 083A  
                     ?_Comp1_init 0001                         ??___fldiv 0076  
                       ??___fltol 0064               ??_LEDarray_disp_bin 006C  
                          isa$std 000001                     _increment_day 0A0A  
                       ??_get_day 0062                      __pdataCOMRAM 002C  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ?_ADC_init 0001  
                       ?_DAC_init 0001                   _leap_year_count 0048  
                      ___flge@ff1 0060                        ___flge@ff2 0064  
                    ___xxtofl@arg 006A                      ___xxtofl@exp 0069  
       __end_of_LEDarray_disp_bin 0A0A                      ___xxtofl@val 0060  
                      __accesstop 0060           __end_of__initialization 0DCA  
             increment_day@F14250 002C                     ___rparam_used 000001  
                      ___fltol@f1 0060                     _LEDarray_init 0DD4  
                 _Interrupts_init 0E7A                    __pcstackCOMRAM 0001  
                  ?_increment_day 0062               __end_of_Timer0_init 0C84  
                      ??_ADC_init 0060                        ??_DAC_init 0060  
                      __pbssBANK0 0093                        __pnvCOMRAM 0048  
                  ?_LEDarray_init 0001                           ?___flge 0060  
                       ?___xxtofl 0060                           i2u90_40 0D28  
                         i2u90_41 0D24                           i2u91_40 0D48  
                         i2u91_41 0D44        i2increment_month@increment 0001  
                         i2u89_40 0D06                           i2u89_41 0D02  
                       ?_get_hour 0087                    main@curr_month 008D  
         __end_of_Interrupts_init 0E8A                           _HighISR 0008  
                       _ADREFbits 000F58                 ??i2_increment_day 0005  
                         __Hparam 0000                           __Lparam 0000  
                     _Timer0_init 0C18                 __end_of_get_month 0E94  
                         ___fldiv 00B4                           ___fltol 0732  
                 ??_increment_day 0064           increment_time@increment 0023  
                         __pcinit 0D98                           __ramtop 0E00  
                         __ptext0 0608                           __ptext1 0A0A  
                         __ptext2 0C84                           __ptext3 0E8A  
                         __ptext4 0D4A                           __ptext5 0450  
                         __ptext6 00B4                           __ptext7 0E94  
                         __ptext8 0732                           __ptext9 083A  
          increment_day@increment 0062                           _get_day 0E94  
                      ??___xxtofl 0064                    _increment_time 0B86  
                      ??_get_hour 008B              end_of_initialization 0DCA  
                 ??_LEDarray_init 0060                           postdec1 000FE5  
                         postdec2 000FDD                      ??_Comp1_init 0060  
                         postinc0 000FEE                           postinc2 000FDE  
          Timer0_init@current_day 0062                         _PORTAbits 000F89  
                       _PORTBbits 000F8A                         _PORTFbits 000F8E  
                       _PORTGbits 000F8F         Timer0_init@init_test_mode 0060  
                   ___xxtofl@sign 0068                         _TRISAbits 000F81  
                       _TRISBbits 000F82            __end_of_increment_time 0C18  
                       _TRISDbits 000F84                         _TRISFbits 000F86  
                       _TRISGbits 000F87                         _TRISHbits 000F88  
                     ___fldiv@grs 0081                       ___fldiv@rem 007A  
              __end_of_Comp1_init 0E30                       _CM1CON0bits 000ED0  
                     _CM1CON1bits 000ED1                  ?_Interrupts_init 0001  
                  __end_of___flge 0940                     __pidataCOMRAM 0E30  
               i2_increment_month 0CE8               start_initialization 0D98  
              ?i2_increment_month 0001                   ?_increment_time 0023  
             ??i2_increment_month 0003                          ??___flge 0068  
       __end_ofi2_increment_month 0D4A                         ___fldiv@a 0072  
                       ___fldiv@b 006E                       __pbssCOMRAM 004C  
                   __pcstackBANK0 0060                 ??_increment_month 0062  
        increment_month@increment 0060                   i2_increment_day 0ACA  
                        ?_HighISR 0001                      ?_Timer0_init 0060  
       increment_day@day_in_month 0068                         __pintcode 0008  
                        ?___fldiv 006E                          ?___fltol 0060  
i2increment_day@curr_day_in_month 0021    increment_day@curr_day_in_month 0080  
                       _get_month 0E8A                          ?_get_day 0060  
                        _ADC_init 0E4C                          _DAC_init 0E66  
                        _LATAbits 000F79                          _LATBbits 000F7A  
                        _LATDbits 000F7C                          _LATFbits 000F7E  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                        _PIE0bits 000E29                          _IPR2bits 000E21  
                        _PIE2bits 000E2B                          i2u130_40 0B36  
                        i2u130_41 0B32                          i2u131_40 0B58  
                        i2u131_41 0B54                          i2u132_40 0B84  
                        i2u132_41 0B80                          i2u150_40 0C16  
                        i2u150_41 0C12                          i2u128_41 0AD8  
                        i2u129_40 0B22                          i2u129_41 0B1E  
                        i2u170_40 002A                          i2u170_41 0026  
                        i2u171_40 003C                          i2u171_41 0034  
                        i2u148_40 0B9C                          i2u148_41 0B98  
                        i2u149_40 0BDA                          i2u173_40 005E  
                        i2u172_48 003E                          i2u149_41 0BD6  
                        i2u173_41 005A                          i2u174_40 0084  
                        i2u174_41 0080                          _PIR0bits 000E33  
                        _PIR2bits 000E35                         _test_mode 004A  
           __end_of_increment_day 0ACA                        ?_get_month 0060  
                      _ADCON0bits 000F60           __end_ofi2_increment_day 0B86  
                      _CM1NCHbits 000ED2                        _CM1PCHbits 000ED3  
                       copy_data0 0DAC             __end_of_LEDarray_init 0E0C  
                        __Hrparam 0000                          __Lrparam 0000  
        i2increment_day@increment 0003                  ??_increment_time 0027  
                      _ANSELAbits 000E92                          ___xxtofl 0450  
                      _T0CON0bits 000FD5                        _T0CON1bits 000FD6  
                        __ptext10 0C18                          __ptext11 0DD4  
                        __ptext20 0CE8                          __ptext12 0940  
                        __ptext13 0E7A                          __ptext14 0E0C  
                        __ptext15 0E66                          __ptext16 0E4C  
                        __ptext18 0B86                          __ptext19 0ACA  
                        _get_hour 0D4A           LEDarray_disp_bin@number 006A  
                        isa$xinst 000000                          int$flags 0050  
                 _increment_month 0C84                       ??_get_month 0062  
                ?i2_increment_day 0003                        _INTCONbits 000FF2  
                    _time_counter 0093                          intlevel2 0000  
                    _DAC1CON0bits 000EC6                      _DAC1CON1bits 000EC7  
        Timer0_init@current_month 0064               _test_time_corrector 004C  
         __end_of_increment_month 0CE8  
