

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 16:12:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Version 2.35
    59                           ; Generated 05/05/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataCOMRAM
    95   00234C                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _week_day
    99   00234C  0002               	dw	2
   100                           
   101                           	psect	idataBANK0
   102   002294                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _month_days
   106   002294  0000               	dw	0
   107   002296  001F               	dw	31
   108   002298  001C               	dw	28
   109   00229A  001F               	dw	31
   110   00229C  001E               	dw	30
   111   00229E  001F               	dw	31
   112   0022A0  001E               	dw	30
   113   0022A2  001F               	dw	31
   114   0022A4  001F               	dw	31
   115   0022A6  001E               	dw	30
   116   0022A8  001F               	dw	31
   117   0022AA  001E               	dw	30
   118   0022AC  001F               	dw	31
   119                           
   120                           ;initializer for main@F14258
   121   0022AE  4D                 	db	77
   122   0022AF  4F                 	db	79
   123   0022B0  4E                 	db	78
   124   0022B1  00                 	db	0
   125                           
   126                           ;initializer for _year
   127   0022B2  07E4               	dw	2020
   128                           
   129                           ;initializer for _day
   130   0022B4  0001               	dw	1
   131                           
   132                           ;initializer for _test_mode
   133   0022B6  0001               	dw	1
   134   000000                     _T0CON0bits	set	4053
   135   000000                     _T0CON1bits	set	4054
   136   000000                     _CM1CON1bits	set	3793
   137   000000                     _LATHbits	set	3968
   138   000000                     _TRISHbits	set	3976
   139   000000                     _PORTAbits	set	3977
   140   000000                     _PORTGbits	set	3983
   141   000000                     _PIE0bits	set	3625
   142   000000                     _DAC1CON0bits	set	3782
   143   000000                     _LATAbits	set	3961
   144   000000                     _LATGbits	set	3967
   145   000000                     _TRISAbits	set	3969
   146   000000                     _TRISGbits	set	3975
   147   000000                     _TRISEbits	set	3973
   148   000000                     _TRISCbits	set	3971
   149   000000                     _TRISBbits	set	3970
   150   000000                     _TRISFbits	set	3974
   151   000000                     _TMR0L	set	4051
   152   000000                     _TMR0H	set	4052
   153   000000                     _INTCONbits	set	4082
   154   000000                     _PORTBbits	set	3978
   155   000000                     _PORTFbits	set	3982
   156   000000                     _LATEbits	set	3965
   157   000000                     _LATCbits	set	3963
   158   000000                     _LATBbits	set	3962
   159   000000                     _LATFbits	set	3966
   160   000000                     _CM1CON0bits	set	3792
   161   000000                     _CM1NCHbits	set	3794
   162   000000                     _DAC1CON1bits	set	3783
   163   000000                     _ADREFbits	set	3928
   164   000000                     _CM1PCHbits	set	3795
   165   000000                     _PIE2bits	set	3627
   166   000000                     _PIR0bits	set	3635
   167   000000                     _ANSELAbits	set	3730
   168   000000                     _ADPCH	set	3935
   169   000000                     _ADRESH	set	3940
   170   000000                     _ADCON0bits	set	3936
   171                           
   172                           	psect	smallconst
   173   000E00                     __psmallconst:
   174                           	callstack 0
   175   000E00  00                 	db	0
   176   000E01                     STR_9:
   177                           
   178                           ; BSR set to: 0
   179   000E01  25                 	db	37
   180   000E02  30                 	db	48	;'0'
   181   000E03  31                 	db	49	;'1'
   182   000E04  75                 	db	117	;'u'
   183   000E05  00                 	db	0
   184   000E06                     STR_10:
   185                           
   186                           ; BSR set to: 0
   187   000E06  25                 	db	37
   188   000E07  30                 	db	48	;'0'
   189   000E08  32                 	db	50	;'2'
   190   000E09  75                 	db	117	;'u'
   191   000E0A  00                 	db	0
   192   000E0B                     STR_11:
   193                           
   194                           ; BSR set to: 0
   195   000E0B  25                 	db	37
   196   000E0C  30                 	db	48	;'0'
   197   000E0D  33                 	db	51	;'3'
   198   000E0E  75                 	db	117	;'u'
   199   000E0F  00                 	db	0
   200   000E10                     STR_3:
   201                           
   202                           ; BSR set to: 0
   203   000E10  57                 	db	87	;'W'
   204   000E11  45                 	db	69	;'E'
   205   000E12  44                 	db	68	;'D'
   206   000E13  00                 	db	0
   207   000E14                     STR_2:
   208                           
   209                           ; BSR set to: 0
   210   000E14  54                 	db	84	;'T'
   211   000E15  55                 	db	85	;'U'
   212   000E16  45                 	db	69	;'E'
   213   000E17  00                 	db	0
   214   000E18                     STR_5:
   215                           
   216                           ; BSR set to: 0
   217   000E18  46                 	db	70	;'F'
   218   000E19  52                 	db	82	;'R'
   219   000E1A  49                 	db	73	;'I'
   220   000E1B  00                 	db	0
   221   000E1C                     STR_1:
   222                           
   223                           ; BSR set to: 0
   224   000E1C  4D                 	db	77	;'M'
   225   000E1D  4F                 	db	79	;'O'
   226   000E1E  4E                 	db	78	;'N'
   227   000E1F  00                 	db	0
   228   000E20                     STR_7:
   229                           
   230                           ; BSR set to: 0
   231   000E20  53                 	db	83	;'S'
   232   000E21  55                 	db	85	;'U'
   233   000E22  4E                 	db	78	;'N'
   234   000E23  00                 	db	0
   235   000E24                     STR_6:
   236                           
   237                           ; BSR set to: 0
   238   000E24  53                 	db	83	;'S'
   239   000E25  41                 	db	65	;'A'
   240   000E26  54                 	db	84	;'T'
   241   000E27  00                 	db	0
   242   000E28                     STR_4:
   243                           
   244                           ; BSR set to: 0
   245   000E28  54                 	db	84	;'T'
   246   000E29  48                 	db	72	;'H'
   247   000E2A  55                 	db	85	;'U'
   248   000E2B  00                 	db	0
   249   000E2C                     STR_8:
   250                           
   251                           ; BSR set to: 0
   252   000E2C  25                 	db	37
   253   000E2D  75                 	db	117	;'u'
   254   000E2E  00                 	db	0
   255   000E2F  00                 	db	0	; dummy byte at the end
   256   000000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260   001FFE                     __pcinit:
   261                           	callstack 0
   262   001FFE                     start_initialization:
   263                           	callstack 0
   264   001FFE                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK0 (36 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269   001FFE  0E94               	movlw	low __pidataBANK0
   270   002000  6EF6               	movwf	tblptrl,c
   271   002002  0E22               	movlw	high __pidataBANK0
   272   002004  6EF7               	movwf	tblptrh,c
   273   002006  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274   002008  6EF8               	movwf	tblptru,c
   275   00200A  EE00  F0B2         	lfsr	0,__pdataBANK0
   276   00200E  EE10 F024          	lfsr	1,36
   277   002012                     copy_data0:
   278   002012  0009               	tblrd		*+
   279   002014  CFF5 FFEE          	movff	tablat,postinc0
   280   002018  50E5               	movf	postdec1,w,c
   281   00201A  50E1               	movf	fsr1l,w,c
   282   00201C  E1FA               	bnz	copy_data0
   283                           
   284                           ; Initialize objects allocated to COMRAM (2 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286   00201E  0E4C               	movlw	low __pidataCOMRAM
   287   002020  6EF6               	movwf	tblptrl,c
   288   002022  0E23               	movlw	high __pidataCOMRAM
   289   002024  6EF7               	movwf	tblptrh,c
   290   002026  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291   002028  6EF8               	movwf	tblptru,c
   292   00202A  0009               	tblrd		*+	;fetch initializer
   293   00202C  CFF5 F052          	movff	tablat,__pdataCOMRAM
   294   002030  0009               	tblrd		*+	;fetch initializer
   295   002032  CFF5 F053          	movff	tablat,__pdataCOMRAM+1
   296                           
   297                           ; Clear objects allocated to BANK1 (32 bytes)
   298   002036  EE01  F000         	lfsr	0,__pbssBANK1
   299   00203A  0E20               	movlw	32
   300   00203C                     clear_0:
   301   00203C  6AEE               	clrf	postinc0,c
   302   00203E  06E8               	decf	wreg,f,c
   303   002040  E1FD               	bnz	clear_0
   304                           
   305                           ; Clear objects allocated to BANK0 (26 bytes)
   306   002042  EE00  F0D6         	lfsr	0,__pbssBANK0
   307   002046  0E1A               	movlw	26
   308   002048                     clear_1:
   309   002048  6AEE               	clrf	postinc0,c
   310   00204A  06E8               	decf	wreg,f,c
   311   00204C  E1FD               	bnz	clear_1
   312                           
   313                           ; Clear objects allocated to COMRAM (3 bytes)
   314   00204E  6A51               	clrf	(__pbssCOMRAM+2)& (0+255),c
   315   002050  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   316   002052  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   317   002054                     end_of_initialization:
   318                           	callstack 0
   319   002054                     __end_of__initialization:
   320                           	callstack 0
   321   002054  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322   002056  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323   002058  0100               	movlb	0
   324   00205A  EF7D  F009         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMRAM
   327   00004F                     __pbssCOMRAM:
   328                           	callstack 0
   329   00004F                     _month:
   330                           	callstack 0
   331   00004F                     	ds	2
   332   000051                     _flags:
   333                           	callstack 0
   334   000051                     	ds	1
   335                           
   336                           	psect	dataCOMRAM
   337   000052                     __pdataCOMRAM:
   338                           	callstack 0
   339   000052                     _week_day:
   340                           	callstack 0
   341   000052                     	ds	2
   342                           
   343                           	psect	bssBANK0
   344   0000D6                     __pbssBANK0:
   345                           	callstack 0
   346   0000D6                     	ds	16
   347   0000E6                     _width:
   348                           	callstack 0
   349   0000E6                     	ds	2
   350   0000E8                     _prec:
   351                           	callstack 0
   352   0000E8                     	ds	2
   353   0000EA                     _hours:
   354                           	callstack 0
   355   0000EA                     	ds	2
   356   0000EC                     _minutes:
   357                           	callstack 0
   358   0000EC                     	ds	2
   359   0000EE                     _seconds:
   360                           	callstack 0
   361   0000EE                     	ds	2
   362                           
   363                           	psect	dataBANK0
   364   0000B2                     __pdataBANK0:
   365                           	callstack 0
   366   0000B2                     _month_days:
   367                           	callstack 0
   368   0000B2                     	ds	26
   369   0000CC                     main@F14258:
   370                           	callstack 0
   371   0000CC                     	ds	4
   372   0000D0                     _year:
   373                           	callstack 0
   374   0000D0                     	ds	2
   375   0000D2                     _day:
   376                           	callstack 0
   377   0000D2                     	ds	2
   378   0000D4                     _test_mode:
   379                           	callstack 0
   380   0000D4                     	ds	2
   381                           
   382                           	psect	bssBANK1
   383   000100                     __pbssBANK1:
   384                           	callstack 0
   385   000100                     _dbuf:
   386                           	callstack 0
   387   000100                     	ds	32
   388                           
   389                           	psect	cstackBANK0
   390   000060                     __pcstackBANK0:
   391                           	callstack 0
   392   000060                     vfpfcnvrt@convarg:
   393                           	callstack 0
   394                           
   395                           ; 8 bytes @ 0x0
   396   000060                     	ds	8
   397   000068                     vfpfcnvrt@done:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x8
   401   000068                     	ds	2
   402   00006A                     vfpfcnvrt@cp:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0xA
   406   00006A                     	ds	2
   407   00006C                     ?_vfprintf:
   408                           	callstack 0
   409   00006C                     vfprintf@fp:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0xC
   413   00006C                     	ds	2
   414   00006E                     vfprintf@fmt:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0xE
   418   00006E                     	ds	2
   419   000070                     vfprintf@ap:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x10
   423   000070                     	ds	2
   424   000072                     ?_sprintf:
   425                           	callstack 0
   426   000072                     sprintf@s:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x12
   430   000072                     	ds	2
   431   000074                     sprintf@fmt:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x14
   435   000074                     	ds	4
   436   000078                     sprintf@ap:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x18
   440   000078                     	ds	2
   441   00007A                     sprintf@f:
   442                           	callstack 0
   443                           
   444                           ; 11 bytes @ 0x1A
   445   00007A                     	ds	11
   446   000085                     ADC2String@buf:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x25
   450   000085                     	ds	2
   451   000087                     ADC2String@x:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x27
   455   000087                     	ds	2
   456   000089                     ADC2String@leading_zeros:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x29
   460   000089                     	ds	2
   461   00008B                     main@day_of_the_week:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x2B
   465   00008B                     	ds	4
   466   00008F                     main@Yea:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x2F
   470   00008F                     	ds	4
   471   000093                     main@ADC:
   472                           	callstack 0
   473                           
   474                           ; 3 bytes @ 0x33
   475   000093                     	ds	3
   476   000096                     main@lst:
   477                           	callstack 0
   478                           
   479                           ; 16 bytes @ 0x36
   480   000096                     	ds	16
   481   0000A6                     main@Sec:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x46
   485   0000A6                     	ds	2
   486   0000A8                     main@Min:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x48
   490   0000A8                     	ds	2
   491   0000AA                     main@Hou:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x4A
   495   0000AA                     	ds	2
   496   0000AC                     main@Day:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x4C
   500   0000AC                     	ds	2
   501   0000AE                     main@Mon:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x4E
   505   0000AE                     	ds	2
   506   0000B0                     main@curr_hour:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x50
   510   0000B0                     	ds	2
   511                           
   512                           	psect	cstackCOMRAM
   513   000001                     __pcstackCOMRAM:
   514                           	callstack 0
   515   000001                     ??_increment_seconds:
   516   000001                     
   517                           ; 1 bytes @ 0x0
   518   000001                     	ds	2
   519   000003                     ??_HighISR:
   520                           
   521                           ; 1 bytes @ 0x2
   522   000003                     	ds	3
   523   000006                     ?_get_seconds:
   524                           	callstack 0
   525   000006                     ?_get_minutes:
   526                           	callstack 0
   527   000006                     ?_get_hours:
   528                           	callstack 0
   529   000006                     ?_get_day:
   530                           	callstack 0
   531   000006                     ?_get_month:
   532                           	callstack 0
   533   000006                     ?_get_year:
   534                           	callstack 0
   535   000006                     ?_ADC_getval:
   536                           	callstack 0
   537   000006                     ?_get_week_day:
   538                           	callstack 0
   539   000006                     ?_isdigit:
   540                           	callstack 0
   541   000006                     ?_isspace:
   542                           	callstack 0
   543   000006                     ?___wmul:
   544                           	callstack 0
   545   000006                     ?___lodiv:
   546                           	callstack 0
   547   000006                     ?___lomod:
   548                           	callstack 0
   549   000006                     LCD_sendnibble@number:
   550                           	callstack 0
   551   000006                     ___wmul@multiplier:
   552                           	callstack 0
   553   000006                     isdigit@c:
   554                           	callstack 0
   555   000006                     isspace@c:
   556                           	callstack 0
   557   000006                     fputc@c:
   558                           	callstack 0
   559   000006                     ___lodiv@dividend:
   560                           	callstack 0
   561   000006                     ___lomod@dividend:
   562                           	callstack 0
   563                           
   564                           ; 8 bytes @ 0x5
   565   000006                     	ds	1
   566   000007                     LCD_sendbyte@type:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x6
   570   000007                     	ds	1
   571   000008                     ??_isdigit:
   572   000008                     ??_isspace:
   573   000008                     LCD_sendbyte@Byte:
   574                           	callstack 0
   575   000008                     ADC_getval@tmpval:
   576                           	callstack 0
   577   000008                     ___wmul@multiplicand:
   578                           	callstack 0
   579   000008                     fputc@fp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x7
   583   000008                     	ds	1
   584   000009                     ??_LCD_Init:
   585   000009                     ??_LCD_clear:
   586   000009                     LCD_setline@line:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x8
   590   000009                     	ds	1
   591   00000A                     ??_fputc:
   592   00000A                     _isspace$2064:
   593                           	callstack 0
   594   00000A                     ___wmul@product:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x9
   598   00000A                     	ds	1
   599   00000B                     LCD_sendstring@strlst:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0xA
   603   00000B                     	ds	1
   604   00000C                     ?_atoi:
   605                           	callstack 0
   606   00000C                     atoi@s:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0xB
   610   00000C                     	ds	1
   611   00000D                     ??_LCD_sendstring:
   612                           
   613                           ; 1 bytes @ 0xC
   614   00000D                     	ds	1
   615   00000E                     ??_atoi:
   616   00000E                     ___lodiv@divisor:
   617                           	callstack 0
   618   00000E                     ___lomod@divisor:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0xD
   622   00000E                     	ds	1
   623   00000F                     LCD_sendstring@i:
   624                           	callstack 0
   625   00000F                     fputs@s:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0xE
   629   00000F                     	ds	2
   630   000011                     atoi@neg:
   631                           	callstack 0
   632   000011                     fputs@fp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x10
   636   000011                     	ds	2
   637   000013                     fputs@c:
   638                           	callstack 0
   639   000013                     atoi@n:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x12
   643   000013                     	ds	1
   644   000014                     fputs@i:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x13
   648   000014                     	ds	2
   649   000016                     ___lomod@counter:
   650                           	callstack 0
   651   000016                     pad@fp:
   652                           	callstack 0
   653   000016                     ___lodiv@quotient:
   654                           	callstack 0
   655                           
   656                           ; 8 bytes @ 0x15
   657   000016                     	ds	2
   658   000018                     pad@buf:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x17
   662   000018                     	ds	2
   663   00001A                     pad@p:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x19
   667   00001A                     	ds	2
   668   00001C                     ??_pad:
   669                           
   670                           ; 1 bytes @ 0x1B
   671   00001C                     	ds	1
   672   00001D                     pad@i:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x1C
   676   00001D                     	ds	1
   677   00001E                     ___lodiv@counter:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x1D
   681   00001E                     	ds	1
   682   00001F                     pad@w:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x1E
   686   00001F                     	ds	2
   687   000021                     utoa@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x20
   691   000021                     	ds	2
   692   000023                     utoa@d:
   693                           	callstack 0
   694                           
   695                           ; 8 bytes @ 0x22
   696   000023                     	ds	8
   697   00002B                     ??_utoa:
   698                           
   699                           ; 1 bytes @ 0x2A
   700   00002B                     	ds	8
   701   000033                     utoa@p:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x32
   705   000033                     	ds	2
   706   000035                     utoa@w:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x34
   710   000035                     	ds	2
   711   000037                     utoa@n:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0x36
   715   000037                     	ds	8
   716   00003F                     utoa@i:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x3E
   720   00003F                     	ds	2
   721   000041                     vfpfcnvrt@fp:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x40
   725   000041                     	ds	2
   726   000043                     vfpfcnvrt@fmt:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x42
   730   000043                     	ds	2
   731   000045                     vfpfcnvrt@ap:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x44
   735   000045                     	ds	2
   736   000047                     ??_vfpfcnvrt:
   737                           
   738                           ; 1 bytes @ 0x46
   739   000047                     	ds	4
   740   00004B                     vfprintf@cfmt:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x4A
   744   00004B                     	ds	2
   745   00004D                     ??_main:
   746                           
   747                           ; 1 bytes @ 0x4C
   748   00004D                     	ds	2
   749                           
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 19 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  lst            16   54[BANK0 ] PTR unsigned char [8]
   760 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
   761 ;;		 -> STR_3(4), STR_2(4), STR_1(4), NULL(0), 
   762 ;;		 -> main@ADC(3), main@Yea(4), main@Mon(2), main@Day(2), 
   763 ;;		 -> main@Hou(2), main@Min(2), main@Sec(2), 
   764 ;;  curr_hour       2   80[BANK0 ] unsigned int 
   765 ;;  Yea             4   47[BANK0 ] unsigned char [4]
   766 ;;  day_of_the_w    4   43[BANK0 ] unsigned char [4]
   767 ;;  ADC             3   51[BANK0 ] unsigned char [3]
   768 ;;  Mon             2   78[BANK0 ] unsigned char [2]
   769 ;;  Day             2   76[BANK0 ] unsigned char [2]
   770 ;;  Hou             2   74[BANK0 ] unsigned char [2]
   771 ;;  Min             2   72[BANK0 ] unsigned char [2]
   772 ;;  Sec             2   70[BANK0 ] unsigned char [2]
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   783 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   785 ;;      Totals:         2      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   786 ;;Total ram usage:       41 bytes
   787 ;; Hardware stack levels required when called: 11
   788 ;; This function calls:
   789 ;;		_ADC2String
   790 ;;		_ADC_getval
   791 ;;		_ADC_init
   792 ;;		_Interrupts_init
   793 ;;		_LCD_Init
   794 ;;		_LCD_clear
   795 ;;		_LCD_sendstring
   796 ;;		_Timer0_init
   797 ;;		_get_day
   798 ;;		_get_hours
   799 ;;		_get_minutes
   800 ;;		_get_month
   801 ;;		_get_seconds
   802 ;;		_get_week_day
   803 ;;		_get_year
   804 ;; This function is called by:
   805 ;;		Startup code after reset
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text0
   810   0012FA                     __ptext0:
   811                           	callstack 0
   812   0012FA                     _main:
   813                           	callstack 20
   814   0012FA                     
   815                           ;main.c: 22:     Timer0_init();
   816   0012FA  ECA5  F010         	call	_Timer0_init	;wreg free
   817   0012FE                     
   818                           ;main.c: 23:     Interrupts_init();
   819   0012FE  EC82  F011         	call	_Interrupts_init	;wreg free
   820   001302                     
   821                           ;main.c: 24:     LCD_Init();
   822   001302  EC78  F00F         	call	_LCD_Init	;wreg free
   823   001306                     
   824                           ;main.c: 25:     ADC_init();
   825   001306  EC6E  F011         	call	_ADC_init	;wreg free
   826   00130A                     
   827                           ;main.c: 27:     TRISHbits.TRISH3 = 0;
   828   00130A  9688               	bcf	136,3,c	;volatile
   829   00130C                     
   830                           ;main.c: 29:     char Sec[2];;main.c: 30:     char Min[2];;main.c: 31:     char Hou[2];;
      +                          main.c: 32:     char Day[2];;main.c: 33:     char Mon[2];;main.c: 34:     char Yea[4];;m
      +                          ain.c: 35:     char ADC[3];;main.c: 36:     char day_of_the_week[] = {"MON","TUE","WED",
      +                          "THU","FRI","SAT","SUN"};
   831   00130C  C0CC  F08B         	movff	main@F14258,main@day_of_the_week
   832   001310  C0CD  F08C         	movff	main@F14258+1,main@day_of_the_week+1
   833   001314  C0CE  F08D         	movff	main@F14258+2,main@day_of_the_week+2
   834   001318  C0CF  F08E         	movff	main@F14258+3,main@day_of_the_week+3
   835   00131C                     l2937:
   836                           
   837                           ;main.c: 38:         LCD_clear();
   838   00131C  ECE9  F010         	call	_LCD_clear	;wreg free
   839   001320                     
   840                           ;main.c: 40:         ADC2String(Sec, get_seconds(), 2);
   841   001320  0EA6               	movlw	low main@Sec
   842   001322  0100               	movlb	0	; () banked
   843   001324  6F85               	movwf	ADC2String@buf& (0+255),b
   844   001326  0E00               	movlw	high main@Sec
   845   001328  6F86               	movwf	(ADC2String@buf+1)& (0+255),b
   846   00132A  EC8D  F011         	call	_get_seconds	;wreg free
   847   00132E  C006  F087         	movff	?_get_seconds,ADC2String@x
   848   001332  C007  F088         	movff	?_get_seconds+1,ADC2String@x+1
   849   001336  0E00               	movlw	0
   850   001338  0100               	movlb	0	; () banked
   851   00133A  6F8A               	movwf	(ADC2String@leading_zeros+1)& (0+255),b
   852   00133C  0E02               	movlw	2
   853   00133E  6F89               	movwf	ADC2String@leading_zeros& (0+255),b
   854   001340  ECC7  F00E         	call	_ADC2String	;wreg free
   855   001344                     
   856                           ;main.c: 41:         ADC2String(Min, get_minutes(), 2);
   857   001344  0EA8               	movlw	low main@Min
   858   001346  0100               	movlb	0	; () banked
   859   001348  6F85               	movwf	ADC2String@buf& (0+255),b
   860   00134A  0E00               	movlw	high main@Min
   861   00134C  6F86               	movwf	(ADC2String@buf+1)& (0+255),b
   862   00134E  EC97  F011         	call	_get_minutes	;wreg free
   863   001352  C006  F087         	movff	?_get_minutes,ADC2String@x
   864   001356  C007  F088         	movff	?_get_minutes+1,ADC2String@x+1
   865   00135A  0E00               	movlw	0
   866   00135C  0100               	movlb	0	; () banked
   867   00135E  6F8A               	movwf	(ADC2String@leading_zeros+1)& (0+255),b
   868   001360  0E02               	movlw	2
   869   001362  6F89               	movwf	ADC2String@leading_zeros& (0+255),b
   870   001364  ECC7  F00E         	call	_ADC2String	;wreg free
   871   001368                     
   872                           ;main.c: 42:         ADC2String(Hou, get_hours(), 2);
   873   001368  0EAA               	movlw	low main@Hou
   874   00136A  0100               	movlb	0	; () banked
   875   00136C  6F85               	movwf	ADC2String@buf& (0+255),b
   876   00136E  0E00               	movlw	high main@Hou
   877   001370  6F86               	movwf	(ADC2String@buf+1)& (0+255),b
   878   001372  EC9C  F011         	call	_get_hours	;wreg free
   879   001376  C006  F087         	movff	?_get_hours,ADC2String@x
   880   00137A  C007  F088         	movff	?_get_hours+1,ADC2String@x+1
   881   00137E  0E00               	movlw	0
   882   001380  0100               	movlb	0	; () banked
   883   001382  6F8A               	movwf	(ADC2String@leading_zeros+1)& (0+255),b
   884   001384  0E02               	movlw	2
   885   001386  6F89               	movwf	ADC2String@leading_zeros& (0+255),b
   886   001388  ECC7  F00E         	call	_ADC2String	;wreg free
   887   00138C                     
   888                           ;main.c: 43:         ADC2String(Day, get_day(), 2);
   889   00138C  0EAC               	movlw	low main@Day
   890   00138E  0100               	movlb	0	; () banked
   891   001390  6F85               	movwf	ADC2String@buf& (0+255),b
   892   001392  0E00               	movlw	high main@Day
   893   001394  6F86               	movwf	(ADC2String@buf+1)& (0+255),b
   894   001396  ECA1  F011         	call	_get_day	;wreg free
   895   00139A  C006  F087         	movff	?_get_day,ADC2String@x
   896   00139E  C007  F088         	movff	?_get_day+1,ADC2String@x+1
   897   0013A2  0E00               	movlw	0
   898   0013A4  0100               	movlb	0	; () banked
   899   0013A6  6F8A               	movwf	(ADC2String@leading_zeros+1)& (0+255),b
   900   0013A8  0E02               	movlw	2
   901   0013AA  6F89               	movwf	ADC2String@leading_zeros& (0+255),b
   902   0013AC  ECC7  F00E         	call	_ADC2String	;wreg free
   903   0013B0                     
   904                           ;main.c: 44:         ADC2String(Mon, get_month()+1, 2);
   905   0013B0  0EAE               	movlw	low main@Mon
   906   0013B2  0100               	movlb	0	; () banked
   907   0013B4  6F85               	movwf	ADC2String@buf& (0+255),b
   908   0013B6  0E00               	movlw	high main@Mon
   909   0013B8  6F86               	movwf	(ADC2String@buf+1)& (0+255),b
   910   0013BA  EC92  F011         	call	_get_month	;wreg free
   911   0013BE  0E01               	movlw	1
   912   0013C0  2406               	addwf	?_get_month^0,w,c
   913   0013C2  0100               	movlb	0	; () banked
   914   0013C4  6F87               	movwf	ADC2String@x& (0+255),b
   915   0013C6  0E00               	movlw	0
   916   0013C8  2007               	addwfc	(?_get_month+1)^0,w,c
   917   0013CA  6F88               	movwf	(ADC2String@x+1)& (0+255),b
   918   0013CC  0E00               	movlw	0
   919   0013CE  6F8A               	movwf	(ADC2String@leading_zeros+1)& (0+255),b
   920   0013D0  0E02               	movlw	2
   921   0013D2  6F89               	movwf	ADC2String@leading_zeros& (0+255),b
   922   0013D4  ECC7  F00E         	call	_ADC2String	;wreg free
   923   0013D8                     
   924                           ;main.c: 45:         ADC2String(Yea, get_year(), 4);
   925   0013D8  0E8F               	movlw	low main@Yea
   926   0013DA  0100               	movlb	0	; () banked
   927   0013DC  6F85               	movwf	ADC2String@buf& (0+255),b
   928   0013DE  0E00               	movlw	high main@Yea
   929   0013E0  6F86               	movwf	(ADC2String@buf+1)& (0+255),b
   930   0013E2  EC88  F011         	call	_get_year	;wreg free
   931   0013E6  C006  F087         	movff	?_get_year,ADC2String@x
   932   0013EA  C007  F088         	movff	?_get_year+1,ADC2String@x+1
   933   0013EE  0E00               	movlw	0
   934   0013F0  0100               	movlb	0	; () banked
   935   0013F2  6F8A               	movwf	(ADC2String@leading_zeros+1)& (0+255),b
   936   0013F4  0E04               	movlw	4
   937   0013F6  6F89               	movwf	ADC2String@leading_zeros& (0+255),b
   938   0013F8  ECC7  F00E         	call	_ADC2String	;wreg free
   939   0013FC                     
   940                           ;main.c: 46:         ADC2String(ADC, ADC_getval(), 3);
   941   0013FC  0E93               	movlw	low main@ADC
   942   0013FE  0100               	movlb	0	; () banked
   943   001400  6F85               	movwf	ADC2String@buf& (0+255),b
   944   001402  0E00               	movlw	high main@ADC
   945   001404  6F86               	movwf	(ADC2String@buf+1)& (0+255),b
   946   001406  EC09  F011         	call	_ADC_getval	;wreg free
   947   00140A  C006  F087         	movff	?_ADC_getval,ADC2String@x
   948   00140E  C007  F088         	movff	?_ADC_getval+1,ADC2String@x+1
   949   001412  0E00               	movlw	0
   950   001414  0100               	movlb	0	; () banked
   951   001416  6F8A               	movwf	(ADC2String@leading_zeros+1)& (0+255),b
   952   001418  0E03               	movlw	3
   953   00141A  6F89               	movwf	ADC2String@leading_zeros& (0+255),b
   954   00141C  ECC7  F00E         	call	_ADC2String	;wreg free
   955   001420                     
   956                           ;main.c: 48:         char *lst[8] = {get_week_day(),Day,Mon,Yea,Hou,Min,Sec,ADC};
   957   001420  EE20  F096         	lfsr	2,main@lst
   958   001424  0E0F               	movlw	15
   959   001426                     u2301:
   960   001426  6ADE               	clrf	postinc2,c
   961   001428  06E8               	decf	wreg,f,c
   962   00142A  E2FD               	bc	u2301
   963   00142C  EC8B  F00D         	call	_get_week_day	;wreg free
   964   001430  C006  F096         	movff	?_get_week_day,main@lst
   965   001434  C007  F097         	movff	?_get_week_day+1,main@lst+1
   966   001438  0EAC               	movlw	low main@Day
   967   00143A  0100               	movlb	0	; () banked
   968   00143C  6F98               	movwf	(main@lst+2)& (0+255),b
   969   00143E  0E00               	movlw	high main@Day
   970   001440  6F99               	movwf	(main@lst+3)& (0+255),b
   971   001442                     
   972                           ; BSR set to: 0
   973   001442  0EAE               	movlw	low main@Mon
   974   001444  6F9A               	movwf	(main@lst+4)& (0+255),b
   975   001446  0E00               	movlw	high main@Mon
   976   001448  6F9B               	movwf	(main@lst+5)& (0+255),b
   977   00144A                     
   978                           ; BSR set to: 0
   979   00144A  0E8F               	movlw	low main@Yea
   980   00144C  6F9C               	movwf	(main@lst+6)& (0+255),b
   981   00144E  0E00               	movlw	high main@Yea
   982   001450  6F9D               	movwf	(main@lst+7)& (0+255),b
   983   001452                     
   984                           ; BSR set to: 0
   985   001452  0EAA               	movlw	low main@Hou
   986   001454  6F9E               	movwf	(main@lst+8)& (0+255),b
   987   001456  0E00               	movlw	high main@Hou
   988   001458  6F9F               	movwf	(main@lst+9)& (0+255),b
   989   00145A                     
   990                           ; BSR set to: 0
   991   00145A  0EA8               	movlw	low main@Min
   992   00145C  6FA0               	movwf	(main@lst+10)& (0+255),b
   993   00145E  0E00               	movlw	high main@Min
   994   001460  6FA1               	movwf	(main@lst+11)& (0+255),b
   995   001462                     
   996                           ; BSR set to: 0
   997   001462  0EA6               	movlw	low main@Sec
   998   001464  6FA2               	movwf	(main@lst+12)& (0+255),b
   999   001466  0E00               	movlw	high main@Sec
  1000   001468  6FA3               	movwf	(main@lst+13)& (0+255),b
  1001   00146A                     
  1002                           ; BSR set to: 0
  1003   00146A  0E93               	movlw	low main@ADC
  1004   00146C  6FA4               	movwf	(main@lst+14)& (0+255),b
  1005   00146E  0E00               	movlw	high main@ADC
  1006   001470  6FA5               	movwf	(main@lst+15)& (0+255),b
  1007   001472                     
  1008                           ; BSR set to: 0
  1009                           ;main.c: 49:         LCD_sendstring(lst);
  1010   001472  0E96               	movlw	low main@lst
  1011   001474  6E0B               	movwf	LCD_sendstring@strlst^0,c
  1012   001476  0E00               	movlw	high main@lst
  1013   001478  6E0C               	movwf	(LCD_sendstring@strlst+1)^0,c
  1014   00147A  EC6E  F00A         	call	_LCD_sendstring	;wreg free
  1015   00147E                     
  1016                           ;main.c: 52:         unsigned int curr_hour = get_hours();
  1017   00147E  EC9C  F011         	call	_get_hours	;wreg free
  1018   001482  C006  F0B0         	movff	?_get_hours,main@curr_hour
  1019   001486  C007  F0B1         	movff	?_get_hours+1,main@curr_hour+1
  1020   00148A                     
  1021                           ;main.c: 53:         if(curr_hour >= 1 && curr_hour < 5){
  1022   00148A  0100               	movlb	0	; () banked
  1023   00148C  51B0               	movf	main@curr_hour& (0+255),w,b
  1024   00148E  11B1               	iorwf	(main@curr_hour+1)& (0+255),w,b
  1025   001490  B4D8               	btfsc	status,2,c
  1026   001492  EF4D  F00A         	goto	u2311
  1027   001496  EF4F  F00A         	goto	u2310
  1028   00149A                     u2311:
  1029   00149A  EF5D  F00A         	goto	l110
  1030   00149E                     u2310:
  1031   00149E                     
  1032                           ; BSR set to: 0
  1033   00149E  51B1               	movf	(main@curr_hour+1)& (0+255),w,b
  1034   0014A0  E107               	bnz	u2321
  1035   0014A2  0E05               	movlw	5
  1036   0014A4  5DB0               	subwf	main@curr_hour& (0+255),w,b
  1037   0014A6  B0D8               	btfsc	status,0,c
  1038   0014A8  EF58  F00A         	goto	u2321
  1039   0014AC  EF5A  F00A         	goto	u2320
  1040   0014B0                     u2321:
  1041   0014B0  EF5D  F00A         	goto	l110
  1042   0014B4                     u2320:
  1043   0014B4                     
  1044                           ; BSR set to: 0
  1045                           ;main.c: 54:             LATHbits.LATH3 = 0;
  1046   0014B4  9680               	bcf	128,3,c	;volatile
  1047                           
  1048                           ;main.c: 55:         }else{
  1049   0014B6  EF5E  F00A         	goto	l2981
  1050   0014BA                     l110:
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;main.c: 56:             LATHbits.LATH3 = 1;
  1054   0014BA  8680               	bsf	128,3,c	;volatile
  1055   0014BC                     l2981:
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;main.c: 58:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1059   0014BC  0E09               	movlw	9
  1060   0014BE  6E4E               	movwf	(??_main+1)^0,c
  1061   0014C0  0E1E               	movlw	30
  1062   0014C2  6E4D               	movwf	??_main^0,c
  1063   0014C4  0EE4               	movlw	228
  1064   0014C6                     u2337:
  1065   0014C6  2EE8               	decfsz	wreg,f,c
  1066   0014C8  D7FE               	bra	u2337
  1067   0014CA  2E4D               	decfsz	??_main^0,f,c
  1068   0014CC  D7FC               	bra	u2337
  1069   0014CE  2E4E               	decfsz	(??_main+1)^0,f,c
  1070   0014D0  D7FA               	bra	u2337
  1071   0014D2  D000               	nop2	
  1072   0014D4  EF8E  F009         	goto	l2937
  1073   0014D8  EF41  F000         	goto	start
  1074   0014DC                     __end_of_main:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _get_year *****************
  1078 ;; Defined at:
  1079 ;;		line 121 in file "timers.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  2    5[COMRAM] unsigned int 
  1086 ;; Registers used:
  1087 ;;		None
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;Total ram usage:        2 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 2
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text1
  1108   002310                     __ptext1:
  1109                           	callstack 0
  1110   002310                     _get_year:
  1111                           	callstack 28
  1112   002310                     
  1113                           ;timers.c: 122:     return year;
  1114   002310  C0D0  F006         	movff	_year,?_get_year
  1115   002314  C0D1  F007         	movff	_year+1,?_get_year+1
  1116   002318  0012               	return		;funcret
  1117   00231A                     __end_of_get_year:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _get_week_day *****************
  1121 ;; Defined at:
  1122 ;;		line 100 in file "timers.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2    5[COMRAM] PTR const unsigned char 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1140 ;;Total ram usage:        2 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 2
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text2
  1151   001B16                     __ptext2:
  1152                           	callstack 0
  1153   001B16                     _get_week_day:
  1154                           	callstack 28
  1155   001B16                     
  1156                           ;timers.c: 101:     if(week_day == 0){
  1157   001B16  5052               	movf	_week_day^0,w,c
  1158   001B18  1053               	iorwf	(_week_day+1)^0,w,c
  1159   001B1A  A4D8               	btfss	status,2,c
  1160   001B1C  EF92  F00D         	goto	u1581
  1161   001B20  EF94  F00D         	goto	u1580
  1162   001B24                     u1581:
  1163   001B24  EF9A  F00D         	goto	l2375
  1164   001B28                     u1580:
  1165   001B28                     
  1166                           ;timers.c: 102:         return("MON");
  1167   001B28  0E1C               	movlw	low STR_1
  1168   001B2A  6E06               	movwf	?_get_week_day^0,c
  1169   001B2C  0E0E               	movlw	high STR_1
  1170   001B2E  6E07               	movwf	(?_get_week_day+1)^0,c
  1171   001B30  EFF9  F00D         	goto	l229
  1172   001B34                     l2375:
  1173   001B34  0452               	decf	_week_day^0,w,c
  1174   001B36  1053               	iorwf	(_week_day+1)^0,w,c
  1175   001B38  A4D8               	btfss	status,2,c
  1176   001B3A  EFA1  F00D         	goto	u1591
  1177   001B3E  EFA3  F00D         	goto	u1590
  1178   001B42                     u1591:
  1179   001B42  EFA9  F00D         	goto	l2383
  1180   001B46                     u1590:
  1181   001B46                     
  1182                           ;timers.c: 104:         return("TUE");
  1183   001B46  0E14               	movlw	low STR_2
  1184   001B48  6E06               	movwf	?_get_week_day^0,c
  1185   001B4A  0E0E               	movlw	high STR_2
  1186   001B4C  6E07               	movwf	(?_get_week_day+1)^0,c
  1187   001B4E  EFF9  F00D         	goto	l229
  1188   001B52                     l2383:
  1189   001B52  0E02               	movlw	2
  1190   001B54  1852               	xorwf	_week_day^0,w,c
  1191   001B56  1053               	iorwf	(_week_day+1)^0,w,c
  1192   001B58  A4D8               	btfss	status,2,c
  1193   001B5A  EFB1  F00D         	goto	u1601
  1194   001B5E  EFB3  F00D         	goto	u1600
  1195   001B62                     u1601:
  1196   001B62  EFB9  F00D         	goto	l2391
  1197   001B66                     u1600:
  1198   001B66                     
  1199                           ;timers.c: 106:         return("WED");
  1200   001B66  0E10               	movlw	low STR_3
  1201   001B68  6E06               	movwf	?_get_week_day^0,c
  1202   001B6A  0E0E               	movlw	high STR_3
  1203   001B6C  6E07               	movwf	(?_get_week_day+1)^0,c
  1204   001B6E  EFF9  F00D         	goto	l229
  1205   001B72                     l2391:
  1206   001B72  0E03               	movlw	3
  1207   001B74  1852               	xorwf	_week_day^0,w,c
  1208   001B76  1053               	iorwf	(_week_day+1)^0,w,c
  1209   001B78  A4D8               	btfss	status,2,c
  1210   001B7A  EFC1  F00D         	goto	u1611
  1211   001B7E  EFC3  F00D         	goto	u1610
  1212   001B82                     u1611:
  1213   001B82  EFC9  F00D         	goto	l2399
  1214   001B86                     u1610:
  1215   001B86                     
  1216                           ;timers.c: 108:         return("THU");
  1217   001B86  0E28               	movlw	low STR_4
  1218   001B88  6E06               	movwf	?_get_week_day^0,c
  1219   001B8A  0E0E               	movlw	high STR_4
  1220   001B8C  6E07               	movwf	(?_get_week_day+1)^0,c
  1221   001B8E  EFF9  F00D         	goto	l229
  1222   001B92                     l2399:
  1223   001B92  0E04               	movlw	4
  1224   001B94  1852               	xorwf	_week_day^0,w,c
  1225   001B96  1053               	iorwf	(_week_day+1)^0,w,c
  1226   001B98  A4D8               	btfss	status,2,c
  1227   001B9A  EFD1  F00D         	goto	u1621
  1228   001B9E  EFD3  F00D         	goto	u1620
  1229   001BA2                     u1621:
  1230   001BA2  EFD9  F00D         	goto	l2407
  1231   001BA6                     u1620:
  1232   001BA6                     
  1233                           ;timers.c: 110:         return("FRI");
  1234   001BA6  0E18               	movlw	low STR_5
  1235   001BA8  6E06               	movwf	?_get_week_day^0,c
  1236   001BAA  0E0E               	movlw	high STR_5
  1237   001BAC  6E07               	movwf	(?_get_week_day+1)^0,c
  1238   001BAE  EFF9  F00D         	goto	l229
  1239   001BB2                     l2407:
  1240   001BB2  0E05               	movlw	5
  1241   001BB4  1852               	xorwf	_week_day^0,w,c
  1242   001BB6  1053               	iorwf	(_week_day+1)^0,w,c
  1243   001BB8  A4D8               	btfss	status,2,c
  1244   001BBA  EFE1  F00D         	goto	u1631
  1245   001BBE  EFE3  F00D         	goto	u1630
  1246   001BC2                     u1631:
  1247   001BC2  EFE9  F00D         	goto	l2415
  1248   001BC6                     u1630:
  1249   001BC6                     
  1250                           ;timers.c: 112:         return("SAT");
  1251   001BC6  0E24               	movlw	low STR_6
  1252   001BC8  6E06               	movwf	?_get_week_day^0,c
  1253   001BCA  0E0E               	movlw	high STR_6
  1254   001BCC  6E07               	movwf	(?_get_week_day+1)^0,c
  1255   001BCE  EFF9  F00D         	goto	l229
  1256   001BD2                     l2415:
  1257   001BD2  0E06               	movlw	6
  1258   001BD4  1852               	xorwf	_week_day^0,w,c
  1259   001BD6  1053               	iorwf	(_week_day+1)^0,w,c
  1260   001BD8  A4D8               	btfss	status,2,c
  1261   001BDA  EFF1  F00D         	goto	u1641
  1262   001BDE  EFF3  F00D         	goto	u1640
  1263   001BE2                     u1641:
  1264   001BE2  EFF9  F00D         	goto	l236
  1265   001BE6                     u1640:
  1266   001BE6                     
  1267                           ;timers.c: 114:         return("SUN");
  1268   001BE6  0E20               	movlw	low STR_7
  1269   001BE8  6E06               	movwf	?_get_week_day^0,c
  1270   001BEA  0E0E               	movlw	high STR_7
  1271   001BEC  6E07               	movwf	(?_get_week_day+1)^0,c
  1272   001BEE  EFF9  F00D         	goto	l229
  1273   001BF2                     l236:
  1274   001BF2                     l229:
  1275   001BF2  0012               	return		;funcret
  1276   001BF4                     __end_of_get_week_day:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _get_seconds *****************
  1280 ;; Defined at:
  1281 ;;		line 88 in file "timers.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  2    5[COMRAM] unsigned int 
  1288 ;; Registers used:
  1289 ;;		None
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;Total ram usage:        2 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 2
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text3
  1310   00231A                     __ptext3:
  1311                           	callstack 0
  1312   00231A                     _get_seconds:
  1313                           	callstack 28
  1314   00231A                     
  1315                           ;timers.c: 89:     return seconds;
  1316   00231A  C0EE  F006         	movff	_seconds,?_get_seconds
  1317   00231E  C0EF  F007         	movff	_seconds+1,?_get_seconds+1
  1318   002322  0012               	return		;funcret
  1319   002324                     __end_of_get_seconds:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _get_month *****************
  1323 ;; Defined at:
  1324 ;;		line 118 in file "timers.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2    5[COMRAM] unsigned int 
  1331 ;; Registers used:
  1332 ;;		None
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;Total ram usage:        2 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 2
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text4
  1353   002324                     __ptext4:
  1354                           	callstack 0
  1355   002324                     _get_month:
  1356                           	callstack 28
  1357   002324                     
  1358                           ;timers.c: 119:     return month;
  1359   002324  C04F  F006         	movff	_month,?_get_month
  1360   002328  C050  F007         	movff	_month+1,?_get_month+1
  1361   00232C  0012               	return		;funcret
  1362   00232E                     __end_of_get_month:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _get_minutes *****************
  1366 ;; Defined at:
  1367 ;;		line 91 in file "timers.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  2    5[COMRAM] unsigned int 
  1374 ;; Registers used:
  1375 ;;		None
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 2
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text5
  1396   00232E                     __ptext5:
  1397                           	callstack 0
  1398   00232E                     _get_minutes:
  1399                           	callstack 28
  1400   00232E                     
  1401                           ;timers.c: 92:     return minutes;
  1402   00232E  C0EC  F006         	movff	_minutes,?_get_minutes
  1403   002332  C0ED  F007         	movff	_minutes+1,?_get_minutes+1
  1404   002336  0012               	return		;funcret
  1405   002338                     __end_of_get_minutes:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _get_hours *****************
  1409 ;; Defined at:
  1410 ;;		line 94 in file "timers.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  2    5[COMRAM] unsigned int 
  1417 ;; Registers used:
  1418 ;;		None
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;Total ram usage:        2 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 2
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text6
  1439   002338                     __ptext6:
  1440                           	callstack 0
  1441   002338                     _get_hours:
  1442                           	callstack 28
  1443   002338                     
  1444                           ;timers.c: 95:     return hours;
  1445   002338  C0EA  F006         	movff	_hours,?_get_hours
  1446   00233C  C0EB  F007         	movff	_hours+1,?_get_hours+1
  1447   002340  0012               	return		;funcret
  1448   002342                     __end_of_get_hours:
  1449                           	callstack 0
  1450                           
  1451 ;; *************** function _get_day *****************
  1452 ;; Defined at:
  1453 ;;		line 97 in file "timers.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    5[COMRAM] unsigned int 
  1460 ;; Registers used:
  1461 ;;		None
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1471 ;;Total ram usage:        2 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 2
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text7
  1482   002342                     __ptext7:
  1483                           	callstack 0
  1484   002342                     _get_day:
  1485                           	callstack 28
  1486   002342                     
  1487                           ;timers.c: 98:     return day;
  1488   002342  C0D2  F006         	movff	_day,?_get_day
  1489   002346  C0D3  F007         	movff	_day+1,?_get_day+1
  1490   00234A  0012               	return		;funcret
  1491   00234C                     __end_of_get_day:
  1492                           	callstack 0
  1493                           
  1494 ;; *************** function _Timer0_init *****************
  1495 ;; Defined at:
  1496 ;;		line 17 in file "timers.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 2
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text8
  1525   00214A                     __ptext8:
  1526                           	callstack 0
  1527   00214A                     _Timer0_init:
  1528                           	callstack 28
  1529   00214A                     
  1530                           ;timers.c: 19:     T0CON1bits.T0CS=0b010;
  1531   00214A  50D6               	movf	214,w,c	;volatile
  1532   00214C  0B1F               	andlw	-225
  1533   00214E  0940               	iorlw	64
  1534   002150  6ED6               	movwf	214,c	;volatile
  1535   002152                     
  1536                           ;timers.c: 20:     T0CON1bits.T0ASYNC=1;
  1537   002152  88D6               	bsf	214,4,c	;volatile
  1538   002154                     
  1539                           ;timers.c: 21:     if(test_mode == 0){
  1540   002154  0100               	movlb	0	; () banked
  1541   002156  51D4               	movf	_test_mode& (0+255),w,b
  1542   002158  11D5               	iorwf	(_test_mode+1)& (0+255),w,b
  1543   00215A  A4D8               	btfss	status,2,c
  1544   00215C  EFB2  F010         	goto	u1531
  1545   002160  EFB4  F010         	goto	u1530
  1546   002164                     u1531:
  1547   002164  EFBE  F010         	goto	l2281
  1548   002168                     u1530:
  1549   002168                     
  1550                           ; BSR set to: 0
  1551                           ;timers.c: 22:         T0CON1bits.T0CKPS=0b1000;
  1552   002168  50D6               	movf	214,w,c	;volatile
  1553   00216A  0BF0               	andlw	-16
  1554   00216C  0908               	iorlw	8
  1555   00216E  6ED6               	movwf	214,c	;volatile
  1556                           
  1557                           ;timers.c: 23:         TMR0H=0b00001011;
  1558   002170  0E0B               	movlw	11
  1559   002172  6ED4               	movwf	212,c	;volatile
  1560                           
  1561                           ;timers.c: 24:         TMR0L=0b11011011;
  1562   002174  0EDB               	movlw	219
  1563   002176  6ED3               	movwf	211,c	;volatile
  1564                           
  1565                           ;timers.c: 25:     }else{
  1566   002178  EFC4  F010         	goto	l2283
  1567   00217C                     l2281:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;timers.c: 26:         T0CON1bits.T0CKPS=0;
  1571   00217C  0EF0               	movlw	-16
  1572   00217E  16D6               	andwf	214,f,c	;volatile
  1573                           
  1574                           ;timers.c: 27:         TMR0H=0b00000000;
  1575   002180  0E00               	movlw	0
  1576   002182  6ED4               	movwf	212,c	;volatile
  1577                           
  1578                           ;timers.c: 28:         TMR0L=0b00000000;
  1579   002184  0E00               	movlw	0
  1580   002186  6ED3               	movwf	211,c	;volatile
  1581   002188                     l2283:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;timers.c: 30:     T0CON0bits.T016BIT=1;
  1585   002188  88D5               	bsf	213,4,c	;volatile
  1586   00218A                     
  1587                           ; BSR set to: 0
  1588                           ;timers.c: 34:     T0CON0bits.T0EN=1;
  1589   00218A  8ED5               	bsf	213,7,c	;volatile
  1590   00218C                     
  1591                           ; BSR set to: 0
  1592   00218C  0012               	return		;funcret
  1593   00218E                     __end_of_Timer0_init:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _LCD_sendstring *****************
  1597 ;; Defined at:
  1598 ;;		line 137 in file "LCD.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  strlst          2   10[COMRAM] PTR PTR unsigned char 
  1601 ;;		 -> main@lst(16), 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  i               2   14[COMRAM] int 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1617 ;;Total ram usage:        6 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; Hardware stack levels required when called: 6
  1620 ;; This function calls:
  1621 ;;		_LCD_sendbyte
  1622 ;;		_LCD_setline
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text9
  1629   0014DC                     __ptext9:
  1630                           	callstack 0
  1631   0014DC                     _LCD_sendstring:
  1632                           	callstack 24
  1633   0014DC                     
  1634                           ;LCD.c: 137: void LCD_sendstring(char *strlst[8]);LCD.c: 138: { int i;;LCD.c: 139:      
      +                             for (i=0;i<8;i++){
  1635   0014DC  0E00               	movlw	0
  1636   0014DE  6E10               	movwf	(LCD_sendstring@i+1)^0,c
  1637   0014E0  0E00               	movlw	0
  1638   0014E2  6E0F               	movwf	LCD_sendstring@i^0,c
  1639   0014E4                     l2427:
  1640                           
  1641                           ;LCD.c: 140:             LCD_setline(i);
  1642   0014E4  C00F  F009         	movff	LCD_sendstring@i,LCD_setline@line
  1643   0014E8  C010  F00A         	movff	LCD_sendstring@i+1,LCD_setline@line+1
  1644   0014EC  EC8C  F00C         	call	_LCD_setline	;wreg free
  1645                           
  1646                           ;LCD.c: 142:             while(*strlst[i] !=0){
  1647   0014F0  EFA0  F00A         	goto	l2431
  1648   0014F4                     l2429:
  1649                           
  1650                           ;LCD.c: 143:                 LCD_sendbyte(*strlst[i]++,1);
  1651   0014F4  0E01               	movlw	1
  1652   0014F6  6E07               	movwf	LCD_sendbyte@type^0,c
  1653   0014F8  90D8               	bcf	status,0,c
  1654   0014FA  340F               	rlcf	LCD_sendstring@i^0,w,c
  1655   0014FC  6ED9               	movwf	fsr2l,c
  1656   0014FE  3410               	rlcf	(LCD_sendstring@i+1)^0,w,c
  1657   001500  6EDA               	movwf	fsr2h,c
  1658   001502  500B               	movf	LCD_sendstring@strlst^0,w,c
  1659   001504  26D9               	addwf	fsr2l,f,c
  1660   001506  500C               	movf	(LCD_sendstring@strlst+1)^0,w,c
  1661   001508  22DA               	addwfc	fsr2h,f,c
  1662   00150A  CFDF F00D          	movff	indf2,??_LCD_sendstring
  1663   00150E  0E01               	movlw	1
  1664   001510  26DE               	addwf	postinc2,f,c
  1665   001512  CFDF F00E          	movff	indf2,??_LCD_sendstring+1
  1666   001516  0E00               	movlw	0
  1667   001518  22DD               	addwfc	postdec2,f,c
  1668   00151A  C00D  FFF6         	movff	??_LCD_sendstring,tblptrl
  1669   00151E  C00E  FFF7         	movff	??_LCD_sendstring+1,tblptrh
  1670   001522  0E00               	movlw	low (__smallconst shr (0+16))
  1671   001524  6EF8               	movwf	tblptru,c
  1672   001526  0E0D               	movlw	(high __ramtop+-1)
  1673   001528  64F7               	cpfsgt	tblptrh,c
  1674   00152A  D003               	bra	u1657
  1675   00152C  0008               	tblrd		*
  1676   00152E  50F5               	movf	tablat,w,c
  1677   001530  D005               	bra	u1650
  1678   001532                     u1657:
  1679   001532  CFF6 FFE9          	movff	tblptrl,fsr0l
  1680   001536  CFF7 FFEA          	movff	tblptrh,fsr0h
  1681   00153A  50EF               	movf	indf0,w,c
  1682   00153C                     u1650:
  1683   00153C  EC5C  F011         	call	_LCD_sendbyte
  1684   001540                     l2431:
  1685                           
  1686                           ;LCD.c: 142:             while(*strlst[i] !=0){
  1687   001540  90D8               	bcf	status,0,c
  1688   001542  340F               	rlcf	LCD_sendstring@i^0,w,c
  1689   001544  6ED9               	movwf	fsr2l,c
  1690   001546  3410               	rlcf	(LCD_sendstring@i+1)^0,w,c
  1691   001548  6EDA               	movwf	fsr2h,c
  1692   00154A  500B               	movf	LCD_sendstring@strlst^0,w,c
  1693   00154C  26D9               	addwf	fsr2l,f,c
  1694   00154E  500C               	movf	(LCD_sendstring@strlst+1)^0,w,c
  1695   001550  22DA               	addwfc	fsr2h,f,c
  1696   001552  CFDE F00D          	movff	postinc2,??_LCD_sendstring
  1697   001556  CFDD F00E          	movff	postdec2,??_LCD_sendstring+1
  1698   00155A  C00D  FFF6         	movff	??_LCD_sendstring,tblptrl
  1699   00155E  C00E  FFF7         	movff	??_LCD_sendstring+1,tblptrh
  1700   001562  0E00               	movlw	low (__smallconst shr (0+16))
  1701   001564  6EF8               	movwf	tblptru,c
  1702   001566  0E0D               	movlw	(high __ramtop+-1)
  1703   001568  64F7               	cpfsgt	tblptrh,c
  1704   00156A  D003               	bra	u1667
  1705   00156C  0008               	tblrd		*
  1706   00156E  50F5               	movf	tablat,w,c
  1707   001570  D005               	bra	u1660
  1708   001572                     u1667:
  1709   001572  CFF6 FFE9          	movff	tblptrl,fsr0l
  1710   001576  CFF7 FFEA          	movff	tblptrh,fsr0h
  1711   00157A  50EF               	movf	indf0,w,c
  1712   00157C                     u1660:
  1713   00157C  0900               	iorlw	0
  1714   00157E  A4D8               	btfss	status,2,c
  1715   001580  EFC4  F00A         	goto	u1671
  1716   001584  EFC6  F00A         	goto	u1670
  1717   001588                     u1671:
  1718   001588  EF7A  F00A         	goto	l2429
  1719   00158C                     u1670:
  1720   00158C                     
  1721                           ;LCD.c: 146:             LCD_sendbyte (0xC2,0);
  1722   00158C  0E00               	movlw	0
  1723   00158E  6E07               	movwf	LCD_sendbyte@type^0,c
  1724   001590  0EC2               	movlw	194
  1725   001592  EC5C  F011         	call	_LCD_sendbyte
  1726                           
  1727                           ;LCD.c: 147:             LCD_sendbyte (0b00111010,1);
  1728   001596  0E01               	movlw	1
  1729   001598  6E07               	movwf	LCD_sendbyte@type^0,c
  1730   00159A  0E3A               	movlw	58
  1731   00159C  EC5C  F011         	call	_LCD_sendbyte
  1732                           
  1733                           ;LCD.c: 148:             LCD_sendbyte (0xC5,0);
  1734   0015A0  0E00               	movlw	0
  1735   0015A2  6E07               	movwf	LCD_sendbyte@type^0,c
  1736   0015A4  0EC5               	movlw	197
  1737   0015A6  EC5C  F011         	call	_LCD_sendbyte
  1738                           
  1739                           ;LCD.c: 149:             LCD_sendbyte (0b00101110,1);
  1740   0015AA  0E01               	movlw	1
  1741   0015AC  6E07               	movwf	LCD_sendbyte@type^0,c
  1742   0015AE  0E2E               	movlw	46
  1743   0015B0  EC5C  F011         	call	_LCD_sendbyte
  1744                           
  1745                           ;LCD.c: 150:             LCD_sendbyte (0xC8,0);
  1746   0015B4  0E00               	movlw	0
  1747   0015B6  6E07               	movwf	LCD_sendbyte@type^0,c
  1748   0015B8  0EC8               	movlw	200
  1749   0015BA  EC5C  F011         	call	_LCD_sendbyte
  1750                           
  1751                           ;LCD.c: 151:             LCD_sendbyte (0b00100000,1);
  1752   0015BE  0E01               	movlw	1
  1753   0015C0  6E07               	movwf	LCD_sendbyte@type^0,c
  1754   0015C2  0E20               	movlw	32
  1755   0015C4  EC5C  F011         	call	_LCD_sendbyte
  1756                           
  1757                           ;LCD.c: 152:             LCD_sendbyte (0xC9,0);
  1758   0015C8  0E00               	movlw	0
  1759   0015CA  6E07               	movwf	LCD_sendbyte@type^0,c
  1760   0015CC  0EC9               	movlw	201
  1761   0015CE  EC5C  F011         	call	_LCD_sendbyte
  1762                           
  1763                           ;LCD.c: 153:             LCD_sendbyte (0b00100000,1);
  1764   0015D2  0E01               	movlw	1
  1765   0015D4  6E07               	movwf	LCD_sendbyte@type^0,c
  1766   0015D6  0E20               	movlw	32
  1767   0015D8  EC5C  F011         	call	_LCD_sendbyte
  1768                           
  1769                           ;LCD.c: 154:             LCD_sendbyte (0xCA,0);
  1770   0015DC  0E00               	movlw	0
  1771   0015DE  6E07               	movwf	LCD_sendbyte@type^0,c
  1772   0015E0  0ECA               	movlw	202
  1773   0015E2  EC5C  F011         	call	_LCD_sendbyte
  1774                           
  1775                           ;LCD.c: 155:             LCD_sendbyte (0b00100000,1);
  1776   0015E6  0E01               	movlw	1
  1777   0015E8  6E07               	movwf	LCD_sendbyte@type^0,c
  1778   0015EA  0E20               	movlw	32
  1779   0015EC  EC5C  F011         	call	_LCD_sendbyte
  1780                           
  1781                           ;LCD.c: 156:             LCD_sendbyte (0xCB,0);
  1782   0015F0  0E00               	movlw	0
  1783   0015F2  6E07               	movwf	LCD_sendbyte@type^0,c
  1784   0015F4  0ECB               	movlw	203
  1785   0015F6  EC5C  F011         	call	_LCD_sendbyte
  1786                           
  1787                           ;LCD.c: 157:             LCD_sendbyte (0b00100000,1);
  1788   0015FA  0E01               	movlw	1
  1789   0015FC  6E07               	movwf	LCD_sendbyte@type^0,c
  1790   0015FE  0E20               	movlw	32
  1791   001600  EC5C  F011         	call	_LCD_sendbyte
  1792                           
  1793                           ;LCD.c: 158:             LCD_sendbyte (0xCC,0);
  1794   001604  0E00               	movlw	0
  1795   001606  6E07               	movwf	LCD_sendbyte@type^0,c
  1796   001608  0ECC               	movlw	204
  1797   00160A  EC5C  F011         	call	_LCD_sendbyte
  1798                           
  1799                           ;LCD.c: 159:             LCD_sendbyte (0b00100000,1);
  1800   00160E  0E01               	movlw	1
  1801   001610  6E07               	movwf	LCD_sendbyte@type^0,c
  1802   001612  0E20               	movlw	32
  1803   001614  EC5C  F011         	call	_LCD_sendbyte
  1804                           
  1805                           ;LCD.c: 160:             LCD_sendbyte (0x88,0);
  1806   001618  0E00               	movlw	0
  1807   00161A  6E07               	movwf	LCD_sendbyte@type^0,c
  1808   00161C  0E88               	movlw	136
  1809   00161E  EC5C  F011         	call	_LCD_sendbyte
  1810                           
  1811                           ;LCD.c: 161:             LCD_sendbyte (0b00101111,1);
  1812   001622  0E01               	movlw	1
  1813   001624  6E07               	movwf	LCD_sendbyte@type^0,c
  1814   001626  0E2F               	movlw	47
  1815   001628  EC5C  F011         	call	_LCD_sendbyte
  1816                           
  1817                           ;LCD.c: 162:             LCD_sendbyte (0x8B,0);
  1818   00162C  0E00               	movlw	0
  1819   00162E  6E07               	movwf	LCD_sendbyte@type^0,c
  1820   001630  0E8B               	movlw	139
  1821   001632  EC5C  F011         	call	_LCD_sendbyte
  1822                           
  1823                           ;LCD.c: 163:             LCD_sendbyte (0b00101111,1);
  1824   001636  0E01               	movlw	1
  1825   001638  6E07               	movwf	LCD_sendbyte@type^0,c
  1826   00163A  0E2F               	movlw	47
  1827   00163C  EC5C  F011         	call	_LCD_sendbyte
  1828   001640                     
  1829                           ;LCD.c: 164:     }
  1830   001640  4A0F               	infsnz	LCD_sendstring@i^0,f,c
  1831   001642  2A10               	incf	(LCD_sendstring@i+1)^0,f,c
  1832   001644  BE10               	btfsc	(LCD_sendstring@i+1)^0,7,c
  1833   001646  EF2E  F00B         	goto	u1681
  1834   00164A  5010               	movf	(LCD_sendstring@i+1)^0,w,c
  1835   00164C  E109               	bnz	u1680
  1836   00164E  0E08               	movlw	8
  1837   001650  5C0F               	subwf	LCD_sendstring@i^0,w,c
  1838   001652  A0D8               	btfss	status,0,c
  1839   001654  EF2E  F00B         	goto	u1681
  1840   001658  EF30  F00B         	goto	u1680
  1841   00165C                     u1681:
  1842   00165C  EF72  F00A         	goto	l2427
  1843   001660                     u1680:
  1844   001660  0012               	return		;funcret
  1845   001662                     __end_of_LCD_sendstring:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _LCD_setline *****************
  1849 ;; Defined at:
  1850 ;;		line 112 in file "LCD.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  line            2    8[COMRAM] int 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;Total ram usage:        2 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 5
  1871 ;; This function calls:
  1872 ;;		_LCD_sendbyte
  1873 ;; This function is called by:
  1874 ;;		_LCD_sendstring
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text10
  1879   001918                     __ptext10:
  1880                           	callstack 0
  1881   001918                     _LCD_setline:
  1882                           	callstack 24
  1883   001918                     
  1884                           ;LCD.c: 112: void LCD_setline(int line);LCD.c: 113: {;LCD.c: 114:     if(line == 0){
  1885   001918  5009               	movf	LCD_setline@line^0,w,c
  1886   00191A  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  1887   00191C  A4D8               	btfss	status,2,c
  1888   00191E  EF93  F00C         	goto	u1451
  1889   001922  EF95  F00C         	goto	u1450
  1890   001926                     u1451:
  1891   001926  EF9C  F00C         	goto	l2233
  1892   00192A                     u1450:
  1893   00192A                     
  1894                           ;LCD.c: 115:         LCD_sendbyte(0x80,0);
  1895   00192A  0E00               	movlw	0
  1896   00192C  6E07               	movwf	LCD_sendbyte@type^0,c
  1897   00192E  0E80               	movlw	128
  1898   001930  EC5C  F011         	call	_LCD_sendbyte
  1899                           
  1900                           ;LCD.c: 116:     }else if(line == 1){
  1901   001934  EF12  F00D         	goto	l325
  1902   001938                     l2233:
  1903   001938  0409               	decf	LCD_setline@line^0,w,c
  1904   00193A  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  1905   00193C  A4D8               	btfss	status,2,c
  1906   00193E  EFA3  F00C         	goto	u1461
  1907   001942  EFA5  F00C         	goto	u1460
  1908   001946                     u1461:
  1909   001946  EFAC  F00C         	goto	l2237
  1910   00194A                     u1460:
  1911   00194A                     
  1912                           ;LCD.c: 117:         LCD_sendbyte(0x86,0);
  1913   00194A  0E00               	movlw	0
  1914   00194C  6E07               	movwf	LCD_sendbyte@type^0,c
  1915   00194E  0E86               	movlw	134
  1916   001950  EC5C  F011         	call	_LCD_sendbyte
  1917                           
  1918                           ;LCD.c: 118:     }else if(line == 2){
  1919   001954  EF12  F00D         	goto	l325
  1920   001958                     l2237:
  1921   001958  0E02               	movlw	2
  1922   00195A  1809               	xorwf	LCD_setline@line^0,w,c
  1923   00195C  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  1924   00195E  A4D8               	btfss	status,2,c
  1925   001960  EFB4  F00C         	goto	u1471
  1926   001964  EFB6  F00C         	goto	u1470
  1927   001968                     u1471:
  1928   001968  EFBD  F00C         	goto	l2241
  1929   00196C                     u1470:
  1930   00196C                     
  1931                           ;LCD.c: 119:         LCD_sendbyte(0x89,0);
  1932   00196C  0E00               	movlw	0
  1933   00196E  6E07               	movwf	LCD_sendbyte@type^0,c
  1934   001970  0E89               	movlw	137
  1935   001972  EC5C  F011         	call	_LCD_sendbyte
  1936                           
  1937                           ;LCD.c: 120:     }else if(line == 3){
  1938   001976  EF12  F00D         	goto	l325
  1939   00197A                     l2241:
  1940   00197A  0E03               	movlw	3
  1941   00197C  1809               	xorwf	LCD_setline@line^0,w,c
  1942   00197E  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  1943   001980  A4D8               	btfss	status,2,c
  1944   001982  EFC5  F00C         	goto	u1481
  1945   001986  EFC7  F00C         	goto	u1480
  1946   00198A                     u1481:
  1947   00198A  EFCE  F00C         	goto	l2245
  1948   00198E                     u1480:
  1949   00198E                     
  1950                           ;LCD.c: 121:         LCD_sendbyte(0x8C,0);
  1951   00198E  0E00               	movlw	0
  1952   001990  6E07               	movwf	LCD_sendbyte@type^0,c
  1953   001992  0E8C               	movlw	140
  1954   001994  EC5C  F011         	call	_LCD_sendbyte
  1955                           
  1956                           ;LCD.c: 122:     }else if(line == 4){
  1957   001998  EF12  F00D         	goto	l325
  1958   00199C                     l2245:
  1959   00199C  0E04               	movlw	4
  1960   00199E  1809               	xorwf	LCD_setline@line^0,w,c
  1961   0019A0  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  1962   0019A2  A4D8               	btfss	status,2,c
  1963   0019A4  EFD6  F00C         	goto	u1491
  1964   0019A8  EFD8  F00C         	goto	u1490
  1965   0019AC                     u1491:
  1966   0019AC  EFDF  F00C         	goto	l2249
  1967   0019B0                     u1490:
  1968   0019B0                     
  1969                           ;LCD.c: 123:         LCD_sendbyte(0xC0,0);
  1970   0019B0  0E00               	movlw	0
  1971   0019B2  6E07               	movwf	LCD_sendbyte@type^0,c
  1972   0019B4  0EC0               	movlw	192
  1973   0019B6  EC5C  F011         	call	_LCD_sendbyte
  1974                           
  1975                           ;LCD.c: 124:     }else if(line == 5){
  1976   0019BA  EF12  F00D         	goto	l325
  1977   0019BE                     l2249:
  1978   0019BE  0E05               	movlw	5
  1979   0019C0  1809               	xorwf	LCD_setline@line^0,w,c
  1980   0019C2  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  1981   0019C4  A4D8               	btfss	status,2,c
  1982   0019C6  EFE7  F00C         	goto	u1501
  1983   0019CA  EFE9  F00C         	goto	u1500
  1984   0019CE                     u1501:
  1985   0019CE  EFF0  F00C         	goto	l2253
  1986   0019D2                     u1500:
  1987   0019D2                     
  1988                           ;LCD.c: 125:         LCD_sendbyte(0xC3,0);
  1989   0019D2  0E00               	movlw	0
  1990   0019D4  6E07               	movwf	LCD_sendbyte@type^0,c
  1991   0019D6  0EC3               	movlw	195
  1992   0019D8  EC5C  F011         	call	_LCD_sendbyte
  1993                           
  1994                           ;LCD.c: 126:     }else if(line == 6){
  1995   0019DC  EF12  F00D         	goto	l325
  1996   0019E0                     l2253:
  1997   0019E0  0E06               	movlw	6
  1998   0019E2  1809               	xorwf	LCD_setline@line^0,w,c
  1999   0019E4  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  2000   0019E6  A4D8               	btfss	status,2,c
  2001   0019E8  EFF8  F00C         	goto	u1511
  2002   0019EC  EFFA  F00C         	goto	u1510
  2003   0019F0                     u1511:
  2004   0019F0  EF01  F00D         	goto	l2257
  2005   0019F4                     u1510:
  2006   0019F4                     
  2007                           ;LCD.c: 127:         LCD_sendbyte(0xC6,0);
  2008   0019F4  0E00               	movlw	0
  2009   0019F6  6E07               	movwf	LCD_sendbyte@type^0,c
  2010   0019F8  0EC6               	movlw	198
  2011   0019FA  EC5C  F011         	call	_LCD_sendbyte
  2012                           
  2013                           ;LCD.c: 128:     }else if(line == 7){
  2014   0019FE  EF12  F00D         	goto	l325
  2015   001A02                     l2257:
  2016   001A02  0E07               	movlw	7
  2017   001A04  1809               	xorwf	LCD_setline@line^0,w,c
  2018   001A06  100A               	iorwf	(LCD_setline@line+1)^0,w,c
  2019   001A08  A4D8               	btfss	status,2,c
  2020   001A0A  EF09  F00D         	goto	u1521
  2021   001A0E  EF0B  F00D         	goto	u1520
  2022   001A12                     u1521:
  2023   001A12  EF12  F00D         	goto	l319
  2024   001A16                     u1520:
  2025   001A16                     
  2026                           ;LCD.c: 129:         LCD_sendbyte(0xCD,0);
  2027   001A16  0E00               	movlw	0
  2028   001A18  6E07               	movwf	LCD_sendbyte@type^0,c
  2029   001A1A  0ECD               	movlw	205
  2030   001A1C  EC5C  F011         	call	_LCD_sendbyte
  2031   001A20  EF12  F00D         	goto	l325
  2032   001A24                     l319:
  2033   001A24                     l325:
  2034   001A24  0012               	return		;funcret
  2035   001A26                     __end_of_LCD_setline:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _LCD_clear *****************
  2039 ;; Defined at:
  2040 ;;		line 97 in file "LCD.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;Total ram usage:        1 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 5
  2061 ;; This function calls:
  2062 ;;		_LCD_sendbyte
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text11
  2069   0021D2                     __ptext11:
  2070                           	callstack 0
  2071   0021D2                     _LCD_clear:
  2072                           	callstack 25
  2073   0021D2                     
  2074                           ;LCD.c: 99:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2075   0021D2  0ED5               	movlw	213
  2076   0021D4                     u2347:
  2077   0021D4  2EE8               	decfsz	wreg,f,c
  2078   0021D6  D7FE               	bra	u2347
  2079   0021D8  F000               	nop	
  2080   0021DA                     
  2081                           ;LCD.c: 100:     LCD_sendbyte(0b00000001,0);
  2082   0021DA  0E00               	movlw	0
  2083   0021DC  6E07               	movwf	LCD_sendbyte@type^0,c
  2084   0021DE  0E01               	movlw	1
  2085   0021E0  EC5C  F011         	call	_LCD_sendbyte
  2086   0021E4                     
  2087                           ;LCD.c: 102:     _delay((unsigned long)((2)*(64000000/4000.0)));
  2088   0021E4  0E2A               	movlw	42
  2089   0021E6  6E09               	movwf	??_LCD_clear^0,c
  2090   0021E8  0E8E               	movlw	142
  2091   0021EA                     u2357:
  2092   0021EA  2EE8               	decfsz	wreg,f,c
  2093   0021EC  D7FE               	bra	u2357
  2094   0021EE  2E09               	decfsz	??_LCD_clear^0,f,c
  2095   0021F0  D7FC               	bra	u2357
  2096                           
  2097                           ;LCD.c: 103:     LCD_sendbyte(0b00000110,0);
  2098   0021F2  0E00               	movlw	0
  2099   0021F4  6E07               	movwf	LCD_sendbyte@type^0,c
  2100   0021F6  0E06               	movlw	6
  2101   0021F8  EC5C  F011         	call	_LCD_sendbyte
  2102                           
  2103                           ;LCD.c: 104:     LCD_sendbyte(0b00001110,0);
  2104   0021FC  0E00               	movlw	0
  2105   0021FE  6E07               	movwf	LCD_sendbyte@type^0,c
  2106   002200  0E0E               	movlw	14
  2107   002202  EC5C  F011         	call	_LCD_sendbyte
  2108                           
  2109                           ;LCD.c: 105:     LCD_sendbyte(0b00001100,0);
  2110   002206  0E00               	movlw	0
  2111   002208  6E07               	movwf	LCD_sendbyte@type^0,c
  2112   00220A  0E0C               	movlw	12
  2113   00220C  EC5C  F011         	call	_LCD_sendbyte
  2114   002210  0012               	return		;funcret
  2115   002212                     __end_of_LCD_clear:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _LCD_Init *****************
  2119 ;; Defined at:
  2120 ;;		line 52 in file "LCD.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:        2 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 5
  2141 ;; This function calls:
  2142 ;;		_LCD_sendbyte
  2143 ;;		_LCD_sendnibble
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text12
  2150   001EF0                     __ptext12:
  2151                           	callstack 0
  2152   001EF0                     _LCD_Init:
  2153                           	callstack 25
  2154   001EF0                     
  2155                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  2156   001EF0  9483               	bcf	131,2,c	;volatile
  2157                           
  2158                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  2159   001EF2  9C83               	bcf	131,6,c	;volatile
  2160                           
  2161                           ;LCD.c: 59:     TRISBbits.TRISB3 = 0;
  2162   001EF4  9682               	bcf	130,3,c	;volatile
  2163                           
  2164                           ;LCD.c: 60:     TRISBbits.TRISB2 = 0;
  2165   001EF6  9482               	bcf	130,2,c	;volatile
  2166                           
  2167                           ;LCD.c: 61:     TRISEbits.TRISE3 = 0;
  2168   001EF8  9685               	bcf	133,3,c	;volatile
  2169                           
  2170                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  2171   001EFA  9285               	bcf	133,1,c	;volatile
  2172                           
  2173                           ;LCD.c: 65:     LATCbits.LATC6 = 0;
  2174   001EFC  9C7B               	bcf	123,6,c	;volatile
  2175                           
  2176                           ;LCD.c: 66:     LATCbits.LATC2 = 0;
  2177   001EFE  947B               	bcf	123,2,c	;volatile
  2178                           
  2179                           ;LCD.c: 67:     LATBbits.LATB3 = 0;
  2180   001F00  967A               	bcf	122,3,c	;volatile
  2181                           
  2182                           ;LCD.c: 68:     LATBbits.LATB2 = 0;
  2183   001F02  947A               	bcf	122,2,c	;volatile
  2184                           
  2185                           ;LCD.c: 69:     LATEbits.LATE3 = 0;
  2186   001F04  967D               	bcf	125,3,c	;volatile
  2187                           
  2188                           ;LCD.c: 70:     LATEbits.LATE1 = 0;
  2189   001F06  927D               	bcf	125,1,c	;volatile
  2190   001F08                     
  2191                           ;LCD.c: 72:     _delay((unsigned long)((60)*(64000000/4000.0)));
  2192   001F08  0E05               	movlw	5
  2193   001F0A  6E0A               	movwf	(??_LCD_Init+1)^0,c
  2194   001F0C  0EDF               	movlw	223
  2195   001F0E  6E09               	movwf	??_LCD_Init^0,c
  2196   001F10  0EBC               	movlw	188
  2197   001F12                     u2367:
  2198   001F12  2EE8               	decfsz	wreg,f,c
  2199   001F14  D7FE               	bra	u2367
  2200   001F16  2E09               	decfsz	??_LCD_Init^0,f,c
  2201   001F18  D7FC               	bra	u2367
  2202   001F1A  2E0A               	decfsz	(??_LCD_Init+1)^0,f,c
  2203   001F1C  D7FA               	bra	u2367
  2204   001F1E                     
  2205                           ;LCD.c: 74:     LCD_sendnibble(0b0011);
  2206   001F1E  0E03               	movlw	3
  2207   001F20  ECCB  F00F         	call	_LCD_sendnibble
  2208   001F24                     
  2209                           ;LCD.c: 75:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2210   001F24  0ED5               	movlw	213
  2211   001F26                     u2377:
  2212   001F26  2EE8               	decfsz	wreg,f,c
  2213   001F28  D7FE               	bra	u2377
  2214   001F2A  F000               	nop	
  2215                           
  2216                           ;LCD.c: 77:     LCD_sendnibble(0b0010);
  2217   001F2C  0E02               	movlw	2
  2218   001F2E  ECCB  F00F         	call	_LCD_sendnibble
  2219   001F32                     
  2220                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2221   001F32  0ED5               	movlw	213
  2222   001F34                     u2387:
  2223   001F34  2EE8               	decfsz	wreg,f,c
  2224   001F36  D7FE               	bra	u2387
  2225   001F38  F000               	nop	
  2226   001F3A                     
  2227                           ;LCD.c: 80:     LCD_sendbyte(0b00101000,0);
  2228   001F3A  0E00               	movlw	0
  2229   001F3C  6E07               	movwf	LCD_sendbyte@type^0,c
  2230   001F3E  0E28               	movlw	40
  2231   001F40  EC5C  F011         	call	_LCD_sendbyte
  2232   001F44                     
  2233                           ;LCD.c: 81:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2234   001F44  0ED5               	movlw	213
  2235   001F46                     u2397:
  2236   001F46  2EE8               	decfsz	wreg,f,c
  2237   001F48  D7FE               	bra	u2397
  2238   001F4A  F000               	nop	
  2239   001F4C                     
  2240                           ;LCD.c: 83:     LCD_sendbyte(0b00101000,0);
  2241   001F4C  0E00               	movlw	0
  2242   001F4E  6E07               	movwf	LCD_sendbyte@type^0,c
  2243   001F50  0E28               	movlw	40
  2244   001F52  EC5C  F011         	call	_LCD_sendbyte
  2245   001F56                     
  2246                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2247   001F56  0ED5               	movlw	213
  2248   001F58                     u2407:
  2249   001F58  2EE8               	decfsz	wreg,f,c
  2250   001F5A  D7FE               	bra	u2407
  2251   001F5C  F000               	nop	
  2252   001F5E                     
  2253                           ;LCD.c: 86:     LCD_sendbyte(0b00000001,0);
  2254   001F5E  0E00               	movlw	0
  2255   001F60  6E07               	movwf	LCD_sendbyte@type^0,c
  2256   001F62  0E01               	movlw	1
  2257   001F64  EC5C  F011         	call	_LCD_sendbyte
  2258   001F68                     
  2259                           ;LCD.c: 87:     _delay((unsigned long)((2)*(64000000/4000.0)));
  2260   001F68  0E2A               	movlw	42
  2261   001F6A  6E09               	movwf	??_LCD_Init^0,c
  2262   001F6C  0E8E               	movlw	142
  2263   001F6E                     u2417:
  2264   001F6E  2EE8               	decfsz	wreg,f,c
  2265   001F70  D7FE               	bra	u2417
  2266   001F72  2E09               	decfsz	??_LCD_Init^0,f,c
  2267   001F74  D7FC               	bra	u2417
  2268   001F76                     
  2269                           ;LCD.c: 89:     LCD_sendbyte(0b00000110,0);
  2270   001F76  0E00               	movlw	0
  2271   001F78  6E07               	movwf	LCD_sendbyte@type^0,c
  2272   001F7A  0E06               	movlw	6
  2273   001F7C  EC5C  F011         	call	_LCD_sendbyte
  2274   001F80                     
  2275                           ;LCD.c: 91:     LCD_sendbyte(0b00001110,0);
  2276   001F80  0E00               	movlw	0
  2277   001F82  6E07               	movwf	LCD_sendbyte@type^0,c
  2278   001F84  0E0E               	movlw	14
  2279   001F86  EC5C  F011         	call	_LCD_sendbyte
  2280   001F8A                     
  2281                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  2282   001F8A  0E00               	movlw	0
  2283   001F8C  6E07               	movwf	LCD_sendbyte@type^0,c
  2284   001F8E  0E0C               	movlw	12
  2285   001F90  EC5C  F011         	call	_LCD_sendbyte
  2286   001F94  0012               	return		;funcret
  2287   001F96                     __end_of_LCD_Init:
  2288                           	callstack 0
  2289                           
  2290 ;; *************** function _LCD_sendbyte *****************
  2291 ;; Defined at:
  2292 ;;		line 39 in file "LCD.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  Byte            1    wreg     unsigned char 
  2295 ;;  type            1    6[COMRAM] unsigned char 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  Byte            1    7[COMRAM] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2307 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2311 ;;Total ram usage:        2 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 4
  2314 ;; This function calls:
  2315 ;;		_LCD_sendnibble
  2316 ;; This function is called by:
  2317 ;;		_LCD_Init
  2318 ;;		_LCD_clear
  2319 ;;		_LCD_setline
  2320 ;;		_LCD_sendstring
  2321 ;;		_LCD_scroll
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text13
  2326   0022B8                     __ptext13:
  2327                           	callstack 0
  2328   0022B8                     _LCD_sendbyte:
  2329                           	callstack 24
  2330                           
  2331                           ;incstack = 0
  2332                           ;LCD_sendbyte@Byte stored from wreg
  2333   0022B8  6E08               	movwf	LCD_sendbyte@Byte^0,c
  2334   0022BA                     
  2335                           ;LCD.c: 39: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 40: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  2336   0022BA  B007               	btfsc	LCD_sendbyte@type^0,0,c
  2337   0022BC  D002               	bra	u1435
  2338   0022BE  9C7B               	bcf	123,6,c	;volatile
  2339   0022C0  D001               	bra	u1436
  2340   0022C2                     u1435:
  2341   0022C2  8C7B               	bsf	123,6,c	;volatile
  2342   0022C4                     u1436:
  2343   0022C4                     
  2344                           ;LCD.c: 43:     LCD_sendnibble(Byte >> 4);
  2345   0022C4  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  2346   0022C6  0B0F               	andlw	15
  2347   0022C8  ECCB  F00F         	call	_LCD_sendnibble
  2348   0022CC                     
  2349                           ;LCD.c: 44:     LCD_sendnibble(Byte);
  2350   0022CC  5008               	movf	LCD_sendbyte@Byte^0,w,c
  2351   0022CE  ECCB  F00F         	call	_LCD_sendnibble
  2352   0022D2                     
  2353                           ;LCD.c: 46:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  2354   0022D2  0EA0               	movlw	160
  2355   0022D4                     u2427:
  2356   0022D4  D000               	nop2	
  2357   0022D6  2EE8               	decfsz	wreg,f,c
  2358   0022D8  D7FD               	bra	u2427
  2359   0022DA  0012               	return		;funcret
  2360   0022DC                     __end_of_LCD_sendbyte:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _LCD_sendnibble *****************
  2364 ;; Defined at:
  2365 ;;		line 21 in file "LCD.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  number          1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  number          1    5[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;Total ram usage:        1 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 3
  2386 ;; This function calls:
  2387 ;;		_LCD_E_TOG
  2388 ;; This function is called by:
  2389 ;;		_LCD_sendbyte
  2390 ;;		_LCD_Init
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text14
  2395   001F96                     __ptext14:
  2396                           	callstack 0
  2397   001F96                     _LCD_sendnibble:
  2398                           	callstack 24
  2399                           
  2400                           ;incstack = 0
  2401                           ;LCD_sendnibble@number stored from wreg
  2402   001F96  6E06               	movwf	LCD_sendnibble@number^0,c
  2403   001F98                     
  2404                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 25:     if(num
      +                          ber & 0b0001){ LATBbits.LATB3 = 1;}else{LATBbits.LATB3 = 0;}
  2405   001F98  A006               	btfss	LCD_sendnibble@number^0,0,c
  2406   001F9A  EFD1  F00F         	goto	u1331
  2407   001F9E  EFD3  F00F         	goto	u1330
  2408   001FA2                     u1331:
  2409   001FA2  EFD6  F00F         	goto	l290
  2410   001FA6                     u1330:
  2411   001FA6  867A               	bsf	122,3,c	;volatile
  2412   001FA8  EFD7  F00F         	goto	l2125
  2413   001FAC                     l290:
  2414   001FAC  967A               	bcf	122,3,c	;volatile
  2415   001FAE                     l2125:
  2416                           
  2417                           ;LCD.c: 26:     if(number & 0b0010){ LATBbits.LATB2 = 1;}else{LATBbits.LATB2 = 0;}
  2418   001FAE  A206               	btfss	LCD_sendnibble@number^0,1,c
  2419   001FB0  EFDC  F00F         	goto	u1341
  2420   001FB4  EFDE  F00F         	goto	u1340
  2421   001FB8                     u1341:
  2422   001FB8  EFE1  F00F         	goto	l292
  2423   001FBC                     u1340:
  2424   001FBC  847A               	bsf	122,2,c	;volatile
  2425   001FBE  EFE2  F00F         	goto	l2129
  2426   001FC2                     l292:
  2427   001FC2  947A               	bcf	122,2,c	;volatile
  2428   001FC4                     l2129:
  2429                           
  2430                           ;LCD.c: 27:     if(number & 0b0100){ LATEbits.LATE3 = 1;}else{LATEbits.LATE3 = 0;}
  2431   001FC4  A406               	btfss	LCD_sendnibble@number^0,2,c
  2432   001FC6  EFE7  F00F         	goto	u1351
  2433   001FCA  EFE9  F00F         	goto	u1350
  2434   001FCE                     u1351:
  2435   001FCE  EFEC  F00F         	goto	l294
  2436   001FD2                     u1350:
  2437   001FD2  867D               	bsf	125,3,c	;volatile
  2438   001FD4  EFED  F00F         	goto	l2133
  2439   001FD8                     l294:
  2440   001FD8  967D               	bcf	125,3,c	;volatile
  2441   001FDA                     l2133:
  2442                           
  2443                           ;LCD.c: 28:     if(number & 0b1000){ LATEbits.LATE1 = 1;}else{LATEbits.LATE1 = 0;}
  2444   001FDA  A606               	btfss	LCD_sendnibble@number^0,3,c
  2445   001FDC  EFF2  F00F         	goto	u1361
  2446   001FE0  EFF4  F00F         	goto	u1360
  2447   001FE4                     u1361:
  2448   001FE4  EFF7  F00F         	goto	l296
  2449   001FE8                     u1360:
  2450   001FE8  827D               	bsf	125,1,c	;volatile
  2451   001FEA  EFF8  F00F         	goto	l2137
  2452   001FEE                     l296:
  2453   001FEE  927D               	bcf	125,1,c	;volatile
  2454   001FF0                     l2137:
  2455                           
  2456                           ;LCD.c: 30:     LCD_E_TOG();
  2457   001FF0  EC7B  F011         	call	_LCD_E_TOG	;wreg free
  2458   001FF4                     
  2459                           ;LCD.c: 31:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  2460   001FF4  0E1A               	movlw	26
  2461   001FF6                     u2437:
  2462   001FF6  2EE8               	decfsz	wreg,f,c
  2463   001FF8  D7FE               	bra	u2437
  2464   001FFA  D000               	nop2	
  2465   001FFC  0012               	return		;funcret
  2466   001FFE                     __end_of_LCD_sendnibble:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _LCD_E_TOG *****************
  2470 ;; Defined at:
  2471 ;;		line 8 in file "LCD.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 2
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_LCD_sendnibble
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text15
  2500   0022F6                     __ptext15:
  2501                           	callstack 0
  2502   0022F6                     _LCD_E_TOG:
  2503                           	callstack 24
  2504   0022F6                     
  2505                           ;LCD.c: 11:     LATCbits.LATC2 = 1;
  2506   0022F6  847B               	bsf	123,2,c	;volatile
  2507   0022F8                     
  2508                           ;LCD.c: 12:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  2509   0022F8  0E0A               	movlw	10
  2510   0022FA                     u2447:
  2511   0022FA  2EE8               	decfsz	wreg,f,c
  2512   0022FC  D7FE               	bra	u2447
  2513   0022FE  D000               	nop2	
  2514   002300                     
  2515                           ;LCD.c: 14:     LATCbits.LATC2 = 0;
  2516   002300  947B               	bcf	123,2,c	;volatile
  2517   002302  0012               	return		;funcret
  2518   002304                     __end_of_LCD_E_TOG:
  2519                           	callstack 0
  2520                           
  2521 ;; *************** function _Interrupts_init *****************
  2522 ;; Defined at:
  2523 ;;		line 10 in file "interrupts.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		None
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 2
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text16
  2552   002304                     __ptext16:
  2553                           	callstack 0
  2554   002304                     _Interrupts_init:
  2555                           	callstack 28
  2556   002304                     
  2557                           ;interrupts.c: 12:     INTCONbits.PEIE = 1;
  2558   002304  8CF2               	bsf	242,6,c	;volatile
  2559                           
  2560                           ;interrupts.c: 13:     PIE0bits.TMR0IE = 1;
  2561   002306  010E               	movlb	14	; () banked
  2562   002308  8B29               	bsf	41,5,b	;volatile
  2563                           
  2564                           ;interrupts.c: 14:     PIE2bits.C1IE = 1;
  2565   00230A  812B               	bsf	43,0,b	;volatile
  2566                           
  2567                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  2568   00230C  8EF2               	bsf	242,7,c	;volatile
  2569   00230E                     
  2570                           ; BSR set to: 14
  2571   00230E  0012               	return		;funcret
  2572   002310                     __end_of_Interrupts_init:
  2573                           	callstack 0
  2574                           
  2575 ;; *************** function _ADC_init *****************
  2576 ;; Defined at:
  2577 ;;		line 9 in file "ADC.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 2
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text17
  2606   0022DC                     __ptext17:
  2607                           	callstack 0
  2608   0022DC                     _ADC_init:
  2609                           	callstack 28
  2610   0022DC                     
  2611                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  2612   0022DC  8681               	bsf	129,3,c	;volatile
  2613                           
  2614                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  2615   0022DE  010E               	movlb	14	; () banked
  2616   0022E0  8792               	bsf	146,3,b	;volatile
  2617                           
  2618                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  2619   0022E2  010F               	movlb	15	; () banked
  2620   0022E4  9958               	bcf	88,4,b	;volatile
  2621   0022E6                     
  2622                           ; BSR set to: 15
  2623                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  2624   0022E6  0EFC               	movlw	-4
  2625   0022E8  1758               	andwf	88,f,b	;volatile
  2626                           
  2627                           ;ADC.c: 17:     ADPCH=0b11;
  2628   0022EA  0E03               	movlw	3
  2629   0022EC  6F5F               	movwf	95,b	;volatile
  2630   0022EE                     
  2631                           ; BSR set to: 15
  2632                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  2633   0022EE  9460               	bcf	96,2,c	;volatile
  2634   0022F0                     
  2635                           ; BSR set to: 15
  2636                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  2637   0022F0  8860               	bsf	96,4,c	;volatile
  2638   0022F2                     
  2639                           ; BSR set to: 15
  2640                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  2641   0022F2  8E60               	bsf	96,7,c	;volatile
  2642   0022F4                     
  2643                           ; BSR set to: 15
  2644   0022F4  0012               	return		;funcret
  2645   0022F6                     __end_of_ADC_init:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _ADC_getval *****************
  2649 ;; Defined at:
  2650 ;;		line 23 in file "ADC.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  tmpval          2    7[COMRAM] unsigned int 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2    5[COMRAM] unsigned int 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;Total ram usage:        4 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 2
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text18
  2679   002212                     __ptext18:
  2680                           	callstack 0
  2681   002212                     _ADC_getval:
  2682                           	callstack 28
  2683   002212                     
  2684                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  2685   002212  8060               	bsf	96,0,c	;volatile
  2686   002214                     l265:
  2687   002214  B060               	btfsc	96,0,c	;volatile
  2688   002216  EF0F  F011         	goto	u1571
  2689   00221A  EF11  F011         	goto	u1570
  2690   00221E                     u1571:
  2691   00221E  EF0A  F011         	goto	l265
  2692   002222                     u1570:
  2693   002222                     
  2694                           ;ADC.c: 31:     tmpval = ADRESH;
  2695   002222  CF64 F008          	movff	3940,ADC_getval@tmpval	;volatile
  2696   002226  6A09               	clrf	(ADC_getval@tmpval+1)^0,c
  2697   002228                     
  2698                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  2699   002228  5008               	movf	ADC_getval@tmpval^0,w,c
  2700   00222A  08FF               	sublw	255
  2701   00222C  6E08               	movwf	ADC_getval@tmpval^0,c
  2702   00222E  5009               	movf	(ADC_getval@tmpval+1)^0,w,c
  2703   002230  A0D8               	btfss	status,0,c
  2704   002232  2AE8               	incf	wreg,f,c
  2705   002234  0800               	sublw	0
  2706   002236  6E09               	movwf	(ADC_getval@tmpval+1)^0,c
  2707   002238                     
  2708                           ;ADC.c: 37:     return tmpval;
  2709   002238  C008  F006         	movff	ADC_getval@tmpval,?_ADC_getval
  2710   00223C  C009  F007         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  2711   002240  0012               	return		;funcret
  2712   002242                     __end_of_ADC_getval:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _ADC2String *****************
  2716 ;; Defined at:
  2717 ;;		line 194 in file "LCD.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  buf             2   37[BANK0 ] PTR unsigned char 
  2720 ;;		 -> main@ADC(3), main@Yea(4), main@Mon(2), main@Day(2), 
  2721 ;;		 -> main@Hou(2), main@Min(2), main@Sec(2), 
  2722 ;;  x               2   39[BANK0 ] unsigned int 
  2723 ;;  leading_zero    2   41[BANK0 ] unsigned int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2735 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2739 ;;Total ram usage:        6 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 10
  2742 ;; This function calls:
  2743 ;;		_sprintf
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text19
  2750   001D8E                     __ptext19:
  2751                           	callstack 0
  2752   001D8E                     _ADC2String:
  2753                           	callstack 20
  2754   001D8E                     
  2755                           ;LCD.c: 196:     if(leading_zeros == 0){
  2756   001D8E  0100               	movlb	0	; () banked
  2757   001D90  5189               	movf	ADC2String@leading_zeros& (0+255),w,b
  2758   001D92  118A               	iorwf	(ADC2String@leading_zeros+1)& (0+255),w,b
  2759   001D94  A4D8               	btfss	status,2,c
  2760   001D96  EFCF  F00E         	goto	u2271
  2761   001D9A  EFD1  F00E         	goto	u2270
  2762   001D9E                     u2271:
  2763   001D9E  EFE1  F00E         	goto	l2915
  2764   001DA2                     u2270:
  2765   001DA2                     
  2766                           ; BSR set to: 0
  2767                           ;LCD.c: 197:     sprintf(buf, "%u",x);
  2768   001DA2  C085  F072         	movff	ADC2String@buf,sprintf@s
  2769   001DA6  C086  F073         	movff	ADC2String@buf+1,sprintf@s+1
  2770   001DAA  0E2C               	movlw	low STR_8
  2771   001DAC  6F74               	movwf	sprintf@fmt& (0+255),b
  2772   001DAE  0E0E               	movlw	high STR_8
  2773   001DB0  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2774   001DB2  C087  F076         	movff	ADC2String@x,?_sprintf+4
  2775   001DB6  C088  F077         	movff	ADC2String@x+1,?_sprintf+5
  2776   001DBA  EC59  F010         	call	_sprintf	;wreg free
  2777                           
  2778                           ;LCD.c: 198:     }else if(leading_zeros == 1){
  2779   001DBE  EF22  F00F         	goto	l352
  2780   001DC2                     l2915:
  2781                           
  2782                           ; BSR set to: 0
  2783   001DC2  0589               	decf	ADC2String@leading_zeros& (0+255),w,b
  2784   001DC4  118A               	iorwf	(ADC2String@leading_zeros+1)& (0+255),w,b
  2785   001DC6  A4D8               	btfss	status,2,c
  2786   001DC8  EFE8  F00E         	goto	u2281
  2787   001DCC  EFEA  F00E         	goto	u2280
  2788   001DD0                     u2281:
  2789   001DD0  EFFA  F00E         	goto	l2919
  2790   001DD4                     u2280:
  2791   001DD4                     
  2792                           ; BSR set to: 0
  2793                           ;LCD.c: 199:     sprintf(buf, "%01u",x);
  2794   001DD4  C085  F072         	movff	ADC2String@buf,sprintf@s
  2795   001DD8  C086  F073         	movff	ADC2String@buf+1,sprintf@s+1
  2796   001DDC  0E01               	movlw	low STR_9
  2797   001DDE  6F74               	movwf	sprintf@fmt& (0+255),b
  2798   001DE0  0E0E               	movlw	high STR_9
  2799   001DE2  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2800   001DE4  C087  F076         	movff	ADC2String@x,?_sprintf+4
  2801   001DE8  C088  F077         	movff	ADC2String@x+1,?_sprintf+5
  2802   001DEC  EC59  F010         	call	_sprintf	;wreg free
  2803                           
  2804                           ;LCD.c: 200:     }else if(leading_zeros == 2){
  2805   001DF0  EF22  F00F         	goto	l352
  2806   001DF4                     l2919:
  2807                           
  2808                           ; BSR set to: 0
  2809   001DF4  0E02               	movlw	2
  2810   001DF6  1989               	xorwf	ADC2String@leading_zeros& (0+255),w,b
  2811   001DF8  118A               	iorwf	(ADC2String@leading_zeros+1)& (0+255),w,b
  2812   001DFA  A4D8               	btfss	status,2,c
  2813   001DFC  EF02  F00F         	goto	u2291
  2814   001E00  EF04  F00F         	goto	u2290
  2815   001E04                     u2291:
  2816   001E04  EF14  F00F         	goto	l2923
  2817   001E08                     u2290:
  2818   001E08                     
  2819                           ; BSR set to: 0
  2820                           ;LCD.c: 201:     sprintf(buf, "%02u",x);
  2821   001E08  C085  F072         	movff	ADC2String@buf,sprintf@s
  2822   001E0C  C086  F073         	movff	ADC2String@buf+1,sprintf@s+1
  2823   001E10  0E06               	movlw	low STR_10
  2824   001E12  6F74               	movwf	sprintf@fmt& (0+255),b
  2825   001E14  0E0E               	movlw	high STR_10
  2826   001E16  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2827   001E18  C087  F076         	movff	ADC2String@x,?_sprintf+4
  2828   001E1C  C088  F077         	movff	ADC2String@x+1,?_sprintf+5
  2829   001E20  EC59  F010         	call	_sprintf	;wreg free
  2830                           
  2831                           ;LCD.c: 202:     }else{sprintf(buf, "%03u",x);
  2832   001E24  EF22  F00F         	goto	l352
  2833   001E28                     l2923:
  2834                           
  2835                           ; BSR set to: 0
  2836   001E28  C085  F072         	movff	ADC2String@buf,sprintf@s
  2837   001E2C  C086  F073         	movff	ADC2String@buf+1,sprintf@s+1
  2838   001E30  0E0B               	movlw	low STR_11
  2839   001E32  6F74               	movwf	sprintf@fmt& (0+255),b
  2840   001E34  0E0E               	movlw	high STR_11
  2841   001E36  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2842   001E38  C087  F076         	movff	ADC2String@x,?_sprintf+4
  2843   001E3C  C088  F077         	movff	ADC2String@x+1,?_sprintf+5
  2844   001E40  EC59  F010         	call	_sprintf	;wreg free
  2845   001E44                     l352:
  2846   001E44  0012               	return		;funcret
  2847   001E46                     __end_of_ADC2String:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _sprintf *****************
  2851 ;; Defined at:
  2852 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2855 ;;		 -> main@ADC(3), main@Yea(4), main@Mon(2), main@Day(2), 
  2856 ;;		 -> main@Hou(2), main@Min(2), main@Sec(2), 
  2857 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2858 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(3), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  f              11   26[BANK0 ] struct _IO_FILE
  2861 ;;  ap              2   24[BANK0 ] PTR void [1]
  2862 ;;		 -> ?_sprintf(2), 
  2863 ;;  ret             2    0        int 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  2   18[BANK0 ] int 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2873 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;Total ram usage:       19 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 9
  2880 ;; This function calls:
  2881 ;;		_vfprintf
  2882 ;; This function is called by:
  2883 ;;		_ADC2String
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text20
  2888   0020B2                     __ptext20:
  2889                           	callstack 0
  2890   0020B2                     _sprintf:
  2891                           	callstack 20
  2892   0020B2  0E76               	movlw	low (?_sprintf+4)
  2893   0020B4  0100               	movlb	0	; () banked
  2894   0020B6  6F78               	movwf	sprintf@ap& (0+255),b
  2895   0020B8  0E00               	movlw	high (?_sprintf+4)
  2896   0020BA  6F79               	movwf	(sprintf@ap+1)& (0+255),b
  2897   0020BC  C072  F07A         	movff	sprintf@s,sprintf@f
  2898   0020C0  C073  F07B         	movff	sprintf@s+1,sprintf@f+1
  2899   0020C4                     
  2900                           ; BSR set to: 0
  2901   0020C4  0E00               	movlw	0
  2902   0020C6  6F7E               	movwf	(sprintf@f+4)& (0+255),b
  2903   0020C8  0E00               	movlw	0
  2904   0020CA  6F7D               	movwf	(sprintf@f+3)& (0+255),b
  2905   0020CC                     
  2906                           ; BSR set to: 0
  2907   0020CC  0E00               	movlw	0
  2908   0020CE  6F84               	movwf	(sprintf@f+10)& (0+255),b
  2909   0020D0  0E00               	movlw	0
  2910   0020D2  6F83               	movwf	(sprintf@f+9)& (0+255),b
  2911   0020D4                     
  2912                           ; BSR set to: 0
  2913   0020D4  0E7A               	movlw	low sprintf@f
  2914   0020D6  6F6C               	movwf	vfprintf@fp& (0+255),b
  2915   0020D8  0E00               	movlw	high sprintf@f
  2916   0020DA  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  2917   0020DC  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  2918   0020E0  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2919   0020E4  0E78               	movlw	low sprintf@ap
  2920   0020E6  6F70               	movwf	vfprintf@ap& (0+255),b
  2921   0020E8  0E00               	movlw	high sprintf@ap
  2922   0020EA  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  2923   0020EC  EC2F  F010         	call	_vfprintf	;wreg free
  2924   0020F0  0100               	movlb	0	; () banked
  2925   0020F2  517D               	movf	(sprintf@f+3)& (0+255),w,b
  2926   0020F4  2572               	addwf	sprintf@s& (0+255),w,b
  2927   0020F6  6ED9               	movwf	fsr2l,c
  2928   0020F8  517E               	movf	(sprintf@f+4)& (0+255),w,b
  2929   0020FA  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  2930   0020FC  6EDA               	movwf	fsr2h,c
  2931   0020FE  0E00               	movlw	0
  2932   002100  6EDF               	movwf	indf2,c
  2933   002102                     
  2934                           ; BSR set to: 0
  2935   002102  0012               	return		;funcret
  2936   002104                     __end_of_sprintf:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function _vfprintf *****************
  2940 ;; Defined at:
  2941 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2944 ;;		 -> sprintf@f(11), 
  2945 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2946 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(3), 
  2947 ;;  ap              2   16[BANK0 ] PTR PTR void 
  2948 ;;		 -> sprintf@ap(2), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  cfmt            2   74[COMRAM] PTR unsigned char 
  2951 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(3), 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2   12[BANK0 ] int 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2961 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;Total ram usage:        8 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 8
  2968 ;; This function calls:
  2969 ;;		_vfpfcnvrt
  2970 ;; This function is called by:
  2971 ;;		_sprintf
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text21
  2976   00205E                     __ptext21:
  2977                           	callstack 0
  2978   00205E                     _vfprintf:
  2979                           	callstack 20
  2980   00205E                     
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2982   00205E  C06E  F04B         	movff	vfprintf@fmt,vfprintf@cfmt
  2983   002062  C06F  F04C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2984                           
  2985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2986   002066  EF43  F010         	goto	l2893
  2987   00206A                     l2891:
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2990   00206A  C06C  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  2991   00206E  C06D  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2992   002072  0E4B               	movlw	low vfprintf@cfmt
  2993   002074  6E43               	movwf	vfpfcnvrt@fmt^0,c
  2994   002076  0E00               	movlw	high vfprintf@cfmt
  2995   002078  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2996   00207A  C070  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  2997   00207E  C071  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2998   002082  EC18  F007         	call	_vfpfcnvrt	;wreg free
  2999   002086                     l2893:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3002   002086  C04B  FFF6         	movff	vfprintf@cfmt,tblptrl
  3003   00208A  C04C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3004   00208E                     	if	0	;tblptru may be non-zero
  3005   00208E                     	endif
  3006   00208E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3007   00208E  0E00               	movlw	low (__mediumconst shr (0+16))
  3008   002090  6EF8               	movwf	tblptru,c
  3009   002092                     	endif
  3010   002092  0008               	tblrd		*
  3011   002094  50F5               	movf	tablat,w,c
  3012   002096  0900               	iorlw	0
  3013   002098  A4D8               	btfss	status,2,c
  3014   00209A  EF51  F010         	goto	u2261
  3015   00209E  EF53  F010         	goto	u2260
  3016   0020A2                     u2261:
  3017   0020A2  EF35  F010         	goto	l2891
  3018   0020A6                     u2260:
  3019   0020A6                     
  3020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3021   0020A6  0E00               	movlw	0
  3022   0020A8  0100               	movlb	0	; () banked
  3023   0020AA  6F6D               	movwf	(?_vfprintf+1)& (0+255),b
  3024   0020AC  0E00               	movlw	0
  3025   0020AE  6F6C               	movwf	?_vfprintf& (0+255),b
  3026   0020B0                     
  3027                           ; BSR set to: 0
  3028   0020B0  0012               	return		;funcret
  3029   0020B2                     __end_of_vfprintf:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _vfpfcnvrt *****************
  3033 ;; Defined at:
  3034 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  3037 ;;		 -> sprintf@f(11), 
  3038 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  3039 ;;		 -> vfprintf@cfmt(2), 
  3040 ;;  ap              2   68[COMRAM] PTR PTR void 
  3041 ;;		 -> sprintf@ap(2), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  convarg         8    0[BANK0 ] struct .
  3044 ;;  cp              2   10[BANK0 ] PTR unsigned char 
  3045 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(3), 
  3046 ;;  done            2    8[BANK0 ] int 
  3047 ;;  i               2    0        int 
  3048 ;;  c               1    0        unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3058 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;Total ram usage:       22 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 7
  3065 ;; This function calls:
  3066 ;;		_atoi
  3067 ;;		_fputc
  3068 ;;		_isdigit
  3069 ;;		_utoa
  3070 ;; This function is called by:
  3071 ;;		_vfprintf
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text22
  3076   000E30                     __ptext22:
  3077                           	callstack 0
  3078   000E30                     _vfpfcnvrt:
  3079                           	callstack 20
  3080   000E30                     
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3082   000E30  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3083   000E34  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3084   000E38  CFDE FFF6          	movff	postinc2,tblptrl
  3085   000E3C  CFDD FFF7          	movff	postdec2,tblptrh
  3086   000E40                     	if	0	;tblptru may be non-zero
  3087   000E40                     	endif
  3088   000E40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3089   000E40  0E00               	movlw	low (__mediumconst shr (0+16))
  3090   000E42  6EF8               	movwf	tblptru,c
  3091   000E44                     	endif
  3092   000E44  0008               	tblrd		*
  3093   000E46  50F5               	movf	tablat,w,c
  3094   000E48  0A25               	xorlw	37
  3095   000E4A  A4D8               	btfss	status,2,c
  3096   000E4C  EF2A  F007         	goto	u2201
  3097   000E50  EF2C  F007         	goto	u2200
  3098   000E54                     u2201:
  3099   000E54  EF69  F008         	goto	l2867
  3100   000E58                     u2200:
  3101   000E58                     
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3103   000E58  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3104   000E5C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3105   000E60  2ADE               	incf	postinc2,f,c
  3106   000E62  0E00               	movlw	0
  3107   000E64  22DD               	addwfc	postdec2,f,c
  3108   000E66                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3110   000E66  0E00               	movlw	0
  3111   000E68  0100               	movlb	0	; () banked
  3112   000E6A  6FE7               	movwf	(_width+1)& (0+255),b
  3113   000E6C  0E00               	movlw	0
  3114   000E6E  6FE6               	movwf	_width& (0+255),b
  3115   000E70  C0E6  F051         	movff	_width,_flags
  3116   000E74                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3119   000E74  69E8               	setf	_prec& (0+255),b
  3120   000E76  69E9               	setf	(_prec+1)& (0+255),b
  3121   000E78                     
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  3124   000E78  0E00               	movlw	0
  3125   000E7A  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3126   000E7C  0E00               	movlw	0
  3127   000E7E  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  3130   000E80  EF6E  F007         	goto	l2831
  3131   000E84                     l2821:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  3135   000E84  8251               	bsf	_flags^0,1,c
  3136   000E86                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  3139   000E86  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3140   000E8A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3141   000E8E  2ADE               	incf	postinc2,f,c
  3142   000E90  0E00               	movlw	0
  3143   000E92  22DD               	addwfc	postdec2,f,c
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  3146   000E94  EF6E  F007         	goto	l2831
  3147   000E98                     l2825:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  3151   000E98  0E00               	movlw	0
  3152   000E9A  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3153   000E9C  0E01               	movlw	1
  3154   000E9E  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  3157   000EA0  EF6E  F007         	goto	l2831
  3158   000EA4                     l2829:
  3159                           
  3160                           ; BSR set to: 0
  3161   000EA4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3162   000EA8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3163   000EAC  CFDE FFF6          	movff	postinc2,tblptrl
  3164   000EB0  CFDD FFF7          	movff	postdec2,tblptrh
  3165   000EB4                     	if	0	;tblptru may be non-zero
  3166   000EB4                     	endif
  3167   000EB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3168   000EB4  0E00               	movlw	low (__mediumconst shr (0+16))
  3169   000EB6  6EF8               	movwf	tblptru,c
  3170   000EB8                     	endif
  3171   000EB8  0008               	tblrd		*
  3172   000EBA  50F5               	movf	tablat,w,c
  3173   000EBC  6E47               	movwf	??_vfpfcnvrt^0,c
  3174   000EBE  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  3175                           
  3176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 1, Range of values is 0 to 0
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            4     3 (average)
  3182                           ;	Chosen strategy is simple_byte
  3183   000EC0  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  3184   000EC2  0A00               	xorlw	0	; case 0
  3185   000EC4  B4D8               	btfsc	status,2,c
  3186   000EC6  EF67  F007         	goto	l3083
  3187   000ECA  EF4C  F007         	goto	l2825
  3188   000ECE                     l3083:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ; Switch size 1, requested type "simple"
  3192                           ; Number of cases is 1, Range of values is 48 to 48
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte            4     3 (average)
  3196                           ;	Chosen strategy is simple_byte
  3197   000ECE  5047               	movf	??_vfpfcnvrt^0,w,c
  3198   000ED0  0A30               	xorlw	48	; case 48
  3199   000ED2  B4D8               	btfsc	status,2,c
  3200   000ED4  EF42  F007         	goto	l2821
  3201   000ED8  EF4C  F007         	goto	l2825
  3202   000EDC                     l2831:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  3206   000EDC  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  3207   000EDE  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3208   000EE0  B4D8               	btfsc	status,2,c
  3209   000EE2  EF75  F007         	goto	u2211
  3210   000EE6  EF77  F007         	goto	u2210
  3211   000EEA                     u2211:
  3212   000EEA  EF52  F007         	goto	l2829
  3213   000EEE                     u2210:
  3214   000EEE                     
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  3217   000EEE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3218   000EF2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3219   000EF6  CFDE FFF6          	movff	postinc2,tblptrl
  3220   000EFA  CFDD FFF7          	movff	postdec2,tblptrh
  3221   000EFE                     	if	0	;tblptru may be non-zero
  3222   000EFE                     	endif
  3223   000EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3224   000EFE  0E00               	movlw	low (__mediumconst shr (0+16))
  3225   000F00  6EF8               	movwf	tblptru,c
  3226   000F02                     	endif
  3227   000F02  0008               	tblrd		*
  3228   000F04  50F5               	movf	tablat,w,c
  3229   000F06  0A2A               	xorlw	42
  3230   000F08  A4D8               	btfss	status,2,c
  3231   000F0A  EF89  F007         	goto	u2221
  3232   000F0E  EF8B  F007         	goto	u2220
  3233   000F12                     u2221:
  3234   000F12  EFB4  F007         	goto	l2841
  3235   000F16                     u2220:
  3236   000F16                     
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  3239   000F16  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3240   000F1A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3241   000F1E  2ADE               	incf	postinc2,f,c
  3242   000F20  0E00               	movlw	0
  3243   000F22  22DD               	addwfc	postdec2,f,c
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3246   000F24  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3247   000F28  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3248   000F2C  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3249   000F30  0E02               	movlw	2
  3250   000F32  26DE               	addwf	postinc2,f,c
  3251   000F34  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3252   000F38  0E00               	movlw	0
  3253   000F3A  22DD               	addwfc	postdec2,f,c
  3254   000F3C  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3255   000F40  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3256   000F44  CFDE F0E6          	movff	postinc2,_width
  3257   000F48  CFDD F0E7          	movff	postdec2,_width+1
  3258   000F4C                     
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  3261   000F4C  BFE7               	btfsc	(_width+1)& (0+255),7,b
  3262   000F4E  EFAD  F007         	goto	u2230
  3263   000F52  EFAB  F007         	goto	u2231
  3264   000F56                     u2231:
  3265   000F56  EFE9  F007         	goto	l2849
  3266   000F5A                     u2230:
  3267   000F5A                     
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  3270   000F5A  8051               	bsf	_flags^0,0,c
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  3273   000F5C  6DE6               	negf	_width& (0+255),b
  3274   000F5E  1FE7               	comf	(_width+1)& (0+255),f,b
  3275   000F60  B0D8               	btfsc	status,0,c
  3276   000F62  2BE7               	incf	(_width+1)& (0+255),f,b
  3277   000F64  EFE9  F007         	goto	l2849
  3278   000F68                     l2841:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  3282   000F68  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3283   000F6C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3284   000F70  CFDE F00C          	movff	postinc2,atoi@s
  3285   000F74  CFDD F00D          	movff	postdec2,atoi@s+1
  3286   000F78  EC31  F00B         	call	_atoi	;wreg free
  3287   000F7C  C00C  F0E6         	movff	?_atoi,_width
  3288   000F80  C00D  F0E7         	movff	?_atoi+1,_width+1
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3291   000F84  EFCB  F007         	goto	l2847
  3292   000F88                     l2843:
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  3295   000F88  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3296   000F8C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3297   000F90  2ADE               	incf	postinc2,f,c
  3298   000F92  0E00               	movlw	0
  3299   000F94  22DD               	addwfc	postdec2,f,c
  3300   000F96                     l2847:
  3301   000F96  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3302   000F9A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3303   000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  3304   000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  3305   000FA6                     	if	0	;tblptru may be non-zero
  3306   000FA6                     	endif
  3307   000FA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3308   000FA6  0E00               	movlw	low (__mediumconst shr (0+16))
  3309   000FA8  6EF8               	movwf	tblptru,c
  3310   000FAA                     	endif
  3311   000FAA  0008               	tblrd		*
  3312   000FAC  CFF5 F047          	movff	tablat,??_vfpfcnvrt
  3313   000FB0  0ED0               	movlw	208
  3314   000FB2  2447               	addwf	??_vfpfcnvrt^0,w,c
  3315   000FB4  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  3316   000FB6  6A49               	clrf	(??_vfpfcnvrt+2)^0,c
  3317   000FB8  0EFF               	movlw	255
  3318   000FBA  2249               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  3319   000FBC  5049               	movf	(??_vfpfcnvrt+2)^0,w,c
  3320   000FBE  E109               	bnz	u2240
  3321   000FC0  0E0A               	movlw	10
  3322   000FC2  5C48               	subwf	(??_vfpfcnvrt+1)^0,w,c
  3323   000FC4  A0D8               	btfss	status,0,c
  3324   000FC6  EFE7  F007         	goto	u2241
  3325   000FCA  EFE9  F007         	goto	u2240
  3326   000FCE                     u2241:
  3327   000FCE  EFC4  F007         	goto	l2843
  3328   000FD2                     u2240:
  3329   000FD2                     l2849:
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  3332   000FD2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3333   000FD6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3334   000FDA  CFDE F06A          	movff	postinc2,vfpfcnvrt@cp
  3335   000FDE  CFDD F06B          	movff	postdec2,vfpfcnvrt@cp+1
  3336   000FE2  C06A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3337   000FE6  C06B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3338   000FEA                     	if	0	;tblptru may be non-zero
  3339   000FEA                     	endif
  3340   000FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3341   000FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3342   000FEC  6EF8               	movwf	tblptru,c
  3343   000FEE                     	endif
  3344   000FEE  0008               	tblrd		*
  3345   000FF0  50F5               	movf	tablat,w,c
  3346   000FF2  0A75               	xorlw	117
  3347   000FF4  A4D8               	btfss	status,2,c
  3348   000FF6  EFFF  F007         	goto	u2251
  3349   000FFA  EF01  F008         	goto	u2250
  3350   000FFE                     u2251:
  3351   000FFE  EF60  F008         	goto	l2863
  3352   001002                     u2250:
  3353   001002                     
  3354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  3355   001002  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3356   001006  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3357   00100A  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3358   00100E  0E02               	movlw	2
  3359   001010  26DE               	addwf	postinc2,f,c
  3360   001012  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3361   001016  0E00               	movlw	0
  3362   001018  22DD               	addwfc	postdec2,f,c
  3363   00101A  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3364   00101E  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3365   001022  CFDE F049          	movff	postinc2,??_vfpfcnvrt+2
  3366   001026  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+3
  3367   00102A  C049  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  3368   00102E  C04A  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  3369   001032  0100               	movlb	0	; () banked
  3370   001034  6B62               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  3371   001036  6B63               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  3372   001038  6B64               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  3373   00103A  6B65               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  3374   00103C  6B66               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  3375   00103E  6B67               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  3378   001040  0E01               	movlw	1
  3379   001042  256A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3380   001044  6E47               	movwf	??_vfpfcnvrt^0,c
  3381   001046  0E00               	movlw	0
  3382   001048  216B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3383   00104A  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  3384   00104C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3385   001050  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3386   001054  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  3387   001058  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  3390   00105C  EF48  F008         	goto	l2861
  3391   001060                     l2855:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  3395   001060  C041  F021         	movff	vfpfcnvrt@fp,utoa@fp
  3396   001064  C042  F022         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3397   001068  C060  F023         	movff	vfpfcnvrt@convarg,utoa@d
  3398   00106C  C061  F024         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  3399   001070  C062  F025         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  3400   001074  C063  F026         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  3401   001078  C064  F027         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  3402   00107C  C065  F028         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  3403   001080  C066  F029         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  3404   001084  C067  F02A         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  3405   001088  EC80  F008         	call	_utoa	;wreg free
  3406   00108C  EF7F  F008         	goto	l1102
  3407   001090                     l2861:
  3408                           
  3409                           ; BSR set to: 0
  3410   001090  C06A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3411   001094  C06B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3412   001098                     	if	0	;tblptru may be non-zero
  3413   001098                     	endif
  3414   001098                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3415   001098  0E00               	movlw	low (__mediumconst shr (0+16))
  3416   00109A  6EF8               	movwf	tblptru,c
  3417   00109C                     	endif
  3418   00109C  0008               	tblrd		*
  3419   00109E  50F5               	movf	tablat,w,c
  3420   0010A0  6E47               	movwf	??_vfpfcnvrt^0,c
  3421   0010A2  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  3422                           
  3423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3424                           ; Switch size 1, requested type "simple"
  3425                           ; Number of cases is 1, Range of values is 0 to 0
  3426                           ; switch strategies available:
  3427                           ; Name         Instructions Cycles
  3428                           ; simple_byte            4     3 (average)
  3429                           ;	Chosen strategy is simple_byte
  3430   0010A4  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  3431   0010A6  0A00               	xorlw	0	; case 0
  3432   0010A8  B4D8               	btfsc	status,2,c
  3433   0010AA  EF59  F008         	goto	l3085
  3434   0010AE  EF60  F008         	goto	l2863
  3435   0010B2                     l3085:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ; Switch size 1, requested type "simple"
  3439                           ; Number of cases is 1, Range of values is 117 to 117
  3440                           ; switch strategies available:
  3441                           ; Name         Instructions Cycles
  3442                           ; simple_byte            4     3 (average)
  3443                           ;	Chosen strategy is simple_byte
  3444   0010B2  5047               	movf	??_vfpfcnvrt^0,w,c
  3445   0010B4  0A75               	xorlw	117	; case 117
  3446   0010B6  B4D8               	btfsc	status,2,c
  3447   0010B8  EF30  F008         	goto	l2855
  3448   0010BC  EF60  F008         	goto	l2863
  3449   0010C0                     l2863:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3452   0010C0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3453   0010C4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3454   0010C8  2ADE               	incf	postinc2,f,c
  3455   0010CA  0E00               	movlw	0
  3456   0010CC  22DD               	addwfc	postdec2,f,c
  3457   0010CE  EF7F  F008         	goto	l1102
  3458   0010D2                     l2867:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3461   0010D2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3462   0010D6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3463   0010DA  CFDE FFF6          	movff	postinc2,tblptrl
  3464   0010DE  CFDD FFF7          	movff	postdec2,tblptrh
  3465   0010E2                     	if	0	;tblptru may be non-zero
  3466   0010E2                     	endif
  3467   0010E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3468   0010E2  0E00               	movlw	low (__mediumconst shr (0+16))
  3469   0010E4  6EF8               	movwf	tblptru,c
  3470   0010E6                     	endif
  3471   0010E6  0008               	tblrd		*
  3472   0010E8  50F5               	movf	tablat,w,c
  3473   0010EA  6E06               	movwf	fputc@c^0,c
  3474   0010EC  6A07               	clrf	(fputc@c+1)^0,c
  3475   0010EE  C041  F008         	movff	vfpfcnvrt@fp,fputc@fp
  3476   0010F2  C042  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3477   0010F6  EC62  F00E         	call	_fputc	;wreg free
  3478   0010FA  EF60  F008         	goto	l2863
  3479   0010FE                     l1102:
  3480   0010FE  0012               	return		;funcret
  3481   001100                     __end_of_vfpfcnvrt:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _utoa *****************
  3485 ;; Defined at:
  3486 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3489 ;;		 -> sprintf@f(11), 
  3490 ;;  d               8   34[COMRAM] unsigned long long 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  n               8   54[COMRAM] unsigned long long 
  3493 ;;  i               2   62[COMRAM] int 
  3494 ;;  w               2   52[COMRAM] int 
  3495 ;;  p               2   50[COMRAM] int 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3505 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3508 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3509 ;;Total ram usage:       32 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 6
  3512 ;; This function calls:
  3513 ;;		___lodiv
  3514 ;;		___lomod
  3515 ;;		_pad
  3516 ;; This function is called by:
  3517 ;;		_vfpfcnvrt
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text23
  3522   001100                     __ptext23:
  3523                           	callstack 0
  3524   001100                     _utoa:
  3525                           	callstack 20
  3526   001100                     
  3527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  3528   001100  0100               	movlb	0	; () banked
  3529   001102  BFE9               	btfsc	(_prec+1)& (0+255),7,b
  3530   001104  EF86  F008         	goto	u2091
  3531   001108  EF88  F008         	goto	u2090
  3532   00110C                     u2091:
  3533   00110C  EF89  F008         	goto	l2747
  3534   001110                     u2090:
  3535   001110                     
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  3538   001110  9251               	bcf	_flags^0,1,c
  3539   001112                     l2747:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  3543   001112  BFE9               	btfsc	(_prec+1)& (0+255),7,b
  3544   001114  EF96  F008         	goto	u2100
  3545   001118  51E9               	movf	(_prec+1)& (0+255),w,b
  3546   00111A  E106               	bnz	u2101
  3547   00111C  05E8               	decf	_prec& (0+255),w,b
  3548   00111E  B0D8               	btfsc	status,0,c
  3549   001120  EF94  F008         	goto	u2101
  3550   001124  EF96  F008         	goto	u2100
  3551   001128                     u2101:
  3552   001128  EF9C  F008         	goto	l1068
  3553   00112C                     u2100:
  3554   00112C                     
  3555                           ; BSR set to: 0
  3556   00112C  0E00               	movlw	0
  3557   00112E  6E34               	movwf	(utoa@p+1)^0,c
  3558   001130  0E01               	movlw	1
  3559   001132  6E33               	movwf	utoa@p^0,c
  3560   001134  EFA0  F008         	goto	l1070
  3561   001138                     l1068:
  3562                           
  3563                           ; BSR set to: 0
  3564   001138  C0E8  F033         	movff	_prec,utoa@p
  3565   00113C  C0E9  F034         	movff	_prec+1,utoa@p+1
  3566   001140                     l1070:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  3570   001140  C0E6  F035         	movff	_width,utoa@w
  3571   001144  C0E7  F036         	movff	_width+1,utoa@w+1
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  3574   001148  C023  F037         	movff	utoa@d,utoa@n
  3575   00114C  C024  F038         	movff	utoa@d+1,utoa@n+1
  3576   001150  C025  F039         	movff	utoa@d+2,utoa@n+2
  3577   001154  C026  F03A         	movff	utoa@d+3,utoa@n+3
  3578   001158  C027  F03B         	movff	utoa@d+4,utoa@n+4
  3579   00115C  C028  F03C         	movff	utoa@d+5,utoa@n+5
  3580   001160  C029  F03D         	movff	utoa@d+6,utoa@n+6
  3581   001164  C02A  F03E         	movff	utoa@d+7,utoa@n+7
  3582   001168                     
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  3585   001168  0E00               	movlw	0
  3586   00116A  6E40               	movwf	(utoa@i+1)^0,c
  3587   00116C  0E1F               	movlw	31
  3588   00116E  6E3F               	movwf	utoa@i^0,c
  3589   001170                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  3592   001170  0E00               	movlw	0
  3593   001172  0101               	movlb	1	; () banked
  3594   001174  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3597   001176  EF33  F009         	goto	l2765
  3598   00117A                     l2755:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  3601   00117A  063F               	decf	utoa@i^0,f,c
  3602   00117C  A0D8               	btfss	status,0,c
  3603   00117E  0640               	decf	(utoa@i+1)^0,f,c
  3604   001180                     
  3605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  3606   001180  0E00               	movlw	low _dbuf
  3607   001182  243F               	addwf	utoa@i^0,w,c
  3608   001184  6ED9               	movwf	fsr2l,c
  3609   001186  0E01               	movlw	high _dbuf
  3610   001188  2040               	addwfc	(utoa@i+1)^0,w,c
  3611   00118A  6EDA               	movwf	fsr2h,c
  3612   00118C  C037  F006         	movff	utoa@n,___lomod@dividend
  3613   001190  C038  F007         	movff	utoa@n+1,___lomod@dividend+1
  3614   001194  C039  F008         	movff	utoa@n+2,___lomod@dividend+2
  3615   001198  C03A  F009         	movff	utoa@n+3,___lomod@dividend+3
  3616   00119C  C03B  F00A         	movff	utoa@n+4,___lomod@dividend+4
  3617   0011A0  C03C  F00B         	movff	utoa@n+5,___lomod@dividend+5
  3618   0011A4  C03D  F00C         	movff	utoa@n+6,___lomod@dividend+6
  3619   0011A8  C03E  F00D         	movff	utoa@n+7,___lomod@dividend+7
  3620   0011AC  0E0A               	movlw	10
  3621   0011AE  6E0E               	movwf	___lomod@divisor^0,c
  3622   0011B0  0E00               	movlw	0
  3623   0011B2  6E0F               	movwf	(___lomod@divisor+1)^0,c
  3624   0011B4  0E00               	movlw	0
  3625   0011B6  6E10               	movwf	(___lomod@divisor+2)^0,c
  3626   0011B8  0E00               	movlw	0
  3627   0011BA  6E11               	movwf	(___lomod@divisor+3)^0,c
  3628   0011BC  0E00               	movlw	0
  3629   0011BE  6E12               	movwf	(___lomod@divisor+4)^0,c
  3630   0011C0  0E00               	movlw	0
  3631   0011C2  6E13               	movwf	(___lomod@divisor+5)^0,c
  3632   0011C4  0E00               	movlw	0
  3633   0011C6  6E14               	movwf	(___lomod@divisor+6)^0,c
  3634   0011C8  0E00               	movlw	0
  3635   0011CA  6E15               	movwf	(___lomod@divisor+7)^0,c
  3636   0011CC  ECFA  F00D         	call	___lomod	;wreg free
  3637   0011D0  C006  F02B         	movff	?___lomod,??_utoa
  3638   0011D4  C007  F02C         	movff	?___lomod+1,??_utoa+1
  3639   0011D8  C008  F02D         	movff	?___lomod+2,??_utoa+2
  3640   0011DC  C009  F02E         	movff	?___lomod+3,??_utoa+3
  3641   0011E0  C00A  F02F         	movff	?___lomod+4,??_utoa+4
  3642   0011E4  C00B  F030         	movff	?___lomod+5,??_utoa+5
  3643   0011E8  C00C  F031         	movff	?___lomod+6,??_utoa+6
  3644   0011EC  C00D  F032         	movff	?___lomod+7,??_utoa+7
  3645   0011F0  502B               	movf	??_utoa^0,w,c
  3646   0011F2  0F30               	addlw	48
  3647   0011F4  6EDF               	movwf	indf2,c
  3648   0011F6                     
  3649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3650   0011F6  0633               	decf	utoa@p^0,f,c
  3651   0011F8  A0D8               	btfss	status,0,c
  3652   0011FA  0634               	decf	(utoa@p+1)^0,f,c
  3653   0011FC                     
  3654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3655   0011FC  0635               	decf	utoa@w^0,f,c
  3656   0011FE  A0D8               	btfss	status,0,c
  3657   001200  0636               	decf	(utoa@w+1)^0,f,c
  3658   001202                     
  3659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3660   001202  C037  F006         	movff	utoa@n,___lodiv@dividend
  3661   001206  C038  F007         	movff	utoa@n+1,___lodiv@dividend+1
  3662   00120A  C039  F008         	movff	utoa@n+2,___lodiv@dividend+2
  3663   00120E  C03A  F009         	movff	utoa@n+3,___lodiv@dividend+3
  3664   001212  C03B  F00A         	movff	utoa@n+4,___lodiv@dividend+4
  3665   001216  C03C  F00B         	movff	utoa@n+5,___lodiv@dividend+5
  3666   00121A  C03D  F00C         	movff	utoa@n+6,___lodiv@dividend+6
  3667   00121E  C03E  F00D         	movff	utoa@n+7,___lodiv@dividend+7
  3668   001222  0E0A               	movlw	10
  3669   001224  6E0E               	movwf	___lodiv@divisor^0,c
  3670   001226  0E00               	movlw	0
  3671   001228  6E0F               	movwf	(___lodiv@divisor+1)^0,c
  3672   00122A  0E00               	movlw	0
  3673   00122C  6E10               	movwf	(___lodiv@divisor+2)^0,c
  3674   00122E  0E00               	movlw	0
  3675   001230  6E11               	movwf	(___lodiv@divisor+3)^0,c
  3676   001232  0E00               	movlw	0
  3677   001234  6E12               	movwf	(___lodiv@divisor+4)^0,c
  3678   001236  0E00               	movlw	0
  3679   001238  6E13               	movwf	(___lodiv@divisor+5)^0,c
  3680   00123A  0E00               	movlw	0
  3681   00123C  6E14               	movwf	(___lodiv@divisor+6)^0,c
  3682   00123E  0E00               	movlw	0
  3683   001240  6E15               	movwf	(___lodiv@divisor+7)^0,c
  3684   001242  EC13  F00D         	call	___lodiv	;wreg free
  3685   001246  C006  F037         	movff	?___lodiv,utoa@n
  3686   00124A  C007  F038         	movff	?___lodiv+1,utoa@n+1
  3687   00124E  C008  F039         	movff	?___lodiv+2,utoa@n+2
  3688   001252  C009  F03A         	movff	?___lodiv+3,utoa@n+3
  3689   001256  C00A  F03B         	movff	?___lodiv+4,utoa@n+4
  3690   00125A  C00B  F03C         	movff	?___lodiv+5,utoa@n+5
  3691   00125E  C00C  F03D         	movff	?___lodiv+6,utoa@n+6
  3692   001262  C00D  F03E         	movff	?___lodiv+7,utoa@n+7
  3693   001266                     l2765:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3696   001266  503F               	movf	utoa@i^0,w,c
  3697   001268  1040               	iorwf	(utoa@i+1)^0,w,c
  3698   00126A  B4D8               	btfsc	status,2,c
  3699   00126C  EF3A  F009         	goto	u2111
  3700   001270  EF3C  F009         	goto	u2110
  3701   001274                     u2111:
  3702   001274  EF6C  F009         	goto	l2775
  3703   001278                     u2110:
  3704   001278  5037               	movf	utoa@n^0,w,c
  3705   00127A  1038               	iorwf	(utoa@n+1)^0,w,c
  3706   00127C  1039               	iorwf	(utoa@n+2)^0,w,c
  3707   00127E  103A               	iorwf	(utoa@n+3)^0,w,c
  3708   001280  103B               	iorwf	(utoa@n+4)^0,w,c
  3709   001282  103C               	iorwf	(utoa@n+5)^0,w,c
  3710   001284  103D               	iorwf	(utoa@n+6)^0,w,c
  3711   001286  103E               	iorwf	(utoa@n+7)^0,w,c
  3712   001288  A4D8               	btfss	status,2,c
  3713   00128A  EF49  F009         	goto	u2121
  3714   00128E  EF4B  F009         	goto	u2120
  3715   001292                     u2121:
  3716   001292  EFBD  F008         	goto	l2755
  3717   001296                     u2120:
  3718   001296  BE34               	btfsc	(utoa@p+1)^0,7,c
  3719   001298  EF58  F009         	goto	u2130
  3720   00129C  5034               	movf	(utoa@p+1)^0,w,c
  3721   00129E  E106               	bnz	u2131
  3722   0012A0  0433               	decf	utoa@p^0,w,c
  3723   0012A2  B0D8               	btfsc	status,0,c
  3724   0012A4  EF56  F009         	goto	u2131
  3725   0012A8  EF58  F009         	goto	u2130
  3726   0012AC                     u2131:
  3727   0012AC  EFBD  F008         	goto	l2755
  3728   0012B0                     u2130:
  3729   0012B0  BE36               	btfsc	(utoa@w+1)^0,7,c
  3730   0012B2  EF63  F009         	goto	u2141
  3731   0012B6  5036               	movf	(utoa@w+1)^0,w,c
  3732   0012B8  E108               	bnz	u2140
  3733   0012BA  0435               	decf	utoa@w^0,w,c
  3734   0012BC  A0D8               	btfss	status,0,c
  3735   0012BE  EF63  F009         	goto	u2141
  3736   0012C2  EF65  F009         	goto	u2140
  3737   0012C6                     u2141:
  3738   0012C6  EF6C  F009         	goto	l2775
  3739   0012CA                     u2140:
  3740   0012CA  B251               	btfsc	_flags^0,1,c
  3741   0012CC  EF6A  F009         	goto	u2151
  3742   0012D0  EF6C  F009         	goto	u2150
  3743   0012D4                     u2151:
  3744   0012D4  EFBD  F008         	goto	l2755
  3745   0012D8                     u2150:
  3746   0012D8                     l2775:
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3749   0012D8  C021  F016         	movff	utoa@fp,pad@fp
  3750   0012DC  C022  F017         	movff	utoa@fp+1,pad@fp+1
  3751   0012E0  0E00               	movlw	low _dbuf
  3752   0012E2  243F               	addwf	utoa@i^0,w,c
  3753   0012E4  6E18               	movwf	pad@buf^0,c
  3754   0012E6  0E01               	movlw	high _dbuf
  3755   0012E8  2040               	addwfc	(utoa@i+1)^0,w,c
  3756   0012EA  6E19               	movwf	(pad@buf+1)^0,c
  3757   0012EC  C035  F01A         	movff	utoa@w,pad@p
  3758   0012F0  C036  F01B         	movff	utoa@w+1,pad@p+1
  3759   0012F4  EC23  F00F         	call	_pad	;wreg free
  3760   0012F8  0012               	return		;funcret
  3761   0012FA                     __end_of_utoa:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _pad *****************
  3765 ;; Defined at:
  3766 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  3769 ;;		 -> sprintf@f(11), 
  3770 ;;  buf             2   23[COMRAM] PTR unsigned char 
  3771 ;;		 -> dbuf(32), 
  3772 ;;  p               2   25[COMRAM] int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  w               2   30[COMRAM] int 
  3775 ;;  i               2   28[COMRAM] int 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3785 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;Total ram usage:       11 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 5
  3792 ;; This function calls:
  3793 ;;		_fputc
  3794 ;;		_fputs
  3795 ;; This function is called by:
  3796 ;;		_utoa
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text24
  3801   001E46                     __ptext24:
  3802                           	callstack 0
  3803   001E46                     _pad:
  3804                           	callstack 20
  3805   001E46                     
  3806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  3807   001E46  A051               	btfss	_flags^0,0,c
  3808   001E48  EF28  F00F         	goto	u2011
  3809   001E4C  EF2A  F00F         	goto	u2010
  3810   001E50                     u2011:
  3811   001E50  EF34  F00F         	goto	l2713
  3812   001E54                     u2010:
  3813   001E54                     
  3814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  3815   001E54  C018  F00F         	movff	pad@buf,fputs@s
  3816   001E58  C019  F010         	movff	pad@buf+1,fputs@s+1
  3817   001E5C  C016  F011         	movff	pad@fp,fputs@fp
  3818   001E60  C017  F012         	movff	pad@fp+1,fputs@fp+1
  3819   001E64  ECC7  F010         	call	_fputs	;wreg free
  3820   001E68                     l2713:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  3823   001E68  BE1B               	btfsc	(pad@p+1)^0,7,c
  3824   001E6A  EF39  F00F         	goto	u2021
  3825   001E6E  EF3B  F00F         	goto	u2020
  3826   001E72                     u2021:
  3827   001E72  EF41  F00F         	goto	l2717
  3828   001E76                     u2020:
  3829   001E76  C01A  F01F         	movff	pad@p,pad@w
  3830   001E7A  C01B  F020         	movff	pad@p+1,pad@w+1
  3831   001E7E  EF45  F00F         	goto	l1058
  3832   001E82                     l2717:
  3833   001E82  0E00               	movlw	0
  3834   001E84  6E20               	movwf	(pad@w+1)^0,c
  3835   001E86  0E00               	movlw	0
  3836   001E88  6E1F               	movwf	pad@w^0,c
  3837   001E8A                     l1058:
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3840   001E8A  0E00               	movlw	0
  3841   001E8C  6E1E               	movwf	(pad@i+1)^0,c
  3842   001E8E  0E00               	movlw	0
  3843   001E90  6E1D               	movwf	pad@i^0,c
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3846   001E92  EF57  F00F         	goto	l2723
  3847   001E96                     l2719:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3850   001E96  0E00               	movlw	0
  3851   001E98  6E07               	movwf	(fputc@c+1)^0,c
  3852   001E9A  0E20               	movlw	32
  3853   001E9C  6E06               	movwf	fputc@c^0,c
  3854   001E9E  C016  F008         	movff	pad@fp,fputc@fp
  3855   001EA2  C017  F009         	movff	pad@fp+1,fputc@fp+1
  3856   001EA6  EC62  F00E         	call	_fputc	;wreg free
  3857   001EAA                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3859   001EAA  4A1D               	infsnz	pad@i^0,f,c
  3860   001EAC  2A1E               	incf	(pad@i+1)^0,f,c
  3861   001EAE                     l2723:
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3864   001EAE  501F               	movf	pad@w^0,w,c
  3865   001EB0  5C1D               	subwf	pad@i^0,w,c
  3866   001EB2  501E               	movf	(pad@i+1)^0,w,c
  3867   001EB4  0A80               	xorlw	128
  3868   001EB6  6E1C               	movwf	??_pad^0,c
  3869   001EB8  5020               	movf	(pad@w+1)^0,w,c
  3870   001EBA  0A80               	xorlw	128
  3871   001EBC  581C               	subwfb	??_pad^0,w,c
  3872   001EBE  A0D8               	btfss	status,0,c
  3873   001EC0  EF64  F00F         	goto	u2031
  3874   001EC4  EF66  F00F         	goto	u2030
  3875   001EC8                     u2031:
  3876   001EC8  EF4B  F00F         	goto	l2719
  3877   001ECC                     u2030:
  3878   001ECC                     
  3879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  3880   001ECC  B051               	btfsc	_flags^0,0,c
  3881   001ECE  EF6B  F00F         	goto	u2041
  3882   001ED2  EF6D  F00F         	goto	u2040
  3883   001ED6                     u2041:
  3884   001ED6  EF77  F00F         	goto	l1063
  3885   001EDA                     u2040:
  3886   001EDA                     
  3887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3888   001EDA  C018  F00F         	movff	pad@buf,fputs@s
  3889   001EDE  C019  F010         	movff	pad@buf+1,fputs@s+1
  3890   001EE2  C016  F011         	movff	pad@fp,fputs@fp
  3891   001EE6  C017  F012         	movff	pad@fp+1,fputs@fp+1
  3892   001EEA  ECC7  F010         	call	_fputs	;wreg free
  3893   001EEE                     l1063:
  3894   001EEE  0012               	return		;funcret
  3895   001EF0                     __end_of_pad:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _fputs *****************
  3899 ;; Defined at:
  3900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3903 ;;		 -> dbuf(32), 
  3904 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3905 ;;		 -> sprintf@f(11), 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  i               2   19[COMRAM] int 
  3908 ;;  c               1   18[COMRAM] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  2   14[COMRAM] int 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;Total ram usage:        7 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 4
  3925 ;; This function calls:
  3926 ;;		_fputc
  3927 ;; This function is called by:
  3928 ;;		_pad
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text25
  3933   00218E                     __ptext25:
  3934                           	callstack 0
  3935   00218E                     _fputs:
  3936                           	callstack 20
  3937   00218E  0E00               	movlw	0
  3938   002190  6E15               	movwf	(fputs@i+1)^0,c
  3939   002192  0E00               	movlw	0
  3940   002194  6E14               	movwf	fputs@i^0,c
  3941   002196  EFD8  F010         	goto	l2663
  3942   00219A                     l2659:
  3943   00219A  C013  F006         	movff	fputs@c,fputc@c
  3944   00219E  6A07               	clrf	(fputc@c+1)^0,c
  3945   0021A0  C011  F008         	movff	fputs@fp,fputc@fp
  3946   0021A4  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  3947   0021A8  EC62  F00E         	call	_fputc	;wreg free
  3948   0021AC  4A14               	infsnz	fputs@i^0,f,c
  3949   0021AE  2A15               	incf	(fputs@i+1)^0,f,c
  3950   0021B0                     l2663:
  3951   0021B0  5014               	movf	fputs@i^0,w,c
  3952   0021B2  240F               	addwf	fputs@s^0,w,c
  3953   0021B4  6ED9               	movwf	fsr2l,c
  3954   0021B6  5015               	movf	(fputs@i+1)^0,w,c
  3955   0021B8  2010               	addwfc	(fputs@s+1)^0,w,c
  3956   0021BA  6EDA               	movwf	fsr2h,c
  3957   0021BC  50DF               	movf	indf2,w,c
  3958   0021BE  6E13               	movwf	fputs@c^0,c
  3959   0021C0  5013               	movf	fputs@c^0,w,c
  3960   0021C2  A4D8               	btfss	status,2,c
  3961   0021C4  EFE6  F010         	goto	u1931
  3962   0021C8  EFE8  F010         	goto	u1930
  3963   0021CC                     u1931:
  3964   0021CC  EFCD  F010         	goto	l2659
  3965   0021D0                     u1930:
  3966   0021D0  0012               	return		;funcret
  3967   0021D2                     __end_of_fputs:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _fputc *****************
  3971 ;; Defined at:
  3972 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  c               2    5[COMRAM] int 
  3975 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  3976 ;;		 -> sprintf@f(11), 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2    5[COMRAM] int 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;Total ram usage:        9 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 3
  3995 ;; This function calls:
  3996 ;;		_putch
  3997 ;; This function is called by:
  3998 ;;		_pad
  3999 ;;		_vfpfcnvrt
  4000 ;;		_fputs
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text26
  4005   001CC4                     __ptext26:
  4006                           	callstack 0
  4007   001CC4                     _fputc:
  4008                           	callstack 20
  4009   001CC4  5008               	movf	fputc@fp^0,w,c
  4010   001CC6  1009               	iorwf	(fputc@fp+1)^0,w,c
  4011   001CC8  B4D8               	btfsc	status,2,c
  4012   001CCA  EF69  F00E         	goto	u1891
  4013   001CCE  EF6B  F00E         	goto	u1890
  4014   001CD2                     u1891:
  4015   001CD2  EF74  F00E         	goto	l2647
  4016   001CD6                     u1890:
  4017   001CD6  5008               	movf	fputc@fp^0,w,c
  4018   001CD8  1009               	iorwf	(fputc@fp+1)^0,w,c
  4019   001CDA  A4D8               	btfss	status,2,c
  4020   001CDC  EF72  F00E         	goto	u1901
  4021   001CE0  EF74  F00E         	goto	u1900
  4022   001CE4                     u1901:
  4023   001CE4  EF79  F00E         	goto	l2649
  4024   001CE8                     u1900:
  4025   001CE8                     l2647:
  4026   001CE8  5006               	movf	fputc@c^0,w,c
  4027   001CEA  ECA7  F011         	call	_putch
  4028   001CEE  EFC6  F00E         	goto	l1160
  4029   001CF2                     l2649:
  4030   001CF2  EE20 F009          	lfsr	2,9
  4031   001CF6  5008               	movf	fputc@fp^0,w,c
  4032   001CF8  26D9               	addwf	fsr2l,f,c
  4033   001CFA  5009               	movf	(fputc@fp+1)^0,w,c
  4034   001CFC  22DA               	addwfc	fsr2h,f,c
  4035   001CFE  50DE               	movf	postinc2,w,c
  4036   001D00  10DE               	iorwf	postinc2,w,c
  4037   001D02  B4D8               	btfsc	status,2,c
  4038   001D04  EF86  F00E         	goto	u1911
  4039   001D08  EF88  F00E         	goto	u1910
  4040   001D0C                     u1911:
  4041   001D0C  EFA3  F00E         	goto	l2653
  4042   001D10                     u1910:
  4043   001D10  EE20 F009          	lfsr	2,9
  4044   001D14  5008               	movf	fputc@fp^0,w,c
  4045   001D16  26D9               	addwf	fsr2l,f,c
  4046   001D18  5009               	movf	(fputc@fp+1)^0,w,c
  4047   001D1A  22DA               	addwfc	fsr2h,f,c
  4048   001D1C  EE10 F003          	lfsr	1,3
  4049   001D20  5008               	movf	fputc@fp^0,w,c
  4050   001D22  26E1               	addwf	fsr1l,f,c
  4051   001D24  5009               	movf	(fputc@fp+1)^0,w,c
  4052   001D26  22E2               	addwfc	fsr1h,f,c
  4053   001D28  50DE               	movf	postinc2,w,c
  4054   001D2A  5CE6               	subwf	postinc1,w,c
  4055   001D2C  50E6               	movf	postinc1,w,c
  4056   001D2E  0A80               	xorlw	128
  4057   001D30  6E0E               	movwf	(??_fputc+4)^0,c
  4058   001D32  50DE               	movf	postinc2,w,c
  4059   001D34  0A80               	xorlw	128
  4060   001D36  580E               	subwfb	(??_fputc+4)^0,w,c
  4061   001D38  B0D8               	btfsc	status,0,c
  4062   001D3A  EFA1  F00E         	goto	u1921
  4063   001D3E  EFA3  F00E         	goto	u1920
  4064   001D42                     u1921:
  4065   001D42  EFC6  F00E         	goto	l1160
  4066   001D46                     u1920:
  4067   001D46                     l2653:
  4068   001D46  EE20 F003          	lfsr	2,3
  4069   001D4A  5008               	movf	fputc@fp^0,w,c
  4070   001D4C  26D9               	addwf	fsr2l,f,c
  4071   001D4E  5009               	movf	(fputc@fp+1)^0,w,c
  4072   001D50  22DA               	addwfc	fsr2h,f,c
  4073   001D52  CFDE F00A          	movff	postinc2,??_fputc
  4074   001D56  CFDD F00B          	movff	postdec2,??_fputc+1
  4075   001D5A  C008  FFD9         	movff	fputc@fp,fsr2l
  4076   001D5E  C009  FFDA         	movff	fputc@fp+1,fsr2h
  4077   001D62  CFDE F00C          	movff	postinc2,??_fputc+2
  4078   001D66  CFDD F00D          	movff	postdec2,??_fputc+3
  4079   001D6A  500A               	movf	??_fputc^0,w,c
  4080   001D6C  240C               	addwf	(??_fputc+2)^0,w,c
  4081   001D6E  6ED9               	movwf	fsr2l,c
  4082   001D70  500B               	movf	(??_fputc+1)^0,w,c
  4083   001D72  200D               	addwfc	(??_fputc+3)^0,w,c
  4084   001D74  6EDA               	movwf	fsr2h,c
  4085   001D76  C006  FFDF         	movff	fputc@c,indf2
  4086   001D7A  EE20 F003          	lfsr	2,3
  4087   001D7E  5008               	movf	fputc@fp^0,w,c
  4088   001D80  26D9               	addwf	fsr2l,f,c
  4089   001D82  5009               	movf	(fputc@fp+1)^0,w,c
  4090   001D84  22DA               	addwfc	fsr2h,f,c
  4091   001D86  2ADE               	incf	postinc2,f,c
  4092   001D88  0E00               	movlw	0
  4093   001D8A  22DD               	addwfc	postdec2,f,c
  4094   001D8C                     l1160:
  4095   001D8C  0012               	return		;funcret
  4096   001D8E                     __end_of_fputc:
  4097                           	callstack 0
  4098                           
  4099 ;; *************** function _putch *****************
  4100 ;; Defined at:
  4101 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  c               1    wreg     unsigned char 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  c               1    0[COMRAM] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;Total ram usage:        0 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 2
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_fputc
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text27
  4130   00234E                     __ptext27:
  4131                           	callstack 0
  4132   00234E                     _putch:
  4133                           	callstack 20
  4134   00234E  0012               	return		;funcret
  4135   002350                     __end_of_putch:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function ___lomod *****************
  4139 ;; Defined at:
  4140 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  dividend        8    5[COMRAM] unsigned long long 
  4143 ;;  divisor         8   13[COMRAM] unsigned long long 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  counter         1   21[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  8    5[COMRAM] unsigned long long 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4155 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;Total ram usage:       17 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 2
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_utoa
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text28
  4170   001BF4                     __ptext28:
  4171                           	callstack 0
  4172   001BF4                     ___lomod:
  4173                           	callstack 23
  4174   001BF4  500E               	movf	___lomod@divisor^0,w,c
  4175   001BF6  100F               	iorwf	(___lomod@divisor+1)^0,w,c
  4176   001BF8  1010               	iorwf	(___lomod@divisor+2)^0,w,c
  4177   001BFA  1011               	iorwf	(___lomod@divisor+3)^0,w,c
  4178   001BFC  1012               	iorwf	(___lomod@divisor+4)^0,w,c
  4179   001BFE  1013               	iorwf	(___lomod@divisor+5)^0,w,c
  4180   001C00  1014               	iorwf	(___lomod@divisor+6)^0,w,c
  4181   001C02  1015               	iorwf	(___lomod@divisor+7)^0,w,c
  4182   001C04  B4D8               	btfsc	status,2,c
  4183   001C06  EF07  F00E         	goto	u1981
  4184   001C0A  EF09  F00E         	goto	u1980
  4185   001C0E                     u1981:
  4186   001C0E  EF51  F00E         	goto	l803
  4187   001C12                     u1980:
  4188   001C12  0E01               	movlw	1
  4189   001C14  6E16               	movwf	___lomod@counter^0,c
  4190   001C16  EF17  F00E         	goto	l2699
  4191   001C1A                     l2697:
  4192   001C1A  90D8               	bcf	status,0,c
  4193   001C1C  360E               	rlcf	___lomod@divisor^0,f,c
  4194   001C1E  360F               	rlcf	(___lomod@divisor+1)^0,f,c
  4195   001C20  3610               	rlcf	(___lomod@divisor+2)^0,f,c
  4196   001C22  3611               	rlcf	(___lomod@divisor+3)^0,f,c
  4197   001C24  3612               	rlcf	(___lomod@divisor+4)^0,f,c
  4198   001C26  3613               	rlcf	(___lomod@divisor+5)^0,f,c
  4199   001C28  3614               	rlcf	(___lomod@divisor+6)^0,f,c
  4200   001C2A  3615               	rlcf	(___lomod@divisor+7)^0,f,c
  4201   001C2C  2A16               	incf	___lomod@counter^0,f,c
  4202   001C2E                     l2699:
  4203   001C2E  AE15               	btfss	(___lomod@divisor+7)^0,7,c
  4204   001C30  EF1C  F00E         	goto	u1991
  4205   001C34  EF1E  F00E         	goto	u1990
  4206   001C38                     u1991:
  4207   001C38  EF0D  F00E         	goto	l2697
  4208   001C3C                     u1990:
  4209   001C3C                     l2701:
  4210   001C3C  500E               	movf	___lomod@divisor^0,w,c
  4211   001C3E  5C06               	subwf	___lomod@dividend^0,w,c
  4212   001C40  500F               	movf	(___lomod@divisor+1)^0,w,c
  4213   001C42  5807               	subwfb	(___lomod@dividend+1)^0,w,c
  4214   001C44  5010               	movf	(___lomod@divisor+2)^0,w,c
  4215   001C46  5808               	subwfb	(___lomod@dividend+2)^0,w,c
  4216   001C48  5011               	movf	(___lomod@divisor+3)^0,w,c
  4217   001C4A  5809               	subwfb	(___lomod@dividend+3)^0,w,c
  4218   001C4C  5012               	movf	(___lomod@divisor+4)^0,w,c
  4219   001C4E  580A               	subwfb	(___lomod@dividend+4)^0,w,c
  4220   001C50  5013               	movf	(___lomod@divisor+5)^0,w,c
  4221   001C52  580B               	subwfb	(___lomod@dividend+5)^0,w,c
  4222   001C54  5014               	movf	(___lomod@divisor+6)^0,w,c
  4223   001C56  580C               	subwfb	(___lomod@dividend+6)^0,w,c
  4224   001C58  5015               	movf	(___lomod@divisor+7)^0,w,c
  4225   001C5A  580D               	subwfb	(___lomod@dividend+7)^0,w,c
  4226   001C5C  A0D8               	btfss	status,0,c
  4227   001C5E  EF33  F00E         	goto	u2001
  4228   001C62  EF35  F00E         	goto	u2000
  4229   001C66                     u2001:
  4230   001C66  EF45  F00E         	goto	l2705
  4231   001C6A                     u2000:
  4232   001C6A  500E               	movf	___lomod@divisor^0,w,c
  4233   001C6C  5E06               	subwf	___lomod@dividend^0,f,c
  4234   001C6E  500F               	movf	(___lomod@divisor+1)^0,w,c
  4235   001C70  5A07               	subwfb	(___lomod@dividend+1)^0,f,c
  4236   001C72  5010               	movf	(___lomod@divisor+2)^0,w,c
  4237   001C74  5A08               	subwfb	(___lomod@dividend+2)^0,f,c
  4238   001C76  5011               	movf	(___lomod@divisor+3)^0,w,c
  4239   001C78  5A09               	subwfb	(___lomod@dividend+3)^0,f,c
  4240   001C7A  5012               	movf	(___lomod@divisor+4)^0,w,c
  4241   001C7C  5A0A               	subwfb	(___lomod@dividend+4)^0,f,c
  4242   001C7E  5013               	movf	(___lomod@divisor+5)^0,w,c
  4243   001C80  5A0B               	subwfb	(___lomod@dividend+5)^0,f,c
  4244   001C82  5014               	movf	(___lomod@divisor+6)^0,w,c
  4245   001C84  5A0C               	subwfb	(___lomod@dividend+6)^0,f,c
  4246   001C86  5015               	movf	(___lomod@divisor+7)^0,w,c
  4247   001C88  5A0D               	subwfb	(___lomod@dividend+7)^0,f,c
  4248   001C8A                     l2705:
  4249   001C8A  90D8               	bcf	status,0,c
  4250   001C8C  3215               	rrcf	(___lomod@divisor+7)^0,f,c
  4251   001C8E  3214               	rrcf	(___lomod@divisor+6)^0,f,c
  4252   001C90  3213               	rrcf	(___lomod@divisor+5)^0,f,c
  4253   001C92  3212               	rrcf	(___lomod@divisor+4)^0,f,c
  4254   001C94  3211               	rrcf	(___lomod@divisor+3)^0,f,c
  4255   001C96  3210               	rrcf	(___lomod@divisor+2)^0,f,c
  4256   001C98  320F               	rrcf	(___lomod@divisor+1)^0,f,c
  4257   001C9A  320E               	rrcf	___lomod@divisor^0,f,c
  4258   001C9C  2E16               	decfsz	___lomod@counter^0,f,c
  4259   001C9E  EF1E  F00E         	goto	l2701
  4260   001CA2                     l803:
  4261   001CA2  C006  F006         	movff	___lomod@dividend,?___lomod
  4262   001CA6  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
  4263   001CAA  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
  4264   001CAE  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
  4265   001CB2  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
  4266   001CB6  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
  4267   001CBA  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
  4268   001CBE  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
  4269   001CC2  0012               	return		;funcret
  4270   001CC4                     __end_of___lomod:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function ___lodiv *****************
  4274 ;; Defined at:
  4275 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  dividend        8    5[COMRAM] unsigned long long 
  4278 ;;  divisor         8   13[COMRAM] unsigned long long 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  quotient        8   21[COMRAM] unsigned long long 
  4281 ;;  counter         1   29[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  8    5[COMRAM] unsigned long long 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4291 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;Total ram usage:       25 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 2
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_utoa
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text29
  4306   001A26                     __ptext29:
  4307                           	callstack 0
  4308   001A26                     ___lodiv:
  4309                           	callstack 23
  4310   001A26  EE20  F016         	lfsr	2,___lodiv@quotient
  4311   001A2A  0E07               	movlw	7
  4312   001A2C                     u1941:
  4313   001A2C  6ADE               	clrf	postinc2,c
  4314   001A2E  06E8               	decf	wreg,f,c
  4315   001A30  E2FD               	bc	u1941
  4316   001A32  500E               	movf	___lodiv@divisor^0,w,c
  4317   001A34  100F               	iorwf	(___lodiv@divisor+1)^0,w,c
  4318   001A36  1010               	iorwf	(___lodiv@divisor+2)^0,w,c
  4319   001A38  1011               	iorwf	(___lodiv@divisor+3)^0,w,c
  4320   001A3A  1012               	iorwf	(___lodiv@divisor+4)^0,w,c
  4321   001A3C  1013               	iorwf	(___lodiv@divisor+5)^0,w,c
  4322   001A3E  1014               	iorwf	(___lodiv@divisor+6)^0,w,c
  4323   001A40  1015               	iorwf	(___lodiv@divisor+7)^0,w,c
  4324   001A42  B4D8               	btfsc	status,2,c
  4325   001A44  EF26  F00D         	goto	u1951
  4326   001A48  EF28  F00D         	goto	u1950
  4327   001A4C                     u1951:
  4328   001A4C  EF7A  F00D         	goto	l793
  4329   001A50                     u1950:
  4330   001A50  0E01               	movlw	1
  4331   001A52  6E1E               	movwf	___lodiv@counter^0,c
  4332   001A54  EF36  F00D         	goto	l2679
  4333   001A58                     l2677:
  4334   001A58  90D8               	bcf	status,0,c
  4335   001A5A  360E               	rlcf	___lodiv@divisor^0,f,c
  4336   001A5C  360F               	rlcf	(___lodiv@divisor+1)^0,f,c
  4337   001A5E  3610               	rlcf	(___lodiv@divisor+2)^0,f,c
  4338   001A60  3611               	rlcf	(___lodiv@divisor+3)^0,f,c
  4339   001A62  3612               	rlcf	(___lodiv@divisor+4)^0,f,c
  4340   001A64  3613               	rlcf	(___lodiv@divisor+5)^0,f,c
  4341   001A66  3614               	rlcf	(___lodiv@divisor+6)^0,f,c
  4342   001A68  3615               	rlcf	(___lodiv@divisor+7)^0,f,c
  4343   001A6A  2A1E               	incf	___lodiv@counter^0,f,c
  4344   001A6C                     l2679:
  4345   001A6C  AE15               	btfss	(___lodiv@divisor+7)^0,7,c
  4346   001A6E  EF3B  F00D         	goto	u1961
  4347   001A72  EF3D  F00D         	goto	u1960
  4348   001A76                     u1961:
  4349   001A76  EF2C  F00D         	goto	l2677
  4350   001A7A                     u1960:
  4351   001A7A                     l2681:
  4352   001A7A  90D8               	bcf	status,0,c
  4353   001A7C  3616               	rlcf	___lodiv@quotient^0,f,c
  4354   001A7E  3617               	rlcf	(___lodiv@quotient+1)^0,f,c
  4355   001A80  3618               	rlcf	(___lodiv@quotient+2)^0,f,c
  4356   001A82  3619               	rlcf	(___lodiv@quotient+3)^0,f,c
  4357   001A84  361A               	rlcf	(___lodiv@quotient+4)^0,f,c
  4358   001A86  361B               	rlcf	(___lodiv@quotient+5)^0,f,c
  4359   001A88  361C               	rlcf	(___lodiv@quotient+6)^0,f,c
  4360   001A8A  361D               	rlcf	(___lodiv@quotient+7)^0,f,c
  4361   001A8C  500E               	movf	___lodiv@divisor^0,w,c
  4362   001A8E  5C06               	subwf	___lodiv@dividend^0,w,c
  4363   001A90  500F               	movf	(___lodiv@divisor+1)^0,w,c
  4364   001A92  5807               	subwfb	(___lodiv@dividend+1)^0,w,c
  4365   001A94  5010               	movf	(___lodiv@divisor+2)^0,w,c
  4366   001A96  5808               	subwfb	(___lodiv@dividend+2)^0,w,c
  4367   001A98  5011               	movf	(___lodiv@divisor+3)^0,w,c
  4368   001A9A  5809               	subwfb	(___lodiv@dividend+3)^0,w,c
  4369   001A9C  5012               	movf	(___lodiv@divisor+4)^0,w,c
  4370   001A9E  580A               	subwfb	(___lodiv@dividend+4)^0,w,c
  4371   001AA0  5013               	movf	(___lodiv@divisor+5)^0,w,c
  4372   001AA2  580B               	subwfb	(___lodiv@dividend+5)^0,w,c
  4373   001AA4  5014               	movf	(___lodiv@divisor+6)^0,w,c
  4374   001AA6  580C               	subwfb	(___lodiv@dividend+6)^0,w,c
  4375   001AA8  5015               	movf	(___lodiv@divisor+7)^0,w,c
  4376   001AAA  580D               	subwfb	(___lodiv@dividend+7)^0,w,c
  4377   001AAC  A0D8               	btfss	status,0,c
  4378   001AAE  EF5B  F00D         	goto	u1971
  4379   001AB2  EF5D  F00D         	goto	u1970
  4380   001AB6                     u1971:
  4381   001AB6  EF6E  F00D         	goto	l2689
  4382   001ABA                     u1970:
  4383   001ABA  500E               	movf	___lodiv@divisor^0,w,c
  4384   001ABC  5E06               	subwf	___lodiv@dividend^0,f,c
  4385   001ABE  500F               	movf	(___lodiv@divisor+1)^0,w,c
  4386   001AC0  5A07               	subwfb	(___lodiv@dividend+1)^0,f,c
  4387   001AC2  5010               	movf	(___lodiv@divisor+2)^0,w,c
  4388   001AC4  5A08               	subwfb	(___lodiv@dividend+2)^0,f,c
  4389   001AC6  5011               	movf	(___lodiv@divisor+3)^0,w,c
  4390   001AC8  5A09               	subwfb	(___lodiv@dividend+3)^0,f,c
  4391   001ACA  5012               	movf	(___lodiv@divisor+4)^0,w,c
  4392   001ACC  5A0A               	subwfb	(___lodiv@dividend+4)^0,f,c
  4393   001ACE  5013               	movf	(___lodiv@divisor+5)^0,w,c
  4394   001AD0  5A0B               	subwfb	(___lodiv@dividend+5)^0,f,c
  4395   001AD2  5014               	movf	(___lodiv@divisor+6)^0,w,c
  4396   001AD4  5A0C               	subwfb	(___lodiv@dividend+6)^0,f,c
  4397   001AD6  5015               	movf	(___lodiv@divisor+7)^0,w,c
  4398   001AD8  5A0D               	subwfb	(___lodiv@dividend+7)^0,f,c
  4399   001ADA  8016               	bsf	___lodiv@quotient^0,0,c
  4400   001ADC                     l2689:
  4401   001ADC  90D8               	bcf	status,0,c
  4402   001ADE  3215               	rrcf	(___lodiv@divisor+7)^0,f,c
  4403   001AE0  3214               	rrcf	(___lodiv@divisor+6)^0,f,c
  4404   001AE2  3213               	rrcf	(___lodiv@divisor+5)^0,f,c
  4405   001AE4  3212               	rrcf	(___lodiv@divisor+4)^0,f,c
  4406   001AE6  3211               	rrcf	(___lodiv@divisor+3)^0,f,c
  4407   001AE8  3210               	rrcf	(___lodiv@divisor+2)^0,f,c
  4408   001AEA  320F               	rrcf	(___lodiv@divisor+1)^0,f,c
  4409   001AEC  320E               	rrcf	___lodiv@divisor^0,f,c
  4410   001AEE  2E1E               	decfsz	___lodiv@counter^0,f,c
  4411   001AF0  EF3D  F00D         	goto	l2681
  4412   001AF4                     l793:
  4413   001AF4  C016  F006         	movff	___lodiv@quotient,?___lodiv
  4414   001AF8  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
  4415   001AFC  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
  4416   001B00  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
  4417   001B04  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
  4418   001B08  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
  4419   001B0C  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
  4420   001B10  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
  4421   001B14  0012               	return		;funcret
  4422   001B16                     __end_of___lodiv:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function _atoi *****************
  4426 ;; Defined at:
  4427 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4430 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(3), 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  n               2   18[COMRAM] int 
  4433 ;;  neg             2   16[COMRAM] int 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  2   11[COMRAM] int 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;Total ram usage:        9 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 3
  4450 ;; This function calls:
  4451 ;;		___wmul
  4452 ;;		_isdigit
  4453 ;;		_isspace
  4454 ;; This function is called by:
  4455 ;;		_vfpfcnvrt
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text30
  4460   001662                     __ptext30:
  4461                           	callstack 0
  4462   001662                     _atoi:
  4463                           	callstack 23
  4464   001662  0E00               	movlw	0
  4465   001664  6E14               	movwf	(atoi@n+1)^0,c
  4466   001666  0E00               	movlw	0
  4467   001668  6E13               	movwf	atoi@n^0,c
  4468   00166A  0E00               	movlw	0
  4469   00166C  6E12               	movwf	(atoi@neg+1)^0,c
  4470   00166E  0E00               	movlw	0
  4471   001670  6E11               	movwf	atoi@neg^0,c
  4472   001672  EF3D  F00B         	goto	l2785
  4473   001676                     l2781:
  4474   001676  4A0C               	infsnz	atoi@s^0,f,c
  4475   001678  2A0D               	incf	(atoi@s+1)^0,f,c
  4476   00167A                     l2785:
  4477   00167A  C00C  FFF6         	movff	atoi@s,tblptrl
  4478   00167E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4479   001682                     	if	0	;tblptru may be non-zero
  4480   001682                     	endif
  4481   001682                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4482   001682  0E00               	movlw	low (__mediumconst shr (0+16))
  4483   001684  6EF8               	movwf	tblptru,c
  4484   001686                     	endif
  4485   001686  0008               	tblrd		*
  4486   001688  50F5               	movf	tablat,w,c
  4487   00168A  0A20               	xorlw	32
  4488   00168C  B4D8               	btfsc	status,2,c
  4489   00168E  EF4B  F00B         	goto	u2161
  4490   001692  EF4D  F00B         	goto	u2160
  4491   001696                     u2161:
  4492   001696  EF3B  F00B         	goto	l2781
  4493   00169A                     u2160:
  4494   00169A  C00C  FFF6         	movff	atoi@s,tblptrl
  4495   00169E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4496   0016A2                     	if	0	;tblptru may be non-zero
  4497   0016A2                     	endif
  4498   0016A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4499   0016A2  0E00               	movlw	low (__mediumconst shr (0+16))
  4500   0016A4  6EF8               	movwf	tblptru,c
  4501   0016A6                     	endif
  4502   0016A6  0008               	tblrd		*
  4503   0016A8  CFF5 F00E          	movff	tablat,??_atoi
  4504   0016AC  0EF7               	movlw	247
  4505   0016AE  240E               	addwf	??_atoi^0,w,c
  4506   0016B0  6E0F               	movwf	(??_atoi+1)^0,c
  4507   0016B2  6A10               	clrf	(??_atoi+2)^0,c
  4508   0016B4  0EFF               	movlw	255
  4509   0016B6  2210               	addwfc	(??_atoi+2)^0,f,c
  4510   0016B8  5010               	movf	(??_atoi+2)^0,w,c
  4511   0016BA  E109               	bnz	u2170
  4512   0016BC  0E05               	movlw	5
  4513   0016BE  5C0F               	subwf	(??_atoi+1)^0,w,c
  4514   0016C0  A0D8               	btfss	status,0,c
  4515   0016C2  EF65  F00B         	goto	u2171
  4516   0016C6  EF67  F00B         	goto	u2170
  4517   0016CA                     u2171:
  4518   0016CA  EF3B  F00B         	goto	l2781
  4519   0016CE                     u2170:
  4520   0016CE  EF71  F00B         	goto	l2793
  4521   0016D2                     l2789:
  4522   0016D2  0E00               	movlw	0
  4523   0016D4  6E12               	movwf	(atoi@neg+1)^0,c
  4524   0016D6  0E01               	movlw	1
  4525   0016D8  6E11               	movwf	atoi@neg^0,c
  4526   0016DA                     l2791:
  4527   0016DA  4A0C               	infsnz	atoi@s^0,f,c
  4528   0016DC  2A0D               	incf	(atoi@s+1)^0,f,c
  4529   0016DE  EFAA  F00B         	goto	l2801
  4530   0016E2                     l2793:
  4531   0016E2  C00C  FFF6         	movff	atoi@s,tblptrl
  4532   0016E6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4533   0016EA                     	if	0	;tblptru may be non-zero
  4534   0016EA                     	endif
  4535   0016EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4536   0016EA  0E00               	movlw	low (__mediumconst shr (0+16))
  4537   0016EC  6EF8               	movwf	tblptru,c
  4538   0016EE                     	endif
  4539   0016EE  0008               	tblrd		*
  4540   0016F0  50F5               	movf	tablat,w,c
  4541   0016F2  6E0E               	movwf	??_atoi^0,c
  4542   0016F4  6A0F               	clrf	(??_atoi+1)^0,c
  4543                           
  4544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4545                           ; Switch size 1, requested type "simple"
  4546                           ; Number of cases is 1, Range of values is 0 to 0
  4547                           ; switch strategies available:
  4548                           ; Name         Instructions Cycles
  4549                           ; simple_byte            4     3 (average)
  4550                           ;	Chosen strategy is simple_byte
  4551   0016F6  500F               	movf	(??_atoi+1)^0,w,c
  4552   0016F8  0A00               	xorlw	0	; case 0
  4553   0016FA  B4D8               	btfsc	status,2,c
  4554   0016FC  EF82  F00B         	goto	l3087
  4555   001700  EFAA  F00B         	goto	l2801
  4556   001704                     l3087:
  4557                           
  4558                           ; Switch size 1, requested type "simple"
  4559                           ; Number of cases is 2, Range of values is 43 to 45
  4560                           ; switch strategies available:
  4561                           ; Name         Instructions Cycles
  4562                           ; simple_byte            7     4 (average)
  4563                           ;	Chosen strategy is simple_byte
  4564   001704  500E               	movf	??_atoi^0,w,c
  4565   001706  0A2B               	xorlw	43	; case 43
  4566   001708  B4D8               	btfsc	status,2,c
  4567   00170A  EF6D  F00B         	goto	l2791
  4568   00170E  0A06               	xorlw	6	; case 45
  4569   001710  B4D8               	btfsc	status,2,c
  4570   001712  EF69  F00B         	goto	l2789
  4571   001716  EFAA  F00B         	goto	l2801
  4572   00171A                     l2795:
  4573   00171A  C013  F006         	movff	atoi@n,___wmul@multiplier
  4574   00171E  C014  F007         	movff	atoi@n+1,___wmul@multiplier+1
  4575   001722  0E00               	movlw	0
  4576   001724  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  4577   001726  0E0A               	movlw	10
  4578   001728  6E08               	movwf	___wmul@multiplicand^0,c
  4579   00172A  EC37  F011         	call	___wmul	;wreg free
  4580   00172E  C00C  FFF6         	movff	atoi@s,tblptrl
  4581   001732  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4582   001736                     	if	0	;tblptru may be non-zero
  4583   001736                     	endif
  4584   001736                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4585   001736  0E00               	movlw	low (__mediumconst shr (0+16))
  4586   001738  6EF8               	movwf	tblptru,c
  4587   00173A                     	endif
  4588   00173A  0008               	tblrd		*
  4589   00173C  50F5               	movf	tablat,w,c
  4590   00173E  5E06               	subwf	?___wmul^0,f,c
  4591   001740  0E00               	movlw	0
  4592   001742  5A07               	subwfb	(?___wmul+1)^0,f,c
  4593   001744  0E30               	movlw	48
  4594   001746  2406               	addwf	?___wmul^0,w,c
  4595   001748  6E13               	movwf	atoi@n^0,c
  4596   00174A  0E00               	movlw	0
  4597   00174C  2007               	addwfc	(?___wmul+1)^0,w,c
  4598   00174E  6E14               	movwf	(atoi@n+1)^0,c
  4599   001750  EF6D  F00B         	goto	l2791
  4600   001754                     l2801:
  4601   001754  C00C  FFF6         	movff	atoi@s,tblptrl
  4602   001758  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4603   00175C                     	if	0	;tblptru may be non-zero
  4604   00175C                     	endif
  4605   00175C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4606   00175C  0E00               	movlw	low (__mediumconst shr (0+16))
  4607   00175E  6EF8               	movwf	tblptru,c
  4608   001760                     	endif
  4609   001760  0008               	tblrd		*
  4610   001762  CFF5 F00E          	movff	tablat,??_atoi
  4611   001766  0ED0               	movlw	208
  4612   001768  240E               	addwf	??_atoi^0,w,c
  4613   00176A  6E0F               	movwf	(??_atoi+1)^0,c
  4614   00176C  6A10               	clrf	(??_atoi+2)^0,c
  4615   00176E  0EFF               	movlw	255
  4616   001770  2210               	addwfc	(??_atoi+2)^0,f,c
  4617   001772  5010               	movf	(??_atoi+2)^0,w,c
  4618   001774  E109               	bnz	u2180
  4619   001776  0E0A               	movlw	10
  4620   001778  5C0F               	subwf	(??_atoi+1)^0,w,c
  4621   00177A  A0D8               	btfss	status,0,c
  4622   00177C  EFC2  F00B         	goto	u2181
  4623   001780  EFC4  F00B         	goto	u2180
  4624   001784                     u2181:
  4625   001784  EF8D  F00B         	goto	l2795
  4626   001788                     u2180:
  4627   001788  5011               	movf	atoi@neg^0,w,c
  4628   00178A  1012               	iorwf	(atoi@neg+1)^0,w,c
  4629   00178C  A4D8               	btfss	status,2,c
  4630   00178E  EFCB  F00B         	goto	u2191
  4631   001792  EFCD  F00B         	goto	u2190
  4632   001796                     u2191:
  4633   001796  EFDB  F00B         	goto	l1131
  4634   00179A                     u2190:
  4635   00179A  C013  F00E         	movff	atoi@n,??_atoi
  4636   00179E  C014  F00F         	movff	atoi@n+1,??_atoi+1
  4637   0017A2  1E0E               	comf	??_atoi^0,f,c
  4638   0017A4  1E0F               	comf	(??_atoi+1)^0,f,c
  4639   0017A6  4A0E               	infsnz	??_atoi^0,f,c
  4640   0017A8  2A0F               	incf	(??_atoi+1)^0,f,c
  4641   0017AA  C00E  F00C         	movff	??_atoi,?_atoi
  4642   0017AE  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4643   0017B2  EFDF  F00B         	goto	l1134
  4644   0017B6                     l1131:
  4645   0017B6  C013  F00C         	movff	atoi@n,?_atoi
  4646   0017BA  C014  F00D         	movff	atoi@n+1,?_atoi+1
  4647   0017BE                     l1134:
  4648   0017BE  0012               	return		;funcret
  4649   0017C0                     __end_of_atoi:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _isspace *****************
  4653 ;; Defined at:
  4654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  c               2    5[COMRAM] int 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  2    5[COMRAM] int 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;Total ram usage:        5 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 2
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_atoi
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text31
  4683   002104                     __ptext31:
  4684                           	callstack 0
  4685   002104                     _isspace:
  4686                           	callstack 23
  4687   002104  0E01               	movlw	1
  4688   002106  6E0A               	movwf	_isspace$2064^0,c
  4689   002108  0E20               	movlw	32
  4690   00210A  1806               	xorwf	isspace@c^0,w,c
  4691   00210C  1007               	iorwf	(isspace@c+1)^0,w,c
  4692   00210E  B4D8               	btfsc	status,2,c
  4693   002110  EF8C  F010         	goto	u2071
  4694   002114  EF8E  F010         	goto	u2070
  4695   002118                     u2071:
  4696   002118  EFA1  F010         	goto	l2739
  4697   00211C                     u2070:
  4698   00211C  0EF7               	movlw	247
  4699   00211E  2406               	addwf	isspace@c^0,w,c
  4700   002120  6E08               	movwf	??_isspace^0,c
  4701   002122  0EFF               	movlw	255
  4702   002124  2007               	addwfc	(isspace@c+1)^0,w,c
  4703   002126  6E09               	movwf	(??_isspace+1)^0,c
  4704   002128  5009               	movf	(??_isspace+1)^0,w,c
  4705   00212A  E109               	bnz	u2080
  4706   00212C  0E05               	movlw	5
  4707   00212E  5C08               	subwf	??_isspace^0,w,c
  4708   002130  A0D8               	btfss	status,0,c
  4709   002132  EF9D  F010         	goto	u2081
  4710   002136  EF9F  F010         	goto	u2080
  4711   00213A                     u2081:
  4712   00213A  EFA1  F010         	goto	l2739
  4713   00213E                     u2080:
  4714   00213E  0E00               	movlw	0
  4715   002140  6E0A               	movwf	_isspace$2064^0,c
  4716   002142                     l2739:
  4717   002142  C00A  F006         	movff	_isspace$2064,?_isspace
  4718   002146  6A07               	clrf	(?_isspace+1)^0,c
  4719   002148  0012               	return		;funcret
  4720   00214A                     __end_of_isspace:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _isdigit *****************
  4724 ;; Defined at:
  4725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  c               2    5[COMRAM] int 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  2    5[COMRAM] int 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;Total ram usage:        4 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 2
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_vfpfcnvrt
  4750 ;;		_atoi
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text32
  4755   002242                     __ptext32:
  4756                           	callstack 0
  4757   002242                     _isdigit:
  4758                           	callstack 24
  4759   002242  0ED0               	movlw	208
  4760   002244  2406               	addwf	isdigit@c^0,w,c
  4761   002246  6E08               	movwf	??_isdigit^0,c
  4762   002248  0EFF               	movlw	255
  4763   00224A  2007               	addwfc	(isdigit@c+1)^0,w,c
  4764   00224C  6E09               	movwf	(??_isdigit+1)^0,c
  4765   00224E  5009               	movf	(??_isdigit+1)^0,w,c
  4766   002250  E10A               	bnz	u2050
  4767   002252  0E0A               	movlw	10
  4768   002254  5C08               	subwf	??_isdigit^0,w,c
  4769   002256  A0D8               	btfss	status,0,c
  4770   002258  EF30  F011         	goto	u2051
  4771   00225C  EF33  F011         	goto	u2050
  4772   002260                     u2051:
  4773   002260  0E01               	movlw	1
  4774   002262  EF34  F011         	goto	u2060
  4775   002266                     u2050:
  4776   002266  0E00               	movlw	0
  4777   002268                     u2060:
  4778   002268  6E06               	movwf	?_isdigit^0,c
  4779   00226A  6A07               	clrf	(?_isdigit+1)^0,c
  4780   00226C  0012               	return		;funcret
  4781   00226E                     __end_of_isdigit:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function ___wmul *****************
  4785 ;; Defined at:
  4786 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  multiplier      2    5[COMRAM] unsigned int 
  4789 ;;  multiplicand    2    7[COMRAM] unsigned int 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  product         2    9[COMRAM] unsigned int 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  2    5[COMRAM] unsigned int 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, prodl, prodh
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;Total ram usage:        6 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 2
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_atoi
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text33
  4816   00226E                     __ptext33:
  4817                           	callstack 0
  4818   00226E                     ___wmul:
  4819                           	callstack 23
  4820   00226E  5006               	movf	___wmul@multiplier^0,w,c
  4821   002270  0208               	mulwf	___wmul@multiplicand^0,c
  4822   002272  CFF3 F00A          	movff	prodl,___wmul@product
  4823   002276  CFF4 F00B          	movff	prodh,___wmul@product+1
  4824   00227A  5006               	movf	___wmul@multiplier^0,w,c
  4825   00227C  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  4826   00227E  50F3               	movf	243,w,c
  4827   002280  260B               	addwf	(___wmul@product+1)^0,f,c
  4828   002282  5007               	movf	(___wmul@multiplier+1)^0,w,c
  4829   002284  0208               	mulwf	___wmul@multiplicand^0,c
  4830   002286  50F3               	movf	243,w,c
  4831   002288  260B               	addwf	(___wmul@product+1)^0,f,c
  4832   00228A  C00A  F006         	movff	___wmul@product,?___wmul
  4833   00228E  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  4834   002292  0012               	return		;funcret
  4835   002294                     __end_of___wmul:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _HighISR *****************
  4839 ;; Defined at:
  4840 ;;		line 22 in file "interrupts.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;Total ram usage:        3 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 1
  4861 ;; This function calls:
  4862 ;;		_increment_seconds
  4863 ;; This function is called by:
  4864 ;;		Interrupt level 2
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	intcode
  4869   000008                     __pintcode:
  4870                           	callstack 0
  4871   000008                     _HighISR:
  4872                           	callstack 20
  4873                           
  4874                           ;incstack = 0
  4875   000008  8254               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4876   00000A  CFD9 F004          	movff	fsr2l,??_HighISR+1
  4877   00000E  CFDA F005          	movff	fsr2h,??_HighISR+2
  4878   000012                     
  4879                           ;interrupts.c: 24:     if(PIR0bits.TMR0IF == 1){
  4880   000012  010E               	movlb	14	; () banked
  4881   000014  AB33               	btfss	51,5,b	;volatile
  4882   000016  EF0F  F000         	goto	i2u182_41
  4883   00001A  EF11  F000         	goto	i2u182_40
  4884   00001E                     i2u182_41:
  4885   00001E  EF3B  F000         	goto	i2l163
  4886   000022                     i2u182_40:
  4887   000022                     
  4888                           ; BSR set to: 14
  4889                           ;interrupts.c: 25:         LATHbits.LATH3 = !LATHbits.LATH3;
  4890   000022  A680               	btfss	128,3,c	;volatile
  4891   000024  EF16  F000         	goto	i2u183_41
  4892   000028  EF1A  F000         	goto	i2u183_40
  4893   00002C                     i2u183_41:
  4894   00002C  6A03               	clrf	??_HighISR^0,c
  4895   00002E  2A03               	incf	??_HighISR^0,f,c
  4896   000030  EF1B  F000         	goto	i2u184_48
  4897   000034                     i2u183_40:
  4898   000034  6A03               	clrf	??_HighISR^0,c
  4899   000036                     i2u184_48:
  4900   000036  4603               	rlncf	??_HighISR^0,f,c
  4901   000038  4603               	rlncf	??_HighISR^0,f,c
  4902   00003A  4603               	rlncf	??_HighISR^0,f,c
  4903   00003C  5080               	movf	128,w,c	;volatile
  4904   00003E  1803               	xorwf	??_HighISR^0,w,c
  4905   000040  0BF7               	andlw	-9
  4906   000042  1803               	xorwf	??_HighISR^0,w,c
  4907   000044  6E80               	movwf	128,c	;volatile
  4908   000046                     
  4909                           ;interrupts.c: 26: increment_seconds();
  4910   000046  ECE0  F00B         	call	_increment_seconds	;wreg free
  4911   00004A                     
  4912                           ;interrupts.c: 27:     if(test_mode == 0){
  4913   00004A  0100               	movlb	0	; () banked
  4914   00004C  51D4               	movf	_test_mode& (0+255),w,b
  4915   00004E  11D5               	iorwf	(_test_mode+1)& (0+255),w,b
  4916   000050  A4D8               	btfss	status,2,c
  4917   000052  EF2D  F000         	goto	i2u185_41
  4918   000056  EF2F  F000         	goto	i2u185_40
  4919   00005A                     i2u185_41:
  4920   00005A  EF35  F000         	goto	i2l2557
  4921   00005E                     i2u185_40:
  4922   00005E                     
  4923                           ; BSR set to: 0
  4924                           ;interrupts.c: 28:             TMR0H=0b00001011;
  4925   00005E  0E0B               	movlw	11
  4926   000060  6ED4               	movwf	212,c	;volatile
  4927                           
  4928                           ;interrupts.c: 29:             TMR0L=0b11011011;
  4929   000062  0EDB               	movlw	219
  4930   000064  6ED3               	movwf	211,c	;volatile
  4931                           
  4932                           ;interrupts.c: 30:     }else{
  4933   000066  EF39  F000         	goto	i2l2559
  4934   00006A                     i2l2557:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;interrupts.c: 31:             TMR0H=0;
  4938   00006A  0E00               	movlw	0
  4939   00006C  6ED4               	movwf	212,c	;volatile
  4940                           
  4941                           ;interrupts.c: 32:             TMR0L=0;
  4942   00006E  0E00               	movlw	0
  4943   000070  6ED3               	movwf	211,c	;volatile
  4944   000072                     i2l2559:
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;interrupts.c: 34:         PIR0bits.TMR0IF = 0;
  4948   000072  010E               	movlb	14	; () banked
  4949   000074  9B33               	bcf	51,5,b	;volatile
  4950   000076                     i2l163:
  4951                           
  4952                           ; BSR set to: 14
  4953   000076  C005  FFDA         	movff	??_HighISR+2,fsr2h
  4954   00007A  C004  FFD9         	movff	??_HighISR+1,fsr2l
  4955   00007E  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4956   000080  0011               	retfie		f
  4957   000082                     __end_of_HighISR:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _increment_seconds *****************
  4961 ;; Defined at:
  4962 ;;		line 46 in file "timers.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;Total ram usage:        2 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_HighISR
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text35
  4990   0017C0                     __ptext35:
  4991                           	callstack 0
  4992   0017C0                     _increment_seconds:
  4993                           	callstack 20
  4994   0017C0                     
  4995                           ;timers.c: 47:     if(test_mode == 0){
  4996   0017C0  0100               	movlb	0	; () banked
  4997   0017C2  51D4               	movf	_test_mode& (0+255),w,b
  4998   0017C4  11D5               	iorwf	(_test_mode+1)& (0+255),w,b
  4999   0017C6  A4D8               	btfss	status,2,c
  5000   0017C8  EFE8  F00B         	goto	i2u169_41
  5001   0017CC  EFEA  F00B         	goto	i2u169_40
  5002   0017D0                     i2u169_41:
  5003   0017D0  EFEE  F00B         	goto	i2l2443
  5004   0017D4                     i2u169_40:
  5005   0017D4                     
  5006                           ; BSR set to: 0
  5007                           ;timers.c: 48:     seconds += 1 ;
  5008   0017D4  4BEE               	infsnz	_seconds& (0+255),f,b
  5009   0017D6  2BEF               	incf	(_seconds+1)& (0+255),f,b
  5010                           
  5011                           ;timers.c: 49:     }else{
  5012   0017D8  EFF2  F00B         	goto	i2l203
  5013   0017DC                     i2l2443:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;timers.c: 50:         seconds += 15;
  5017   0017DC  0E0F               	movlw	15
  5018   0017DE  27EE               	addwf	_seconds& (0+255),f,b
  5019   0017E0  0E00               	movlw	0
  5020   0017E2  23EF               	addwfc	(_seconds+1)& (0+255),f,b
  5021   0017E4                     i2l203:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;timers.c: 52:     if (seconds == 60){
  5025   0017E4  0E3C               	movlw	60
  5026   0017E6  19EE               	xorwf	_seconds& (0+255),w,b
  5027   0017E8  11EF               	iorwf	(_seconds+1)& (0+255),w,b
  5028   0017EA  A4D8               	btfss	status,2,c
  5029   0017EC  EFFA  F00B         	goto	i2u170_41
  5030   0017F0  EFFC  F00B         	goto	i2u170_40
  5031   0017F4                     i2u170_41:
  5032   0017F4  EF02  F00C         	goto	i2l2449
  5033   0017F8                     i2u170_40:
  5034   0017F8                     
  5035                           ; BSR set to: 0
  5036                           ;timers.c: 53:         seconds = 0;
  5037   0017F8  0E00               	movlw	0
  5038   0017FA  6FEF               	movwf	(_seconds+1)& (0+255),b
  5039   0017FC  0E00               	movlw	0
  5040   0017FE  6FEE               	movwf	_seconds& (0+255),b
  5041   001800                     
  5042                           ; BSR set to: 0
  5043                           ;timers.c: 54:         minutes ++ ;
  5044   001800  4BEC               	infsnz	_minutes& (0+255),f,b
  5045   001802  2BED               	incf	(_minutes+1)& (0+255),f,b
  5046   001804                     i2l2449:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;timers.c: 56:     if (minutes == 60){
  5050   001804  0E3C               	movlw	60
  5051   001806  19EC               	xorwf	_minutes& (0+255),w,b
  5052   001808  11ED               	iorwf	(_minutes+1)& (0+255),w,b
  5053   00180A  A4D8               	btfss	status,2,c
  5054   00180C  EF0A  F00C         	goto	i2u171_41
  5055   001810  EF0C  F00C         	goto	i2u171_40
  5056   001814                     i2u171_41:
  5057   001814  EF12  F00C         	goto	i2l2455
  5058   001818                     i2u171_40:
  5059   001818                     
  5060                           ; BSR set to: 0
  5061                           ;timers.c: 57:         minutes = 0;
  5062   001818  0E00               	movlw	0
  5063   00181A  6FED               	movwf	(_minutes+1)& (0+255),b
  5064   00181C  0E00               	movlw	0
  5065   00181E  6FEC               	movwf	_minutes& (0+255),b
  5066   001820                     
  5067                           ; BSR set to: 0
  5068                           ;timers.c: 58:         hours ++ ;
  5069   001820  4BEA               	infsnz	_hours& (0+255),f,b
  5070   001822  2BEB               	incf	(_hours+1)& (0+255),f,b
  5071   001824                     i2l2455:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;timers.c: 60:     if (hours == 24){
  5075   001824  0E18               	movlw	24
  5076   001826  19EA               	xorwf	_hours& (0+255),w,b
  5077   001828  11EB               	iorwf	(_hours+1)& (0+255),w,b
  5078   00182A  A4D8               	btfss	status,2,c
  5079   00182C  EF1A  F00C         	goto	i2u172_41
  5080   001830  EF1C  F00C         	goto	i2u172_40
  5081   001834                     i2u172_41:
  5082   001834  EF24  F00C         	goto	i2l2463
  5083   001838                     i2u172_40:
  5084   001838                     
  5085                           ; BSR set to: 0
  5086                           ;timers.c: 61:         hours = 0;
  5087   001838  0E00               	movlw	0
  5088   00183A  6FEB               	movwf	(_hours+1)& (0+255),b
  5089   00183C  0E00               	movlw	0
  5090   00183E  6FEA               	movwf	_hours& (0+255),b
  5091   001840                     
  5092                           ; BSR set to: 0
  5093                           ;timers.c: 62:         day ++ ;
  5094   001840  4BD2               	infsnz	_day& (0+255),f,b
  5095   001842  2BD3               	incf	(_day+1)& (0+255),f,b
  5096   001844                     
  5097                           ; BSR set to: 0
  5098                           ;timers.c: 63:         week_day ++;
  5099   001844  4A52               	infsnz	_week_day^0,f,c
  5100   001846  2A53               	incf	(_week_day+1)^0,f,c
  5101   001848                     i2l2463:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;timers.c: 65:     if (week_day == 7){
  5105   001848  0E07               	movlw	7
  5106   00184A  1852               	xorwf	_week_day^0,w,c
  5107   00184C  1053               	iorwf	(_week_day+1)^0,w,c
  5108   00184E  A4D8               	btfss	status,2,c
  5109   001850  EF2C  F00C         	goto	i2u173_41
  5110   001854  EF2E  F00C         	goto	i2u173_40
  5111   001858                     i2u173_41:
  5112   001858  EF32  F00C         	goto	i2l2467
  5113   00185C                     i2u173_40:
  5114   00185C                     
  5115                           ; BSR set to: 0
  5116                           ;timers.c: 66:         week_day = 0;
  5117   00185C  0E00               	movlw	0
  5118   00185E  6E53               	movwf	(_week_day+1)^0,c
  5119   001860  0E00               	movlw	0
  5120   001862  6E52               	movwf	_week_day^0,c
  5121   001864                     i2l2467:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;timers.c: 68:     if (month == 1 && year%4 == 0){
  5125   001864  044F               	decf	_month^0,w,c
  5126   001866  1050               	iorwf	(_month+1)^0,w,c
  5127   001868  A4D8               	btfss	status,2,c
  5128   00186A  EF39  F00C         	goto	i2u174_41
  5129   00186E  EF3B  F00C         	goto	i2u174_40
  5130   001872                     i2u174_41:
  5131   001872  EF5C  F00C         	goto	i2l2477
  5132   001876                     i2u174_40:
  5133   001876                     
  5134                           ; BSR set to: 0
  5135   001876  0E03               	movlw	3
  5136   001878  15D0               	andwf	_year& (0+255),w,b
  5137   00187A  6E01               	movwf	??_increment_seconds^0,c
  5138   00187C  0E00               	movlw	0
  5139   00187E  15D1               	andwf	(_year+1)& (0+255),w,b
  5140   001880  6E02               	movwf	(??_increment_seconds+1)^0,c
  5141   001882  5001               	movf	??_increment_seconds^0,w,c
  5142   001884  1002               	iorwf	(??_increment_seconds+1)^0,w,c
  5143   001886  A4D8               	btfss	status,2,c
  5144   001888  EF48  F00C         	goto	i2u175_41
  5145   00188C  EF4A  F00C         	goto	i2u175_40
  5146   001890                     i2u175_41:
  5147   001890  EF5C  F00C         	goto	i2l2477
  5148   001894                     i2u175_40:
  5149   001894                     
  5150                           ; BSR set to: 0
  5151                           ;timers.c: 69:         if (day == 30)
  5152   001894  0E1E               	movlw	30
  5153   001896  19D2               	xorwf	_day& (0+255),w,b
  5154   001898  11D3               	iorwf	(_day+1)& (0+255),w,b
  5155   00189A  A4D8               	btfss	status,2,c
  5156   00189C  EF52  F00C         	goto	i2u176_41
  5157   0018A0  EF54  F00C         	goto	i2u176_40
  5158   0018A4                     i2u176_41:
  5159   0018A4  EF7B  F00C         	goto	i2l2483
  5160   0018A8                     i2u176_40:
  5161   0018A8                     i2l2473:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;timers.c: 70:         {;timers.c: 71:             day = 1;
  5165   0018A8  0E00               	movlw	0
  5166   0018AA  6FD3               	movwf	(_day+1)& (0+255),b
  5167   0018AC  0E01               	movlw	1
  5168   0018AE  6FD2               	movwf	_day& (0+255),b
  5169   0018B0                     
  5170                           ; BSR set to: 0
  5171                           ;timers.c: 72:             month += 1;
  5172   0018B0  4A4F               	infsnz	_month^0,f,c
  5173   0018B2  2A50               	incf	(_month+1)^0,f,c
  5174   0018B4  EF7B  F00C         	goto	i2l2483
  5175   0018B8                     i2l2477:
  5176                           
  5177                           ; BSR set to: 0
  5178   0018B8  90D8               	bcf	status,0,c
  5179   0018BA  344F               	rlcf	_month^0,w,c
  5180   0018BC  6ED9               	movwf	fsr2l,c
  5181   0018BE  3450               	rlcf	(_month+1)^0,w,c
  5182   0018C0  6EDA               	movwf	fsr2h,c
  5183   0018C2  0EB4               	movlw	low (_month_days+2)
  5184   0018C4  26D9               	addwf	fsr2l,f,c
  5185   0018C6  0E00               	movlw	high (_month_days+2)
  5186   0018C8  22DA               	addwfc	fsr2h,f,c
  5187   0018CA  CFDE F001          	movff	postinc2,??_increment_seconds
  5188   0018CE  CFDD F002          	movff	postdec2,??_increment_seconds+1
  5189   0018D2  0E01               	movlw	1
  5190   0018D4  2601               	addwf	??_increment_seconds^0,f,c
  5191   0018D6  0E00               	movlw	0
  5192   0018D8  2202               	addwfc	(??_increment_seconds+1)^0,f,c
  5193   0018DA  51D2               	movf	_day& (0+255),w,b
  5194   0018DC  1801               	xorwf	??_increment_seconds^0,w,c
  5195   0018DE  E107               	bnz	i2u177_41
  5196   0018E0  51D3               	movf	(_day+1)& (0+255),w,b
  5197   0018E2  1802               	xorwf	(??_increment_seconds+1)^0,w,c
  5198   0018E4  A4D8               	btfss	status,2,c
  5199   0018E6  EF77  F00C         	goto	i2u177_41
  5200   0018EA  EF79  F00C         	goto	i2u177_40
  5201   0018EE                     i2u177_41:
  5202   0018EE  EF7B  F00C         	goto	i2l2483
  5203   0018F2                     i2u177_40:
  5204   0018F2  EF54  F00C         	goto	i2l2473
  5205   0018F6                     i2l2483:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;timers.c: 80:     if (month == 12)
  5209   0018F6  0E0C               	movlw	12
  5210   0018F8  184F               	xorwf	_month^0,w,c
  5211   0018FA  1050               	iorwf	(_month+1)^0,w,c
  5212   0018FC  A4D8               	btfss	status,2,c
  5213   0018FE  EF83  F00C         	goto	i2u178_41
  5214   001902  EF85  F00C         	goto	i2u178_40
  5215   001906                     i2u178_41:
  5216   001906  EF8B  F00C         	goto	i2l213
  5217   00190A                     i2u178_40:
  5218   00190A                     
  5219                           ; BSR set to: 0
  5220                           ;timers.c: 81:     {;timers.c: 82:         month = 0;
  5221   00190A  0E00               	movlw	0
  5222   00190C  6E50               	movwf	(_month+1)^0,c
  5223   00190E  0E00               	movlw	0
  5224   001910  6E4F               	movwf	_month^0,c
  5225   001912                     
  5226                           ; BSR set to: 0
  5227                           ;timers.c: 83:         year += 1;
  5228   001912  4BD0               	infsnz	_year& (0+255),f,b
  5229   001914  2BD1               	incf	(_year+1)& (0+255),f,b
  5230   001916                     i2l213:
  5231                           
  5232                           ; BSR set to: 0
  5233   001916  0012               	return		;funcret
  5234   001918                     __end_of_increment_seconds:
  5235                           	callstack 0
  5236                           
  5237                           	psect	rparam
  5238   000000                     
  5239                           	psect	temp
  5240   000054                     btemp:
  5241                           	callstack 0
  5242   000054                     	ds	1
  5243   000000                     int$flags	set	btemp
  5244   000000                     wtemp8	set	btemp+1
  5245   000000                     ttemp5	set	btemp+1
  5246   000000                     ttemp6	set	btemp+4
  5247   000000                     ttemp7	set	btemp+8
  5248                           
  5249                           	psect	idloc
  5250                           
  5251                           ;Config register IDLOC0 @ 0x200000
  5252                           ;	unspecified, using default values
  5253   200000                     	org	2097152
  5254   200000  0FFF               	dw	4095
  5255                           
  5256                           ;Config register IDLOC1 @ 0x200002
  5257                           ;	unspecified, using default values
  5258   200002                     	org	2097154
  5259   200002  0FFF               	dw	4095
  5260                           
  5261                           ;Config register IDLOC2 @ 0x200004
  5262                           ;	unspecified, using default values
  5263   200004                     	org	2097156
  5264   200004  0FFF               	dw	4095
  5265                           
  5266                           ;Config register IDLOC3 @ 0x200006
  5267                           ;	unspecified, using default values
  5268   200006                     	org	2097158
  5269   200006  0FFF               	dw	4095
  5270                           
  5271                           ;Config register IDLOC4 @ 0x200008
  5272                           ;	unspecified, using default values
  5273   200008                     	org	2097160
  5274   200008  0FFF               	dw	4095
  5275                           
  5276                           ;Config register IDLOC5 @ 0x20000A
  5277                           ;	unspecified, using default values
  5278   20000A                     	org	2097162
  5279   20000A  0FFF               	dw	4095
  5280                           
  5281                           ;Config register IDLOC6 @ 0x20000C
  5282                           ;	unspecified, using default values
  5283   20000C                     	org	2097164
  5284   20000C  0FFF               	dw	4095
  5285                           
  5286                           ;Config register IDLOC7 @ 0x20000E
  5287                           ;	unspecified, using default values
  5288   20000E                     	org	2097166
  5289   20000E  0FFF               	dw	4095
  5290                           
  5291                           	psect	config
  5292                           
  5293                           ;Config register CONFIG1L @ 0x300000
  5294                           ;	External Oscillator mode Selection bits
  5295                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5296                           ;	Power-up default value for COSC bits
  5297                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5298   300000                     	org	3145728
  5299   300000  AA                 	db	170
  5300                           
  5301                           ;Config register CONFIG1H @ 0x300001
  5302                           ;	unspecified, using default values
  5303                           ;	Clock Out Enable bit
  5304                           ;	CLKOUTEN = 0x1, unprogrammed default
  5305                           ;	Clock Switch Enable bit
  5306                           ;	CSWEN = 0x1, unprogrammed default
  5307                           ;	Fail-Safe Clock Monitor Enable bit
  5308                           ;	FCMEN = 0x1, unprogrammed default
  5309   300001                     	org	3145729
  5310   300001  FF                 	db	255
  5311                           
  5312                           ;Config register CONFIG2L @ 0x300002
  5313                           ;	unspecified, using default values
  5314                           ;	Master Clear Enable bit
  5315                           ;	MCLRE = 0x1, unprogrammed default
  5316                           ;	Power-up Timer Enable bit
  5317                           ;	PWRTE = 0x1, unprogrammed default
  5318                           ;	Low-power BOR enable bit
  5319                           ;	LPBOREN = 0x1, unprogrammed default
  5320                           ;	Brown-out Reset Enable bits
  5321                           ;	BOREN = 0x3, unprogrammed default
  5322   300002                     	org	3145730
  5323   300002  FF                 	db	255
  5324                           
  5325                           ;Config register CONFIG2H @ 0x300003
  5326                           ;	unspecified, using default values
  5327                           ;	Brown Out Reset Voltage selection bits
  5328                           ;	BORV = 0x3, unprogrammed default
  5329                           ;	ZCD Disable bit
  5330                           ;	ZCD = 0x1, unprogrammed default
  5331                           ;	PPSLOCK bit One-Way Set Enable bit
  5332                           ;	PPS1WAY = 0x1, unprogrammed default
  5333                           ;	Stack Full/Underflow Reset Enable bit
  5334                           ;	STVREN = 0x1, unprogrammed default
  5335                           ;	Debugger Enable bit
  5336                           ;	DEBUG = 0x1, unprogrammed default
  5337                           ;	Extended Instruction Set Enable bit
  5338                           ;	XINST = 0x1, unprogrammed default
  5339   300003                     	org	3145731
  5340   300003  FF                 	db	255
  5341                           
  5342                           ;Config register CONFIG3L @ 0x300004
  5343                           ;	WDT Period Select bits
  5344                           ;	WDTCPS = 0x1F, unprogrammed default
  5345                           ;	WDT operating mode
  5346                           ;	WDTE = OFF, WDT Disabled
  5347   300004                     	org	3145732
  5348   300004  9F                 	db	159
  5349                           
  5350                           ;Config register CONFIG3H @ 0x300005
  5351                           ;	unspecified, using default values
  5352                           ;	WDT Window Select bits
  5353                           ;	WDTCWS = 0x7, unprogrammed default
  5354                           ;	WDT input clock selector
  5355                           ;	WDTCCS = 0x7, unprogrammed default
  5356   300005                     	org	3145733
  5357   300005  FF                 	db	255
  5358                           
  5359                           ;Config register CONFIG4L @ 0x300006
  5360                           ;	unspecified, using default values
  5361                           ;	Write Protection Block 0
  5362                           ;	WRT0 = 0x1, unprogrammed default
  5363                           ;	Write Protection Block 1
  5364                           ;	WRT1 = 0x1, unprogrammed default
  5365                           ;	Write Protection Block 2
  5366                           ;	WRT2 = 0x1, unprogrammed default
  5367                           ;	Write Protection Block 3
  5368                           ;	WRT3 = 0x1, unprogrammed default
  5369                           ;	Write Protection Block 3
  5370                           ;	WRT4 = 0x1, unprogrammed default
  5371                           ;	Write Protection Block 3
  5372                           ;	WRT5 = 0x1, unprogrammed default
  5373                           ;	Write Protection Block 3
  5374                           ;	WRT6 = 0x1, unprogrammed default
  5375                           ;	Write Protection Block 3
  5376                           ;	WRT7 = 0x1, unprogrammed default
  5377   300006                     	org	3145734
  5378   300006  FF                 	db	255
  5379                           
  5380                           ;Config register CONFIG4H @ 0x300007
  5381                           ;	unspecified, using default values
  5382                           ;	Configuration Register Write Protection bit
  5383                           ;	WRTC = 0x1, unprogrammed default
  5384                           ;	Boot Block Write Protection bit
  5385                           ;	WRTB = 0x1, unprogrammed default
  5386                           ;	Data EEPROM Write Protection bit
  5387                           ;	WRTD = 0x1, unprogrammed default
  5388                           ;	Scanner Enable bit
  5389                           ;	SCANE = 0x1, unprogrammed default
  5390                           ;	Low Voltage Programming Enable bit
  5391                           ;	LVP = 0x1, unprogrammed default
  5392   300007                     	org	3145735
  5393   300007  FF                 	db	255
  5394                           
  5395                           ;Config register CONFIG5L @ 0x300008
  5396                           ;	unspecified, using default values
  5397                           ;	UserNVM Program Memory Code Protection bit
  5398                           ;	CP = 0x1, unprogrammed default
  5399                           ;	DataNVM Memory Code Protection bit
  5400                           ;	CPD = 0x1, unprogrammed default
  5401   300008                     	org	3145736
  5402   300008  FF                 	db	255
  5403                           
  5404                           ;Config register CONFIG5H @ 0x300009
  5405                           ;	unspecified, using default values
  5406   300009                     	org	3145737
  5407   300009  FF                 	db	255
  5408                           
  5409                           ;Config register CONFIG6L @ 0x30000A
  5410                           ;	unspecified, using default values
  5411                           ;	Table Read Protection Block 0
  5412                           ;	EBTR0 = 0x1, unprogrammed default
  5413                           ;	Table Read Protection Block 1
  5414                           ;	EBTR1 = 0x1, unprogrammed default
  5415                           ;	Table Read Protection Block 2
  5416                           ;	EBTR2 = 0x1, unprogrammed default
  5417                           ;	Table Read Protection Block 3
  5418                           ;	EBTR3 = 0x1, unprogrammed default
  5419                           ;	Table Read Protection Block 4
  5420                           ;	EBTR4 = 0x1, unprogrammed default
  5421                           ;	Table Read Protection Block 5
  5422                           ;	EBTR5 = 0x1, unprogrammed default
  5423                           ;	Table Read Protection Block 6
  5424                           ;	EBTR6 = 0x1, unprogrammed default
  5425                           ;	Table Read Protection Block 7
  5426                           ;	EBTR7 = 0x1, unprogrammed default
  5427   30000A                     	org	3145738
  5428   30000A  FF                 	db	255
  5429                           
  5430                           ;Config register CONFIG6H @ 0x30000B
  5431                           ;	unspecified, using default values
  5432                           ;	Boot Block Table Read Protection bit
  5433                           ;	EBTRB = 0x1, unprogrammed default
  5434   30000B                     	org	3145739
  5435   30000B  FF                 	db	255
  5436                           tosu	equ	0xFFF
  5437                           tosh	equ	0xFFE
  5438                           tosl	equ	0xFFD
  5439                           stkptr	equ	0xFFC
  5440                           pclatu	equ	0xFFB
  5441                           pclath	equ	0xFFA
  5442                           pcl	equ	0xFF9
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           prodh	equ	0xFF4
  5448                           prodl	equ	0xFF3
  5449                           indf0	equ	0xFEF
  5450                           postinc0	equ	0xFEE
  5451                           postdec0	equ	0xFED
  5452                           preinc0	equ	0xFEC
  5453                           plusw0	equ	0xFEB
  5454                           fsr0h	equ	0xFEA
  5455                           fsr0l	equ	0xFE9
  5456                           wreg	equ	0xFE8
  5457                           indf1	equ	0xFE7
  5458                           postinc1	equ	0xFE6
  5459                           postdec1	equ	0xFE5
  5460                           preinc1	equ	0xFE4
  5461                           plusw1	equ	0xFE3
  5462                           fsr1h	equ	0xFE2
  5463                           fsr1l	equ	0xFE1
  5464                           bsr	equ	0xFE0
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           preinc2	equ	0xFDC
  5469                           plusw2	equ	0xFDB
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        38
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      83
    BANK0           160     82     144
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1981$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> main@ADC(BANK0[3]), main@Yea(BANK0[4]), main@Mon(BANK0[2]), main@Day(BANK0[2]), 
		 -> main@Hou(BANK0[2]), main@Min(BANK0[2]), main@Sec(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1933$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1933$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    ADC2String@buf	PTR unsigned char  size(2) Largest target is 4
		 -> main@ADC(BANK0[3]), main@Yea(BANK0[4]), main@Mon(BANK0[2]), main@Day(BANK0[2]), 
		 -> main@Hou(BANK0[2]), main@Min(BANK0[2]), main@Sec(BANK0[2]), 

    LCD_sendstring@strlst	PTR PTR unsigned char  size(2) Largest target is 16
		 -> main@lst(BANK0[16]), 

    sp__get_week_day	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    main@lst	PTR unsigned char [8] size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), NULL(NULL[0]), 
		 -> main@ADC(BANK0[3]), main@Yea(BANK0[4]), main@Mon(BANK0[2]), main@Day(BANK0[2]), 
		 -> main@Hou(BANK0[2]), main@Min(BANK0[2]), main@Sec(BANK0[2]), 

    main@F14260	PTR unsigned char [8] size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _LCD_sendstring->_LCD_setline
    _LCD_setline->_LCD_sendbyte
    _LCD_clear->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul

Critical Paths under _HighISR in COMRAM

    _HighISR->_increment_seconds

Critical Paths under _main in BANK0

    _main->_ADC2String
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   26305
                                             76 COMRAM     2     2      0
                                             43 BANK0     39    39      0
                         _ADC2String
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                           _LCD_Init
                          _LCD_clear
                     _LCD_sendstring
                        _Timer0_init
                            _get_day
                          _get_hours
                        _get_minutes
                          _get_month
                        _get_seconds
                       _get_week_day
                           _get_year
 ---------------------------------------------------------------------------------
 (1) _get_year                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_week_day                                         2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_seconds                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_month                                            2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_minutes                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_hours                                            2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_day                                              2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       6     4      2    6720
                                             10 COMRAM     6     4      2
                       _LCD_sendbyte
                        _LCD_setline
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          2     0      2    3370
                                              8 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0    3118
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    3206
                                              8 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    3118
                                              6 COMRAM     2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              5 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC2String                                           6     0      6   12282
                                             37 BANK0      6     0      6
                         _ADC_getval (ARG)
                            _get_day (ARG)
                          _get_hours (ARG)
                        _get_minutes (ARG)
                          _get_month (ARG)
                        _get_seconds (ARG)
                           _get_year (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   10051
                                             18 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    9019
                                             74 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           25    19      6    8525
                                             64 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4187
                                             32 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2775
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1357
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     857
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    2174
                                             11 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     281
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1182
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             3     3      0       0
                                              2 COMRAM     3     3      0
                  _increment_seconds
 ---------------------------------------------------------------------------------
 (11) _increment_seconds                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC2String
     _ADC_getval (ARG)
     _get_day (ARG)
     _get_hours (ARG)
     _get_minutes (ARG)
     _get_month (ARG)
     _get_seconds (ARG)
     _get_year (ARG)
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_clear
     _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
     _LCD_setline
       _LCD_sendbyte
   _Timer0_init
   _get_day
   _get_hours
   _get_minutes
   _get_month
   _get_seconds
   _get_week_day
   _get_year

 _HighISR (ROOT)
   _increment_seconds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      90       5       90.0%
BITBIGSFRllllhh     84      0       0      41        0.0%
BITBIGSFRlllllh     5E      0       0      44        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      53       1       88.3%
BITBIGSFRhhll       43      0       0      34        0.0%
BITBIGSFRllllll     3A      0       0      47        0.0%
BITBIGSFRlllllh     33      0       0      43        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllllhh     14      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllhl      8      0       0      42        0.0%
BITBIGSFRlllllh      7      0       0      45        0.0%
BITBIGSFRllllhh      6      0       0      40        0.0%
BITBIGSFRllllhh      3      0       0      39        0.0%
BITBIGSFRhlh         3      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllh        1      0       0      37        0.0%
BITBIGSFRlh          1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     103      48        0.0%
DATA                 0      0     103       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 16:12:13 2022

             ?_get_minutes 0006               ?_get_seconds 0006              ?_get_week_day 0006  
      ___wmul@multiplicand 0008          ??_Interrupts_init 0006                        l110 14BA  
                      l301 22DA                        l222 2340                        l304 1F94  
                      l216 2322                        l225 234A                        l155 230E  
                      l307 2210                        l219 2336                        l244 232C  
                      l236 1BF2                        l325 1A24                        l333 1660  
                      l229 1BF2                        l262 22F4                        l319 1A24  
                      l247 2318                        l352 1E44                        l265 2214  
                      l290 1FAC                        l355 2292                        l267 2222  
                      l268 2240                        l292 1FC2                        l196 218C  
                      l294 1FD8                        l287 2302                        l800 1B14  
                      l296 1FEE                        l810 1CC2                        l298 1FFC  
                      l803 1CA2                        l793 1AF4                        _day 00D2  
                      _pad 1E46                        wreg 000FE8                       l1102 10FE  
                     l1033 2102                       l1131 17B6                       l1061 1ECC  
                     l1109 20B0                       l1134 17BE                       l1070 1140  
                     l1063 1EEE                       l1160 1D8C                       l1137 226C  
                     l1145 2148                       l2121 1F98                       l1058 1E8A  
                     l1171 234E                       l2051 2300                       l2131 1FD2  
                     l2123 1FA6                       l2211 22BA                       l1068 1138  
                     l2133 1FDA                       l2125 1FAE                       l2213 22C4  
                     l2301 1F44                       l1078 12F8                       l2047 22F6  
                     l2135 1FE8                       l2127 1FBC                       l2215 22CC  
                     l2311 1F76                       l2303 1F4C                       l2231 192A  
                     l1168 21D0                       l2321 22EE                       l2049 22F8  
                     l2137 1FF0                       l2129 1FC4                       l2217 22D2  
                     l2313 1F80                       l2305 1F56                       l2241 197A  
                     l2233 1938                       l2401 1BA6                       l2323 22F0  
                     l2139 1FF4                       l2315 1F8A                       l2307 1F5E  
                     l2331 21E4                       l2251 19D2                       l2243 198E  
                     l2235 194A                       l2325 22F2                       l2317 22DC  
                     l2309 1F68                       l2253 19E0                       l2245 199C  
                     l2237 1958                       l2229 1918                       l2421 14DC  
                     l2333 231A                       l2319 22E6                       l2327 21D2  
                     l2255 19F4                       l2247 19B0                       l2239 196C  
                     l2431 1540                       l2351 2338                       l2415 1BD2  
                     l2407 1BB2                       l2361 2228                       l2329 21DA  
                     l2257 1A02                       l2249 19BE                       l2433 158C  
                     l2281 217C                       l2273 214A                       l2353 2342  
                     l2417 1BE6                       l2409 1BC6                       l3083 0ECE  
                     l2363 2238                       l2291 1F08                       l2259 1A16  
                     l2435 1640                       l2427 14E4                       l2283 2188  
                     l2275 2152                       l2355 2324                       l2701 1C3C  
                     l3085 10B2                       l2293 1F1E                       l2437 1644  
                     l2429 14F4                       l2285 218A                       l2277 2154  
                     l2349 232E                       l2357 2310                       l3087 1704  
                     l2703 1C6A                       l2711 1E54                       l2359 2212  
                     l2287 2304                       l2295 1F24                       l2279 2168  
                     l2391 1B72                       l2383 1B52                       l2375 1B34  
                     l2367 1B16                       l2801 1754                       l2705 1C8A  
                     l2721 1EAA                       l2713 1E68                       l2297 1F32  
                     l2289 1EF0                       l2393 1B86                       l2385 1B66  
                     l2377 1B46                       l2369 1B28                       l2731 2104  
                     l2803 1788                       l2707 1C9C                       l2651 1D10  
                     l2643 1CC4                       l2723 1EAE                       l2715 1E76  
                     l2811 0E30                       l2299 1F3A                       l2733 2108  
                     l2805 179A                       l2653 1D46                       l2645 1CD6  
                     l2661 21AC                       l2725 1EDA                       l2717 1E82  
                     l2709 1E46                       l2821 0E84                       l2813 0E58  
                     l2901 20C4                       l2727 2242                       l2735 211C  
                     l2671 1A26                       l2647 1CE8                       l2663 21B0  
                     l2719 1E96                       l2751 1168                       l2743 1100  
                     l2823 0E86                       l2831 0EDC                       l2815 0E66  
                     l2903 20CC                       l2911 1D8E                       l2399 1B92  
                     l2665 226E                       l2737 213E                       l2681 1A7A  
                     l2673 1A32                       l2649 1CF2                       l2657 218E  
                     l2761 11FC                       l2753 1170                       l2745 1110  
                     l2841 0F68                       l2833 0EEE                       l2825 0E98  
                     l2817 0E74                       l2905 20D4                       l2921 1E08  
                     l2913 1DA2                       l2667 228A                       l2739 2142  
                     l2691 1AEE                       l2683 1A8C                       l2675 1A50  
                     l2659 219A                       l2771 12B0                       l2763 1202  
                     l2755 117A                       l2747 1112                       l2851 0FE2  
                     l2843 0F88                       l2835 0F16                       l2819 0E78  
                     l2907 20F0                       l2923 1E28                       l2915 1DC2  
                     l2931 1306                       l2781 1676                       l2685 1ABA  
                     l2677 1A58                       l2693 1BF4                       l2773 12CA  
                     l2757 1180                       l2765 1266                       l2749 112C  
                     l2861 1090                       l2853 1002                       l2837 0F4C  
                     l2829 0EA4                       l2917 1DD4                       l2941 1344  
                     l2933 130A                       l2925 12FA                       ?_pad 0016  
                     l2791 16DA                       l2687 1ADA                       l2679 1A6C  
                     l2695 1C12                       l2767 1278                       l2775 12D8  
                     l2759 11F6                       l2855 1060                       l2863 10C0  
                     l2847 0F96                       l2839 0F5A                       l2919 1DF4  
                     l2951 13FC                       l2943 1368                       l2935 130C  
                     l2927 12FE                       l2793 16E2                       l2785 167A  
                     l2689 1ADC                       l2697 1C1A                       l2769 1296  
                     l2849 0FD2                       l2961 144A                       l2953 1420  
                     l2945 138C                       l2937 131C                       l2929 1302  
                     l2795 171A                       l2787 169A                       l2779 1662  
                     l2699 1C2E                       l2867 10D2                       l2891 206A  
                     l2971 1472                       l2963 1452                       l2955 142C  
                     l2947 13B0                       l2939 1320                       l2789 16D2  
                     l2893 2086                       l2981 14BC                       l2973 147E  
                     l2965 145A                       l2957 1438                       l2949 13D8  
                     l2895 20A6                       l2975 148A                       l2967 1462  
                     l2959 1442                       l2889 205E                       l2977 149E  
                     l2969 146A                       l2899 20B2                       l2979 14B4  
                     STR_1 0E1C                       STR_2 0E14                       STR_3 0E10  
                     STR_4 0E28                       STR_5 0E18                       STR_6 0E24  
                     STR_7 0E20                       STR_8 0E2C                       STR_9 0E01  
                     u2000 1C6A                       u2001 1C66                       u2010 1E54  
                     u2011 1E50                       u2020 1E76                       u2100 112C  
                     u2021 1E72                       u2101 1128                       u2030 1ECC  
                     u2110 1278                       u2031 1EC8                       u2111 1274  
                     u2040 1EDA                       u2120 1296                       u2200 0E58  
                     u2041 1ED6                       u2121 1292                       u2201 0E54  
                     u2050 2266                       u2130 12B0                       u2210 0EEE  
                     u1330 1FA6                       u2051 2260                       u2131 12AC  
                     u2211 0EEA                       u1331 1FA2                       u2060 2268  
                     u2140 12CA                       u2220 0F16                       u1340 1FBC  
                     u1500 19D2                       u2141 12C6                       u2221 0F12  
                     u1341 1FB8                       u1501 19CE                       u2301 1426  
                     u2070 211C                       u2150 12D8                       u2230 0F5A  
                     u1350 1FD2                       u1510 19F4                       u2310 149E  
                     u2071 2118                       u2151 12D4                       u2231 0F56  
                     u1351 1FCE                       u1511 19F0                       u2311 149A  
                     u2080 213E                       u2160 169A                       u2240 0FD2  
                     u1360 1FE8                       u1520 1A16                       u1600 1B66  
                     u2320 14B4                       u2081 213A                       u2161 1696  
                     u2241 0FCE                       u1361 1FE4                       u1521 1A12  
                     u1601 1B62                       u2321 14B0                       u2170 16CE  
                     u2090 1110                       u2250 1002                       u1450 192A  
                     u1530 2168                       u1610 1B86                       u2171 16CA  
                     u2091 110C                       u2251 0FFE                       u1435 22C2  
                     u1451 1926                       u1531 2164                       u1611 1B82  
                     u2180 1788                       u2260 20A6                       u1436 22C4  
                     u1460 194A                       u1620 1BA6                       u2181 1784  
                     u2261 20A2                       u1461 1946                       u1621 1BA2  
                     u2190 179A                       u2270 1DA2                       u1470 196C  
                     u1630 1BC6                       u2191 1796                       u2271 1D9E  
                     u2407 1F58                       u1471 1968                       u1631 1BC2  
                     u2280 1DD4                       u1480 198E                       u1640 1BE6  
                     u2281 1DD0                       u2417 1F6E                       u1481 198A  
                     u1641 1BE2                       u2337 14C6                       u2290 1E08  
                     u1570 2222                       u1490 19B0                       u1650 153C  
                     u2291 1E04                       u1571 221E                       u2427 22D4  
                     u2347 21D4                       u1491 19AC                       u1900 1CE8  
                     u1660 157C                       u1580 1B28                       u1901 1CE4  
                     u2437 1FF6                       u2357 21EA                       u1581 1B24  
                     u1910 1D10                       u1670 158C                       u1590 1B46  
                     u1911 1D0C                       u2447 22FA                       u2367 1F12  
                     u1671 1588                       u1591 1B42                       u1920 1D46  
                     u1680 1660                       u1921 1D42                       u2377 1F26  
                     u1681 165C                       u1657 1532                       u1930 21D0  
                     u1931 21CC                       u2387 1F34                       u1667 1572  
                     u1941 1A2C                       u2397 1F46                       u1950 1A50  
                     u1951 1A4C                       u1960 1A7A                       u1961 1A76  
                     u1970 1ABA                       u1890 1CD6                       u1971 1AB6  
                     u1891 1CD2                       u1980 1C12                       u1981 1C0E  
                     u1990 1C3C                       u1991 1C38                       _dbuf 0100  
                     _atoi 1662                       _main 12FA                       _prec 00E8  
                     _year 00D0                       pad@i 001D                       pad@p 001A  
                     fsr0h 000FEA                       fsr1h 000FE2                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001F                       fsr2l 000FD9  
                     btemp 0054                       _utoa 1100               ?_LCD_setline 0009  
                     prodh 000FF4                       prodl 000FF3                       start 0082  
         __end_of_ADC_init 22F6            __end_of_HighISR 0082               ___param_bank 000000  
           ??_get_week_day 0008                      ??_pad 001C           __end_of_LCD_Init 1F96  
                    ?_atoi 000C                      ?_main 0001                      _ADPCH 000F5F  
                    STR_10 0E06                      STR_11 0E0B                      ?_utoa 0021  
          __end_of___lodiv 1B16            __end_of___lomod 1CC4                      i2l203 17E4  
                    i2l213 1916                      i2l163 0076               vfpfcnvrt@fmt 0043  
                    _TMR0H 000FD4                      _TMR0L 000FD3            __end_of_get_day 234C  
                    _flags 0051                      _fputc 1CC4                      _fputs 218E  
          __end_of_isdigit 226E                      _hours 00EA                      _month 004F  
                    atoi@n 0013                      pad@fp 0016                      atoi@s 000C  
                    _width 00E6                      _putch 234E            __end_of_isspace 214A  
            ?_LCD_sendbyte 0007                      tablat 000FF5                      ttemp5 0055  
                    ttemp6 0058                      ttemp7 005C                      utoa@d 0023  
                    utoa@i 003F                      utoa@n 0037                      utoa@p 0033  
                    utoa@w 0035                      status 000FD8                      wtemp8 0055  
          __end_of_sprintf 2104           ___lodiv@dividend 0006            __initialization 1FFE  
             __end_of_atoi 17C0               __end_of_main 14DC               __end_of_utoa 12FA  
             ??_ADC2String 004D          __end_of_LCD_E_TOG 2304                     ??_atoi 000E  
                   ??_main 004D                     ??_utoa 002B              __activetblptr 000003  
         ___lodiv@quotient 0016          __end_of_LCD_clear 2212                     ?_fputc 0006  
                   ?_fputs 000F                     _ADRESH 000F64              ADC2String@buf 0085  
           ??_LCD_sendbyte 0008                     ?_putch 0001                     i2l2441 17D4  
                   i2l2451 1818                     i2l2443 17DC                     i2l2461 1844  
                   i2l2453 1820                     i2l2445 17F8                     i2l2471 1894  
                   i2l2463 1848                     i2l2455 1824                     i2l2447 1800  
                   i2l2439 17C0                     i2l2551 0046                     i2l2473 18A8  
                   i2l2465 185C                     i2l2457 1838                     i2l2449 1804  
                   i2l2553 004A                     i2l2475 18B0                     i2l2483 18F6  
                   i2l2467 1864                     i2l2459 1840                     i2l2555 005E  
                   i2l2547 0012                     i2l2485 190A                     i2l2469 1876  
                   i2l2477 18B8                     i2l2557 006A                     i2l2549 0022  
                   i2l2487 1912                     i2l2559 0072              vfpfcnvrt@done 0068  
                ??_HighISR 0003         __end_of_ADC2String 1E46              main@curr_hour 00B0  
             ??_ADC_getval 0008              ??_Timer0_init 0006               vfprintf@cfmt 004B  
         __end_of_get_year 231A                     ___wmul 226E                  ??___lodiv 0016  
                ??___lomod 0016                     clear_0 203C                     clear_1 2048  
                   isa$std 000001                     pad@buf 0018                  ??_get_day 0008  
                   fputc@c 0006                     fputs@c 0013                     fputs@i 0014  
             __pdataCOMRAM 0052                     fputs@s 000F                  ??_isdigit 0008  
             __mediumconst 0000                  ??_isspace 0008                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ?_ADC_init 0001  
                   putch@c 0001           __end_of_vfprintf 20B2                     utoa@fp 0021  
                ??_sprintf 004D         __end_of_ADC_getval 2242       __end_of_get_week_day 1BF4  
               __accesstop 0060    __end_of__initialization 2054                  ?_LCD_Init 0001  
            ___rparam_used 000001            _Interrupts_init 2304             __pcstackCOMRAM 0001  
             __pidataBANK0 2294              __end_of_fputc 1D8E              __end_of_fputs 21D2  
            __end_of_putch 2350        __end_of_Timer0_init 218E                 ??_ADC_init 0006  
                  ??_fputc 000A                    ??_fputs 0013                    ??_putch 0006  
               __pbssBANK0 00D6                 __pbssBANK1 0100                 ??_LCD_Init 0009  
           _LCD_sendnibble 1F96             _LCD_sendstring 14DC                    ?___wmul 0006  
     __end_of_LCD_sendbyte 22DC                  ?_get_year 0006           ___lomod@dividend 0006  
   __end_of_LCD_sendnibble 1FFE    __end_of_Interrupts_init 2310                    _HighISR 0008  
   __end_of_LCD_sendstring 1662                  _ADREFbits 000F58            LCD_sendstring@i 000F  
                  __Hparam 0000                    __Lparam 0000                _Timer0_init 214A  
        __end_of_get_hours 2342          __end_of_get_month 232E                    ___lodiv 1A26  
                  ___lomod 1BF4                  ?_vfprintf 006C               __psmallconst 0E00  
                  __pcinit 1FFE                    __ramtop 0E00                    __ptext0 12FA  
                  __ptext1 2310                    __ptext2 1B16                    __ptext3 231A  
                  __ptext4 2324                    __ptext5 232E                    __ptext6 2338  
                  __ptext7 2342                    __ptext8 214A                    __ptext9 14DC  
                  _get_day 2342                    _isdigit 2242                    _minutes 00EC  
                  _seconds 00EE                    _isspace 2104                  _LCD_E_TOG 22F6  
          LCD_setline@line 0009                    main@ADC 0093                    atoi@neg 0011  
                  main@Day 00AC                    main@Hou 00AA                    main@Min 00A8  
                  main@Sec 00A6                    main@Mon 00AE                    main@Yea 008F  
                  _sprintf 20B2                    main@lst 0096                 ??_get_year 0008  
                _LCD_clear 21D2       end_of_initialization 2054            ?_LCD_sendnibble 0001  
         ADC_getval@tmpval 0008                    fputc@fp 0008                    fputs@fp 0011  
          ?_LCD_sendstring 000B                 _month_days 00B2          __end_of_vfpfcnvrt 1100  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE           vfpfcnvrt@convarg 0060  
               main@F14260 00D6                 main@F14258 00CC                 ??_vfprintf 004B  
             _get_week_day 1B16                  _PORTAbits 000F89                  _PORTBbits 000F8A  
                _PORTFbits 000F8E                  _PORTGbits 000F8F                 ?_LCD_E_TOG 0001  
                _TRISAbits 000F81                  _TRISBbits 000F82                  _TRISCbits 000F83  
                _TRISEbits 000F85                  _TRISFbits 000F86                  _TRISGbits 000F87  
                _TRISHbits 000F88                 ?_LCD_clear 0001                _CM1CON0bits 000ED0  
              _CM1CON1bits 000ED1           ?_Interrupts_init 0001          _increment_seconds 17C0  
       ?_increment_seconds 0001              ??_get_minutes 0008              ??_get_seconds 0008  
              ADC2String@x 0087        ??_increment_seconds 0001                vfpfcnvrt@ap 0045  
              vfpfcnvrt@cp 006A                vfpfcnvrt@fp 0041             __end_of___wmul 2294  
     LCD_sendnibble@number 0006              __pidataCOMRAM 234C        start_initialization 1FFE  
          ___lodiv@divisor 000E            ___lodiv@counter 001E                __end_of_pad 1EF0  
__end_of_increment_seconds 1918               _LCD_sendbyte 22B8              ??_LCD_setline 000B  
              vfprintf@fmt 006E                   ??___wmul 000A       LCD_sendstring@strlst 000B  
              __pdataBANK0 00B2        __end_of_get_minutes 2338        __end_of_get_seconds 2324  
      main@day_of_the_week 008B                __pbssCOMRAM 004F                ??_LCD_E_TOG 0006  
            __pcstackBANK0 0060                ??_LCD_clear 0009                   ?_HighISR 0001  
             ?_Timer0_init 0001                  __pintcode 0008        __end_of_LCD_setline 1A26  
                 ?___lodiv 0006                   ?___lomod 0006                  _get_hours 2338  
                _get_month 2324                   ?_get_day 0006            ___lomod@divisor 000E  
              __smallconst 0E00            ___lomod@counter 0016                   ?_isdigit 0006  
                 ?_isspace 0006           ??_LCD_sendnibble 0006                   _ADC_init 22DC  
         ??_LCD_sendstring 000D                   ?_sprintf 0072           LCD_sendbyte@Byte 0008  
                 _LCD_Init 1EF0           LCD_sendbyte@type 0007             ___wmul@product 000A  
                 _LATAbits 000F79                   _LATBbits 000F7A                   _LATCbits 000F7B  
                 _LATEbits 000F7D                   _LATFbits 000F7E                   _LATGbits 000F7F  
                 _LATHbits 000F80                   _PIE0bits 000E29                   _PIE2bits 000E2B  
                 i2u170_40 17F8                   i2u170_41 17F4                   i2u171_40 1818  
                 i2u171_41 1814                   i2u172_40 1838                   i2u172_41 1834  
                 i2u173_40 185C                   i2u173_41 1858                   i2u174_40 1876  
                 i2u182_40 0022                   i2u174_41 1872                   i2u182_41 001E  
                 i2u175_40 1894                   i2u183_40 0034                   i2u175_41 1890  
                 i2u183_41 002C                   _PIR0bits 000E33                   i2u176_40 18A8  
                 i2u176_41 18A4                   i2u177_40 18F2                   i2u169_40 17D4  
                 i2u185_40 005E                   i2u184_48 0036                   i2u177_41 18EE  
                 i2u169_41 17D0                   i2u185_41 005A                   i2u178_40 190A  
                 i2u178_41 1906                _get_minutes 232E                _get_seconds 231A  
               _ADC2String 1D8E                  _test_mode 00D4                  _vfpfcnvrt 0E30  
               ?_get_hours 0006                 ?_get_month 0006                 _ADCON0bits 000F60  
        ___wmul@multiplier 0006               _isspace$2064 000A                 _CM1NCHbits 000ED2  
               _CM1PCHbits 000ED3                  copy_data0 2012                _LCD_setline 1918  
                 __Hrparam 0000                 _ADC_getval 2212                 vfprintf@ap 0070  
                 __Lrparam 0000                 vfprintf@fp 006C                 ?_vfpfcnvrt 0041  
               _ANSELAbits 000E92                 sprintf@fmt 0074                 _T0CON0bits 000FD5  
               _T0CON1bits 000FD6                   __ptext10 1918                   __ptext11 21D2  
                 __ptext20 20B2                   __ptext12 1EF0                   __ptext21 205E  
                 __ptext13 22B8                   __ptext30 1662                   __ptext22 0E30  
                 __ptext14 1F96                   __ptext31 2104                   __ptext23 1100  
                 __ptext15 22F6                   __ptext32 2242                   __ptext24 1E46  
                 __ptext16 2304                   __ptext33 226E                   __ptext25 218E  
                 __ptext17 22DC                   __ptext26 1CC4                   __ptext18 2212  
                 __ptext35 17C0                   __ptext27 234E                   __ptext19 1D8E  
                 __ptext28 1BF4                   __ptext29 1A26                   _get_year 2310  
                 _week_day 0052                   isa$xinst 000000                   int$flags 0054  
              ?_ADC2String 0085                   _vfprintf 205E                ??_get_hours 0008  
              ??_get_month 0008    ADC2String@leading_zeros 0089                 _INTCONbits 000FF2  
                 isdigit@c 0006                   intlevel2 0000                  sprintf@ap 0078  
             _DAC1CON0bits 000EC6               _DAC1CON1bits 000EC7                   isspace@c 0006  
              ?_ADC_getval 0006                ??_vfpfcnvrt 0047                   sprintf@f 007A  
                 sprintf@s 0072  
