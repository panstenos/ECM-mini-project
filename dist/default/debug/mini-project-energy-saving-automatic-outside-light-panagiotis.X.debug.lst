

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 07 19:17:27 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Version 2.35
    63                           ; Generated 05/05/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataCOMRAM
    99   002696                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _year
   103   002696  07E4               	dw	2020
   104                           
   105                           ;initializer for _month
   106   002698  0001               	dw	1
   107                           
   108                           ;initializer for _day
   109   00269A  0001               	dw	1
   110                           
   111                           ;initializer for _day_of_the_week
   112   00269C  0001               	dw	1
   113                           
   114                           	psect	idataBANK1
   115   00264C                     __pidataBANK1:
   116                           	callstack 0
   117                           
   118                           ;initializer for increment_day@F14261
   119   00264C  001F               	dw	31
   120   00264E  001C               	dw	28
   121   002650  001F               	dw	31
   122   002652  001E               	dw	30
   123   002654  001F               	dw	31
   124   002656  001E               	dw	30
   125   002658  001F               	dw	31
   126   00265A  001F               	dw	31
   127   00265C  001E               	dw	30
   128   00265E  001F               	dw	31
   129   002660  001E               	dw	30
   130   002662  001F               	dw	31
   131   000000                     _TRISEbits	set	3973
   132   000000                     _TRISCbits	set	3971
   133   000000                     _LATEbits	set	3965
   134   000000                     _LATCbits	set	3963
   135   000000                     _T0CON0bits	set	4053
   136   000000                     _T0CON1bits	set	4054
   137   000000                     _CM1CON1bits	set	3793
   138   000000                     _LATDbits	set	3964
   139   000000                     _TRISDbits	set	3972
   140   000000                     _TRISHbits	set	3976
   141   000000                     _LATHbits	set	3968
   142   000000                     _LATBbits	set	3962
   143   000000                     _LATFbits	set	3966
   144   000000                     _PORTAbits	set	3977
   145   000000                     _PORTGbits	set	3983
   146   000000                     _TRISBbits	set	3970
   147   000000                     _TRISFbits	set	3974
   148                           
   149                           	psect	nvCOMRAM
   150   000046                     __pnvCOMRAM:
   151                           	callstack 0
   152   000046                     _test_mode:
   153                           	callstack 0
   154   000046                     	ds	2
   155                           
   156                           	psect	nvBANK0
   157   0000EE                     __pnvBANK0:
   158                           	callstack 0
   159   0000EE                     _time_counter:
   160                           	callstack 0
   161   0000EE                     	ds	4
   162   000000                     _IPR2bits	set	3617
   163   000000                     _PIE2bits	set	3627
   164   000000                     _DAC1CON0bits	set	3782
   165   000000                     _LATAbits	set	3961
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISAbits	set	3969
   168   000000                     _TRISGbits	set	3975
   169   000000                     _TMR0L	set	4051
   170   000000                     _TMR0H	set	4052
   171   000000                     _INTCONbits	set	4082
   172   000000                     _PORTBbits	set	3978
   173   000000                     _PORTFbits	set	3982
   174   000000                     _CM1CON0bits	set	3792
   175   000000                     _CM1NCHbits	set	3794
   176   000000                     _DAC1CON1bits	set	3783
   177   000000                     _ADREFbits	set	3928
   178   000000                     _CM1PCHbits	set	3795
   179   000000                     _PIR0bits	set	3635
   180   000000                     _PIR2bits	set	3637
   181   000000                     _PIE0bits	set	3625
   182   000000                     _ANSELAbits	set	3730
   183   000000                     _ADPCH	set	3935
   184   000000                     _ADRESH	set	3940
   185   000000                     _ADCON0bits	set	3936
   186                           
   187                           	psect	smallconst
   188   000E00                     __psmallconst:
   189                           	callstack 0
   190   000E00  00                 	db	0
   191   000E01                     STR_4:
   192   000E01  32                 	db	50	;'2'
   193   000E02  30                 	db	48	;'0'
   194   000E03  32                 	db	50	;'2'
   195   000E04  32                 	db	50	;'2'
   196   000E05  00                 	db	0
   197   000E06                     STR_1:
   198   000E06  4D                 	db	77	;'M'
   199   000E07  4F                 	db	79	;'O'
   200   000E08  4E                 	db	78	;'N'
   201   000E09  00                 	db	0
   202   000E0A                     STR_8:
   203   000E0A  25                 	db	37
   204   000E0B  64                 	db	100	;'d'
   205   000E0C  00                 	db	0
   206   000E0D                     STR_3:
   207   000E0D  31                 	db	49	;'1'
   208   000E0E  30                 	db	48	;'0'
   209   000E0F  00                 	db	0
   210   000E10                     STR_2:
   211   000E10  33                 	db	51	;'3'
   212   000E11  30                 	db	48	;'0'
   213   000E12  00                 	db	0
   214   000E13                     STR_5:
   215   000E13  32                 	db	50	;'2'
   216   000E14  33                 	db	51	;'3'
   217   000E15  00                 	db	0
   218   000E16                     STR_6:
   219   000E16  32                 	db	50	;'2'
   220   000E17  35                 	db	53	;'5'
   221   000E18  00                 	db	0
   222   000E19                     STR_7:
   223   000E19  35                 	db	53	;'5'
   224   000E1A  38                 	db	56	;'8'
   225   000E1B  00                 	db	0
   226   000E1C  00                 	db	0	; dummy byte at the end
   227   000000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231   002212                     __pcinit:
   232                           	callstack 0
   233   002212                     start_initialization:
   234                           	callstack 0
   235   002212                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Initialize objects allocated to BANK1 (24 bytes)
   239                           ; load TBLPTR registers with __pidataBANK1
   240   002212  0E4C               	movlw	low __pidataBANK1
   241   002214  6EF6               	movwf	tblptrl,c
   242   002216  0E26               	movlw	high __pidataBANK1
   243   002218  6EF7               	movwf	tblptrh,c
   244   00221A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   245   00221C  6EF8               	movwf	tblptru,c
   246   00221E  EE01  F020         	lfsr	0,__pdataBANK1
   247   002222  EE10 F018          	lfsr	1,24
   248   002226                     copy_data0:
   249   002226  0009               	tblrd		*+
   250   002228  CFF5 FFEE          	movff	tablat,postinc0
   251   00222C  50E5               	movf	postdec1,w,c
   252   00222E  50E1               	movf	fsr1l,w,c
   253   002230  E1FA               	bnz	copy_data0
   254                           
   255                           ; Initialize objects allocated to COMRAM (8 bytes)
   256                           ; load TBLPTR registers with __pidataCOMRAM
   257   002232  0E96               	movlw	low __pidataCOMRAM
   258   002234  6EF6               	movwf	tblptrl,c
   259   002236  0E26               	movlw	high __pidataCOMRAM
   260   002238  6EF7               	movwf	tblptrh,c
   261   00223A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   262   00223C  6EF8               	movwf	tblptru,c
   263   00223E  EE00  F03E         	lfsr	0,__pdataCOMRAM
   264   002242  EE10 F008          	lfsr	1,8
   265   002246                     copy_data1:
   266   002246  0009               	tblrd		*+
   267   002248  CFF5 FFEE          	movff	tablat,postinc0
   268   00224C  50E5               	movf	postdec1,w,c
   269   00224E  50E1               	movf	fsr1l,w,c
   270   002250  E1FA               	bnz	copy_data1
   271                           
   272                           ; Clear objects allocated to BANK1 (32 bytes)
   273   002252  EE01  F000         	lfsr	0,__pbssBANK1
   274   002256  0E20               	movlw	32
   275   002258                     clear_0:
   276   002258  6AEE               	clrf	postinc0,c
   277   00225A  06E8               	decf	wreg,f,c
   278   00225C  E1FD               	bnz	clear_0
   279                           
   280                           ; Clear objects allocated to BANK0 (5 bytes)
   281   00225E  0100               	movlb	0
   282   002260  6BED               	clrf	(__pbssBANK0+4)& (0+255),b
   283   002262  6BEC               	clrf	(__pbssBANK0+3)& (0+255),b
   284   002264  6BEB               	clrf	(__pbssBANK0+2)& (0+255),b
   285   002266  6BEA               	clrf	(__pbssBANK0+1)& (0+255),b
   286   002268  6BE9               	clrf	__pbssBANK0& (0+255),b
   287                           
   288                           ; Clear objects allocated to COMRAM (18 bytes)
   289   00226A  EE00  F02C         	lfsr	0,__pbssCOMRAM
   290   00226E  0E12               	movlw	18
   291   002270                     clear_1:
   292   002270  6AEE               	clrf	postinc0,c
   293   002272  06E8               	decf	wreg,f,c
   294   002274  E1FD               	bnz	clear_1
   295   002276                     end_of_initialization:
   296                           	callstack 0
   297   002276                     __end_of__initialization:
   298                           	callstack 0
   299   002276  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300   002278  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   301   00227A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   302   00227C  6EF8               	movwf	tblptru,c
   303   00227E  0100               	movlb	0
   304   002280  EF50  F008         	goto	_main	;jump to C main() function
   305                           
   306                           	psect	bssCOMRAM
   307   00002C                     __pbssCOMRAM:
   308                           	callstack 0
   309   00002C                     	ds	16
   310   00003C                     _time_corrector:
   311                           	callstack 0
   312   00003C                     	ds	2
   313                           
   314                           	psect	dataCOMRAM
   315   00003E                     __pdataCOMRAM:
   316                           	callstack 0
   317   00003E                     _year:
   318                           	callstack 0
   319   00003E                     	ds	2
   320   000040                     _month:
   321                           	callstack 0
   322   000040                     	ds	2
   323   000042                     _day:
   324                           	callstack 0
   325   000042                     	ds	2
   326   000044                     _day_of_the_week:
   327                           	callstack 0
   328   000044                     	ds	2
   329                           
   330                           	psect	bssBANK0
   331   0000E9                     __pbssBANK0:
   332                           	callstack 0
   333   0000E9                     _width:
   334                           	callstack 0
   335   0000E9                     	ds	2
   336   0000EB                     _prec:
   337                           	callstack 0
   338   0000EB                     	ds	2
   339   0000ED                     _flags:
   340                           	callstack 0
   341   0000ED                     	ds	1
   342                           
   343                           	psect	bssBANK1
   344   000100                     __pbssBANK1:
   345                           	callstack 0
   346   000100                     _dbuf:
   347                           	callstack 0
   348   000100                     	ds	32
   349                           
   350                           	psect	dataBANK1
   351   000120                     __pdataBANK1:
   352                           	callstack 0
   353   000120                     increment_day@F14261:
   354                           	callstack 0
   355   000120                     	ds	24
   356                           
   357                           	psect	cstackBANK0
   358   000060                     __pcstackBANK0:
   359                           	callstack 0
   360   000060                     ?_ADC_getval:
   361                           	callstack 0
   362   000060                     ?___lwdiv:
   363                           	callstack 0
   364   000060                     ?___lmul:
   365                           	callstack 0
   366   000060                     ?___fltol:
   367                           	callstack 0
   368   000060                     ?___aodiv:
   369                           	callstack 0
   370   000060                     ?___aomod:
   371                           	callstack 0
   372   000060                     LCD_sendnibble@number:
   373                           	callstack 0
   374   000060                     ___lwdiv@dividend:
   375                           	callstack 0
   376   000060                     fputc@c:
   377                           	callstack 0
   378   000060                     ___lmul@multiplier:
   379                           	callstack 0
   380   000060                     ___flge@ff1:
   381                           	callstack 0
   382   000060                     ___fltol@f1:
   383                           	callstack 0
   384   000060                     ___aodiv@dividend:
   385                           	callstack 0
   386   000060                     ___aomod@dividend:
   387                           	callstack 0
   388                           
   389                           ; 8 bytes @ 0x0
   390   000060                     	ds	1
   391   000061                     LCD_sendbyte@type:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x1
   395   000061                     	ds	1
   396   000062                     LCD_sendbyte@Byte:
   397                           	callstack 0
   398   000062                     ADC_getval@tmpval:
   399                           	callstack 0
   400   000062                     ___lwdiv@divisor:
   401                           	callstack 0
   402   000062                     fputc@fp:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x2
   406   000062                     	ds	1
   407   000063                     ??_LCD_Init:
   408   000063                     LCD_setline@line:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x3
   412   000063                     	ds	1
   413   000064                     ??_fputc:
   414   000064                     ??___fltol:
   415   000064                     ___lwdiv@counter:
   416                           	callstack 0
   417   000064                     LCD_sendstring@strlst:
   418                           	callstack 0
   419   000064                     ___lmul@multiplicand:
   420                           	callstack 0
   421   000064                     ___flge@ff2:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x4
   425   000064                     	ds	1
   426   000065                     ___lwdiv@quotient:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x5
   430   000065                     	ds	1
   431   000066                     ??_LCD_sendstring:
   432                           
   433                           ; 1 bytes @ 0x6
   434   000066                     	ds	1
   435   000067                     ?_get_hour:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x7
   439   000067                     	ds	1
   440   000068                     ??___flge:
   441   000068                     ___fltol@sign1:
   442                           	callstack 0
   443   000068                     LCD_sendstring@i:
   444                           	callstack 0
   445   000068                     ___lmul@product:
   446                           	callstack 0
   447   000068                     ___aodiv@divisor:
   448                           	callstack 0
   449   000068                     ___aomod@divisor:
   450                           	callstack 0
   451                           
   452                           ; 8 bytes @ 0x8
   453   000068                     	ds	1
   454   000069                     ?___xxtofl:
   455                           	callstack 0
   456   000069                     ___fltol@exp1:
   457                           	callstack 0
   458   000069                     fputs@s:
   459                           	callstack 0
   460   000069                     ___xxtofl@val:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x9
   464   000069                     	ds	1
   465   00006A                     LEDarray_disp_bin@number:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xA
   469   00006A                     	ds	1
   470   00006B                     fputs@fp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xB
   474   00006B                     	ds	1
   475   00006C                     Timer0_init@init_test_mode:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xC
   479   00006C                     	ds	1
   480   00006D                     ??___xxtofl:
   481   00006D                     fputs@c:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0xD
   485   00006D                     	ds	1
   486   00006E                     fputs@i:
   487                           	callstack 0
   488   00006E                     Timer0_init@current_minute:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0xE
   492   00006E                     	ds	2
   493   000070                     ___aodiv@counter:
   494                           	callstack 0
   495   000070                     ___aomod@counter:
   496                           	callstack 0
   497   000070                     pad@fp:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x10
   501   000070                     	ds	1
   502   000071                     ___aodiv@sign:
   503                           	callstack 0
   504   000071                     ___aomod@sign:
   505                           	callstack 0
   506   000071                     ___xxtofl@sign:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x11
   510   000071                     	ds	1
   511   000072                     ?_abs:
   512                           	callstack 0
   513   000072                     ___xxtofl@exp:
   514                           	callstack 0
   515   000072                     pad@buf:
   516                           	callstack 0
   517   000072                     abs@a:
   518                           	callstack 0
   519   000072                     Timer0_init@current_hour:
   520                           	callstack 0
   521   000072                     ___aodiv@quotient:
   522                           	callstack 0
   523                           
   524                           ; 8 bytes @ 0x12
   525   000072                     	ds	1
   526   000073                     ___xxtofl@arg:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x13
   530   000073                     	ds	1
   531   000074                     ??_abs:
   532   000074                     pad@p:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x14
   536   000074                     	ds	2
   537   000076                     ??_pad:
   538   000076                     Timer0_init@current_day:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x16
   542   000076                     	ds	1
   543   000077                     pad@i:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x17
   547   000077                     	ds	1
   548   000078                     Timer0_init@current_day_of_the_week:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x18
   552   000078                     	ds	1
   553   000079                     pad@w:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x19
   557   000079                     	ds	1
   558   00007A                     Timer0_init@current_month:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1A
   562   00007A                     	ds	1
   563   00007B                     dtoa@fp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1B
   567   00007B                     	ds	1
   568   00007C                     Timer0_init@current_year:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1C
   572   00007C                     	ds	1
   573   00007D                     dtoa@d:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x1D
   577   00007D                     	ds	1
   578   00007E                     ??_Timer0_init:
   579                           
   580                           ; 1 bytes @ 0x1E
   581   00007E                     	ds	7
   582   000085                     ??_dtoa:
   583                           
   584                           ; 1 bytes @ 0x25
   585   000085                     	ds	8
   586   00008D                     _dtoa$2165:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x2D
   590   00008D                     	ds	2
   591   00008F                     dtoa@p:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x2F
   595   00008F                     	ds	2
   596   000091                     dtoa@w:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x31
   600   000091                     	ds	2
   601   000093                     dtoa@n:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x33
   605   000093                     	ds	8
   606   00009B                     dtoa@s:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x3B
   610   00009B                     	ds	1
   611   00009C                     dtoa@i:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x3C
   615   00009C                     	ds	2
   616   00009E                     vfpfcnvrt@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x3E
   620   00009E                     	ds	2
   621   0000A0                     vfpfcnvrt@fmt:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x40
   625   0000A0                     	ds	2
   626   0000A2                     vfpfcnvrt@ap:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x42
   630   0000A2                     	ds	2
   631   0000A4                     ??_vfpfcnvrt:
   632                           
   633                           ; 1 bytes @ 0x44
   634   0000A4                     	ds	2
   635   0000A6                     vfpfcnvrt@convarg:
   636                           	callstack 0
   637                           
   638                           ; 8 bytes @ 0x46
   639   0000A6                     	ds	8
   640   0000AE                     vfpfcnvrt@cp:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x4E
   644   0000AE                     	ds	2
   645   0000B0                     ?_vfprintf:
   646                           	callstack 0
   647   0000B0                     vfprintf@fp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x50
   651   0000B0                     	ds	2
   652   0000B2                     vfprintf@fmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x52
   656   0000B2                     	ds	2
   657   0000B4                     vfprintf@ap:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x54
   661   0000B4                     	ds	2
   662   0000B6                     vfprintf@cfmt:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x56
   666   0000B6                     	ds	2
   667   0000B8                     ?_sprintf:
   668                           	callstack 0
   669   0000B8                     sprintf@s:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x58
   673   0000B8                     	ds	2
   674   0000BA                     sprintf@fmt:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x5A
   678   0000BA                     	ds	4
   679   0000BE                     sprintf@ap:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x5E
   683   0000BE                     	ds	2
   684   0000C0                     sprintf@f:
   685                           	callstack 0
   686                           
   687                           ; 11 bytes @ 0x60
   688   0000C0                     	ds	11
   689   0000CB                     ADC2String@buf:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x6B
   693   0000CB                     	ds	2
   694   0000CD                     ADC2String@ADC_val:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x6D
   698   0000CD                     	ds	2
   699   0000CF                     ??_main:
   700                           
   701                           ; 1 bytes @ 0x6F
   702   0000CF                     	ds	2
   703   0000D1                     main@test:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x71
   707   0000D1                     	ds	2
   708   0000D3                     main@text:
   709                           	callstack 0
   710                           
   711                           ; 16 bytes @ 0x73
   712   0000D3                     	ds	16
   713   0000E3                     main@buf:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x83
   717   0000E3                     	ds	2
   718   0000E5                     main@curr_hour:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x85
   722   0000E5                     	ds	4
   723                           
   724                           	psect	cstackCOMRAM
   725   000001                     __pcstackCOMRAM:
   726                           	callstack 0
   727   000001                     ?i2___lmul:
   728                           	callstack 0
   729   000001                     increment_month@increment:
   730                           	callstack 0
   731   000001                     i2___lmul@multiplier:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x0
   735   000001                     	ds	2
   736   000003                     increment_day@increment:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x2
   740   000003                     	ds	2
   741   000005                     ??_increment_day:
   742   000005                     i2___lmul@multiplicand:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x4
   746   000005                     	ds	4
   747   000009                     i2___lmul@product:
   748                           	callstack 0
   749   000009                     increment_day@day_in_month:
   750                           	callstack 0
   751                           
   752                           ; 24 bytes @ 0x8
   753   000009                     	ds	24
   754   000021                     increment_day@curr_day_in_month:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x20
   758   000021                     	ds	2
   759   000023                     increment_time@increment:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x22
   763   000023                     	ds	4
   764   000027                     ??_HighISR:
   765                           
   766                           ; 1 bytes @ 0x26
   767   000027                     	ds	5
   768                           
   769 ;;
   770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   771 ;;
   772 ;; *************** function _main *****************
   773 ;; Defined at:
   774 ;;		line 26 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  text           16  115[BANK0 ] PTR unsigned char [8]
   779 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(5), 
   780 ;;		 -> STR_3(3), STR_2(3), STR_1(4), NULL(0), 
   781 ;;		 -> RAM(3561), 
   782 ;;  curr_hour       4  133[BANK0 ] float 
   783 ;;  test            2  113[BANK0 ] unsigned int 
   784 ;;  buf             2  131[BANK0 ] PTR unsigned char 
   785 ;;  curr_month      2    0        unsigned int 
   786 ;;  curr_day        2    0        unsigned int 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   797 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;Total ram usage:       26 bytes
   801 ;; Hardware stack levels required when called: 13
   802 ;; This function calls:
   803 ;;		_ADC2String
   804 ;;		_ADC_getval
   805 ;;		_ADC_init
   806 ;;		_Comp1_init
   807 ;;		_Interrupts_init
   808 ;;		_LCD_Init
   809 ;;		_LCD_sendstring
   810 ;;		_LEDarray_disp_bin
   811 ;;		_LEDarray_init
   812 ;;		_Timer0_init
   813 ;;		___flge
   814 ;;		___fltol
   815 ;;		___xxtofl
   816 ;;		_get_hour
   817 ;; This function is called by:
   818 ;;		Startup code after reset
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text0
   823   0010A0                     __ptext0:
   824                           	callstack 0
   825   0010A0                     _main:
   826                           	callstack 18
   827   0010A0                     
   828                           ;main.c: 28:     LATHbits.LATH3=0;
   829   0010A0  9680               	bcf	128,3,c	;volatile
   830                           
   831                           ;main.c: 29:     TRISHbits.TRISH3=0;
   832   0010A2  9688               	bcf	136,3,c	;volatile
   833                           
   834                           ;main.c: 31:     TRISDbits.TRISD7=0;
   835   0010A4  9E84               	bcf	132,7,c	;volatile
   836                           
   837                           ;main.c: 32:     LATDbits.LATD7=1;
   838   0010A6  8E7C               	bsf	124,7,c	;volatile
   839                           
   840                           ;main.c: 34:     TRISAbits.TRISA3=1;
   841   0010A8  8681               	bsf	129,3,c	;volatile
   842                           
   843                           ;main.c: 36:     LATHbits.LATH3 = 1;
   844   0010AA  8680               	bsf	128,3,c	;volatile
   845   0010AC                     
   846                           ;main.c: 37:     Comp1_init();
   847   0010AC  ECE7  F012         	call	_Comp1_init	;wreg free
   848   0010B0                     
   849                           ;main.c: 38:     Interrupts_init();
   850   0010B0  EC3C  F013         	call	_Interrupts_init	;wreg free
   851   0010B4                     
   852                           ;main.c: 39:     Timer0_init(1,57,17,06,1,11,2022);
   853   0010B4  0E00               	movlw	0
   854   0010B6  0100               	movlb	0	; () banked
   855   0010B8  6F6D               	movwf	(Timer0_init@init_test_mode+1)& (0+255),b
   856   0010BA  0E01               	movlw	1
   857   0010BC  6F6C               	movwf	Timer0_init@init_test_mode& (0+255),b
   858   0010BE  0E39               	movlw	57
   859   0010C0  6F6E               	movwf	Timer0_init@current_minute& (0+255),b
   860   0010C2  0E00               	movlw	0
   861   0010C4  6F6F               	movwf	(Timer0_init@current_minute+1)& (0+255),b
   862   0010C6  0E00               	movlw	0
   863   0010C8  6F70               	movwf	(Timer0_init@current_minute+2)& (0+255),b
   864   0010CA  0E00               	movlw	0
   865   0010CC  6F71               	movwf	(Timer0_init@current_minute+3)& (0+255),b
   866   0010CE  0E11               	movlw	17
   867   0010D0  6F72               	movwf	Timer0_init@current_hour& (0+255),b
   868   0010D2  0E00               	movlw	0
   869   0010D4  6F73               	movwf	(Timer0_init@current_hour+1)& (0+255),b
   870   0010D6  0E00               	movlw	0
   871   0010D8  6F74               	movwf	(Timer0_init@current_hour+2)& (0+255),b
   872   0010DA  0E00               	movlw	0
   873   0010DC  6F75               	movwf	(Timer0_init@current_hour+3)& (0+255),b
   874   0010DE  0E00               	movlw	0
   875   0010E0  6F77               	movwf	(Timer0_init@current_day+1)& (0+255),b
   876   0010E2  0E06               	movlw	6
   877   0010E4  6F76               	movwf	Timer0_init@current_day& (0+255),b
   878   0010E6  0E00               	movlw	0
   879   0010E8  6F79               	movwf	(Timer0_init@current_day_of_the_week+1)& (0+255),b
   880   0010EA  0E01               	movlw	1
   881   0010EC  6F78               	movwf	Timer0_init@current_day_of_the_week& (0+255),b
   882   0010EE  0E00               	movlw	0
   883   0010F0  6F7B               	movwf	(Timer0_init@current_month+1)& (0+255),b
   884   0010F2  0E0B               	movlw	11
   885   0010F4  6F7A               	movwf	Timer0_init@current_month& (0+255),b
   886   0010F6  0E07               	movlw	7
   887   0010F8  6F7D               	movwf	(Timer0_init@current_year+1)& (0+255),b
   888   0010FA  0EE6               	movlw	230
   889   0010FC  6F7C               	movwf	Timer0_init@current_year& (0+255),b
   890   0010FE  EC34  F00E         	call	_Timer0_init	;wreg free
   891   001102                     
   892                           ;main.c: 40:     LEDarray_init();
   893   001102  EC9C  F012         	call	_LEDarray_init	;wreg free
   894   001106                     
   895                           ;main.c: 41:     ADC_init();
   896   001106  EC19  F013         	call	_ADC_init	;wreg free
   897                           
   898                           ;main.c: 42:     LCD_Init();
   899   00110A  EC32  F010         	call	_LCD_Init	;wreg free
   900   00110E                     l99:
   901                           
   902                           ;main.c: 49:         float curr_hour = get_hour();
   903   00110E  ECF9  F012         	call	_get_hour	;wreg free
   904   001112  0100               	movlb	0	; () banked
   905   001114  C067  F069         	movff	?_get_hour,___xxtofl@val
   906   001118  C068  F06A         	movff	?_get_hour+1,___xxtofl@val+1
   907   00111C  6B6B               	clrf	(___xxtofl@val+2)& (0+255),b
   908   00111E  6B6C               	clrf	(___xxtofl@val+3)& (0+255),b
   909   001120  0E00               	movlw	0
   910   001122  EC38  F009         	call	___xxtofl
   911   001126  C069  F0E5         	movff	?___xxtofl,main@curr_hour
   912   00112A  C06A  F0E6         	movff	?___xxtofl+1,main@curr_hour+1
   913   00112E  C06B  F0E7         	movff	?___xxtofl+2,main@curr_hour+2
   914   001132  C06C  F0E8         	movff	?___xxtofl+3,main@curr_hour+3
   915                           
   916                           ;main.c: 50:         LEDarray_disp_bin((unsigned int) curr_hour);
   917   001136  C0E5  F060         	movff	main@curr_hour,___fltol@f1
   918   00113A  C0E6  F061         	movff	main@curr_hour+1,___fltol@f1+1
   919   00113E  C0E7  F062         	movff	main@curr_hour+2,___fltol@f1+2
   920   001142  C0E8  F063         	movff	main@curr_hour+3,___fltol@f1+3
   921   001146  EC34  F00C         	call	___fltol	;wreg free
   922   00114A  C060  F06A         	movff	?___fltol,LEDarray_disp_bin@number
   923   00114E  C061  F06B         	movff	?___fltol+1,LEDarray_disp_bin@number+1
   924   001152  EC0A  F00F         	call	_LEDarray_disp_bin	;wreg free
   925                           
   926                           ;main.c: 52:         if(curr_hour >= 1 && curr_hour <= 5){
   927   001156  C0E5  F060         	movff	main@curr_hour,___flge@ff1
   928   00115A  C0E6  F061         	movff	main@curr_hour+1,___flge@ff1+1
   929   00115E  C0E7  F062         	movff	main@curr_hour+2,___flge@ff1+2
   930   001162  C0E8  F063         	movff	main@curr_hour+3,___flge@ff1+3
   931   001166  0E00               	movlw	0
   932   001168  0100               	movlb	0	; () banked
   933   00116A  6F64               	movwf	___flge@ff2& (0+255),b
   934   00116C  0E00               	movlw	0
   935   00116E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
   936   001170  0E80               	movlw	128
   937   001172  6F66               	movwf	(___flge@ff2+2)& (0+255),b
   938   001174  0E3F               	movlw	63
   939   001176  6F67               	movwf	(___flge@ff2+3)& (0+255),b
   940   001178  ECB8  F00C         	call	___flge	;wreg free
   941   00117C  0100               	movlb	0	; () banked
   942   00117E  A0D8               	btfss	status,0,c
   943   001180  EFC4  F008         	goto	u3351
   944   001184  EFC6  F008         	goto	u3350
   945   001188                     u3351:
   946   001188  EFE3  F008         	goto	l100
   947   00118C                     u3350:
   948   00118C                     
   949                           ; BSR set to: 0
   950   00118C  0E00               	movlw	0
   951   00118E  6F60               	movwf	___flge@ff1& (0+255),b
   952   001190  0E00               	movlw	0
   953   001192  6F61               	movwf	(___flge@ff1+1)& (0+255),b
   954   001194  0EA0               	movlw	160
   955   001196  6F62               	movwf	(___flge@ff1+2)& (0+255),b
   956   001198  0E40               	movlw	64
   957   00119A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
   958   00119C  C0E5  F064         	movff	main@curr_hour,___flge@ff2
   959   0011A0  C0E6  F065         	movff	main@curr_hour+1,___flge@ff2+1
   960   0011A4  C0E7  F066         	movff	main@curr_hour+2,___flge@ff2+2
   961   0011A8  C0E8  F067         	movff	main@curr_hour+3,___flge@ff2+3
   962   0011AC  ECB8  F00C         	call	___flge	;wreg free
   963   0011B0  0100               	movlb	0	; () banked
   964   0011B2  A0D8               	btfss	status,0,c
   965   0011B4  EFDE  F008         	goto	u3361
   966   0011B8  EFE0  F008         	goto	u3360
   967   0011BC                     u3361:
   968   0011BC  EFE3  F008         	goto	l100
   969   0011C0                     u3360:
   970   0011C0                     
   971                           ; BSR set to: 0
   972                           ;main.c: 53:             LATHbits.LATH3 = 0;
   973   0011C0  9680               	bcf	128,3,c	;volatile
   974                           
   975                           ;main.c: 54:         }else{
   976   0011C2  EFE4  F008         	goto	l3315
   977   0011C6                     l100:
   978                           
   979                           ; BSR set to: 0
   980                           ;main.c: 55:             LATHbits.LATH3 = 1;
   981   0011C6  8680               	bsf	128,3,c	;volatile
   982   0011C8                     l3315:
   983                           
   984                           ; BSR set to: 0
   985                           ;main.c: 58:         unsigned int test = ADC_getval();
   986   0011C8  ECB8  F012         	call	_ADC_getval	;wreg free
   987   0011CC  C060  F0D1         	movff	?_ADC_getval,main@test
   988   0011D0  C061  F0D2         	movff	?_ADC_getval+1,main@test+1
   989   0011D4                     
   990                           ;main.c: 59:         test += 1;
   991   0011D4  0100               	movlb	0	; () banked
   992   0011D6  4BD1               	infsnz	main@test& (0+255),f,b
   993   0011D8  2BD2               	incf	(main@test+1)& (0+255),f,b
   994   0011DA                     
   995                           ; BSR set to: 0
   996                           ;main.c: 61:         ADC2String(*buf,ADC_getval());
   997   0011DA  C0E3  FFD9         	movff	main@buf,fsr2l
   998   0011DE  C0E4  FFDA         	movff	main@buf+1,fsr2h
   999   0011E2  50DF               	movf	indf2,w,c
  1000   0011E4  6FCF               	movwf	??_main& (0+255),b
  1001   0011E6  6BD0               	clrf	(??_main+1)& (0+255),b
  1002   0011E8  C0CF  F0CB         	movff	??_main,ADC2String@buf
  1003   0011EC  C0D0  F0CC         	movff	??_main+1,ADC2String@buf+1
  1004   0011F0  ECB8  F012         	call	_ADC_getval	;wreg free
  1005   0011F4  C060  F0CD         	movff	?_ADC_getval,ADC2String@ADC_val
  1006   0011F8  C061  F0CE         	movff	?_ADC_getval+1,ADC2String@ADC_val+1
  1007   0011FC  EC09  F013         	call	_ADC2String	;wreg free
  1008   001200                     
  1009                           ;main.c: 67:         char *text[8] = {"MON", "30","10","2022","23","25","58",*buf};
  1010   001200  EE20  F0D3         	lfsr	2,main@text
  1011   001204  0E0F               	movlw	15
  1012   001206                     u3371:
  1013   001206  6ADE               	clrf	postinc2,c
  1014   001208  06E8               	decf	wreg,f,c
  1015   00120A  E2FD               	bc	u3371
  1016   00120C  0E06               	movlw	low STR_1
  1017   00120E  0100               	movlb	0	; () banked
  1018   001210  6FD3               	movwf	main@text& (0+255),b
  1019   001212  0E0E               	movlw	high STR_1
  1020   001214  6FD4               	movwf	(main@text+1)& (0+255),b
  1021   001216                     
  1022                           ; BSR set to: 0
  1023   001216  0E10               	movlw	low STR_2
  1024   001218  6FD5               	movwf	(main@text+2)& (0+255),b
  1025   00121A  0E0E               	movlw	high STR_2
  1026   00121C  6FD6               	movwf	(main@text+3)& (0+255),b
  1027   00121E                     
  1028                           ; BSR set to: 0
  1029   00121E  0E0D               	movlw	low STR_3
  1030   001220  6FD7               	movwf	(main@text+4)& (0+255),b
  1031   001222  0E0E               	movlw	high STR_3
  1032   001224  6FD8               	movwf	(main@text+5)& (0+255),b
  1033   001226                     
  1034                           ; BSR set to: 0
  1035   001226  0E01               	movlw	low STR_4
  1036   001228  6FD9               	movwf	(main@text+6)& (0+255),b
  1037   00122A  0E0E               	movlw	high STR_4
  1038   00122C  6FDA               	movwf	(main@text+7)& (0+255),b
  1039   00122E                     
  1040                           ; BSR set to: 0
  1041   00122E  0E13               	movlw	low STR_5
  1042   001230  6FDB               	movwf	(main@text+8)& (0+255),b
  1043   001232  0E0E               	movlw	high STR_5
  1044   001234  6FDC               	movwf	(main@text+9)& (0+255),b
  1045   001236                     
  1046                           ; BSR set to: 0
  1047   001236  0E16               	movlw	low STR_6
  1048   001238  6FDD               	movwf	(main@text+10)& (0+255),b
  1049   00123A  0E0E               	movlw	high STR_6
  1050   00123C  6FDE               	movwf	(main@text+11)& (0+255),b
  1051   00123E                     
  1052                           ; BSR set to: 0
  1053   00123E  0E19               	movlw	low STR_7
  1054   001240  6FDF               	movwf	(main@text+12)& (0+255),b
  1055   001242  0E0E               	movlw	high STR_7
  1056   001244  6FE0               	movwf	(main@text+13)& (0+255),b
  1057   001246                     
  1058                           ; BSR set to: 0
  1059   001246  C0E3  FFD9         	movff	main@buf,fsr2l
  1060   00124A  C0E4  FFDA         	movff	main@buf+1,fsr2h
  1061   00124E  50DF               	movf	indf2,w,c
  1062   001250  6FCF               	movwf	??_main& (0+255),b
  1063   001252  6BD0               	clrf	(??_main+1)& (0+255),b
  1064   001254  C0CF  F0E1         	movff	??_main,main@text+14
  1065   001258  C0D0  F0E2         	movff	??_main+1,main@text+15
  1066   00125C                     
  1067                           ; BSR set to: 0
  1068                           ;main.c: 69:         LCD_sendstring(text);
  1069   00125C  0ED3               	movlw	low main@text
  1070   00125E  6F64               	movwf	LCD_sendstring@strlst& (0+255),b
  1071   001260  0E00               	movlw	high main@text
  1072   001262  6F65               	movwf	(LCD_sendstring@strlst+1)& (0+255),b
  1073   001264  EC6F  F00F         	call	_LCD_sendstring	;wreg free
  1074   001268  EF87  F008         	goto	l99
  1075   00126C  EF58  F000         	goto	start
  1076   001270                     __end_of_main:
  1077                           	callstack 0
  1078                           
  1079 ;; *************** function _get_hour *****************
  1080 ;; Defined at:
  1081 ;;		line 71 in file "timers.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    7[BANK0 ] unsigned int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 5
  1102 ;; This function calls:
  1103 ;;		___lwdiv
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text1
  1110   0025F2                     __ptext1:
  1111                           	callstack 0
  1112   0025F2                     _get_hour:
  1113                           	callstack 25
  1114   0025F2                     
  1115                           ;timers.c: 72:     return (unsigned int) time_counter/3600;
  1116   0025F2  C0EE  F060         	movff	_time_counter,___lwdiv@dividend
  1117   0025F6  C0EF  F061         	movff	_time_counter+1,___lwdiv@dividend+1
  1118   0025FA  0E0E               	movlw	14
  1119   0025FC  0100               	movlb	0	; () banked
  1120   0025FE  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1121   002600  0E10               	movlw	16
  1122   002602  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1123   002604  ECCE  F010         	call	___lwdiv	;wreg free
  1124   002608  C060  F067         	movff	?___lwdiv,?_get_hour
  1125   00260C  C061  F068         	movff	?___lwdiv+1,?_get_hour+1
  1126   002610  0012               	return		;funcret
  1127   002612                     __end_of_get_hour:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function ___lwdiv *****************
  1131 ;; Defined at:
  1132 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  dividend        2    0[BANK0 ] unsigned int 
  1135 ;;  divisor         2    2[BANK0 ] unsigned int 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  quotient        2    5[BANK0 ] unsigned int 
  1138 ;;  counter         1    4[BANK0 ] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2    0[BANK0 ] unsigned int 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1151 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;Total ram usage:        7 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 4
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_get_hour
  1159 ;;		_LEDarray_disp_dec
  1160 ;;		_LEDarray_disp_PPM
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text2
  1165   00219C                     __ptext2:
  1166                           	callstack 0
  1167   00219C                     ___lwdiv:
  1168                           	callstack 25
  1169   00219C  0E00               	movlw	0
  1170   00219E  0100               	movlb	0	; () banked
  1171   0021A0  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1172   0021A2  0E00               	movlw	0
  1173   0021A4  6F65               	movwf	___lwdiv@quotient& (0+255),b
  1174   0021A6                     
  1175                           ; BSR set to: 0
  1176   0021A6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1177   0021A8  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1178   0021AA  B4D8               	btfsc	status,2,c
  1179   0021AC  EFDA  F010         	goto	u3001
  1180   0021B0  EFDC  F010         	goto	u3000
  1181   0021B4                     u3001:
  1182   0021B4  EF04  F011         	goto	l844
  1183   0021B8                     u3000:
  1184   0021B8                     
  1185                           ; BSR set to: 0
  1186   0021B8  0E01               	movlw	1
  1187   0021BA  6F64               	movwf	___lwdiv@counter& (0+255),b
  1188   0021BC  EFE4  F010         	goto	l3057
  1189   0021C0                     l3055:
  1190                           
  1191                           ; BSR set to: 0
  1192   0021C0  90D8               	bcf	status,0,c
  1193   0021C2  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  1194   0021C4  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1195   0021C6  2B64               	incf	___lwdiv@counter& (0+255),f,b
  1196   0021C8                     l3057:
  1197                           
  1198                           ; BSR set to: 0
  1199   0021C8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1200   0021CA  EFE9  F010         	goto	u3011
  1201   0021CE  EFEB  F010         	goto	u3010
  1202   0021D2                     u3011:
  1203   0021D2  EFE0  F010         	goto	l3055
  1204   0021D6                     u3010:
  1205   0021D6                     l3059:
  1206                           
  1207                           ; BSR set to: 0
  1208   0021D6  90D8               	bcf	status,0,c
  1209   0021D8  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  1210   0021DA  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1211   0021DC                     
  1212                           ; BSR set to: 0
  1213   0021DC  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1214   0021DE  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  1215   0021E0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1216   0021E2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1217   0021E4  A0D8               	btfss	status,0,c
  1218   0021E6  EFF7  F010         	goto	u3021
  1219   0021EA  EFF9  F010         	goto	u3020
  1220   0021EE                     u3021:
  1221   0021EE  EFFE  F010         	goto	l3067
  1222   0021F2                     u3020:
  1223   0021F2                     
  1224                           ; BSR set to: 0
  1225   0021F2  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1226   0021F4  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  1227   0021F6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1228   0021F8  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1229   0021FA                     
  1230                           ; BSR set to: 0
  1231   0021FA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  1232   0021FC                     l3067:
  1233                           
  1234                           ; BSR set to: 0
  1235   0021FC  90D8               	bcf	status,0,c
  1236   0021FE  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1237   002200  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  1238   002202                     
  1239                           ; BSR set to: 0
  1240   002202  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  1241   002204  EFEB  F010         	goto	l3059
  1242   002208                     l844:
  1243                           
  1244                           ; BSR set to: 0
  1245   002208  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  1246   00220C  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1247   002210                     
  1248                           ; BSR set to: 0
  1249   002210  0012               	return		;funcret
  1250   002212                     __end_of___lwdiv:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function ___xxtofl *****************
  1254 ;; Defined at:
  1255 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  sign            1    wreg     unsigned char 
  1258 ;;  val             4    9[BANK0 ] long 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  sign            1   17[BANK0 ] unsigned char 
  1261 ;;  arg             4   19[BANK0 ] unsigned long 
  1262 ;;  exp             1   18[BANK0 ] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  4    9[BANK0 ] unsigned char 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1276 ;;Total ram usage:       14 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 4
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text3
  1287   001270                     __ptext3:
  1288                           	callstack 0
  1289   001270                     ___xxtofl:
  1290                           	callstack 26
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;incstack = 0
  1294                           ;___xxtofl@sign stored from wreg
  1295   001270  0100               	movlb	0	; () banked
  1296   001272  6F71               	movwf	___xxtofl@sign& (0+255),b
  1297   001274  0100               	movlb	0	; () banked
  1298   001276  5171               	movf	___xxtofl@sign& (0+255),w,b
  1299   001278  B4D8               	btfsc	status,2,c
  1300   00127A  EF41  F009         	goto	u2171
  1301   00127E  EF43  F009         	goto	u2170
  1302   001282                     u2171:
  1303   001282  EF65  F009         	goto	l1008
  1304   001286                     u2170:
  1305   001286                     
  1306                           ; BSR set to: 0
  1307   001286  BF6C               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1308   001288  EF4A  F009         	goto	u2180
  1309   00128C  EF48  F009         	goto	u2181
  1310   001290                     u2181:
  1311   001290  EF65  F009         	goto	l1008
  1312   001294                     u2180:
  1313   001294                     
  1314                           ; BSR set to: 0
  1315   001294  C069  F06D         	movff	___xxtofl@val,??___xxtofl
  1316   001298  C06A  F06E         	movff	___xxtofl@val+1,??___xxtofl+1
  1317   00129C  C06B  F06F         	movff	___xxtofl@val+2,??___xxtofl+2
  1318   0012A0  C06C  F070         	movff	___xxtofl@val+3,??___xxtofl+3
  1319   0012A4  1F6D               	comf	??___xxtofl& (0+255),f,b
  1320   0012A6  1F6E               	comf	(??___xxtofl+1)& (0+255),f,b
  1321   0012A8  1F6F               	comf	(??___xxtofl+2)& (0+255),f,b
  1322   0012AA  1F70               	comf	(??___xxtofl+3)& (0+255),f,b
  1323   0012AC  2B6D               	incf	??___xxtofl& (0+255),f,b
  1324   0012AE  0E00               	movlw	0
  1325   0012B0  236E               	addwfc	(??___xxtofl+1)& (0+255),f,b
  1326   0012B2  236F               	addwfc	(??___xxtofl+2)& (0+255),f,b
  1327   0012B4  2370               	addwfc	(??___xxtofl+3)& (0+255),f,b
  1328   0012B6  C06D  F073         	movff	??___xxtofl,___xxtofl@arg
  1329   0012BA  C06E  F074         	movff	??___xxtofl+1,___xxtofl@arg+1
  1330   0012BE  C06F  F075         	movff	??___xxtofl+2,___xxtofl@arg+2
  1331   0012C2  C070  F076         	movff	??___xxtofl+3,___xxtofl@arg+3
  1332   0012C6  EF6D  F009         	goto	l2531
  1333   0012CA                     l1008:
  1334                           
  1335                           ; BSR set to: 0
  1336   0012CA  C069  F073         	movff	___xxtofl@val,___xxtofl@arg
  1337   0012CE  C06A  F074         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1338   0012D2  C06B  F075         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1339   0012D6  C06C  F076         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1340   0012DA                     l2531:
  1341                           
  1342                           ; BSR set to: 0
  1343   0012DA  5169               	movf	___xxtofl@val& (0+255),w,b
  1344   0012DC  116A               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  1345   0012DE  116B               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  1346   0012E0  116C               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  1347   0012E2  A4D8               	btfss	status,2,c
  1348   0012E4  EF76  F009         	goto	u2191
  1349   0012E8  EF78  F009         	goto	u2190
  1350   0012EC                     u2191:
  1351   0012EC  EF82  F009         	goto	l2537
  1352   0012F0                     u2190:
  1353   0012F0                     
  1354                           ; BSR set to: 0
  1355   0012F0  0E00               	movlw	0
  1356   0012F2  6F69               	movwf	?___xxtofl& (0+255),b
  1357   0012F4  0E00               	movlw	0
  1358   0012F6  6F6A               	movwf	(?___xxtofl+1)& (0+255),b
  1359   0012F8  0E00               	movlw	0
  1360   0012FA  6F6B               	movwf	(?___xxtofl+2)& (0+255),b
  1361   0012FC  0E00               	movlw	0
  1362   0012FE  6F6C               	movwf	(?___xxtofl+3)& (0+255),b
  1363   001300  EF13  F00A         	goto	l1011
  1364   001304                     l2537:
  1365                           
  1366                           ; BSR set to: 0
  1367   001304  0E96               	movlw	150
  1368   001306  6F72               	movwf	___xxtofl@exp& (0+255),b
  1369   001308  EF8C  F009         	goto	l2541
  1370   00130C                     l2539:
  1371                           
  1372                           ; BSR set to: 0
  1373   00130C  2B72               	incf	___xxtofl@exp& (0+255),f,b
  1374   00130E  90D8               	bcf	status,0,c
  1375   001310  3376               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1376   001312  3375               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1377   001314  3374               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1378   001316  3373               	rrcf	___xxtofl@arg& (0+255),f,b
  1379   001318                     l2541:
  1380                           
  1381                           ; BSR set to: 0
  1382   001318  0E00               	movlw	0
  1383   00131A  1573               	andwf	___xxtofl@arg& (0+255),w,b
  1384   00131C  6F6D               	movwf	??___xxtofl& (0+255),b
  1385   00131E  0E00               	movlw	0
  1386   001320  1574               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1387   001322  6F6E               	movwf	(??___xxtofl+1)& (0+255),b
  1388   001324  0E00               	movlw	0
  1389   001326  1575               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1390   001328  6F6F               	movwf	(??___xxtofl+2)& (0+255),b
  1391   00132A  0EFE               	movlw	254
  1392   00132C  1576               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1393   00132E  6F70               	movwf	(??___xxtofl+3)& (0+255),b
  1394   001330  516D               	movf	??___xxtofl& (0+255),w,b
  1395   001332  116E               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1396   001334  116F               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1397   001336  1170               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1398   001338  A4D8               	btfss	status,2,c
  1399   00133A  EFA1  F009         	goto	u2201
  1400   00133E  EFA3  F009         	goto	u2200
  1401   001342                     u2201:
  1402   001342  EF86  F009         	goto	l2539
  1403   001346                     u2200:
  1404   001346  EFB1  F009         	goto	l1015
  1405   00134A                     l2543:
  1406                           
  1407                           ; BSR set to: 0
  1408   00134A  2B72               	incf	___xxtofl@exp& (0+255),f,b
  1409   00134C                     
  1410                           ; BSR set to: 0
  1411   00134C  0E01               	movlw	1
  1412   00134E  2773               	addwf	___xxtofl@arg& (0+255),f,b
  1413   001350  0E00               	movlw	0
  1414   001352  2374               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  1415   001354  2375               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  1416   001356  2376               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  1417   001358                     
  1418                           ; BSR set to: 0
  1419   001358  90D8               	bcf	status,0,c
  1420   00135A  3376               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1421   00135C  3375               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1422   00135E  3374               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1423   001360  3373               	rrcf	___xxtofl@arg& (0+255),f,b
  1424   001362                     l1015:
  1425                           
  1426                           ; BSR set to: 0
  1427   001362  0E00               	movlw	0
  1428   001364  1573               	andwf	___xxtofl@arg& (0+255),w,b
  1429   001366  6F6D               	movwf	??___xxtofl& (0+255),b
  1430   001368  0E00               	movlw	0
  1431   00136A  1574               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1432   00136C  6F6E               	movwf	(??___xxtofl+1)& (0+255),b
  1433   00136E  0E00               	movlw	0
  1434   001370  1575               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1435   001372  6F6F               	movwf	(??___xxtofl+2)& (0+255),b
  1436   001374  0EFF               	movlw	255
  1437   001376  1576               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1438   001378  6F70               	movwf	(??___xxtofl+3)& (0+255),b
  1439   00137A  516D               	movf	??___xxtofl& (0+255),w,b
  1440   00137C  116E               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1441   00137E  116F               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1442   001380  1170               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1443   001382  A4D8               	btfss	status,2,c
  1444   001384  EFC6  F009         	goto	u2211
  1445   001388  EFC8  F009         	goto	u2210
  1446   00138C                     u2211:
  1447   00138C  EFA5  F009         	goto	l2543
  1448   001390                     u2210:
  1449   001390  EFD0  F009         	goto	l2551
  1450   001394                     l2549:
  1451                           
  1452                           ; BSR set to: 0
  1453   001394  0772               	decf	___xxtofl@exp& (0+255),f,b
  1454   001396  90D8               	bcf	status,0,c
  1455   001398  3773               	rlcf	___xxtofl@arg& (0+255),f,b
  1456   00139A  3774               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  1457   00139C  3775               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  1458   00139E  3776               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  1459   0013A0                     l2551:
  1460                           
  1461                           ; BSR set to: 0
  1462   0013A0  BF75               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  1463   0013A2  EFD5  F009         	goto	u2221
  1464   0013A6  EFD7  F009         	goto	u2220
  1465   0013AA                     u2221:
  1466   0013AA  EFDF  F009         	goto	l1022
  1467   0013AE                     u2220:
  1468   0013AE                     
  1469                           ; BSR set to: 0
  1470   0013AE  0E02               	movlw	2
  1471   0013B0  6172               	cpfslt	___xxtofl@exp& (0+255),b
  1472   0013B2  EFDD  F009         	goto	u2231
  1473   0013B6  EFDF  F009         	goto	u2230
  1474   0013BA                     u2231:
  1475   0013BA  EFCA  F009         	goto	l2549
  1476   0013BE                     u2230:
  1477   0013BE                     l1022:
  1478                           
  1479                           ; BSR set to: 0
  1480   0013BE  B172               	btfsc	___xxtofl@exp& (0+255),0,b
  1481   0013C0  EFE4  F009         	goto	u2241
  1482   0013C4  EFE6  F009         	goto	u2240
  1483   0013C8                     u2241:
  1484   0013C8  EFE7  F009         	goto	l2557
  1485   0013CC                     u2240:
  1486   0013CC                     
  1487                           ; BSR set to: 0
  1488   0013CC  9F75               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  1489   0013CE                     l2557:
  1490                           
  1491                           ; BSR set to: 0
  1492   0013CE  90D8               	bcf	status,0,c
  1493   0013D0  3372               	rrcf	___xxtofl@exp& (0+255),f,b
  1494   0013D2                     
  1495                           ; BSR set to: 0
  1496   0013D2  C072  F06D         	movff	___xxtofl@exp,??___xxtofl
  1497   0013D6  6B6E               	clrf	(??___xxtofl+1)& (0+255),b
  1498   0013D8  6B6F               	clrf	(??___xxtofl+2)& (0+255),b
  1499   0013DA  6B70               	clrf	(??___xxtofl+3)& (0+255),b
  1500   0013DC  C06D  F070         	movff	??___xxtofl,??___xxtofl+3
  1501   0013E0  6B6F               	clrf	(??___xxtofl+2)& (0+255),b
  1502   0013E2  6B6E               	clrf	(??___xxtofl+1)& (0+255),b
  1503   0013E4  6B6D               	clrf	??___xxtofl& (0+255),b
  1504   0013E6  516D               	movf	??___xxtofl& (0+255),w,b
  1505   0013E8  1373               	iorwf	___xxtofl@arg& (0+255),f,b
  1506   0013EA  516E               	movf	(??___xxtofl+1)& (0+255),w,b
  1507   0013EC  1374               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  1508   0013EE  516F               	movf	(??___xxtofl+2)& (0+255),w,b
  1509   0013F0  1375               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  1510   0013F2  5170               	movf	(??___xxtofl+3)& (0+255),w,b
  1511   0013F4  1376               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  1512   0013F6                     
  1513                           ; BSR set to: 0
  1514   0013F6  5171               	movf	___xxtofl@sign& (0+255),w,b
  1515   0013F8  B4D8               	btfsc	status,2,c
  1516   0013FA  EF01  F00A         	goto	u2251
  1517   0013FE  EF03  F00A         	goto	u2250
  1518   001402                     u2251:
  1519   001402  EF0B  F00A         	goto	l2567
  1520   001406                     u2250:
  1521   001406                     
  1522                           ; BSR set to: 0
  1523   001406  BF6C               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1524   001408  EF0A  F00A         	goto	u2260
  1525   00140C  EF08  F00A         	goto	u2261
  1526   001410                     u2261:
  1527   001410  EF0B  F00A         	goto	l2567
  1528   001414                     u2260:
  1529   001414                     
  1530                           ; BSR set to: 0
  1531   001414  8F76               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  1532   001416                     l2567:
  1533                           
  1534                           ; BSR set to: 0
  1535   001416  C073  F069         	movff	___xxtofl@arg,?___xxtofl
  1536   00141A  C074  F06A         	movff	___xxtofl@arg+1,?___xxtofl+1
  1537   00141E  C075  F06B         	movff	___xxtofl@arg+2,?___xxtofl+2
  1538   001422  C076  F06C         	movff	___xxtofl@arg+3,?___xxtofl+3
  1539   001426                     l1011:
  1540                           
  1541                           ; BSR set to: 0
  1542   001426  0012               	return		;funcret
  1543   001428                     __end_of___xxtofl:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function ___fltol *****************
  1547 ;; Defined at:
  1548 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  f1              4    0[BANK0 ] unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  exp1            1    9[BANK0 ] unsigned char 
  1553 ;;  sign1           1    8[BANK0 ] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  4    0[BANK0 ] long 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;Total ram usage:       10 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 4
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text4
  1578   001868                     __ptext4:
  1579                           	callstack 0
  1580   001868                     ___fltol:
  1581                           	callstack 26
  1582   001868  0100               	movlb	0	; () banked
  1583   00186A  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  1584   00186C  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  1585   00186E  6F69               	movwf	___fltol@exp1& (0+255),b
  1586   001870  5169               	movf	___fltol@exp1& (0+255),w,b
  1587   001872  A4D8               	btfss	status,2,c
  1588   001874  EF3E  F00C         	goto	u3231
  1589   001878  EF40  F00C         	goto	u3230
  1590   00187C                     u3231:
  1591   00187C  EF4A  F00C         	goto	l3231
  1592   001880                     u3230:
  1593   001880                     l3227:
  1594                           
  1595                           ; BSR set to: 0
  1596   001880  0E00               	movlw	0
  1597   001882  6F60               	movwf	?___fltol& (0+255),b
  1598   001884  0E00               	movlw	0
  1599   001886  6F61               	movwf	(?___fltol+1)& (0+255),b
  1600   001888  0E00               	movlw	0
  1601   00188A  6F62               	movwf	(?___fltol+2)& (0+255),b
  1602   00188C  0E00               	movlw	0
  1603   00188E  6F63               	movwf	(?___fltol+3)& (0+255),b
  1604   001890  EFB7  F00C         	goto	l650
  1605   001894                     l3231:
  1606                           
  1607                           ; BSR set to: 0
  1608   001894  C060  F064         	movff	___fltol@f1,??___fltol
  1609   001898  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  1610   00189C  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  1611   0018A0  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  1612   0018A4  0E20               	movlw	32
  1613   0018A6  EF5A  F00C         	goto	u3240
  1614   0018AA                     u3245:
  1615   0018AA  90D8               	bcf	status,0,c
  1616   0018AC  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  1617   0018AE  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  1618   0018B0  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  1619   0018B2  3364               	rrcf	??___fltol& (0+255),f,b
  1620   0018B4                     u3240:
  1621   0018B4  2EE8               	decfsz	wreg,f,c
  1622   0018B6  EF55  F00C         	goto	u3245
  1623   0018BA  5164               	movf	??___fltol& (0+255),w,b
  1624   0018BC  6F68               	movwf	___fltol@sign1& (0+255),b
  1625   0018BE                     
  1626                           ; BSR set to: 0
  1627   0018BE  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  1628   0018C0                     
  1629                           ; BSR set to: 0
  1630   0018C0  0EFF               	movlw	255
  1631   0018C2  1760               	andwf	___fltol@f1& (0+255),f,b
  1632   0018C4  0EFF               	movlw	255
  1633   0018C6  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  1634   0018C8  0EFF               	movlw	255
  1635   0018CA  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  1636   0018CC  0E00               	movlw	0
  1637   0018CE  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  1638   0018D0                     
  1639                           ; BSR set to: 0
  1640   0018D0  0E96               	movlw	150
  1641   0018D2  5F69               	subwf	___fltol@exp1& (0+255),f,b
  1642   0018D4                     
  1643                           ; BSR set to: 0
  1644   0018D4  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  1645   0018D6  EF71  F00C         	goto	u3250
  1646   0018DA  EF6F  F00C         	goto	u3251
  1647   0018DE                     u3251:
  1648   0018DE  EF87  F00C         	goto	l3251
  1649   0018E2                     u3250:
  1650   0018E2                     
  1651                           ; BSR set to: 0
  1652   0018E2  5169               	movf	___fltol@exp1& (0+255),w,b
  1653   0018E4  0A80               	xorlw	128
  1654   0018E6  0F97               	addlw	151
  1655   0018E8  B0D8               	btfsc	status,0,c
  1656   0018EA  EF79  F00C         	goto	u3261
  1657   0018EE  EF7B  F00C         	goto	u3260
  1658   0018F2                     u3261:
  1659   0018F2  EF7D  F00C         	goto	l3247
  1660   0018F6                     u3260:
  1661   0018F6  EF40  F00C         	goto	l3227
  1662   0018FA                     l3247:
  1663                           
  1664                           ; BSR set to: 0
  1665   0018FA  90D8               	bcf	status,0,c
  1666   0018FC  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  1667   0018FE  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  1668   001900  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  1669   001902  3360               	rrcf	___fltol@f1& (0+255),f,b
  1670   001904                     
  1671                           ; BSR set to: 0
  1672   001904  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  1673   001906  EF7D  F00C         	goto	l3247
  1674   00190A  EF9F  F00C         	goto	l3261
  1675   00190E                     l3251:
  1676                           
  1677                           ; BSR set to: 0
  1678   00190E  0E1F               	movlw	31
  1679   001910  6569               	cpfsgt	___fltol@exp1& (0+255),b
  1680   001912  EF8D  F00C         	goto	u3271
  1681   001916  EF8F  F00C         	goto	u3270
  1682   00191A                     u3271:
  1683   00191A  EF97  F00C         	goto	l3259
  1684   00191E                     u3270:
  1685   00191E  EF40  F00C         	goto	l3227
  1686   001922                     l3257:
  1687                           
  1688                           ; BSR set to: 0
  1689   001922  90D8               	bcf	status,0,c
  1690   001924  3760               	rlcf	___fltol@f1& (0+255),f,b
  1691   001926  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  1692   001928  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  1693   00192A  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  1694   00192C  0769               	decf	___fltol@exp1& (0+255),f,b
  1695   00192E                     l3259:
  1696                           
  1697                           ; BSR set to: 0
  1698   00192E  5169               	movf	___fltol@exp1& (0+255),w,b
  1699   001930  A4D8               	btfss	status,2,c
  1700   001932  EF9D  F00C         	goto	u3281
  1701   001936  EF9F  F00C         	goto	u3280
  1702   00193A                     u3281:
  1703   00193A  EF91  F00C         	goto	l3257
  1704   00193E                     u3280:
  1705   00193E                     l3261:
  1706                           
  1707                           ; BSR set to: 0
  1708   00193E  5168               	movf	___fltol@sign1& (0+255),w,b
  1709   001940  B4D8               	btfsc	status,2,c
  1710   001942  EFA5  F00C         	goto	u3291
  1711   001946  EFA7  F00C         	goto	u3290
  1712   00194A                     u3291:
  1713   00194A  EFAF  F00C         	goto	l3265
  1714   00194E                     u3290:
  1715   00194E                     
  1716                           ; BSR set to: 0
  1717   00194E  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  1718   001950  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  1719   001952  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  1720   001954  6D60               	negf	___fltol@f1& (0+255),b
  1721   001956  0E00               	movlw	0
  1722   001958  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  1723   00195A  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  1724   00195C  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  1725   00195E                     l3265:
  1726                           
  1727                           ; BSR set to: 0
  1728   00195E  C060  F060         	movff	___fltol@f1,?___fltol
  1729   001962  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  1730   001966  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  1731   00196A  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  1732   00196E                     l650:
  1733                           
  1734                           ; BSR set to: 0
  1735   00196E  0012               	return		;funcret
  1736   001970                     __end_of___fltol:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function ___flge *****************
  1740 ;; Defined at:
  1741 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  ff1             4    0[BANK0 ] long 
  1744 ;;  ff2             4    4[BANK0 ] long 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1756 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1759 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;Total ram usage:       12 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; Hardware stack levels required when called: 4
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text5
  1771   001970                     __ptext5:
  1772                           	callstack 0
  1773   001970                     ___flge:
  1774                           	callstack 26
  1775   001970  0E00               	movlw	0
  1776   001972  0100               	movlb	0	; () banked
  1777   001974  1560               	andwf	___flge@ff1& (0+255),w,b
  1778   001976  6F68               	movwf	??___flge& (0+255),b
  1779   001978  0E00               	movlw	0
  1780   00197A  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  1781   00197C  6F69               	movwf	(??___flge+1)& (0+255),b
  1782   00197E  0E80               	movlw	128
  1783   001980  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  1784   001982  6F6A               	movwf	(??___flge+2)& (0+255),b
  1785   001984  0E7F               	movlw	127
  1786   001986  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  1787   001988  6F6B               	movwf	(??___flge+3)& (0+255),b
  1788   00198A  5168               	movf	??___flge& (0+255),w,b
  1789   00198C  1169               	iorwf	(??___flge+1)& (0+255),w,b
  1790   00198E  116A               	iorwf	(??___flge+2)& (0+255),w,b
  1791   001990  116B               	iorwf	(??___flge+3)& (0+255),w,b
  1792   001992  A4D8               	btfss	status,2,c
  1793   001994  EFCE  F00C         	goto	u3181
  1794   001998  EFD0  F00C         	goto	u3180
  1795   00199C                     u3181:
  1796   00199C  EFD8  F00C         	goto	l3207
  1797   0019A0                     u3180:
  1798   0019A0                     
  1799                           ; BSR set to: 0
  1800   0019A0  0E00               	movlw	0
  1801   0019A2  6F60               	movwf	___flge@ff1& (0+255),b
  1802   0019A4  0E00               	movlw	0
  1803   0019A6  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1804   0019A8  0E00               	movlw	0
  1805   0019AA  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1806   0019AC  0E00               	movlw	0
  1807   0019AE  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1808   0019B0                     l3207:
  1809                           
  1810                           ; BSR set to: 0
  1811   0019B0  0E00               	movlw	0
  1812   0019B2  1564               	andwf	___flge@ff2& (0+255),w,b
  1813   0019B4  6F68               	movwf	??___flge& (0+255),b
  1814   0019B6  0E00               	movlw	0
  1815   0019B8  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  1816   0019BA  6F69               	movwf	(??___flge+1)& (0+255),b
  1817   0019BC  0E80               	movlw	128
  1818   0019BE  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  1819   0019C0  6F6A               	movwf	(??___flge+2)& (0+255),b
  1820   0019C2  0E7F               	movlw	127
  1821   0019C4  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  1822   0019C6  6F6B               	movwf	(??___flge+3)& (0+255),b
  1823   0019C8  5168               	movf	??___flge& (0+255),w,b
  1824   0019CA  1169               	iorwf	(??___flge+1)& (0+255),w,b
  1825   0019CC  116A               	iorwf	(??___flge+2)& (0+255),w,b
  1826   0019CE  116B               	iorwf	(??___flge+3)& (0+255),w,b
  1827   0019D0  A4D8               	btfss	status,2,c
  1828   0019D2  EFED  F00C         	goto	u3191
  1829   0019D6  EFEF  F00C         	goto	u3190
  1830   0019DA                     u3191:
  1831   0019DA  EFF7  F00C         	goto	l3211
  1832   0019DE                     u3190:
  1833   0019DE                     
  1834                           ; BSR set to: 0
  1835   0019DE  0E00               	movlw	0
  1836   0019E0  6F64               	movwf	___flge@ff2& (0+255),b
  1837   0019E2  0E00               	movlw	0
  1838   0019E4  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  1839   0019E6  0E00               	movlw	0
  1840   0019E8  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  1841   0019EA  0E00               	movlw	0
  1842   0019EC  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  1843   0019EE                     l3211:
  1844                           
  1845                           ; BSR set to: 0
  1846   0019EE  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  1847   0019F0  EFFC  F00C         	goto	u3201
  1848   0019F4  EFFE  F00C         	goto	u3200
  1849   0019F8                     u3201:
  1850   0019F8  EF07  F00D         	goto	l3215
  1851   0019FC                     u3200:
  1852   0019FC                     
  1853                           ; BSR set to: 0
  1854   0019FC  6D60               	negf	___flge@ff1& (0+255),b
  1855   0019FE  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  1856   001A00  B0D8               	btfsc	status,0,c
  1857   001A02  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  1858   001A04  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  1859   001A06  B0D8               	btfsc	status,0,c
  1860   001A08  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  1861   001A0A  0E80               	movlw	128
  1862   001A0C  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  1863   001A0E                     l3215:
  1864                           
  1865                           ; BSR set to: 0
  1866   001A0E  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  1867   001A10  EF0C  F00D         	goto	u3211
  1868   001A14  EF0E  F00D         	goto	u3210
  1869   001A18                     u3211:
  1870   001A18  EF17  F00D         	goto	l618
  1871   001A1C                     u3210:
  1872   001A1C                     
  1873                           ; BSR set to: 0
  1874   001A1C  6D64               	negf	___flge@ff2& (0+255),b
  1875   001A1E  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  1876   001A20  B0D8               	btfsc	status,0,c
  1877   001A22  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  1878   001A24  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  1879   001A26  B0D8               	btfsc	status,0,c
  1880   001A28  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  1881   001A2A  0E80               	movlw	128
  1882   001A2C  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  1883   001A2E                     l618:
  1884                           
  1885                           ; BSR set to: 0
  1886   001A2E  0E00               	movlw	0
  1887   001A30  1B60               	xorwf	___flge@ff1& (0+255),f,b
  1888   001A32  0E00               	movlw	0
  1889   001A34  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  1890   001A36  0E00               	movlw	0
  1891   001A38  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  1892   001A3A  0E80               	movlw	128
  1893   001A3C  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  1894   001A3E  0E00               	movlw	0
  1895   001A40  1B64               	xorwf	___flge@ff2& (0+255),f,b
  1896   001A42  0E00               	movlw	0
  1897   001A44  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  1898   001A46  0E00               	movlw	0
  1899   001A48  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  1900   001A4A  0E80               	movlw	128
  1901   001A4C  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  1902   001A4E  5164               	movf	___flge@ff2& (0+255),w,b
  1903   001A50  5D60               	subwf	___flge@ff1& (0+255),w,b
  1904   001A52  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  1905   001A54  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  1906   001A56  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  1907   001A58  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  1908   001A5A  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  1909   001A5C  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  1910   001A5E  B0D8               	btfsc	status,0,c
  1911   001A60  EF34  F00D         	goto	u3221
  1912   001A64  EF36  F00D         	goto	u3220
  1913   001A68                     u3221:
  1914   001A68  EF39  F00D         	goto	l3221
  1915   001A6C                     u3220:
  1916   001A6C                     
  1917                           ; BSR set to: 0
  1918   001A6C  90D8               	bcf	status,0,c
  1919   001A6E  EF3A  F00D         	goto	l623
  1920   001A72                     l3221:
  1921                           
  1922                           ; BSR set to: 0
  1923   001A72  80D8               	bsf	status,0,c
  1924   001A74                     l623:
  1925                           
  1926                           ; BSR set to: 0
  1927   001A74  0012               	return		;funcret
  1928   001A76                     __end_of___flge:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _Timer0_init *****************
  1932 ;; Defined at:
  1933 ;;		line 17 in file "timers.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  init_test_mo    2   12[BANK0 ] unsigned short 
  1936 ;;  current_minu    4   14[BANK0 ] unsigned long 
  1937 ;;  current_hour    4   18[BANK0 ] unsigned long 
  1938 ;;  current_day     2   22[BANK0 ] unsigned int 
  1939 ;;  current_day_    2   24[BANK0 ] unsigned int 
  1940 ;;  current_mont    2   26[BANK0 ] unsigned int 
  1941 ;;  current_year    2   28[BANK0 ] unsigned int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1953 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;Total ram usage:       22 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 5
  1960 ;; This function calls:
  1961 ;;		___lmul
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text6
  1968   001C68                     __ptext6:
  1969                           	callstack 0
  1970   001C68                     _Timer0_init:
  1971                           	callstack 25
  1972   001C68                     
  1973                           ;timers.c: 17: void Timer0_init(unsigned short init_test_mode,unsigned long current_minu
      +                          te,unsigned long current_hour, unsigned int current_day,unsigned int current_day_of_the_
      +                          week,unsigned int current_month, unsigned int current_year);timers.c: 18: {;timers.c: 19
      +                          :     test_mode = init_test_mode;
  1974   001C68  C06C  F046         	movff	Timer0_init@init_test_mode,_test_mode
  1975   001C6C  C06D  F047         	movff	Timer0_init@init_test_mode+1,_test_mode+1
  1976   001C70                     
  1977                           ;timers.c: 20:     time_counter = current_minute * 60 + current_hour * 3600;
  1978   001C70  C072  F060         	movff	Timer0_init@current_hour,___lmul@multiplier
  1979   001C74  C073  F061         	movff	Timer0_init@current_hour+1,___lmul@multiplier+1
  1980   001C78  C074  F062         	movff	Timer0_init@current_hour+2,___lmul@multiplier+2
  1981   001C7C  C075  F063         	movff	Timer0_init@current_hour+3,___lmul@multiplier+3
  1982   001C80  0E10               	movlw	16
  1983   001C82  0100               	movlb	0	; () banked
  1984   001C84  6F64               	movwf	___lmul@multiplicand& (0+255),b
  1985   001C86  0E0E               	movlw	14
  1986   001C88  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1987   001C8A  0E00               	movlw	0
  1988   001C8C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1989   001C8E  0E00               	movlw	0
  1990   001C90  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1991   001C92  EC42  F011         	call	___lmul	;wreg free
  1992   001C96  C060  F07E         	movff	?___lmul,??_Timer0_init
  1993   001C9A  C061  F07F         	movff	?___lmul+1,??_Timer0_init+1
  1994   001C9E  C062  F080         	movff	?___lmul+2,??_Timer0_init+2
  1995   001CA2  C063  F081         	movff	?___lmul+3,??_Timer0_init+3
  1996   001CA6  C06E  F060         	movff	Timer0_init@current_minute,___lmul@multiplier
  1997   001CAA  C06F  F061         	movff	Timer0_init@current_minute+1,___lmul@multiplier+1
  1998   001CAE  C070  F062         	movff	Timer0_init@current_minute+2,___lmul@multiplier+2
  1999   001CB2  C071  F063         	movff	Timer0_init@current_minute+3,___lmul@multiplier+3
  2000   001CB6  0E3C               	movlw	60
  2001   001CB8  0100               	movlb	0	; () banked
  2002   001CBA  6F64               	movwf	___lmul@multiplicand& (0+255),b
  2003   001CBC  0E00               	movlw	0
  2004   001CBE  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2005   001CC0  0E00               	movlw	0
  2006   001CC2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2007   001CC4  0E00               	movlw	0
  2008   001CC6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2009   001CC8  EC42  F011         	call	___lmul	;wreg free
  2010   001CCC  0100               	movlb	0	; () banked
  2011   001CCE  5160               	movf	?___lmul& (0+255),w,b
  2012   001CD0  257E               	addwf	??_Timer0_init& (0+255),w,b
  2013   001CD2  6FEE               	movwf	_time_counter& (0+255),b
  2014   001CD4  5161               	movf	(?___lmul+1)& (0+255),w,b
  2015   001CD6  217F               	addwfc	(??_Timer0_init+1)& (0+255),w,b
  2016   001CD8  6FEF               	movwf	(_time_counter+1)& (0+255),b
  2017   001CDA  5162               	movf	(?___lmul+2)& (0+255),w,b
  2018   001CDC  2180               	addwfc	(??_Timer0_init+2)& (0+255),w,b
  2019   001CDE  6FF0               	movwf	(_time_counter+2)& (0+255),b
  2020   001CE0  5163               	movf	(?___lmul+3)& (0+255),w,b
  2021   001CE2  2181               	addwfc	(??_Timer0_init+3)& (0+255),w,b
  2022   001CE4  6FF1               	movwf	(_time_counter+3)& (0+255),b
  2023   001CE6                     
  2024                           ; BSR set to: 0
  2025                           ;timers.c: 21:     day = current_day;
  2026   001CE6  C076  F042         	movff	Timer0_init@current_day,_day
  2027   001CEA  C077  F043         	movff	Timer0_init@current_day+1,_day+1
  2028   001CEE                     
  2029                           ; BSR set to: 0
  2030                           ;timers.c: 22:     day_of_the_week = current_day_of_the_week;
  2031   001CEE  C078  F044         	movff	Timer0_init@current_day_of_the_week,_day_of_the_week
  2032   001CF2  C079  F045         	movff	Timer0_init@current_day_of_the_week+1,_day_of_the_week+1
  2033   001CF6                     
  2034                           ; BSR set to: 0
  2035                           ;timers.c: 23:     month = current_month;
  2036   001CF6  C07A  F040         	movff	Timer0_init@current_month,_month
  2037   001CFA  C07B  F041         	movff	Timer0_init@current_month+1,_month+1
  2038   001CFE                     
  2039                           ; BSR set to: 0
  2040                           ;timers.c: 24:     year = current_year;
  2041   001CFE  C07C  F03E         	movff	Timer0_init@current_year,_year
  2042   001D02  C07D  F03F         	movff	Timer0_init@current_year+1,_year+1
  2043   001D06                     
  2044                           ; BSR set to: 0
  2045                           ;timers.c: 26:     T0CON1bits.T0CS=0b010;
  2046   001D06  50D6               	movf	214,w,c	;volatile
  2047   001D08  0B1F               	andlw	-225
  2048   001D0A  0940               	iorlw	64
  2049   001D0C  6ED6               	movwf	214,c	;volatile
  2050   001D0E                     
  2051                           ; BSR set to: 0
  2052                           ;timers.c: 27:     T0CON1bits.T0ASYNC=1;
  2053   001D0E  88D6               	bsf	214,4,c	;volatile
  2054   001D10                     
  2055                           ; BSR set to: 0
  2056                           ;timers.c: 29:     T0CON0bits.T016BIT=1;
  2057   001D10  88D5               	bsf	213,4,c	;volatile
  2058   001D12                     
  2059                           ; BSR set to: 0
  2060                           ;timers.c: 31:     if(test_mode == 0){
  2061   001D12  5046               	movf	_test_mode^0,w,c
  2062   001D14  1047               	iorwf	(_test_mode+1)^0,w,c
  2063   001D16  A4D8               	btfss	status,2,c
  2064   001D18  EF90  F00E         	goto	u3121
  2065   001D1C  EF92  F00E         	goto	u3120
  2066   001D20                     u3121:
  2067   001D20  EF9C  F00E         	goto	l3131
  2068   001D24                     u3120:
  2069   001D24                     
  2070                           ; BSR set to: 0
  2071                           ;timers.c: 33:         T0CON1bits.T0CKPS=8;
  2072   001D24  50D6               	movf	214,w,c	;volatile
  2073   001D26  0BF0               	andlw	-16
  2074   001D28  0908               	iorlw	8
  2075   001D2A  6ED6               	movwf	214,c	;volatile
  2076                           
  2077                           ;timers.c: 35:         TMR0H = 0b1011;
  2078   001D2C  0E0B               	movlw	11
  2079   001D2E  6ED4               	movwf	212,c	;volatile
  2080                           
  2081                           ;timers.c: 36:         TMR0L = 0b11011011;
  2082   001D30  0EDB               	movlw	219
  2083   001D32  6ED3               	movwf	211,c	;volatile
  2084                           
  2085                           ;timers.c: 37:     }else{
  2086   001D34  EFA2  F00E         	goto	l3133
  2087   001D38                     l3131:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;timers.c: 38:         T0CON1bits.T0CKPS=0;
  2091   001D38  0EF0               	movlw	-16
  2092   001D3A  16D6               	andwf	214,f,c	;volatile
  2093                           
  2094                           ;timers.c: 40:         TMR0H = 0;
  2095   001D3C  0E00               	movlw	0
  2096   001D3E  6ED4               	movwf	212,c	;volatile
  2097                           
  2098                           ;timers.c: 41:         TMR0L = 0;
  2099   001D40  0E00               	movlw	0
  2100   001D42  6ED3               	movwf	211,c	;volatile
  2101   001D44                     l3133:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;timers.c: 43:     T0CON0bits.T0EN=1;
  2105   001D44  8ED5               	bsf	213,7,c	;volatile
  2106   001D46                     
  2107                           ; BSR set to: 0
  2108   001D46  0012               	return		;funcret
  2109   001D48                     __end_of_Timer0_init:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function ___lmul *****************
  2113 ;; Defined at:
  2114 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2117 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  product         4    8[BANK0 ] unsigned long 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  4    0[BANK0 ] unsigned long 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2129 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2132 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;Total ram usage:       12 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 4
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_Timer0_init
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text7
  2144   002284                     __ptext7:
  2145                           	callstack 0
  2146   002284                     ___lmul:
  2147                           	callstack 25
  2148   002284  0E00               	movlw	0
  2149   002286  0100               	movlb	0	; () banked
  2150   002288  6F68               	movwf	___lmul@product& (0+255),b
  2151   00228A  0E00               	movlw	0
  2152   00228C  6F69               	movwf	(___lmul@product+1)& (0+255),b
  2153   00228E  0E00               	movlw	0
  2154   002290  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  2155   002292  0E00               	movlw	0
  2156   002294  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  2157   002296                     l3041:
  2158                           
  2159                           ; BSR set to: 0
  2160   002296  A160               	btfss	___lmul@multiplier& (0+255),0,b
  2161   002298  EF50  F011         	goto	u2981
  2162   00229C  EF52  F011         	goto	u2980
  2163   0022A0                     u2981:
  2164   0022A0  EF5A  F011         	goto	l3045
  2165   0022A4                     u2980:
  2166   0022A4                     
  2167                           ; BSR set to: 0
  2168   0022A4  5164               	movf	___lmul@multiplicand& (0+255),w,b
  2169   0022A6  2768               	addwf	___lmul@product& (0+255),f,b
  2170   0022A8  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  2171   0022AA  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  2172   0022AC  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2173   0022AE  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  2174   0022B0  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2175   0022B2  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  2176   0022B4                     l3045:
  2177                           
  2178                           ; BSR set to: 0
  2179   0022B4  90D8               	bcf	status,0,c
  2180   0022B6  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  2181   0022B8  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2182   0022BA  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2183   0022BC  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2184   0022BE                     
  2185                           ; BSR set to: 0
  2186   0022BE  90D8               	bcf	status,0,c
  2187   0022C0  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2188   0022C2  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2189   0022C4  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2190   0022C6  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  2191   0022C8  5160               	movf	___lmul@multiplier& (0+255),w,b
  2192   0022CA  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2193   0022CC  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2194   0022CE  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  2195   0022D0  A4D8               	btfss	status,2,c
  2196   0022D2  EF6D  F011         	goto	u2991
  2197   0022D6  EF6F  F011         	goto	u2990
  2198   0022DA                     u2991:
  2199   0022DA  EF4B  F011         	goto	l3041
  2200   0022DE                     u2990:
  2201   0022DE                     
  2202                           ; BSR set to: 0
  2203   0022DE  C068  F060         	movff	___lmul@product,?___lmul
  2204   0022E2  C069  F061         	movff	___lmul@product+1,?___lmul+1
  2205   0022E6  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  2206   0022EA  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  2207   0022EE                     
  2208                           ; BSR set to: 0
  2209   0022EE  0012               	return		;funcret
  2210   0022F0                     __end_of___lmul:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _LEDarray_init *****************
  2214 ;; Defined at:
  2215 ;;		line 8 in file "LEDarray.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		None
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;Total ram usage:        0 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 4
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text8
  2244   002538                     __ptext8:
  2245                           	callstack 0
  2246   002538                     _LEDarray_init:
  2247                           	callstack 26
  2248   002538                     
  2249                           ;LEDarray.c: 14:     TRISGbits.TRISG0 = 0;
  2250   002538  9087               	bcf	135,0,c	;volatile
  2251                           
  2252                           ;LEDarray.c: 15:     TRISGbits.TRISG1 = 0;
  2253   00253A  9287               	bcf	135,1,c	;volatile
  2254                           
  2255                           ;LEDarray.c: 16:     TRISAbits.TRISA2 = 0;
  2256   00253C  9481               	bcf	129,2,c	;volatile
  2257                           
  2258                           ;LEDarray.c: 17:     TRISFbits.TRISF6 = 0;
  2259   00253E  9C86               	bcf	134,6,c	;volatile
  2260                           
  2261                           ;LEDarray.c: 18:     TRISAbits.TRISA4 = 0;
  2262   002540  9881               	bcf	129,4,c	;volatile
  2263                           
  2264                           ;LEDarray.c: 19:     TRISAbits.TRISA5 = 0;
  2265   002542  9A81               	bcf	129,5,c	;volatile
  2266                           
  2267                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2268   002544  9086               	bcf	134,0,c	;volatile
  2269                           
  2270                           ;LEDarray.c: 21:     TRISBbits.TRISB0 = 0;
  2271   002546  9082               	bcf	130,0,c	;volatile
  2272                           
  2273                           ;LEDarray.c: 22:     TRISBbits.TRISB1 = 0;
  2274   002548  9282               	bcf	130,1,c	;volatile
  2275                           
  2276                           ;LEDarray.c: 24:     PORTGbits.RG0 = 1;
  2277   00254A  808F               	bsf	143,0,c	;volatile
  2278                           
  2279                           ;LEDarray.c: 25:     PORTGbits.RG1 = 1;
  2280   00254C  828F               	bsf	143,1,c	;volatile
  2281                           
  2282                           ;LEDarray.c: 26:     PORTAbits.RA2 = 1;
  2283   00254E  8489               	bsf	137,2,c	;volatile
  2284                           
  2285                           ;LEDarray.c: 27:     PORTFbits.RF6 = 1;
  2286   002550  8C8E               	bsf	142,6,c	;volatile
  2287                           
  2288                           ;LEDarray.c: 28:     PORTAbits.RA4 = 1;
  2289   002552  8889               	bsf	137,4,c	;volatile
  2290                           
  2291                           ;LEDarray.c: 29:     PORTAbits.RA5 = 1;
  2292   002554  8A89               	bsf	137,5,c	;volatile
  2293                           
  2294                           ;LEDarray.c: 30:     PORTFbits.RF0 = 1;
  2295   002556  808E               	bsf	142,0,c	;volatile
  2296                           
  2297                           ;LEDarray.c: 31:     PORTBbits.RB0 = 1;
  2298   002558  808A               	bsf	138,0,c	;volatile
  2299                           
  2300                           ;LEDarray.c: 32:     PORTBbits.RB1 = 1;
  2301   00255A  828A               	bsf	138,1,c	;volatile
  2302                           
  2303                           ;LEDarray.c: 34:     LATGbits.LATG0 = 0;
  2304   00255C  907F               	bcf	127,0,c	;volatile
  2305                           
  2306                           ;LEDarray.c: 35:     LATGbits.LATG1 = 0;
  2307   00255E  927F               	bcf	127,1,c	;volatile
  2308                           
  2309                           ;LEDarray.c: 36:     LATAbits.LATA2 = 0;
  2310   002560  9479               	bcf	121,2,c	;volatile
  2311                           
  2312                           ;LEDarray.c: 37:     LATFbits.LATF6 = 0;
  2313   002562  9C7E               	bcf	126,6,c	;volatile
  2314                           
  2315                           ;LEDarray.c: 38:     LATAbits.LATA4 = 0;
  2316   002564  9879               	bcf	121,4,c	;volatile
  2317                           
  2318                           ;LEDarray.c: 39:     LATAbits.LATA5 = 0;
  2319   002566  9A79               	bcf	121,5,c	;volatile
  2320                           
  2321                           ;LEDarray.c: 40:     LATFbits.LATF0 = 0;
  2322   002568  907E               	bcf	126,0,c	;volatile
  2323                           
  2324                           ;LEDarray.c: 41:     LATBbits.LATB0 = 0;
  2325   00256A  907A               	bcf	122,0,c	;volatile
  2326                           
  2327                           ;LEDarray.c: 42:     LATBbits.LATB1 = 0;
  2328   00256C  927A               	bcf	122,1,c	;volatile
  2329   00256E  0012               	return		;funcret
  2330   002570                     __end_of_LEDarray_init:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _LEDarray_disp_bin *****************
  2334 ;; Defined at:
  2335 ;;		line 49 in file "LEDarray.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  number          2   10[BANK0 ] unsigned int 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		None
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2353 ;;Total ram usage:        2 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 4
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;;		_LEDarray_disp_dec
  2361 ;;		_LEDarray_disp_PPM
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text9
  2366   001E14                     __ptext9:
  2367                           	callstack 0
  2368   001E14                     _LEDarray_disp_bin:
  2369                           	callstack 26
  2370   001E14                     
  2371                           ;LEDarray.c: 49: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 50: {;LEDarray.
      +                          c: 54:     if(number & 0b000000001){LATGbits.LATG0 = 1;}else{LATGbits.LATG0 = 0;}
  2372   001E14  0100               	movlb	0	; () banked
  2373   001E16  A16A               	btfss	LEDarray_disp_bin@number& (0+255),0,b
  2374   001E18  EF10  F00F         	goto	u3031
  2375   001E1C  EF12  F00F         	goto	u3030
  2376   001E20                     u3031:
  2377   001E20  EF15  F00F         	goto	l30
  2378   001E24                     u3030:
  2379   001E24                     
  2380                           ; BSR set to: 0
  2381   001E24  807F               	bsf	127,0,c	;volatile
  2382   001E26  EF16  F00F         	goto	l31
  2383   001E2A                     l30:
  2384                           
  2385                           ; BSR set to: 0
  2386   001E2A  907F               	bcf	127,0,c	;volatile
  2387   001E2C                     l31:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;LEDarray.c: 55:     if(number & 0b000000010){LATGbits.LATG1 = 1;}else{LATGbits.LATG1 = 
      +                          0;}
  2391   001E2C  A36A               	btfss	LEDarray_disp_bin@number& (0+255),1,b
  2392   001E2E  EF1B  F00F         	goto	u3041
  2393   001E32  EF1D  F00F         	goto	u3040
  2394   001E36                     u3041:
  2395   001E36  EF20  F00F         	goto	l32
  2396   001E3A                     u3040:
  2397   001E3A                     
  2398                           ; BSR set to: 0
  2399   001E3A  827F               	bsf	127,1,c	;volatile
  2400   001E3C  EF21  F00F         	goto	l33
  2401   001E40                     l32:
  2402                           
  2403                           ; BSR set to: 0
  2404   001E40  927F               	bcf	127,1,c	;volatile
  2405   001E42                     l33:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;LEDarray.c: 56:     if(number & 0b000000100){LATAbits.LATA2 = 1;}else{LATAbits.LATA2 = 
      +                          0;}
  2409   001E42  A56A               	btfss	LEDarray_disp_bin@number& (0+255),2,b
  2410   001E44  EF26  F00F         	goto	u3051
  2411   001E48  EF28  F00F         	goto	u3050
  2412   001E4C                     u3051:
  2413   001E4C  EF2B  F00F         	goto	l34
  2414   001E50                     u3050:
  2415   001E50                     
  2416                           ; BSR set to: 0
  2417   001E50  8479               	bsf	121,2,c	;volatile
  2418   001E52  EF2C  F00F         	goto	l35
  2419   001E56                     l34:
  2420                           
  2421                           ; BSR set to: 0
  2422   001E56  9479               	bcf	121,2,c	;volatile
  2423   001E58                     l35:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;LEDarray.c: 57:     if(number & 0b000001000){LATFbits.LATF6 = 1;}else{LATFbits.LATF6 = 
      +                          0;}
  2427   001E58  A76A               	btfss	LEDarray_disp_bin@number& (0+255),3,b
  2428   001E5A  EF31  F00F         	goto	u3061
  2429   001E5E  EF33  F00F         	goto	u3060
  2430   001E62                     u3061:
  2431   001E62  EF36  F00F         	goto	l36
  2432   001E66                     u3060:
  2433   001E66                     
  2434                           ; BSR set to: 0
  2435   001E66  8C7E               	bsf	126,6,c	;volatile
  2436   001E68  EF37  F00F         	goto	l37
  2437   001E6C                     l36:
  2438                           
  2439                           ; BSR set to: 0
  2440   001E6C  9C7E               	bcf	126,6,c	;volatile
  2441   001E6E                     l37:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;LEDarray.c: 58:     if(number & 0b000010000){LATAbits.LATA4 = 1;}else{LATAbits.LATA4 = 
      +                          0;}
  2445   001E6E  A96A               	btfss	LEDarray_disp_bin@number& (0+255),4,b
  2446   001E70  EF3C  F00F         	goto	u3071
  2447   001E74  EF3E  F00F         	goto	u3070
  2448   001E78                     u3071:
  2449   001E78  EF41  F00F         	goto	l38
  2450   001E7C                     u3070:
  2451   001E7C                     
  2452                           ; BSR set to: 0
  2453   001E7C  8879               	bsf	121,4,c	;volatile
  2454   001E7E  EF42  F00F         	goto	l39
  2455   001E82                     l38:
  2456                           
  2457                           ; BSR set to: 0
  2458   001E82  9879               	bcf	121,4,c	;volatile
  2459   001E84                     l39:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;LEDarray.c: 59:     if(number & 0b000100000){LATAbits.LATA5 = 1;}else{LATAbits.LATA5 = 
      +                          0;}
  2463   001E84  AB6A               	btfss	LEDarray_disp_bin@number& (0+255),5,b
  2464   001E86  EF47  F00F         	goto	u3081
  2465   001E8A  EF49  F00F         	goto	u3080
  2466   001E8E                     u3081:
  2467   001E8E  EF4C  F00F         	goto	l40
  2468   001E92                     u3080:
  2469   001E92                     
  2470                           ; BSR set to: 0
  2471   001E92  8A79               	bsf	121,5,c	;volatile
  2472   001E94  EF4D  F00F         	goto	l41
  2473   001E98                     l40:
  2474                           
  2475                           ; BSR set to: 0
  2476   001E98  9A79               	bcf	121,5,c	;volatile
  2477   001E9A                     l41:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;LEDarray.c: 60:     if(number & 0b001000000){LATFbits.LATF0 = 1;}else{LATFbits.LATF0 = 
      +                          0;}
  2481   001E9A  AD6A               	btfss	LEDarray_disp_bin@number& (0+255),6,b
  2482   001E9C  EF52  F00F         	goto	u3091
  2483   001EA0  EF54  F00F         	goto	u3090
  2484   001EA4                     u3091:
  2485   001EA4  EF57  F00F         	goto	l42
  2486   001EA8                     u3090:
  2487   001EA8                     
  2488                           ; BSR set to: 0
  2489   001EA8  807E               	bsf	126,0,c	;volatile
  2490   001EAA  EF58  F00F         	goto	l43
  2491   001EAE                     l42:
  2492                           
  2493                           ; BSR set to: 0
  2494   001EAE  907E               	bcf	126,0,c	;volatile
  2495   001EB0                     l43:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;LEDarray.c: 61:     if(number & 0b010000000){LATBbits.LATB0 = 1;}else{LATBbits.LATB0 = 
      +                          0;}
  2499   001EB0  AF6A               	btfss	LEDarray_disp_bin@number& (0+255),7,b
  2500   001EB2  EF5D  F00F         	goto	u3101
  2501   001EB6  EF5F  F00F         	goto	u3100
  2502   001EBA                     u3101:
  2503   001EBA  EF62  F00F         	goto	l44
  2504   001EBE                     u3100:
  2505   001EBE                     
  2506                           ; BSR set to: 0
  2507   001EBE  807A               	bsf	122,0,c	;volatile
  2508   001EC0  EF63  F00F         	goto	l45
  2509   001EC4                     l44:
  2510                           
  2511                           ; BSR set to: 0
  2512   001EC4  907A               	bcf	122,0,c	;volatile
  2513   001EC6                     l45:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;LEDarray.c: 62:     if(number & 0b100000000){LATBbits.LATB1 = 1;}else{LATBbits.LATB1 = 
      +                          0;}
  2517   001EC6  A16B               	btfss	(LEDarray_disp_bin@number+1)& (0+255),0,b
  2518   001EC8  EF68  F00F         	goto	u3111
  2519   001ECC  EF6A  F00F         	goto	u3110
  2520   001ED0                     u3111:
  2521   001ED0  EF6D  F00F         	goto	l46
  2522   001ED4                     u3110:
  2523   001ED4                     
  2524                           ; BSR set to: 0
  2525   001ED4  827A               	bsf	122,1,c	;volatile
  2526   001ED6  EF6E  F00F         	goto	l48
  2527   001EDA                     l46:
  2528                           
  2529                           ; BSR set to: 0
  2530   001EDA  927A               	bcf	122,1,c	;volatile
  2531   001EDC                     l48:
  2532                           
  2533                           ; BSR set to: 0
  2534   001EDC  0012               	return		;funcret
  2535   001EDE                     __end_of_LEDarray_disp_bin:
  2536                           	callstack 0
  2537                           
  2538 ;; *************** function _LCD_sendstring *****************
  2539 ;; Defined at:
  2540 ;;		line 136 in file "LCD.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  strlst          2    4[BANK0 ] PTR PTR unsigned char 
  2543 ;;		 -> main@text(16), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  i               2    8[BANK0 ] int 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2555 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;Total ram usage:        6 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 8
  2562 ;; This function calls:
  2563 ;;		_LCD_sendbyte
  2564 ;;		_LCD_setline
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text10
  2571   001EDE                     __ptext10:
  2572                           	callstack 0
  2573   001EDE                     _LCD_sendstring:
  2574                           	callstack 22
  2575   001EDE                     
  2576                           ;LCD.c: 136: void LCD_sendstring(char *strlst[8]);LCD.c: 137: {;LCD.c: 138:         for 
      +                          (int i=0;i<8;i++){
  2577   001EDE  0E00               	movlw	0
  2578   001EE0  0100               	movlb	0	; () banked
  2579   001EE2  6F69               	movwf	(LCD_sendstring@i+1)& (0+255),b
  2580   001EE4  0E00               	movlw	0
  2581   001EE6  6F68               	movwf	LCD_sendstring@i& (0+255),b
  2582   001EE8                     l3193:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;LCD.c: 139:         LCD_setline(i);
  2586   001EE8  5168               	movf	LCD_sendstring@i& (0+255),w,b
  2587   001EEA  EC3B  F00D         	call	_LCD_setline
  2588                           
  2589                           ;LCD.c: 140:             while(*strlst[i] !=0){
  2590   001EEE  EFA0  F00F         	goto	l3197
  2591   001EF2                     l3195:
  2592                           
  2593                           ;LCD.c: 141:                 LCD_sendbyte(*strlst[i]++,1);
  2594   001EF2  0E01               	movlw	1
  2595   001EF4  0100               	movlb	0	; () banked
  2596   001EF6  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2597   001EF8  90D8               	bcf	status,0,c
  2598   001EFA  3568               	rlcf	LCD_sendstring@i& (0+255),w,b
  2599   001EFC  6ED9               	movwf	fsr2l,c
  2600   001EFE  3569               	rlcf	(LCD_sendstring@i+1)& (0+255),w,b
  2601   001F00  6EDA               	movwf	fsr2h,c
  2602   001F02  5164               	movf	LCD_sendstring@strlst& (0+255),w,b
  2603   001F04  26D9               	addwf	fsr2l,f,c
  2604   001F06  5165               	movf	(LCD_sendstring@strlst+1)& (0+255),w,b
  2605   001F08  22DA               	addwfc	fsr2h,f,c
  2606   001F0A  CFDF F066          	movff	indf2,??_LCD_sendstring
  2607   001F0E  0E01               	movlw	1
  2608   001F10  26DE               	addwf	postinc2,f,c
  2609   001F12  CFDF F067          	movff	indf2,??_LCD_sendstring+1
  2610   001F16  0E00               	movlw	0
  2611   001F18  22DD               	addwfc	postdec2,f,c
  2612   001F1A  C066  FFF6         	movff	??_LCD_sendstring,tblptrl
  2613   001F1E  C067  FFF7         	movff	??_LCD_sendstring+1,tblptrh
  2614   001F22  0E00               	movlw	low (__smallconst shr (0+16))
  2615   001F24  6EF8               	movwf	tblptru,c
  2616   001F26  0E0D               	movlw	(high __ramtop+-1)
  2617   001F28  64F7               	cpfsgt	tblptrh,c
  2618   001F2A  D003               	bra	u3147
  2619   001F2C  0008               	tblrd		*
  2620   001F2E  50F5               	movf	tablat,w,c
  2621   001F30  D005               	bra	u3140
  2622   001F32                     u3147:
  2623   001F32  CFF6 FFE9          	movff	tblptrl,fsr0l
  2624   001F36  CFF7 FFEA          	movff	tblptrh,fsr0h
  2625   001F3A  50EF               	movf	indf0,w,c
  2626   001F3C                     u3140:
  2627   001F3C  ECD1  F012         	call	_LCD_sendbyte
  2628   001F40                     l3197:
  2629                           
  2630                           ;LCD.c: 140:             while(*strlst[i] !=0){
  2631   001F40  90D8               	bcf	status,0,c
  2632   001F42  0100               	movlb	0	; () banked
  2633   001F44  3568               	rlcf	LCD_sendstring@i& (0+255),w,b
  2634   001F46  6ED9               	movwf	fsr2l,c
  2635   001F48  3569               	rlcf	(LCD_sendstring@i+1)& (0+255),w,b
  2636   001F4A  6EDA               	movwf	fsr2h,c
  2637   001F4C  5164               	movf	LCD_sendstring@strlst& (0+255),w,b
  2638   001F4E  26D9               	addwf	fsr2l,f,c
  2639   001F50  5165               	movf	(LCD_sendstring@strlst+1)& (0+255),w,b
  2640   001F52  22DA               	addwfc	fsr2h,f,c
  2641   001F54  CFDE FFF6          	movff	postinc2,tblptrl
  2642   001F58  CFDE FFF7          	movff	postinc2,tblptrh
  2643   001F5C  0E0D               	movlw	(high __ramtop+-1)
  2644   001F5E  64F7               	cpfsgt	tblptrh,c
  2645   001F60  D003               	bra	u3157
  2646   001F62  0008               	tblrd		*
  2647   001F64  50F5               	movf	tablat,w,c
  2648   001F66  D005               	bra	u3150
  2649   001F68                     u3157:
  2650   001F68  CFF6 FFE9          	movff	tblptrl,fsr0l
  2651   001F6C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2652   001F70  50EF               	movf	indf0,w,c
  2653   001F72                     u3150:
  2654   001F72  0900               	iorlw	0
  2655   001F74  A4D8               	btfss	status,2,c
  2656   001F76  EFBF  F00F         	goto	u3161
  2657   001F7A  EFC1  F00F         	goto	u3160
  2658   001F7E                     u3161:
  2659   001F7E  EF79  F00F         	goto	l3195
  2660   001F82                     u3160:
  2661   001F82                     
  2662                           ;LCD.c: 143:     }
  2663   001F82  0100               	movlb	0	; () banked
  2664   001F84  4B68               	infsnz	LCD_sendstring@i& (0+255),f,b
  2665   001F86  2B69               	incf	(LCD_sendstring@i+1)& (0+255),f,b
  2666   001F88                     
  2667                           ; BSR set to: 0
  2668   001F88  BF69               	btfsc	(LCD_sendstring@i+1)& (0+255),7,b
  2669   001F8A  EFD0  F00F         	goto	u3171
  2670   001F8E  5169               	movf	(LCD_sendstring@i+1)& (0+255),w,b
  2671   001F90  E109               	bnz	u3170
  2672   001F92  0E08               	movlw	8
  2673   001F94  5D68               	subwf	LCD_sendstring@i& (0+255),w,b
  2674   001F96  A0D8               	btfss	status,0,c
  2675   001F98  EFD0  F00F         	goto	u3171
  2676   001F9C  EFD2  F00F         	goto	u3170
  2677   001FA0                     u3171:
  2678   001FA0  EF74  F00F         	goto	l3193
  2679   001FA4                     u3170:
  2680   001FA4                     
  2681                           ; BSR set to: 0
  2682   001FA4  0012               	return		;funcret
  2683   001FA6                     __end_of_LCD_sendstring:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _LCD_setline *****************
  2687 ;; Defined at:
  2688 ;;		line 112 in file "LCD.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  line            1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  line            1    3[BANK0 ] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;Total ram usage:        1 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 7
  2709 ;; This function calls:
  2710 ;;		_LCD_sendbyte
  2711 ;; This function is called by:
  2712 ;;		_LCD_sendstring
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text11
  2717   001A76                     __ptext11:
  2718                           	callstack 0
  2719   001A76                     _LCD_setline:
  2720                           	callstack 22
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;incstack = 0
  2724                           ;LCD_setline@line stored from wreg
  2725   001A76  0100               	movlb	0	; () banked
  2726   001A78  6F63               	movwf	LCD_setline@line& (0+255),b
  2727   001A7A                     
  2728                           ;LCD.c: 112: void LCD_setline (char line);LCD.c: 113: {;LCD.c: 114:     if(line == 0){
  2729   001A7A  0100               	movlb	0	; () banked
  2730   001A7C  5163               	movf	LCD_setline@line& (0+255),w,b
  2731   001A7E  A4D8               	btfss	status,2,c
  2732   001A80  EF44  F00D         	goto	u2901
  2733   001A84  EF46  F00D         	goto	u2900
  2734   001A88                     u2901:
  2735   001A88  EF4D  F00D         	goto	l2999
  2736   001A8C                     u2900:
  2737   001A8C                     
  2738                           ; BSR set to: 0
  2739                           ;LCD.c: 115:         LCD_sendbyte(0x80,0);
  2740   001A8C  0E00               	movlw	0
  2741   001A8E  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2742   001A90  0E80               	movlw	128
  2743   001A92  ECD1  F012         	call	_LCD_sendbyte
  2744                           
  2745                           ;LCD.c: 116:     }else if(line == 1){
  2746   001A96  EFBC  F00D         	goto	l329
  2747   001A9A                     l2999:
  2748                           
  2749                           ; BSR set to: 0
  2750   001A9A  0563               	decf	LCD_setline@line& (0+255),w,b
  2751   001A9C  A4D8               	btfss	status,2,c
  2752   001A9E  EF53  F00D         	goto	u2911
  2753   001AA2  EF55  F00D         	goto	u2910
  2754   001AA6                     u2911:
  2755   001AA6  EF5C  F00D         	goto	l3003
  2756   001AAA                     u2910:
  2757   001AAA                     
  2758                           ; BSR set to: 0
  2759                           ;LCD.c: 117:         LCD_sendbyte(0x86,0);
  2760   001AAA  0E00               	movlw	0
  2761   001AAC  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2762   001AAE  0E86               	movlw	134
  2763   001AB0  ECD1  F012         	call	_LCD_sendbyte
  2764                           
  2765                           ;LCD.c: 118:     }else if(line == 2){
  2766   001AB4  EFBC  F00D         	goto	l329
  2767   001AB8                     l3003:
  2768                           
  2769                           ; BSR set to: 0
  2770   001AB8  0E02               	movlw	2
  2771   001ABA  1963               	xorwf	LCD_setline@line& (0+255),w,b
  2772   001ABC  A4D8               	btfss	status,2,c
  2773   001ABE  EF63  F00D         	goto	u2921
  2774   001AC2  EF65  F00D         	goto	u2920
  2775   001AC6                     u2921:
  2776   001AC6  EF6C  F00D         	goto	l3007
  2777   001ACA                     u2920:
  2778   001ACA                     
  2779                           ; BSR set to: 0
  2780                           ;LCD.c: 119:         LCD_sendbyte(0x89,0);
  2781   001ACA  0E00               	movlw	0
  2782   001ACC  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2783   001ACE  0E89               	movlw	137
  2784   001AD0  ECD1  F012         	call	_LCD_sendbyte
  2785                           
  2786                           ;LCD.c: 120:     }else if(line == 3){
  2787   001AD4  EFBC  F00D         	goto	l329
  2788   001AD8                     l3007:
  2789                           
  2790                           ; BSR set to: 0
  2791   001AD8  0E03               	movlw	3
  2792   001ADA  1963               	xorwf	LCD_setline@line& (0+255),w,b
  2793   001ADC  A4D8               	btfss	status,2,c
  2794   001ADE  EF73  F00D         	goto	u2931
  2795   001AE2  EF75  F00D         	goto	u2930
  2796   001AE6                     u2931:
  2797   001AE6  EF7C  F00D         	goto	l3011
  2798   001AEA                     u2930:
  2799   001AEA                     
  2800                           ; BSR set to: 0
  2801                           ;LCD.c: 121:         LCD_sendbyte(0x8C,0);
  2802   001AEA  0E00               	movlw	0
  2803   001AEC  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2804   001AEE  0E8C               	movlw	140
  2805   001AF0  ECD1  F012         	call	_LCD_sendbyte
  2806                           
  2807                           ;LCD.c: 122:     }else if(line == 4){
  2808   001AF4  EFBC  F00D         	goto	l329
  2809   001AF8                     l3011:
  2810                           
  2811                           ; BSR set to: 0
  2812   001AF8  0E04               	movlw	4
  2813   001AFA  1963               	xorwf	LCD_setline@line& (0+255),w,b
  2814   001AFC  A4D8               	btfss	status,2,c
  2815   001AFE  EF83  F00D         	goto	u2941
  2816   001B02  EF85  F00D         	goto	u2940
  2817   001B06                     u2941:
  2818   001B06  EF8C  F00D         	goto	l3015
  2819   001B0A                     u2940:
  2820   001B0A                     
  2821                           ; BSR set to: 0
  2822                           ;LCD.c: 123:         LCD_sendbyte(0xC0,0);
  2823   001B0A  0E00               	movlw	0
  2824   001B0C  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2825   001B0E  0EC0               	movlw	192
  2826   001B10  ECD1  F012         	call	_LCD_sendbyte
  2827                           
  2828                           ;LCD.c: 124:     }else if(line == 5){
  2829   001B14  EFBC  F00D         	goto	l329
  2830   001B18                     l3015:
  2831                           
  2832                           ; BSR set to: 0
  2833   001B18  0E05               	movlw	5
  2834   001B1A  1963               	xorwf	LCD_setline@line& (0+255),w,b
  2835   001B1C  A4D8               	btfss	status,2,c
  2836   001B1E  EF93  F00D         	goto	u2951
  2837   001B22  EF95  F00D         	goto	u2950
  2838   001B26                     u2951:
  2839   001B26  EF9C  F00D         	goto	l3019
  2840   001B2A                     u2950:
  2841   001B2A                     
  2842                           ; BSR set to: 0
  2843                           ;LCD.c: 125:         LCD_sendbyte(0xC3,0);
  2844   001B2A  0E00               	movlw	0
  2845   001B2C  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2846   001B2E  0EC3               	movlw	195
  2847   001B30  ECD1  F012         	call	_LCD_sendbyte
  2848                           
  2849                           ;LCD.c: 126:     }else if(line == 6){
  2850   001B34  EFBC  F00D         	goto	l329
  2851   001B38                     l3019:
  2852                           
  2853                           ; BSR set to: 0
  2854   001B38  0E06               	movlw	6
  2855   001B3A  1963               	xorwf	LCD_setline@line& (0+255),w,b
  2856   001B3C  A4D8               	btfss	status,2,c
  2857   001B3E  EFA3  F00D         	goto	u2961
  2858   001B42  EFA5  F00D         	goto	u2960
  2859   001B46                     u2961:
  2860   001B46  EFAC  F00D         	goto	l3023
  2861   001B4A                     u2960:
  2862   001B4A                     
  2863                           ; BSR set to: 0
  2864                           ;LCD.c: 127:         LCD_sendbyte(0xC6,0);
  2865   001B4A  0E00               	movlw	0
  2866   001B4C  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2867   001B4E  0EC6               	movlw	198
  2868   001B50  ECD1  F012         	call	_LCD_sendbyte
  2869                           
  2870                           ;LCD.c: 128:     }else if(line == 7){
  2871   001B54  EFBC  F00D         	goto	l329
  2872   001B58                     l3023:
  2873                           
  2874                           ; BSR set to: 0
  2875   001B58  0E07               	movlw	7
  2876   001B5A  1963               	xorwf	LCD_setline@line& (0+255),w,b
  2877   001B5C  A4D8               	btfss	status,2,c
  2878   001B5E  EFB3  F00D         	goto	u2971
  2879   001B62  EFB5  F00D         	goto	u2970
  2880   001B66                     u2971:
  2881   001B66  EFBC  F00D         	goto	l323
  2882   001B6A                     u2970:
  2883   001B6A                     
  2884                           ; BSR set to: 0
  2885                           ;LCD.c: 129:         LCD_sendbyte(0xCD,0);
  2886   001B6A  0E00               	movlw	0
  2887   001B6C  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  2888   001B6E  0ECD               	movlw	205
  2889   001B70  ECD1  F012         	call	_LCD_sendbyte
  2890   001B74  EFBC  F00D         	goto	l329
  2891   001B78                     l323:
  2892   001B78                     l329:
  2893   001B78  0012               	return		;funcret
  2894   001B7A                     __end_of_LCD_setline:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _LCD_Init *****************
  2898 ;; Defined at:
  2899 ;;		line 52 in file "LCD.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;Total ram usage:        2 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 7
  2920 ;; This function calls:
  2921 ;;		_LCD_sendbyte
  2922 ;;		_LCD_sendnibble
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text12
  2929   002064                     __ptext12:
  2930                           	callstack 0
  2931   002064                     _LCD_Init:
  2932                           	callstack 23
  2933   002064                     
  2934                           ;LCD.c: 57:     TRISCbits.TRISC2 = 0;
  2935   002064  9483               	bcf	131,2,c	;volatile
  2936                           
  2937                           ;LCD.c: 58:     TRISCbits.TRISC6 = 0;
  2938   002066  9C83               	bcf	131,6,c	;volatile
  2939                           
  2940                           ;LCD.c: 59:     TRISBbits.TRISB3 = 0;
  2941   002068  9682               	bcf	130,3,c	;volatile
  2942                           
  2943                           ;LCD.c: 60:     TRISBbits.TRISB2 = 0;
  2944   00206A  9482               	bcf	130,2,c	;volatile
  2945                           
  2946                           ;LCD.c: 61:     TRISEbits.TRISE3 = 0;
  2947   00206C  9685               	bcf	133,3,c	;volatile
  2948                           
  2949                           ;LCD.c: 62:     TRISEbits.TRISE1 = 0;
  2950   00206E  9285               	bcf	133,1,c	;volatile
  2951                           
  2952                           ;LCD.c: 65:     LATCbits.LATC6 = 0;
  2953   002070  9C7B               	bcf	123,6,c	;volatile
  2954                           
  2955                           ;LCD.c: 66:     LATCbits.LATC2 = 0;
  2956   002072  947B               	bcf	123,2,c	;volatile
  2957                           
  2958                           ;LCD.c: 67:     LATBbits.LATB3 = 0;
  2959   002074  967A               	bcf	122,3,c	;volatile
  2960                           
  2961                           ;LCD.c: 68:     LATBbits.LATB2 = 0;
  2962   002076  947A               	bcf	122,2,c	;volatile
  2963                           
  2964                           ;LCD.c: 69:     LATEbits.LATE3 = 0;
  2965   002078  967D               	bcf	125,3,c	;volatile
  2966                           
  2967                           ;LCD.c: 70:     LATEbits.LATE1 = 0;
  2968   00207A  927D               	bcf	125,1,c	;volatile
  2969   00207C                     
  2970                           ;LCD.c: 72:     _delay((unsigned long)((60)*(64000000/4000.0)));
  2971   00207C  0E05               	movlw	5
  2972   00207E  0100               	movlb	0	; () banked
  2973   002080  6F64               	movwf	(??_LCD_Init+1)& (0+255),b
  2974   002082  0EDF               	movlw	223
  2975   002084  6F63               	movwf	??_LCD_Init& (0+255),b
  2976   002086  0EBB               	movlw	187
  2977   002088                     u3417:
  2978   002088  2EE8               	decfsz	wreg,f,c
  2979   00208A  D7FE               	bra	u3417
  2980   00208C  2F63               	decfsz	??_LCD_Init& (0+255),f,b
  2981   00208E  D7FC               	bra	u3417
  2982   002090  2F64               	decfsz	(??_LCD_Init+1)& (0+255),f,b
  2983   002092  D7FA               	bra	u3417
  2984   002094  D000               	nop2	
  2985   002096                     
  2986                           ;LCD.c: 74:     LCD_sendnibble(0b0011);
  2987   002096  0E03               	movlw	3
  2988   002098  EC78  F011         	call	_LCD_sendnibble
  2989   00209C                     
  2990                           ;LCD.c: 75:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2991   00209C  0ED5               	movlw	213
  2992   00209E                     u3427:
  2993   00209E  2EE8               	decfsz	wreg,f,c
  2994   0020A0  D7FE               	bra	u3427
  2995   0020A2  F000               	nop	
  2996                           
  2997                           ;LCD.c: 77:     LCD_sendnibble(0b0010);
  2998   0020A4  0E02               	movlw	2
  2999   0020A6  EC78  F011         	call	_LCD_sendnibble
  3000   0020AA                     
  3001                           ;LCD.c: 78:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3002   0020AA  0ED5               	movlw	213
  3003   0020AC                     u3437:
  3004   0020AC  2EE8               	decfsz	wreg,f,c
  3005   0020AE  D7FE               	bra	u3437
  3006   0020B0  F000               	nop	
  3007   0020B2                     
  3008                           ;LCD.c: 80:     LCD_sendbyte(0b00101000,0);
  3009   0020B2  0E00               	movlw	0
  3010   0020B4  0100               	movlb	0	; () banked
  3011   0020B6  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3012   0020B8  0E28               	movlw	40
  3013   0020BA  ECD1  F012         	call	_LCD_sendbyte
  3014   0020BE                     
  3015                           ;LCD.c: 81:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3016   0020BE  0ED5               	movlw	213
  3017   0020C0                     u3447:
  3018   0020C0  2EE8               	decfsz	wreg,f,c
  3019   0020C2  D7FE               	bra	u3447
  3020   0020C4  F000               	nop	
  3021   0020C6                     
  3022                           ;LCD.c: 83:     LCD_sendbyte(0b00101000,0);
  3023   0020C6  0E00               	movlw	0
  3024   0020C8  0100               	movlb	0	; () banked
  3025   0020CA  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3026   0020CC  0E28               	movlw	40
  3027   0020CE  ECD1  F012         	call	_LCD_sendbyte
  3028   0020D2                     
  3029                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3030   0020D2  0ED5               	movlw	213
  3031   0020D4                     u3457:
  3032   0020D4  2EE8               	decfsz	wreg,f,c
  3033   0020D6  D7FE               	bra	u3457
  3034   0020D8  F000               	nop	
  3035   0020DA                     
  3036                           ;LCD.c: 86:     LCD_sendbyte(0b00000001,0);
  3037   0020DA  0E00               	movlw	0
  3038   0020DC  0100               	movlb	0	; () banked
  3039   0020DE  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3040   0020E0  0E01               	movlw	1
  3041   0020E2  ECD1  F012         	call	_LCD_sendbyte
  3042   0020E6                     
  3043                           ;LCD.c: 87:     _delay((unsigned long)((2)*(64000000/4000.0)));
  3044   0020E6  0E2A               	movlw	42
  3045   0020E8  0100               	movlb	0	; () banked
  3046   0020EA  6F63               	movwf	??_LCD_Init& (0+255),b
  3047   0020EC  0E8D               	movlw	141
  3048   0020EE                     u3467:
  3049   0020EE  2EE8               	decfsz	wreg,f,c
  3050   0020F0  D7FE               	bra	u3467
  3051   0020F2  2F63               	decfsz	??_LCD_Init& (0+255),f,b
  3052   0020F4  D7FC               	bra	u3467
  3053   0020F6  D000               	nop2	
  3054   0020F8                     
  3055                           ;LCD.c: 89:     LCD_sendbyte(0b00000110,0);
  3056   0020F8  0E00               	movlw	0
  3057   0020FA  0100               	movlb	0	; () banked
  3058   0020FC  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3059   0020FE  0E06               	movlw	6
  3060   002100  ECD1  F012         	call	_LCD_sendbyte
  3061   002104                     
  3062                           ;LCD.c: 91:     LCD_sendbyte(0b00001110,0);
  3063   002104  0E00               	movlw	0
  3064   002106  0100               	movlb	0	; () banked
  3065   002108  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3066   00210A  0E0E               	movlw	14
  3067   00210C  ECD1  F012         	call	_LCD_sendbyte
  3068   002110                     
  3069                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  3070   002110  0E00               	movlw	0
  3071   002112  0100               	movlb	0	; () banked
  3072   002114  6F61               	movwf	LCD_sendbyte@type& (0+255),b
  3073   002116  0E0C               	movlw	12
  3074   002118  ECD1  F012         	call	_LCD_sendbyte
  3075   00211C  0012               	return		;funcret
  3076   00211E                     __end_of_LCD_Init:
  3077                           	callstack 0
  3078                           
  3079 ;; *************** function _LCD_sendbyte *****************
  3080 ;; Defined at:
  3081 ;;		line 39 in file "LCD.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  Byte            1    wreg     unsigned char 
  3084 ;;  type            1    1[BANK0 ] unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  Byte            1    2[BANK0 ] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3096 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;Total ram usage:        2 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; Hardware stack levels required when called: 6
  3103 ;; This function calls:
  3104 ;;		_LCD_sendnibble
  3105 ;; This function is called by:
  3106 ;;		_LCD_Init
  3107 ;;		_LCD_setline
  3108 ;;		_LCD_sendstring
  3109 ;;		_LCD_clear
  3110 ;;		_LCD_scroll
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text13
  3115   0025A2                     __ptext13:
  3116                           	callstack 0
  3117   0025A2                     _LCD_sendbyte:
  3118                           	callstack 22
  3119                           
  3120                           ;incstack = 0
  3121                           ;LCD_sendbyte@Byte stored from wreg
  3122   0025A2  0100               	movlb	0	; () banked
  3123   0025A4  6F62               	movwf	LCD_sendbyte@Byte& (0+255),b
  3124   0025A6                     
  3125                           ;LCD.c: 39: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 40: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  3126   0025A6  0100               	movlb	0	; () banked
  3127   0025A8  B161               	btfsc	LCD_sendbyte@type& (0+255),0,b
  3128   0025AA  D002               	bra	u2885
  3129   0025AC  9C7B               	bcf	123,6,c	;volatile
  3130   0025AE  D001               	bra	u2886
  3131   0025B0                     u2885:
  3132   0025B0  8C7B               	bsf	123,6,c	;volatile
  3133   0025B2                     u2886:
  3134   0025B2                     
  3135                           ;LCD.c: 43:     LCD_sendnibble(Byte >> 4);
  3136   0025B2  0100               	movlb	0	; () banked
  3137   0025B4  3962               	swapf	LCD_sendbyte@Byte& (0+255),w,b
  3138   0025B6  0B0F               	andlw	15
  3139   0025B8  EC78  F011         	call	_LCD_sendnibble
  3140   0025BC                     
  3141                           ;LCD.c: 44:     LCD_sendnibble(Byte);
  3142   0025BC  0100               	movlb	0	; () banked
  3143   0025BE  5162               	movf	LCD_sendbyte@Byte& (0+255),w,b
  3144   0025C0  EC78  F011         	call	_LCD_sendnibble
  3145   0025C4                     
  3146                           ;LCD.c: 46:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3147   0025C4  0EA0               	movlw	160
  3148   0025C6                     u3477:
  3149   0025C6  D000               	nop2	
  3150   0025C8  2EE8               	decfsz	wreg,f,c
  3151   0025CA  D7FD               	bra	u3477
  3152   0025CC  0012               	return		;funcret
  3153   0025CE                     __end_of_LCD_sendbyte:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _LCD_sendnibble *****************
  3157 ;; Defined at:
  3158 ;;		line 21 in file "LCD.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  number          1    wreg     unsigned char 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  number          1    0[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;Total ram usage:        1 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 5
  3179 ;; This function calls:
  3180 ;;		_LCD_E_TOG
  3181 ;; This function is called by:
  3182 ;;		_LCD_sendbyte
  3183 ;;		_LCD_Init
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text14
  3188   0022F0                     __ptext14:
  3189                           	callstack 0
  3190   0022F0                     _LCD_sendnibble:
  3191                           	callstack 22
  3192                           
  3193                           ;incstack = 0
  3194                           ;LCD_sendnibble@number stored from wreg
  3195   0022F0  0100               	movlb	0	; () banked
  3196   0022F2  6F60               	movwf	LCD_sendnibble@number& (0+255),b
  3197   0022F4                     
  3198                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 25:     if(num
      +                          ber & 0b0001){ LATBbits.LATB3 = 1;}else{LATBbits.LATB3 = 0;}
  3199   0022F4  0100               	movlb	0	; () banked
  3200   0022F6  A160               	btfss	LCD_sendnibble@number& (0+255),0,b
  3201   0022F8  EF80  F011         	goto	u2811
  3202   0022FC  EF82  F011         	goto	u2810
  3203   002300                     u2811:
  3204   002300  EF85  F011         	goto	l294
  3205   002304                     u2810:
  3206   002304                     
  3207                           ; BSR set to: 0
  3208   002304  867A               	bsf	122,3,c	;volatile
  3209   002306  EF86  F011         	goto	l2925
  3210   00230A                     l294:
  3211                           
  3212                           ; BSR set to: 0
  3213   00230A  967A               	bcf	122,3,c	;volatile
  3214   00230C                     l2925:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;LCD.c: 26:     if(number & 0b0010){ LATBbits.LATB2 = 1;}else{LATBbits.LATB2 = 0;}
  3218   00230C  A360               	btfss	LCD_sendnibble@number& (0+255),1,b
  3219   00230E  EF8B  F011         	goto	u2821
  3220   002312  EF8D  F011         	goto	u2820
  3221   002316                     u2821:
  3222   002316  EF90  F011         	goto	l296
  3223   00231A                     u2820:
  3224   00231A                     
  3225                           ; BSR set to: 0
  3226   00231A  847A               	bsf	122,2,c	;volatile
  3227   00231C  EF91  F011         	goto	l2929
  3228   002320                     l296:
  3229                           
  3230                           ; BSR set to: 0
  3231   002320  947A               	bcf	122,2,c	;volatile
  3232   002322                     l2929:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;LCD.c: 27:     if(number & 0b0100){ LATEbits.LATE3 = 1;}else{LATEbits.LATE3 = 0;}
  3236   002322  A560               	btfss	LCD_sendnibble@number& (0+255),2,b
  3237   002324  EF96  F011         	goto	u2831
  3238   002328  EF98  F011         	goto	u2830
  3239   00232C                     u2831:
  3240   00232C  EF9B  F011         	goto	l298
  3241   002330                     u2830:
  3242   002330                     
  3243                           ; BSR set to: 0
  3244   002330  867D               	bsf	125,3,c	;volatile
  3245   002332  EF9C  F011         	goto	l2933
  3246   002336                     l298:
  3247                           
  3248                           ; BSR set to: 0
  3249   002336  967D               	bcf	125,3,c	;volatile
  3250   002338                     l2933:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;LCD.c: 28:     if(number & 0b1000){ LATEbits.LATE1 = 1;}else{LATEbits.LATE1 = 0;}
  3254   002338  A760               	btfss	LCD_sendnibble@number& (0+255),3,b
  3255   00233A  EFA1  F011         	goto	u2841
  3256   00233E  EFA3  F011         	goto	u2840
  3257   002342                     u2841:
  3258   002342  EFA6  F011         	goto	l300
  3259   002346                     u2840:
  3260   002346                     
  3261                           ; BSR set to: 0
  3262   002346  827D               	bsf	125,1,c	;volatile
  3263   002348  EFA7  F011         	goto	l2937
  3264   00234C                     l300:
  3265                           
  3266                           ; BSR set to: 0
  3267   00234C  927D               	bcf	125,1,c	;volatile
  3268   00234E                     l2937:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;LCD.c: 30:     LCD_E_TOG();
  3272   00234E  EC44  F013         	call	_LCD_E_TOG	;wreg free
  3273   002352                     
  3274                           ;LCD.c: 31:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  3275   002352  0E1A               	movlw	26
  3276   002354                     u3487:
  3277   002354  2EE8               	decfsz	wreg,f,c
  3278   002356  D7FE               	bra	u3487
  3279   002358  D000               	nop2	
  3280   00235A  0012               	return		;funcret
  3281   00235C                     __end_of_LCD_sendnibble:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _LCD_E_TOG *****************
  3285 ;; Defined at:
  3286 ;;		line 8 in file "LCD.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 4
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_LCD_sendnibble
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text15
  3315   002688                     __ptext15:
  3316                           	callstack 0
  3317   002688                     _LCD_E_TOG:
  3318                           	callstack 22
  3319   002688                     
  3320                           ;LCD.c: 11:     LATCbits.LATC2 = 1;
  3321   002688  847B               	bsf	123,2,c	;volatile
  3322   00268A                     
  3323                           ;LCD.c: 12:     _delay((unsigned long)((2)*(64000000/4000000.0)));
  3324   00268A  0E0A               	movlw	10
  3325   00268C                     u3497:
  3326   00268C  2EE8               	decfsz	wreg,f,c
  3327   00268E  D7FE               	bra	u3497
  3328   002690  D000               	nop2	
  3329   002692                     
  3330                           ;LCD.c: 14:     LATCbits.LATC2 = 0;
  3331   002692  947B               	bcf	123,2,c	;volatile
  3332   002694  0012               	return		;funcret
  3333   002696                     __end_of_LCD_E_TOG:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _Interrupts_init *****************
  3337 ;; Defined at:
  3338 ;;		line 9 in file "interrupts.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		None
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 4
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text16
  3367   002678                     __ptext16:
  3368                           	callstack 0
  3369   002678                     _Interrupts_init:
  3370                           	callstack 26
  3371   002678                     
  3372                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  3373   002678  010E               	movlb	14	; () banked
  3374   00267A  812B               	bsf	43,0,b	;volatile
  3375                           
  3376                           ;interrupts.c: 14:     INTCONbits.IPEN = 1;
  3377   00267C  8AF2               	bsf	242,5,c	;volatile
  3378                           
  3379                           ;interrupts.c: 15:     INTCONbits.GIEL=1;
  3380   00267E  8CF2               	bsf	242,6,c	;volatile
  3381                           
  3382                           ;interrupts.c: 16:     IPR2bits.C1IP=1;
  3383   002680  8121               	bsf	33,0,b	;volatile
  3384                           
  3385                           ;interrupts.c: 17:     PIE0bits.TMR0IE=1;
  3386   002682  8B29               	bsf	41,5,b	;volatile
  3387                           
  3388                           ;interrupts.c: 18:     INTCONbits.GIEH=1;
  3389   002684  8EF2               	bsf	242,7,c	;volatile
  3390   002686                     
  3391                           ; BSR set to: 14
  3392   002686  0012               	return		;funcret
  3393   002688                     __end_of_Interrupts_init:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _Comp1_init *****************
  3397 ;; Defined at:
  3398 ;;		line 22 in file "comparator.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 5
  3419 ;; This function calls:
  3420 ;;		_DAC_init
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text17
  3427   0025CE                     __ptext17:
  3428                           	callstack 0
  3429   0025CE                     _Comp1_init:
  3430                           	callstack 25
  3431   0025CE                     
  3432                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  3433   0025CE  8E86               	bsf	134,7,c	;volatile
  3434   0025D0                     
  3435                           ;comparator.c: 25:     CM1NCHbits.NCH=0b011;
  3436   0025D0  010E               	movlb	14	; () banked
  3437   0025D2  51D2               	movf	210,w,b	;volatile
  3438   0025D4  0BF8               	andlw	-8
  3439   0025D6  0903               	iorlw	3
  3440   0025D8  6FD2               	movwf	210,b	;volatile
  3441                           
  3442                           ;comparator.c: 26:     CM1PCHbits.PCH=0b101;
  3443   0025DA  51D3               	movf	211,w,b	;volatile
  3444   0025DC  0BF8               	andlw	-8
  3445   0025DE  0905               	iorlw	5
  3446   0025E0  6FD3               	movwf	211,b	;volatile
  3447   0025E2                     
  3448                           ; BSR set to: 14
  3449                           ;comparator.c: 27:     CM1CON0bits.HYS=1;
  3450   0025E2  83D0               	bsf	208,1,b	;volatile
  3451   0025E4                     
  3452                           ; BSR set to: 14
  3453                           ;comparator.c: 28:     CM1CON0bits.POL=1;
  3454   0025E4  89D0               	bsf	208,4,b	;volatile
  3455   0025E6                     
  3456                           ; BSR set to: 14
  3457                           ;comparator.c: 29:     CM1CON1bits.INTP=1;
  3458   0025E6  83D1               	bsf	209,1,b	;volatile
  3459   0025E8                     
  3460                           ; BSR set to: 14
  3461                           ;comparator.c: 30:     DAC_init();
  3462   0025E8  EC32  F013         	call	_DAC_init	;wreg free
  3463   0025EC                     
  3464                           ;comparator.c: 31:     CM1CON0bits.EN=1;
  3465   0025EC  010E               	movlb	14	; () banked
  3466   0025EE  8FD0               	bsf	208,7,b	;volatile
  3467   0025F0                     
  3468                           ; BSR set to: 14
  3469   0025F0  0012               	return		;funcret
  3470   0025F2                     __end_of_Comp1_init:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _DAC_init *****************
  3474 ;; Defined at:
  3475 ;;		line 7 in file "comparator.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 4
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_Comp1_init
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text18
  3504   002664                     __ptext18:
  3505                           	callstack 0
  3506   002664                     _DAC_init:
  3507                           	callstack 25
  3508   002664                     
  3509                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  3510   002664  0EF3               	movlw	-13
  3511   002666  010E               	movlb	14	; () banked
  3512   002668  17C6               	andwf	198,f,b	;volatile
  3513   00266A                     
  3514                           ; BSR set to: 14
  3515                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  3516   00266A  91C6               	bcf	198,0,b	;volatile
  3517                           
  3518                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=20;
  3519   00266C  51C7               	movf	199,w,b	;volatile
  3520   00266E  0BE0               	andlw	-32
  3521   002670  0914               	iorlw	20
  3522   002672  6FC7               	movwf	199,b	;volatile
  3523   002674                     
  3524                           ; BSR set to: 14
  3525                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  3526   002674  8FC6               	bsf	198,7,b	;volatile
  3527   002676                     
  3528                           ; BSR set to: 14
  3529   002676  0012               	return		;funcret
  3530   002678                     __end_of_DAC_init:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _ADC_init *****************
  3534 ;; Defined at:
  3535 ;;		line 9 in file "ADC.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;Total ram usage:        0 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 4
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text19
  3564   002632                     __ptext19:
  3565                           	callstack 0
  3566   002632                     _ADC_init:
  3567                           	callstack 26
  3568   002632                     
  3569                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  3570   002632  8681               	bsf	129,3,c	;volatile
  3571                           
  3572                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  3573   002634  010E               	movlb	14	; () banked
  3574   002636  8792               	bsf	146,3,b	;volatile
  3575                           
  3576                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  3577   002638  010F               	movlb	15	; () banked
  3578   00263A  9958               	bcf	88,4,b	;volatile
  3579   00263C                     
  3580                           ; BSR set to: 15
  3581                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  3582   00263C  0EFC               	movlw	-4
  3583   00263E  1758               	andwf	88,f,b	;volatile
  3584                           
  3585                           ;ADC.c: 17:     ADPCH=0b11;
  3586   002640  0E03               	movlw	3
  3587   002642  6F5F               	movwf	95,b	;volatile
  3588   002644                     
  3589                           ; BSR set to: 15
  3590                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  3591   002644  9460               	bcf	96,2,c	;volatile
  3592   002646                     
  3593                           ; BSR set to: 15
  3594                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  3595   002646  8860               	bsf	96,4,c	;volatile
  3596   002648                     
  3597                           ; BSR set to: 15
  3598                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  3599   002648  8E60               	bsf	96,7,c	;volatile
  3600   00264A                     
  3601                           ; BSR set to: 15
  3602   00264A  0012               	return		;funcret
  3603   00264C                     __end_of_ADC_init:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function _ADC_getval *****************
  3607 ;; Defined at:
  3608 ;;		line 23 in file "ADC.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  tmpval          2    2[BANK0 ] unsigned int 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  2    0[BANK0 ] unsigned int 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;Total ram usage:        4 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 4
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text20
  3637   002570                     __ptext20:
  3638                           	callstack 0
  3639   002570                     _ADC_getval:
  3640                           	callstack 26
  3641   002570                     
  3642                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  3643   002570  8060               	bsf	96,0,c	;volatile
  3644   002572                     l269:
  3645   002572  B060               	btfsc	96,0,c	;volatile
  3646   002574  EFBE  F012         	goto	u3131
  3647   002578  EFC0  F012         	goto	u3130
  3648   00257C                     u3131:
  3649   00257C  EFB9  F012         	goto	l269
  3650   002580                     u3130:
  3651   002580                     
  3652                           ;ADC.c: 31:     tmpval = ADRESH;
  3653   002580  CF64 F062          	movff	3940,ADC_getval@tmpval	;volatile
  3654   002584  0100               	movlb	0	; () banked
  3655   002586  6B63               	clrf	(ADC_getval@tmpval+1)& (0+255),b
  3656   002588                     
  3657                           ; BSR set to: 0
  3658                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  3659   002588  5162               	movf	ADC_getval@tmpval& (0+255),w,b
  3660   00258A  08FF               	sublw	255
  3661   00258C  6F62               	movwf	ADC_getval@tmpval& (0+255),b
  3662   00258E  5163               	movf	(ADC_getval@tmpval+1)& (0+255),w,b
  3663   002590  A0D8               	btfss	status,0,c
  3664   002592  2AE8               	incf	wreg,f,c
  3665   002594  0800               	sublw	0
  3666   002596  6F63               	movwf	(ADC_getval@tmpval+1)& (0+255),b
  3667   002598                     
  3668                           ; BSR set to: 0
  3669                           ;ADC.c: 37:     return tmpval;
  3670   002598  C062  F060         	movff	ADC_getval@tmpval,?_ADC_getval
  3671   00259C  C063  F061         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  3672   0025A0                     
  3673                           ; BSR set to: 0
  3674   0025A0  0012               	return		;funcret
  3675   0025A2                     __end_of_ADC_getval:
  3676                           	callstack 0
  3677                           
  3678 ;; *************** function _ADC2String *****************
  3679 ;; Defined at:
  3680 ;;		line 172 in file "LCD.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  buf             2  107[BANK0 ] PTR unsigned char 
  3683 ;;		 -> RAM(3561), 
  3684 ;;  ADC_val         2  109[BANK0 ] unsigned int 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3696 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;Total ram usage:        4 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 12
  3703 ;; This function calls:
  3704 ;;		_sprintf
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text21
  3711   002612                     __ptext21:
  3712                           	callstack 0
  3713   002612                     _ADC2String:
  3714                           	callstack 18
  3715   002612                     
  3716                           ;LCD.c: 181:     sprintf(buf, "%d",ADC_val);
  3717   002612  C0CB  F0B8         	movff	ADC2String@buf,sprintf@s
  3718   002616  C0CC  F0B9         	movff	ADC2String@buf+1,sprintf@s+1
  3719   00261A  0E0A               	movlw	low STR_8
  3720   00261C  0100               	movlb	0	; () banked
  3721   00261E  6FBA               	movwf	sprintf@fmt& (0+255),b
  3722   002620  0E0E               	movlw	high STR_8
  3723   002622  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  3724   002624  C0CD  F0BC         	movff	ADC2String@ADC_val,?_sprintf+4
  3725   002628  C0CE  F0BD         	movff	ADC2String@ADC_val+1,?_sprintf+5
  3726   00262C  ECE3  F011         	call	_sprintf	;wreg free
  3727   002630  0012               	return		;funcret
  3728   002632                     __end_of_ADC2String:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _sprintf *****************
  3732 ;; Defined at:
  3733 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  s               2   88[BANK0 ] PTR unsigned char 
  3736 ;;		 -> RAM(3561), 
  3737 ;;  fmt             2   90[BANK0 ] PTR const unsigned char 
  3738 ;;		 -> STR_8(3), 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  f              11   96[BANK0 ] struct _IO_FILE
  3741 ;;  ap              2   94[BANK0 ] PTR void [1]
  3742 ;;		 -> ?_sprintf(2), 
  3743 ;;  ret             2    0        int 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  2   88[BANK0 ] int 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3753 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3754 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3756 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;Total ram usage:       19 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; Hardware stack levels required when called: 11
  3760 ;; This function calls:
  3761 ;;		_vfprintf
  3762 ;; This function is called by:
  3763 ;;		_ADC2String
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text22
  3768   0023C6                     __ptext22:
  3769                           	callstack 0
  3770   0023C6                     _sprintf:
  3771                           	callstack 18
  3772   0023C6  0EBC               	movlw	low (?_sprintf+4)
  3773   0023C8  0100               	movlb	0	; () banked
  3774   0023CA  6FBE               	movwf	sprintf@ap& (0+255),b
  3775   0023CC  0E00               	movlw	high (?_sprintf+4)
  3776   0023CE  6FBF               	movwf	(sprintf@ap+1)& (0+255),b
  3777   0023D0  C0B8  F0C0         	movff	sprintf@s,sprintf@f
  3778   0023D4  C0B9  F0C1         	movff	sprintf@s+1,sprintf@f+1
  3779   0023D8                     
  3780                           ; BSR set to: 0
  3781   0023D8  0E00               	movlw	0
  3782   0023DA  6FC4               	movwf	(sprintf@f+4)& (0+255),b
  3783   0023DC  0E00               	movlw	0
  3784   0023DE  6FC3               	movwf	(sprintf@f+3)& (0+255),b
  3785   0023E0                     
  3786                           ; BSR set to: 0
  3787   0023E0  0E00               	movlw	0
  3788   0023E2  6FCA               	movwf	(sprintf@f+10)& (0+255),b
  3789   0023E4  0E00               	movlw	0
  3790   0023E6  6FC9               	movwf	(sprintf@f+9)& (0+255),b
  3791   0023E8                     
  3792                           ; BSR set to: 0
  3793   0023E8  0EC0               	movlw	low sprintf@f
  3794   0023EA  6FB0               	movwf	vfprintf@fp& (0+255),b
  3795   0023EC  0E00               	movlw	high sprintf@f
  3796   0023EE  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  3797   0023F0  C0BA  F0B2         	movff	sprintf@fmt,vfprintf@fmt
  3798   0023F4  C0BB  F0B3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3799   0023F8  0EBE               	movlw	low sprintf@ap
  3800   0023FA  6FB4               	movwf	vfprintf@ap& (0+255),b
  3801   0023FC  0E00               	movlw	high sprintf@ap
  3802   0023FE  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  3803   002400  EC0C  F012         	call	_vfprintf	;wreg free
  3804   002404  0100               	movlb	0	; () banked
  3805   002406  51C3               	movf	(sprintf@f+3)& (0+255),w,b
  3806   002408  25B8               	addwf	sprintf@s& (0+255),w,b
  3807   00240A  6ED9               	movwf	fsr2l,c
  3808   00240C  51C4               	movf	(sprintf@f+4)& (0+255),w,b
  3809   00240E  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  3810   002410  6EDA               	movwf	fsr2h,c
  3811   002412  0E00               	movlw	0
  3812   002414  6EDF               	movwf	indf2,c
  3813   002416                     
  3814                           ; BSR set to: 0
  3815   002416  0012               	return		;funcret
  3816   002418                     __end_of_sprintf:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _vfprintf *****************
  3820 ;; Defined at:
  3821 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  3824 ;;		 -> sprintf@f(11), 
  3825 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  3826 ;;		 -> STR_8(3), 
  3827 ;;  ap              2   84[BANK0 ] PTR PTR void 
  3828 ;;		 -> sprintf@ap(2), 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  cfmt            2   86[BANK0 ] PTR unsigned char 
  3831 ;;		 -> STR_8(3), 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  2   80[BANK0 ] int 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3841 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;Total ram usage:        8 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 10
  3848 ;; This function calls:
  3849 ;;		_vfpfcnvrt
  3850 ;; This function is called by:
  3851 ;;		_sprintf
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text23
  3856   002418                     __ptext23:
  3857                           	callstack 0
  3858   002418                     _vfprintf:
  3859                           	callstack 18
  3860   002418                     
  3861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3862   002418  C0B2  F0B6         	movff	vfprintf@fmt,vfprintf@cfmt
  3863   00241C  C0B3  F0B7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3866   002420  EF21  F012         	goto	l2983
  3867   002424                     l2981:
  3868                           
  3869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3870   002424  C0B0  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  3871   002428  C0B1  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3872   00242C  0EB6               	movlw	low vfprintf@cfmt
  3873   00242E  0100               	movlb	0	; () banked
  3874   002430  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  3875   002432  0E00               	movlw	high vfprintf@cfmt
  3876   002434  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3877   002436  C0B4  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  3878   00243A  C0B5  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3879   00243E  EC8C  F00B         	call	_vfpfcnvrt	;wreg free
  3880   002442                     l2983:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3883   002442  C0B6  FFF6         	movff	vfprintf@cfmt,tblptrl
  3884   002446  C0B7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3885   00244A                     	if	0	;tblptru may be non-zero
  3886   00244A                     	endif
  3887   00244A                     	if	0	;tblptru may be non-zero
  3888   00244A                     	endif
  3889   00244A  0008               	tblrd		*
  3890   00244C  50F5               	movf	tablat,w,c
  3891   00244E  0900               	iorlw	0
  3892   002450  A4D8               	btfss	status,2,c
  3893   002452  EF2D  F012         	goto	u2891
  3894   002456  EF2F  F012         	goto	u2890
  3895   00245A                     u2891:
  3896   00245A  EF12  F012         	goto	l2981
  3897   00245E                     u2890:
  3898   00245E                     
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3900   00245E  0E00               	movlw	0
  3901   002460  0100               	movlb	0	; () banked
  3902   002462  6FB1               	movwf	(?_vfprintf+1)& (0+255),b
  3903   002464  0E00               	movlw	0
  3904   002466  6FB0               	movwf	?_vfprintf& (0+255),b
  3905   002468                     
  3906                           ; BSR set to: 0
  3907   002468  0012               	return		;funcret
  3908   00246A                     __end_of_vfprintf:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _vfpfcnvrt *****************
  3912 ;; Defined at:
  3913 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  3916 ;;		 -> sprintf@f(11), 
  3917 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  3918 ;;		 -> vfprintf@cfmt(2), 
  3919 ;;  ap              2   66[BANK0 ] PTR PTR void 
  3920 ;;		 -> sprintf@ap(2), 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  convarg         8   70[BANK0 ] struct .
  3923 ;;  cp              2   78[BANK0 ] PTR unsigned char 
  3924 ;;		 -> STR_8(3), 
  3925 ;;  i               2    0        int 
  3926 ;;  done            2    0        int 
  3927 ;;  c               1    0        unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3937 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;Total ram usage:       18 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 9
  3944 ;; This function calls:
  3945 ;;		_dtoa
  3946 ;;		_fputc
  3947 ;; This function is called by:
  3948 ;;		_vfprintf
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text24
  3953   001718                     __ptext24:
  3954                           	callstack 0
  3955   001718                     _vfpfcnvrt:
  3956                           	callstack 18
  3957   001718                     
  3958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3959   001718  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3960   00171C  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3961   001720  CFDE FFF6          	movff	postinc2,tblptrl
  3962   001724  CFDD FFF7          	movff	postdec2,tblptrh
  3963   001728                     	if	0	;tblptru may be non-zero
  3964   001728                     	endif
  3965   001728                     	if	0	;tblptru may be non-zero
  3966   001728                     	endif
  3967   001728  0008               	tblrd		*
  3968   00172A  50F5               	movf	tablat,w,c
  3969   00172C  0A25               	xorlw	37
  3970   00172E  A4D8               	btfss	status,2,c
  3971   001730  EF9C  F00B         	goto	u2851
  3972   001734  EF9E  F00B         	goto	u2850
  3973   001738                     u2851:
  3974   001738  EF1E  F00C         	goto	l2965
  3975   00173C                     u2850:
  3976   00173C                     
  3977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3978   00173C  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3979   001740  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3980   001744  2ADE               	incf	postinc2,f,c
  3981   001746  0E00               	movlw	0
  3982   001748  22DD               	addwfc	postdec2,f,c
  3983   00174A                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3985   00174A  0E00               	movlw	0
  3986   00174C  0100               	movlb	0	; () banked
  3987   00174E  6FEA               	movwf	(_width+1)& (0+255),b
  3988   001750  0E00               	movlw	0
  3989   001752  6FE9               	movwf	_width& (0+255),b
  3990   001754  C0E9  F0ED         	movff	_width,_flags
  3991   001758                     
  3992                           ; BSR set to: 0
  3993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3994   001758  69EB               	setf	_prec& (0+255),b
  3995   00175A  69EC               	setf	(_prec+1)& (0+255),b
  3996   00175C                     
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3999   00175C  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4000   001760  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4001   001764  CFDE F0AE          	movff	postinc2,vfpfcnvrt@cp
  4002   001768  CFDD F0AF          	movff	postdec2,vfpfcnvrt@cp+1
  4003   00176C                     
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4006   00176C  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4007   001770  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4008   001774                     	if	0	;tblptru may be non-zero
  4009   001774                     	endif
  4010   001774                     	if	0	;tblptru may be non-zero
  4011   001774                     	endif
  4012   001774  0008               	tblrd		*
  4013   001776  50F5               	movf	tablat,w,c
  4014   001778  0A64               	xorlw	100
  4015   00177A  B4D8               	btfsc	status,2,c
  4016   00177C  EFC2  F00B         	goto	u2861
  4017   001780  EFC4  F00B         	goto	u2860
  4018   001784                     u2861:
  4019   001784  EFD2  F00B         	goto	l2955
  4020   001788                     u2860:
  4021   001788                     
  4022                           ; BSR set to: 0
  4023   001788  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4024   00178C  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4025   001790                     	if	0	;tblptru may be non-zero
  4026   001790                     	endif
  4027   001790                     	if	0	;tblptru may be non-zero
  4028   001790                     	endif
  4029   001790  0008               	tblrd		*
  4030   001792  50F5               	movf	tablat,w,c
  4031   001794  0A69               	xorlw	105
  4032   001796  A4D8               	btfss	status,2,c
  4033   001798  EFD0  F00B         	goto	u2871
  4034   00179C  EFD2  F00B         	goto	u2870
  4035   0017A0                     u2871:
  4036   0017A0  EF15  F00C         	goto	l2961
  4037   0017A4                     u2870:
  4038   0017A4                     l2955:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4042   0017A4  C0A2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4043   0017A8  C0A3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4044   0017AC  CFDF F0A4          	movff	indf2,??_vfpfcnvrt
  4045   0017B0  0E02               	movlw	2
  4046   0017B2  26DE               	addwf	postinc2,f,c
  4047   0017B4  CFDF F0A5          	movff	indf2,??_vfpfcnvrt+1
  4048   0017B8  0E00               	movlw	0
  4049   0017BA  22DD               	addwfc	postdec2,f,c
  4050   0017BC  C0A4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4051   0017C0  C0A5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4052   0017C4  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg
  4053   0017C8  CFDD F0A7          	movff	postdec2,vfpfcnvrt@convarg+1
  4054   0017CC  0E00               	movlw	0
  4055   0017CE  BFA7               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  4056   0017D0  0EFF               	movlw	-1
  4057   0017D2  6FA8               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  4058   0017D4  6FA9               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  4059   0017D6  6FAA               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  4060   0017D8  6FAB               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  4061   0017DA  6FAC               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  4062   0017DC  6FAD               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  4065   0017DE  0E01               	movlw	1
  4066   0017E0  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4067   0017E2  6FA4               	movwf	??_vfpfcnvrt& (0+255),b
  4068   0017E4  0E00               	movlw	0
  4069   0017E6  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4070   0017E8  6FA5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4071   0017EA  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4072   0017EE  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4073   0017F2  C0A4  FFDE         	movff	??_vfpfcnvrt,postinc2
  4074   0017F6  C0A5  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4075   0017FA                     
  4076                           ; BSR set to: 0
  4077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  4078   0017FA  C09E  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  4079   0017FE  C09F  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4080   001802  C0A6  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  4081   001806  C0A7  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  4082   00180A  C0A8  F07F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  4083   00180E  C0A9  F080         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  4084   001812  C0AA  F081         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  4085   001816  C0AB  F082         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  4086   00181A  C0AC  F083         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  4087   00181E  C0AD  F084         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  4088   001822  EC0F  F007         	call	_dtoa	;wreg free
  4089   001826  EF33  F00C         	goto	l1083
  4090   00182A                     l2961:
  4091                           
  4092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4093   00182A  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4094   00182E  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4095   001832  2ADE               	incf	postinc2,f,c
  4096   001834  0E00               	movlw	0
  4097   001836  22DD               	addwfc	postdec2,f,c
  4098   001838  EF33  F00C         	goto	l1083
  4099   00183C                     l2965:
  4100                           
  4101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4102   00183C  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4103   001840  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4104   001844  CFDE FFF6          	movff	postinc2,tblptrl
  4105   001848  CFDD FFF7          	movff	postdec2,tblptrh
  4106   00184C                     	if	0	;tblptru may be non-zero
  4107   00184C                     	endif
  4108   00184C                     	if	0	;tblptru may be non-zero
  4109   00184C                     	endif
  4110   00184C  0008               	tblrd		*
  4111   00184E  50F5               	movf	tablat,w,c
  4112   001850  0100               	movlb	0	; () banked
  4113   001852  6F60               	movwf	fputc@c& (0+255),b
  4114   001854  6B61               	clrf	(fputc@c+1)& (0+255),b
  4115   001856  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  4116   00185A  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4117   00185E  ECA4  F00E         	call	_fputc	;wreg free
  4118   001862  EF15  F00C         	goto	l2961
  4119   001866                     l1083:
  4120   001866  0012               	return		;funcret
  4121   001868                     __end_of_vfpfcnvrt:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _dtoa *****************
  4125 ;; Defined at:
  4126 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  4129 ;;		 -> sprintf@f(11), 
  4130 ;;  d               8   29[BANK0 ] long long 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  n               8   51[BANK0 ] long long 
  4133 ;;  i               2   60[BANK0 ] int 
  4134 ;;  w               2   49[BANK0 ] int 
  4135 ;;  p               2   47[BANK0 ] int 
  4136 ;;  s               1   59[BANK0 ] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4146 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;Total ram usage:       35 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 8
  4153 ;; This function calls:
  4154 ;;		___aodiv
  4155 ;;		___aomod
  4156 ;;		_abs
  4157 ;;		_pad
  4158 ;; This function is called by:
  4159 ;;		_vfpfcnvrt
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text25
  4164   000E1E                     __ptext25:
  4165                           	callstack 0
  4166   000E1E                     _dtoa:
  4167                           	callstack 18
  4168   000E1E                     
  4169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4170   000E1E  C07D  F093         	movff	dtoa@d,dtoa@n
  4171   000E22  C07E  F094         	movff	dtoa@d+1,dtoa@n+1
  4172   000E26  C07F  F095         	movff	dtoa@d+2,dtoa@n+2
  4173   000E2A  C080  F096         	movff	dtoa@d+3,dtoa@n+3
  4174   000E2E  C081  F097         	movff	dtoa@d+4,dtoa@n+4
  4175   000E32  C082  F098         	movff	dtoa@d+5,dtoa@n+5
  4176   000E36  C083  F099         	movff	dtoa@d+6,dtoa@n+6
  4177   000E3A  C084  F09A         	movff	dtoa@d+7,dtoa@n+7
  4178   000E3E                     
  4179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4180   000E3E  0100               	movlb	0	; () banked
  4181   000E40  BF9A               	btfsc	(dtoa@n+7)& (0+255),7,b
  4182   000E42  EF25  F007         	goto	u2711
  4183   000E46  EF28  F007         	goto	u2710
  4184   000E4A                     u2711:
  4185   000E4A  0E01               	movlw	1
  4186   000E4C  EF29  F007         	goto	u2720
  4187   000E50                     u2710:
  4188   000E50  0E00               	movlw	0
  4189   000E52                     u2720:
  4190   000E52  6F9B               	movwf	dtoa@s& (0+255),b
  4191   000E54                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4194   000E54  519B               	movf	dtoa@s& (0+255),w,b
  4195   000E56  B4D8               	btfsc	status,2,c
  4196   000E58  EF30  F007         	goto	u2731
  4197   000E5C  EF32  F007         	goto	u2730
  4198   000E60                     u2731:
  4199   000E60  EF42  F007         	goto	l2877
  4200   000E64                     u2730:
  4201   000E64                     
  4202                           ; BSR set to: 0
  4203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4204   000E64  1F9A               	comf	(dtoa@n+7)& (0+255),f,b
  4205   000E66  1F99               	comf	(dtoa@n+6)& (0+255),f,b
  4206   000E68  1F98               	comf	(dtoa@n+5)& (0+255),f,b
  4207   000E6A  1F97               	comf	(dtoa@n+4)& (0+255),f,b
  4208   000E6C  1F96               	comf	(dtoa@n+3)& (0+255),f,b
  4209   000E6E  1F95               	comf	(dtoa@n+2)& (0+255),f,b
  4210   000E70  1F94               	comf	(dtoa@n+1)& (0+255),f,b
  4211   000E72  6D93               	negf	dtoa@n& (0+255),b
  4212   000E74  0E00               	movlw	0
  4213   000E76  2394               	addwfc	(dtoa@n+1)& (0+255),f,b
  4214   000E78  2395               	addwfc	(dtoa@n+2)& (0+255),f,b
  4215   000E7A  2396               	addwfc	(dtoa@n+3)& (0+255),f,b
  4216   000E7C  2397               	addwfc	(dtoa@n+4)& (0+255),f,b
  4217   000E7E  2398               	addwfc	(dtoa@n+5)& (0+255),f,b
  4218   000E80  2399               	addwfc	(dtoa@n+6)& (0+255),f,b
  4219   000E82  239A               	addwfc	(dtoa@n+7)& (0+255),f,b
  4220   000E84                     l2877:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4224   000E84  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  4225   000E86  EF4F  F007         	goto	u2740
  4226   000E8A  51EC               	movf	(_prec+1)& (0+255),w,b
  4227   000E8C  E106               	bnz	u2741
  4228   000E8E  05EB               	decf	_prec& (0+255),w,b
  4229   000E90  B0D8               	btfsc	status,0,c
  4230   000E92  EF4D  F007         	goto	u2741
  4231   000E96  EF4F  F007         	goto	u2740
  4232   000E9A                     u2741:
  4233   000E9A  EF55  F007         	goto	l1062
  4234   000E9E                     u2740:
  4235   000E9E                     
  4236                           ; BSR set to: 0
  4237   000E9E  0E00               	movlw	0
  4238   000EA0  6F90               	movwf	(dtoa@p+1)& (0+255),b
  4239   000EA2  0E01               	movlw	1
  4240   000EA4  6F8F               	movwf	dtoa@p& (0+255),b
  4241   000EA6  EF59  F007         	goto	l1064
  4242   000EAA                     l1062:
  4243                           
  4244                           ; BSR set to: 0
  4245   000EAA  C0EB  F08F         	movff	_prec,dtoa@p
  4246   000EAE  C0EC  F090         	movff	_prec+1,dtoa@p+1
  4247   000EB2                     l1064:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4251   000EB2  C0E9  F091         	movff	_width,dtoa@w
  4252   000EB6  C0EA  F092         	movff	_width+1,dtoa@w+1
  4253   000EBA                     
  4254                           ; BSR set to: 0
  4255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4256   000EBA  519B               	movf	dtoa@s& (0+255),w,b
  4257   000EBC  B4D8               	btfsc	status,2,c
  4258   000EBE  EF63  F007         	goto	u2751
  4259   000EC2  EF65  F007         	goto	u2750
  4260   000EC6                     u2751:
  4261   000EC6  EF7C  F007         	goto	l1065
  4262   000ECA                     u2750:
  4263   000ECA                     
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4266   000ECA  0791               	decf	dtoa@w& (0+255),f,b
  4267   000ECC  A0D8               	btfss	status,0,c
  4268   000ECE  0792               	decf	(dtoa@w+1)& (0+255),f,b
  4269   000ED0                     
  4270                           ; BSR set to: 0
  4271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4272   000ED0  519B               	movf	dtoa@s& (0+255),w,b
  4273   000ED2  A4D8               	btfss	status,2,c
  4274   000ED4  EF6E  F007         	goto	u2761
  4275   000ED8  EF70  F007         	goto	u2760
  4276   000EDC                     u2761:
  4277   000EDC  EF76  F007         	goto	l2889
  4278   000EE0                     u2760:
  4279   000EE0                     
  4280                           ; BSR set to: 0
  4281   000EE0  0E00               	movlw	0
  4282   000EE2  6F8E               	movwf	(_dtoa$2165+1)& (0+255),b
  4283   000EE4  0E2B               	movlw	43
  4284   000EE6  6F8D               	movwf	_dtoa$2165& (0+255),b
  4285   000EE8  EF7A  F007         	goto	l2891
  4286   000EEC                     l2889:
  4287                           
  4288                           ; BSR set to: 0
  4289   000EEC  0E00               	movlw	0
  4290   000EEE  6F8E               	movwf	(_dtoa$2165+1)& (0+255),b
  4291   000EF0  0E2D               	movlw	45
  4292   000EF2  6F8D               	movwf	_dtoa$2165& (0+255),b
  4293   000EF4                     l2891:
  4294                           
  4295                           ; BSR set to: 0
  4296   000EF4  C08D  F09B         	movff	_dtoa$2165,dtoa@s
  4297   000EF8                     l1065:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4301   000EF8  0E00               	movlw	0
  4302   000EFA  6F9D               	movwf	(dtoa@i+1)& (0+255),b
  4303   000EFC  0E1F               	movlw	31
  4304   000EFE  6F9C               	movwf	dtoa@i& (0+255),b
  4305   000F00                     
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4308   000F00  0E00               	movlw	0
  4309   000F02  0101               	movlb	1	; () banked
  4310   000F04  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4311                           
  4312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4313   000F06  EF02  F008         	goto	l2905
  4314   000F0A                     l2895:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4318   000F0A  079C               	decf	dtoa@i& (0+255),f,b
  4319   000F0C  A0D8               	btfss	status,0,c
  4320   000F0E  079D               	decf	(dtoa@i+1)& (0+255),f,b
  4321   000F10                     
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4324   000F10  0E00               	movlw	low _dbuf
  4325   000F12  259C               	addwf	dtoa@i& (0+255),w,b
  4326   000F14  6ED9               	movwf	fsr2l,c
  4327   000F16  0E01               	movlw	high _dbuf
  4328   000F18  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4329   000F1A  6EDA               	movwf	fsr2h,c
  4330   000F1C  C093  F060         	movff	dtoa@n,___aomod@dividend
  4331   000F20  C094  F061         	movff	dtoa@n+1,___aomod@dividend+1
  4332   000F24  C095  F062         	movff	dtoa@n+2,___aomod@dividend+2
  4333   000F28  C096  F063         	movff	dtoa@n+3,___aomod@dividend+3
  4334   000F2C  C097  F064         	movff	dtoa@n+4,___aomod@dividend+4
  4335   000F30  C098  F065         	movff	dtoa@n+5,___aomod@dividend+5
  4336   000F34  C099  F066         	movff	dtoa@n+6,___aomod@dividend+6
  4337   000F38  C09A  F067         	movff	dtoa@n+7,___aomod@dividend+7
  4338   000F3C  0E0A               	movlw	10
  4339   000F3E  6F68               	movwf	___aomod@divisor& (0+255),b
  4340   000F40  0E00               	movlw	0
  4341   000F42  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  4342   000F44  0E00               	movlw	0
  4343   000F46  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  4344   000F48  0E00               	movlw	0
  4345   000F4A  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  4346   000F4C  0E00               	movlw	0
  4347   000F4E  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  4348   000F50  0E00               	movlw	0
  4349   000F52  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  4350   000F54  0E00               	movlw	0
  4351   000F56  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  4352   000F58  0E00               	movlw	0
  4353   000F5A  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  4354   000F5C  ECD9  F00A         	call	___aomod	;wreg free
  4355   000F60  C060  F085         	movff	?___aomod,??_dtoa
  4356   000F64  C061  F086         	movff	?___aomod+1,??_dtoa+1
  4357   000F68  C062  F087         	movff	?___aomod+2,??_dtoa+2
  4358   000F6C  C063  F088         	movff	?___aomod+3,??_dtoa+3
  4359   000F70  C064  F089         	movff	?___aomod+4,??_dtoa+4
  4360   000F74  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  4361   000F78  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  4362   000F7C  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  4363   000F80  C085  F072         	movff	??_dtoa,abs@a
  4364   000F84  C086  F073         	movff	??_dtoa+1,abs@a+1
  4365   000F88  EC7B  F012         	call	_abs	;wreg free
  4366   000F8C  0100               	movlb	0	; () banked
  4367   000F8E  5172               	movf	?_abs& (0+255),w,b
  4368   000F90  0F30               	addlw	48
  4369   000F92  6EDF               	movwf	indf2,c
  4370   000F94                     
  4371                           ; BSR set to: 0
  4372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  4373   000F94  078F               	decf	dtoa@p& (0+255),f,b
  4374   000F96  A0D8               	btfss	status,0,c
  4375   000F98  0790               	decf	(dtoa@p+1)& (0+255),f,b
  4376   000F9A                     
  4377                           ; BSR set to: 0
  4378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  4379   000F9A  0791               	decf	dtoa@w& (0+255),f,b
  4380   000F9C  A0D8               	btfss	status,0,c
  4381   000F9E  0792               	decf	(dtoa@w+1)& (0+255),f,b
  4382   000FA0                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  4385   000FA0  C093  F060         	movff	dtoa@n,___aodiv@dividend
  4386   000FA4  C094  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  4387   000FA8  C095  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  4388   000FAC  C096  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  4389   000FB0  C097  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  4390   000FB4  C098  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  4391   000FB8  C099  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  4392   000FBC  C09A  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  4393   000FC0  0E0A               	movlw	10
  4394   000FC2  6F68               	movwf	___aodiv@divisor& (0+255),b
  4395   000FC4  0E00               	movlw	0
  4396   000FC6  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  4397   000FC8  0E00               	movlw	0
  4398   000FCA  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  4399   000FCC  0E00               	movlw	0
  4400   000FCE  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  4401   000FD0  0E00               	movlw	0
  4402   000FD2  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  4403   000FD4  0E00               	movlw	0
  4404   000FD6  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  4405   000FD8  0E00               	movlw	0
  4406   000FDA  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  4407   000FDC  0E00               	movlw	0
  4408   000FDE  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  4409   000FE0  EC14  F00A         	call	___aodiv	;wreg free
  4410   000FE4  C060  F093         	movff	?___aodiv,dtoa@n
  4411   000FE8  C061  F094         	movff	?___aodiv+1,dtoa@n+1
  4412   000FEC  C062  F095         	movff	?___aodiv+2,dtoa@n+2
  4413   000FF0  C063  F096         	movff	?___aodiv+3,dtoa@n+3
  4414   000FF4  C064  F097         	movff	?___aodiv+4,dtoa@n+4
  4415   000FF8  C065  F098         	movff	?___aodiv+5,dtoa@n+5
  4416   000FFC  C066  F099         	movff	?___aodiv+6,dtoa@n+6
  4417   001000  C067  F09A         	movff	?___aodiv+7,dtoa@n+7
  4418   001004                     l2905:
  4419                           
  4420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4421   001004  0100               	movlb	0	; () banked
  4422   001006  BF9D               	btfsc	(dtoa@i+1)& (0+255),7,b
  4423   001008  EF0E  F008         	goto	u2771
  4424   00100C  519D               	movf	(dtoa@i+1)& (0+255),w,b
  4425   00100E  E108               	bnz	u2770
  4426   001010  059C               	decf	dtoa@i& (0+255),w,b
  4427   001012  A0D8               	btfss	status,0,c
  4428   001014  EF0E  F008         	goto	u2771
  4429   001018  EF10  F008         	goto	u2770
  4430   00101C                     u2771:
  4431   00101C  EF2C  F008         	goto	l2911
  4432   001020                     u2770:
  4433   001020                     
  4434                           ; BSR set to: 0
  4435   001020  5193               	movf	dtoa@n& (0+255),w,b
  4436   001022  1194               	iorwf	(dtoa@n+1)& (0+255),w,b
  4437   001024  1195               	iorwf	(dtoa@n+2)& (0+255),w,b
  4438   001026  1196               	iorwf	(dtoa@n+3)& (0+255),w,b
  4439   001028  1197               	iorwf	(dtoa@n+4)& (0+255),w,b
  4440   00102A  1198               	iorwf	(dtoa@n+5)& (0+255),w,b
  4441   00102C  1199               	iorwf	(dtoa@n+6)& (0+255),w,b
  4442   00102E  119A               	iorwf	(dtoa@n+7)& (0+255),w,b
  4443   001030  A4D8               	btfss	status,2,c
  4444   001032  EF1D  F008         	goto	u2781
  4445   001036  EF1F  F008         	goto	u2780
  4446   00103A                     u2781:
  4447   00103A  EF85  F007         	goto	l2895
  4448   00103E                     u2780:
  4449   00103E                     
  4450                           ; BSR set to: 0
  4451   00103E  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  4452   001040  EF2C  F008         	goto	u2790
  4453   001044  5190               	movf	(dtoa@p+1)& (0+255),w,b
  4454   001046  E106               	bnz	u2791
  4455   001048  058F               	decf	dtoa@p& (0+255),w,b
  4456   00104A  B0D8               	btfsc	status,0,c
  4457   00104C  EF2A  F008         	goto	u2791
  4458   001050  EF2C  F008         	goto	u2790
  4459   001054                     u2791:
  4460   001054  EF85  F007         	goto	l2895
  4461   001058                     u2790:
  4462   001058                     l2911:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  4466   001058  519B               	movf	dtoa@s& (0+255),w,b
  4467   00105A  B4D8               	btfsc	status,2,c
  4468   00105C  EF32  F008         	goto	u2801
  4469   001060  EF34  F008         	goto	u2800
  4470   001064                     u2801:
  4471   001064  EF3F  F008         	goto	l2917
  4472   001068                     u2800:
  4473   001068                     
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  4476   001068  079C               	decf	dtoa@i& (0+255),f,b
  4477   00106A  A0D8               	btfss	status,0,c
  4478   00106C  079D               	decf	(dtoa@i+1)& (0+255),f,b
  4479   00106E                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  4482   00106E  0E00               	movlw	low _dbuf
  4483   001070  259C               	addwf	dtoa@i& (0+255),w,b
  4484   001072  6ED9               	movwf	fsr2l,c
  4485   001074  0E01               	movlw	high _dbuf
  4486   001076  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4487   001078  6EDA               	movwf	fsr2h,c
  4488   00107A  C09B  FFDF         	movff	dtoa@s,indf2
  4489   00107E                     l2917:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4493   00107E  C07B  F070         	movff	dtoa@fp,pad@fp
  4494   001082  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  4495   001086  0E00               	movlw	low _dbuf
  4496   001088  259C               	addwf	dtoa@i& (0+255),w,b
  4497   00108A  6F72               	movwf	pad@buf& (0+255),b
  4498   00108C  0E01               	movlw	high _dbuf
  4499   00108E  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4500   001090  6F73               	movwf	(pad@buf+1)& (0+255),b
  4501   001092  C091  F074         	movff	dtoa@w,pad@p
  4502   001096  C092  F075         	movff	dtoa@w+1,pad@p+1
  4503   00109A  EC8F  F010         	call	_pad	;wreg free
  4504   00109E  0012               	return		;funcret
  4505   0010A0                     __end_of_dtoa:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _pad *****************
  4509 ;; Defined at:
  4510 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4513 ;;		 -> sprintf@f(11), 
  4514 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4515 ;;		 -> dbuf(32), 
  4516 ;;  p               2   20[BANK0 ] int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  w               2   25[BANK0 ] int 
  4519 ;;  i               2   23[BANK0 ] int 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4529 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;Total ram usage:       11 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; Hardware stack levels required when called: 7
  4536 ;; This function calls:
  4537 ;;		_fputc
  4538 ;;		_fputs
  4539 ;; This function is called by:
  4540 ;;		_dtoa
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text26
  4545   00211E                     __ptext26:
  4546                           	callstack 0
  4547   00211E                     _pad:
  4548                           	callstack 18
  4549   00211E                     
  4550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  4551   00211E  0100               	movlb	0	; () banked
  4552   002120  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4553   002122  EF95  F010         	goto	u2681
  4554   002126  EF97  F010         	goto	u2680
  4555   00212A                     u2681:
  4556   00212A  EF9D  F010         	goto	l2849
  4557   00212E                     u2680:
  4558   00212E                     
  4559                           ; BSR set to: 0
  4560   00212E  C074  F079         	movff	pad@p,pad@w
  4561   002132  C075  F07A         	movff	pad@p+1,pad@w+1
  4562   002136  EFA1  F010         	goto	l1053
  4563   00213A                     l2849:
  4564                           
  4565                           ; BSR set to: 0
  4566   00213A  0E00               	movlw	0
  4567   00213C  6F7A               	movwf	(pad@w+1)& (0+255),b
  4568   00213E  0E00               	movlw	0
  4569   002140  6F79               	movwf	pad@w& (0+255),b
  4570   002142                     l1053:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  4574   002142  0E00               	movlw	0
  4575   002144  6F78               	movwf	(pad@i+1)& (0+255),b
  4576   002146  0E00               	movlw	0
  4577   002148  6F77               	movwf	pad@i& (0+255),b
  4578                           
  4579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4580   00214A  EFB4  F010         	goto	l2855
  4581   00214E                     l2851:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  4585   00214E  0E00               	movlw	0
  4586   002150  6F61               	movwf	(fputc@c+1)& (0+255),b
  4587   002152  0E20               	movlw	32
  4588   002154  6F60               	movwf	fputc@c& (0+255),b
  4589   002156  C070  F062         	movff	pad@fp,fputc@fp
  4590   00215A  C071  F063         	movff	pad@fp+1,fputc@fp+1
  4591   00215E  ECA4  F00E         	call	_fputc	;wreg free
  4592   002162                     
  4593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  4594   002162  0100               	movlb	0	; () banked
  4595   002164  4B77               	infsnz	pad@i& (0+255),f,b
  4596   002166  2B78               	incf	(pad@i+1)& (0+255),f,b
  4597   002168                     l2855:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4601   002168  5179               	movf	pad@w& (0+255),w,b
  4602   00216A  5D77               	subwf	pad@i& (0+255),w,b
  4603   00216C  5178               	movf	(pad@i+1)& (0+255),w,b
  4604   00216E  0A80               	xorlw	128
  4605   002170  6F76               	movwf	??_pad& (0+255),b
  4606   002172  517A               	movf	(pad@w+1)& (0+255),w,b
  4607   002174  0A80               	xorlw	128
  4608   002176  5976               	subwfb	??_pad& (0+255),w,b
  4609   002178  A0D8               	btfss	status,0,c
  4610   00217A  EFC1  F010         	goto	u2691
  4611   00217E  EFC3  F010         	goto	u2690
  4612   002182                     u2691:
  4613   002182  EFA7  F010         	goto	l2851
  4614   002186                     u2690:
  4615   002186                     
  4616                           ; BSR set to: 0
  4617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  4618   002186  C072  F069         	movff	pad@buf,fputs@s
  4619   00218A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  4620   00218E  C070  F06B         	movff	pad@fp,fputs@fp
  4621   002192  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  4622   002196  EC35  F012         	call	_fputs	;wreg free
  4623   00219A  0012               	return		;funcret
  4624   00219C                     __end_of_pad:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function _fputs *****************
  4628 ;; Defined at:
  4629 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4632 ;;		 -> dbuf(32), 
  4633 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4634 ;;		 -> sprintf@f(11), 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  i               2   14[BANK0 ] int 
  4637 ;;  c               1   13[BANK0 ] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2    9[BANK0 ] int 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;Total ram usage:        7 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 6
  4654 ;; This function calls:
  4655 ;;		_fputc
  4656 ;; This function is called by:
  4657 ;;		_pad
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text27
  4662   00246A                     __ptext27:
  4663                           	callstack 0
  4664   00246A                     _fputs:
  4665                           	callstack 18
  4666   00246A  0E00               	movlw	0
  4667   00246C  0100               	movlb	0	; () banked
  4668   00246E  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4669   002470  0E00               	movlw	0
  4670   002472  6F6E               	movwf	fputs@i& (0+255),b
  4671   002474  EF48  F012         	goto	l2763
  4672   002478                     l2759:
  4673                           
  4674                           ; BSR set to: 0
  4675   002478  C06D  F060         	movff	fputs@c,fputc@c
  4676   00247C  6B61               	clrf	(fputc@c+1)& (0+255),b
  4677   00247E  C06B  F062         	movff	fputs@fp,fputc@fp
  4678   002482  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  4679   002486  ECA4  F00E         	call	_fputc	;wreg free
  4680   00248A  0100               	movlb	0	; () banked
  4681   00248C  4B6E               	infsnz	fputs@i& (0+255),f,b
  4682   00248E  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4683   002490                     l2763:
  4684                           
  4685                           ; BSR set to: 0
  4686   002490  516E               	movf	fputs@i& (0+255),w,b
  4687   002492  2569               	addwf	fputs@s& (0+255),w,b
  4688   002494  6ED9               	movwf	fsr2l,c
  4689   002496  516F               	movf	(fputs@i+1)& (0+255),w,b
  4690   002498  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4691   00249A  6EDA               	movwf	fsr2h,c
  4692   00249C  50DF               	movf	indf2,w,c
  4693   00249E  6F6D               	movwf	fputs@c& (0+255),b
  4694   0024A0  516D               	movf	fputs@c& (0+255),w,b
  4695   0024A2  A4D8               	btfss	status,2,c
  4696   0024A4  EF56  F012         	goto	u2541
  4697   0024A8  EF58  F012         	goto	u2540
  4698   0024AC                     u2541:
  4699   0024AC  EF3C  F012         	goto	l2759
  4700   0024B0                     u2540:
  4701   0024B0                     
  4702                           ; BSR set to: 0
  4703   0024B0  0012               	return		;funcret
  4704   0024B2                     __end_of_fputs:
  4705                           	callstack 0
  4706                           
  4707 ;; *************** function _fputc *****************
  4708 ;; Defined at:
  4709 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  c               2    0[BANK0 ] int 
  4712 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4713 ;;		 -> sprintf@f(11), 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  2    0[BANK0 ] int 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;Total ram usage:        9 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 5
  4732 ;; This function calls:
  4733 ;;		_putch
  4734 ;; This function is called by:
  4735 ;;		_pad
  4736 ;;		_vfpfcnvrt
  4737 ;;		_fputs
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text28
  4742   001D48                     __ptext28:
  4743                           	callstack 0
  4744   001D48                     _fputc:
  4745                           	callstack 21
  4746   001D48  0100               	movlb	0	; () banked
  4747   001D4A  5162               	movf	fputc@fp& (0+255),w,b
  4748   001D4C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4749   001D4E  B4D8               	btfsc	status,2,c
  4750   001D50  EFAC  F00E         	goto	u2501
  4751   001D54  EFAE  F00E         	goto	u2500
  4752   001D58                     u2501:
  4753   001D58  EFB7  F00E         	goto	l2747
  4754   001D5C                     u2500:
  4755   001D5C                     
  4756                           ; BSR set to: 0
  4757   001D5C  5162               	movf	fputc@fp& (0+255),w,b
  4758   001D5E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4759   001D60  A4D8               	btfss	status,2,c
  4760   001D62  EFB5  F00E         	goto	u2511
  4761   001D66  EFB7  F00E         	goto	u2510
  4762   001D6A                     u2511:
  4763   001D6A  EFBC  F00E         	goto	l2749
  4764   001D6E                     u2510:
  4765   001D6E                     l2747:
  4766                           
  4767                           ; BSR set to: 0
  4768   001D6E  5160               	movf	fputc@c& (0+255),w,b
  4769   001D70  EC4F  F013         	call	_putch
  4770   001D74  EF09  F00F         	goto	l1108
  4771   001D78                     l2749:
  4772                           
  4773                           ; BSR set to: 0
  4774   001D78  EE20 F009          	lfsr	2,9
  4775   001D7C  5162               	movf	fputc@fp& (0+255),w,b
  4776   001D7E  26D9               	addwf	fsr2l,f,c
  4777   001D80  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4778   001D82  22DA               	addwfc	fsr2h,f,c
  4779   001D84  50DE               	movf	postinc2,w,c
  4780   001D86  10DE               	iorwf	postinc2,w,c
  4781   001D88  B4D8               	btfsc	status,2,c
  4782   001D8A  EFC9  F00E         	goto	u2521
  4783   001D8E  EFCB  F00E         	goto	u2520
  4784   001D92                     u2521:
  4785   001D92  EFE6  F00E         	goto	l2753
  4786   001D96                     u2520:
  4787   001D96                     
  4788                           ; BSR set to: 0
  4789   001D96  EE20 F009          	lfsr	2,9
  4790   001D9A  5162               	movf	fputc@fp& (0+255),w,b
  4791   001D9C  26D9               	addwf	fsr2l,f,c
  4792   001D9E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4793   001DA0  22DA               	addwfc	fsr2h,f,c
  4794   001DA2  EE10 F003          	lfsr	1,3
  4795   001DA6  5162               	movf	fputc@fp& (0+255),w,b
  4796   001DA8  26E1               	addwf	fsr1l,f,c
  4797   001DAA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4798   001DAC  22E2               	addwfc	fsr1h,f,c
  4799   001DAE  50DE               	movf	postinc2,w,c
  4800   001DB0  5CE6               	subwf	postinc1,w,c
  4801   001DB2  50E6               	movf	postinc1,w,c
  4802   001DB4  0A80               	xorlw	128
  4803   001DB6  6F68               	movwf	(??_fputc+4)& (0+255),b
  4804   001DB8  50DE               	movf	postinc2,w,c
  4805   001DBA  0A80               	xorlw	128
  4806   001DBC  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4807   001DBE  B0D8               	btfsc	status,0,c
  4808   001DC0  EFE4  F00E         	goto	u2531
  4809   001DC4  EFE6  F00E         	goto	u2530
  4810   001DC8                     u2531:
  4811   001DC8  EF09  F00F         	goto	l1108
  4812   001DCC                     u2530:
  4813   001DCC                     l2753:
  4814                           
  4815                           ; BSR set to: 0
  4816   001DCC  EE20 F003          	lfsr	2,3
  4817   001DD0  5162               	movf	fputc@fp& (0+255),w,b
  4818   001DD2  26D9               	addwf	fsr2l,f,c
  4819   001DD4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4820   001DD6  22DA               	addwfc	fsr2h,f,c
  4821   001DD8  CFDE F064          	movff	postinc2,??_fputc
  4822   001DDC  CFDD F065          	movff	postdec2,??_fputc+1
  4823   001DE0  C062  FFD9         	movff	fputc@fp,fsr2l
  4824   001DE4  C063  FFDA         	movff	fputc@fp+1,fsr2h
  4825   001DE8  CFDE F066          	movff	postinc2,??_fputc+2
  4826   001DEC  CFDD F067          	movff	postdec2,??_fputc+3
  4827   001DF0  5164               	movf	??_fputc& (0+255),w,b
  4828   001DF2  2566               	addwf	(??_fputc+2)& (0+255),w,b
  4829   001DF4  6ED9               	movwf	fsr2l,c
  4830   001DF6  5165               	movf	(??_fputc+1)& (0+255),w,b
  4831   001DF8  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  4832   001DFA  6EDA               	movwf	fsr2h,c
  4833   001DFC  C060  FFDF         	movff	fputc@c,indf2
  4834   001E00  EE20 F003          	lfsr	2,3
  4835   001E04  5162               	movf	fputc@fp& (0+255),w,b
  4836   001E06  26D9               	addwf	fsr2l,f,c
  4837   001E08  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4838   001E0A  22DA               	addwfc	fsr2h,f,c
  4839   001E0C  2ADE               	incf	postinc2,f,c
  4840   001E0E  0E00               	movlw	0
  4841   001E10  22DD               	addwfc	postdec2,f,c
  4842   001E12                     l1108:
  4843   001E12  0012               	return		;funcret
  4844   001E14                     __end_of_fputc:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _putch *****************
  4848 ;; Defined at:
  4849 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  c               1    wreg     unsigned char 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  c               1    0[COMRAM] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;Total ram usage:        0 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 4
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_fputc
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text29
  4878   00269E                     __ptext29:
  4879                           	callstack 0
  4880   00269E                     _putch:
  4881                           	callstack 21
  4882   00269E  0012               	return		;funcret
  4883   0026A0                     __end_of_putch:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _abs *****************
  4887 ;; Defined at:
  4888 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  a               2   18[BANK0 ] int 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  2   18[BANK0 ] int 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;Total ram usage:        4 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 4
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_dtoa
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text30
  4917   0024F6                     __ptext30:
  4918                           	callstack 0
  4919   0024F6                     _abs:
  4920                           	callstack 21
  4921   0024F6  0100               	movlb	0	; () banked
  4922   0024F8  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  4923   0024FA  EF89  F012         	goto	u2700
  4924   0024FE  5173               	movf	(abs@a+1)& (0+255),w,b
  4925   002500  E106               	bnz	u2701
  4926   002502  0572               	decf	abs@a& (0+255),w,b
  4927   002504  B0D8               	btfsc	status,0,c
  4928   002506  EF87  F012         	goto	u2701
  4929   00250A  EF89  F012         	goto	u2700
  4930   00250E                     u2701:
  4931   00250E  EF97  F012         	goto	l1093
  4932   002512                     u2700:
  4933   002512                     
  4934                           ; BSR set to: 0
  4935   002512  C072  F074         	movff	abs@a,??_abs
  4936   002516  C073  F075         	movff	abs@a+1,??_abs+1
  4937   00251A  1F74               	comf	??_abs& (0+255),f,b
  4938   00251C  1F75               	comf	(??_abs+1)& (0+255),f,b
  4939   00251E  4B74               	infsnz	??_abs& (0+255),f,b
  4940   002520  2B75               	incf	(??_abs+1)& (0+255),f,b
  4941   002522  C074  F072         	movff	??_abs,?_abs
  4942   002526  C075  F073         	movff	??_abs+1,?_abs+1
  4943   00252A  EF9B  F012         	goto	l1096
  4944   00252E                     l1093:
  4945                           
  4946                           ; BSR set to: 0
  4947   00252E  C072  F072         	movff	abs@a,?_abs
  4948   002532  C073  F073         	movff	abs@a+1,?_abs+1
  4949   002536                     l1096:
  4950                           
  4951                           ; BSR set to: 0
  4952   002536  0012               	return		;funcret
  4953   002538                     __end_of_abs:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function ___aomod *****************
  4957 ;; Defined at:
  4958 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  dividend        8    0[BANK0 ] long long 
  4961 ;;  divisor         8    8[BANK0 ] long long 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  sign            1   17[BANK0 ] unsigned char 
  4964 ;;  counter         1   16[BANK0 ] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  8    0[BANK0 ] long long 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4974 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4977 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;Total ram usage:       18 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 4
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_dtoa
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text31
  4989   0015B2                     __ptext31:
  4990                           	callstack 0
  4991   0015B2                     ___aomod:
  4992                           	callstack 21
  4993   0015B2  0E00               	movlw	0
  4994   0015B4  0100               	movlb	0	; () banked
  4995   0015B6  6F71               	movwf	___aomod@sign& (0+255),b
  4996   0015B8                     
  4997                           ; BSR set to: 0
  4998   0015B8  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  4999   0015BA  EFE3  F00A         	goto	u2620
  5000   0015BE  EFE1  F00A         	goto	u2621
  5001   0015C2                     u2621:
  5002   0015C2  EFF5  F00A         	goto	l2817
  5003   0015C6                     u2620:
  5004   0015C6                     
  5005                           ; BSR set to: 0
  5006   0015C6  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  5007   0015C8  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  5008   0015CA  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  5009   0015CC  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  5010   0015CE  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  5011   0015D0  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  5012   0015D2  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  5013   0015D4  6D60               	negf	___aomod@dividend& (0+255),b
  5014   0015D6  0E00               	movlw	0
  5015   0015D8  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5016   0015DA  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5017   0015DC  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5018   0015DE  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5019   0015E0  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5020   0015E2  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5021   0015E4  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5022   0015E6                     
  5023                           ; BSR set to: 0
  5024   0015E6  0E01               	movlw	1
  5025   0015E8  6F71               	movwf	___aomod@sign& (0+255),b
  5026   0015EA                     l2817:
  5027                           
  5028                           ; BSR set to: 0
  5029   0015EA  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  5030   0015EC  EFFC  F00A         	goto	u2630
  5031   0015F0  EFFA  F00A         	goto	u2631
  5032   0015F4                     u2631:
  5033   0015F4  EF0C  F00B         	goto	l2821
  5034   0015F8                     u2630:
  5035   0015F8                     
  5036                           ; BSR set to: 0
  5037   0015F8  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  5038   0015FA  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  5039   0015FC  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  5040   0015FE  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  5041   001600  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  5042   001602  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  5043   001604  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  5044   001606  6D68               	negf	___aomod@divisor& (0+255),b
  5045   001608  0E00               	movlw	0
  5046   00160A  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  5047   00160C  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  5048   00160E  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  5049   001610  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  5050   001612  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  5051   001614  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  5052   001616  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  5053   001618                     l2821:
  5054                           
  5055                           ; BSR set to: 0
  5056   001618  5168               	movf	___aomod@divisor& (0+255),w,b
  5057   00161A  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  5058   00161C  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  5059   00161E  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  5060   001620  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  5061   001622  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  5062   001624  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  5063   001626  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  5064   001628  B4D8               	btfsc	status,2,c
  5065   00162A  EF19  F00B         	goto	u2641
  5066   00162E  EF1B  F00B         	goto	u2640
  5067   001632                     u2641:
  5068   001632  EF63  F00B         	goto	l2837
  5069   001636                     u2640:
  5070   001636                     
  5071                           ; BSR set to: 0
  5072   001636  0E01               	movlw	1
  5073   001638  6F70               	movwf	___aomod@counter& (0+255),b
  5074   00163A  EF29  F00B         	goto	l2827
  5075   00163E                     l2825:
  5076                           
  5077                           ; BSR set to: 0
  5078   00163E  90D8               	bcf	status,0,c
  5079   001640  3768               	rlcf	___aomod@divisor& (0+255),f,b
  5080   001642  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  5081   001644  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  5082   001646  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  5083   001648  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  5084   00164A  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  5085   00164C  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  5086   00164E  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  5087   001650  2B70               	incf	___aomod@counter& (0+255),f,b
  5088   001652                     l2827:
  5089                           
  5090                           ; BSR set to: 0
  5091   001652  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  5092   001654  EF2E  F00B         	goto	u2651
  5093   001658  EF30  F00B         	goto	u2650
  5094   00165C                     u2651:
  5095   00165C  EF1F  F00B         	goto	l2825
  5096   001660                     u2650:
  5097   001660                     l2829:
  5098                           
  5099                           ; BSR set to: 0
  5100   001660  5168               	movf	___aomod@divisor& (0+255),w,b
  5101   001662  5D60               	subwf	___aomod@dividend& (0+255),w,b
  5102   001664  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  5103   001666  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  5104   001668  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5105   00166A  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  5106   00166C  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5107   00166E  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  5108   001670  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5109   001672  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  5110   001674  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5111   001676  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  5112   001678  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5113   00167A  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  5114   00167C  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5115   00167E  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  5116   001680  A0D8               	btfss	status,0,c
  5117   001682  EF45  F00B         	goto	u2661
  5118   001686  EF47  F00B         	goto	u2660
  5119   00168A                     u2661:
  5120   00168A  EF57  F00B         	goto	l2833
  5121   00168E                     u2660:
  5122   00168E                     
  5123                           ; BSR set to: 0
  5124   00168E  5168               	movf	___aomod@divisor& (0+255),w,b
  5125   001690  5F60               	subwf	___aomod@dividend& (0+255),f,b
  5126   001692  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  5127   001694  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  5128   001696  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  5129   001698  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  5130   00169A  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  5131   00169C  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  5132   00169E  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  5133   0016A0  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  5134   0016A2  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  5135   0016A4  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  5136   0016A6  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  5137   0016A8  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  5138   0016AA  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  5139   0016AC  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  5140   0016AE                     l2833:
  5141                           
  5142                           ; BSR set to: 0
  5143   0016AE  90D8               	bcf	status,0,c
  5144   0016B0  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  5145   0016B2  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  5146   0016B4  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  5147   0016B6  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  5148   0016B8  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  5149   0016BA  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  5150   0016BC  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  5151   0016BE  3368               	rrcf	___aomod@divisor& (0+255),f,b
  5152   0016C0                     
  5153                           ; BSR set to: 0
  5154   0016C0  2F70               	decfsz	___aomod@counter& (0+255),f,b
  5155   0016C2  EF30  F00B         	goto	l2829
  5156   0016C6                     l2837:
  5157                           
  5158                           ; BSR set to: 0
  5159   0016C6  5171               	movf	___aomod@sign& (0+255),w,b
  5160   0016C8  B4D8               	btfsc	status,2,c
  5161   0016CA  EF69  F00B         	goto	u2671
  5162   0016CE  EF6B  F00B         	goto	u2670
  5163   0016D2                     u2671:
  5164   0016D2  EF7B  F00B         	goto	l2841
  5165   0016D6                     u2670:
  5166   0016D6                     
  5167                           ; BSR set to: 0
  5168   0016D6  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  5169   0016D8  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  5170   0016DA  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  5171   0016DC  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  5172   0016DE  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  5173   0016E0  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  5174   0016E2  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  5175   0016E4  6D60               	negf	___aomod@dividend& (0+255),b
  5176   0016E6  0E00               	movlw	0
  5177   0016E8  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  5178   0016EA  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  5179   0016EC  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  5180   0016EE  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  5181   0016F0  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  5182   0016F2  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  5183   0016F4  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  5184   0016F6                     l2841:
  5185                           
  5186                           ; BSR set to: 0
  5187   0016F6  C060  F060         	movff	___aomod@dividend,?___aomod
  5188   0016FA  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  5189   0016FE  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  5190   001702  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  5191   001706  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  5192   00170A  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  5193   00170E  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  5194   001712  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  5195   001716                     
  5196                           ; BSR set to: 0
  5197   001716  0012               	return		;funcret
  5198   001718                     __end_of___aomod:
  5199                           	callstack 0
  5200                           
  5201 ;; *************** function ___aodiv *****************
  5202 ;; Defined at:
  5203 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  dividend        8    0[BANK0 ] long long 
  5206 ;;  divisor         8    8[BANK0 ] long long 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  quotient        8   18[BANK0 ] long long 
  5209 ;;  sign            1   17[BANK0 ] unsigned char 
  5210 ;;  counter         1   16[BANK0 ] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  8    0[BANK0 ] long long 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5220 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5221 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5223 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;Total ram usage:       26 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 4
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_dtoa
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text32
  5235   001428                     __ptext32:
  5236                           	callstack 0
  5237   001428                     ___aodiv:
  5238                           	callstack 21
  5239   001428  0E00               	movlw	0
  5240   00142A  0100               	movlb	0	; () banked
  5241   00142C  6F71               	movwf	___aodiv@sign& (0+255),b
  5242   00142E                     
  5243                           ; BSR set to: 0
  5244   00142E  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  5245   001430  EF1E  F00A         	goto	u2550
  5246   001434  EF1C  F00A         	goto	u2551
  5247   001438                     u2551:
  5248   001438  EF30  F00A         	goto	l2773
  5249   00143C                     u2550:
  5250   00143C                     
  5251                           ; BSR set to: 0
  5252   00143C  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  5253   00143E  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  5254   001440  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  5255   001442  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  5256   001444  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  5257   001446  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  5258   001448  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  5259   00144A  6D68               	negf	___aodiv@divisor& (0+255),b
  5260   00144C  0E00               	movlw	0
  5261   00144E  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  5262   001450  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  5263   001452  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  5264   001454  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  5265   001456  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  5266   001458  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  5267   00145A  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  5268   00145C                     
  5269                           ; BSR set to: 0
  5270   00145C  0E01               	movlw	1
  5271   00145E  6F71               	movwf	___aodiv@sign& (0+255),b
  5272   001460                     l2773:
  5273                           
  5274                           ; BSR set to: 0
  5275   001460  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  5276   001462  EF37  F00A         	goto	u2560
  5277   001466  EF35  F00A         	goto	u2561
  5278   00146A                     u2561:
  5279   00146A  EF49  F00A         	goto	l2779
  5280   00146E                     u2560:
  5281   00146E                     
  5282                           ; BSR set to: 0
  5283   00146E  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  5284   001470  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  5285   001472  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  5286   001474  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  5287   001476  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  5288   001478  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  5289   00147A  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  5290   00147C  6D60               	negf	___aodiv@dividend& (0+255),b
  5291   00147E  0E00               	movlw	0
  5292   001480  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  5293   001482  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  5294   001484  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  5295   001486  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  5296   001488  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  5297   00148A  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  5298   00148C  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  5299   00148E                     
  5300                           ; BSR set to: 0
  5301   00148E  0E01               	movlw	1
  5302   001490  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  5303   001492                     l2779:
  5304                           
  5305                           ; BSR set to: 0
  5306   001492  EE20  F072         	lfsr	2,___aodiv@quotient
  5307   001496  0E07               	movlw	7
  5308   001498                     u2571:
  5309   001498  6ADE               	clrf	postinc2,c
  5310   00149A  06E8               	decf	wreg,f,c
  5311   00149C  E2FD               	bc	u2571
  5312   00149E                     
  5313                           ; BSR set to: 0
  5314   00149E  5168               	movf	___aodiv@divisor& (0+255),w,b
  5315   0014A0  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  5316   0014A2  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  5317   0014A4  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  5318   0014A6  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  5319   0014A8  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  5320   0014AA  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  5321   0014AC  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  5322   0014AE  B4D8               	btfsc	status,2,c
  5323   0014B0  EF5C  F00A         	goto	u2581
  5324   0014B4  EF5E  F00A         	goto	u2580
  5325   0014B8                     u2581:
  5326   0014B8  EFB0  F00A         	goto	l2801
  5327   0014BC                     u2580:
  5328   0014BC                     
  5329                           ; BSR set to: 0
  5330   0014BC  0E01               	movlw	1
  5331   0014BE  6F70               	movwf	___aodiv@counter& (0+255),b
  5332   0014C0  EF6C  F00A         	goto	l2787
  5333   0014C4                     l2785:
  5334                           
  5335                           ; BSR set to: 0
  5336   0014C4  90D8               	bcf	status,0,c
  5337   0014C6  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  5338   0014C8  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  5339   0014CA  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  5340   0014CC  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  5341   0014CE  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  5342   0014D0  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  5343   0014D2  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  5344   0014D4  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  5345   0014D6  2B70               	incf	___aodiv@counter& (0+255),f,b
  5346   0014D8                     l2787:
  5347                           
  5348                           ; BSR set to: 0
  5349   0014D8  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  5350   0014DA  EF71  F00A         	goto	u2591
  5351   0014DE  EF73  F00A         	goto	u2590
  5352   0014E2                     u2591:
  5353   0014E2  EF62  F00A         	goto	l2785
  5354   0014E6                     u2590:
  5355   0014E6                     l2789:
  5356                           
  5357                           ; BSR set to: 0
  5358   0014E6  90D8               	bcf	status,0,c
  5359   0014E8  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  5360   0014EA  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  5361   0014EC  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  5362   0014EE  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  5363   0014F0  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  5364   0014F2  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  5365   0014F4  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  5366   0014F6  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  5367   0014F8                     
  5368                           ; BSR set to: 0
  5369   0014F8  5168               	movf	___aodiv@divisor& (0+255),w,b
  5370   0014FA  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  5371   0014FC  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  5372   0014FE  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  5373   001500  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  5374   001502  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  5375   001504  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  5376   001506  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  5377   001508  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5378   00150A  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  5379   00150C  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5380   00150E  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  5381   001510  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5382   001512  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  5383   001514  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5384   001516  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  5385   001518  A0D8               	btfss	status,0,c
  5386   00151A  EF91  F00A         	goto	u2601
  5387   00151E  EF93  F00A         	goto	u2600
  5388   001522                     u2601:
  5389   001522  EFA4  F00A         	goto	l2797
  5390   001526                     u2600:
  5391   001526                     
  5392                           ; BSR set to: 0
  5393   001526  5168               	movf	___aodiv@divisor& (0+255),w,b
  5394   001528  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  5395   00152A  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  5396   00152C  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  5397   00152E  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  5398   001530  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  5399   001532  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  5400   001534  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  5401   001536  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5402   001538  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  5403   00153A  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5404   00153C  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  5405   00153E  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5406   001540  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  5407   001542  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5408   001544  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  5409   001546                     
  5410                           ; BSR set to: 0
  5411   001546  8172               	bsf	___aodiv@quotient& (0+255),0,b
  5412   001548                     l2797:
  5413                           
  5414                           ; BSR set to: 0
  5415   001548  90D8               	bcf	status,0,c
  5416   00154A  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  5417   00154C  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  5418   00154E  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  5419   001550  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  5420   001552  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  5421   001554  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  5422   001556  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  5423   001558  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  5424   00155A                     
  5425                           ; BSR set to: 0
  5426   00155A  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  5427   00155C  EF73  F00A         	goto	l2789
  5428   001560                     l2801:
  5429                           
  5430                           ; BSR set to: 0
  5431   001560  5171               	movf	___aodiv@sign& (0+255),w,b
  5432   001562  B4D8               	btfsc	status,2,c
  5433   001564  EFB6  F00A         	goto	u2611
  5434   001568  EFB8  F00A         	goto	u2610
  5435   00156C                     u2611:
  5436   00156C  EFC8  F00A         	goto	l2805
  5437   001570                     u2610:
  5438   001570                     
  5439                           ; BSR set to: 0
  5440   001570  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  5441   001572  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  5442   001574  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  5443   001576  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  5444   001578  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  5445   00157A  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  5446   00157C  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  5447   00157E  6D72               	negf	___aodiv@quotient& (0+255),b
  5448   001580  0E00               	movlw	0
  5449   001582  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  5450   001584  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  5451   001586  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  5452   001588  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  5453   00158A  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  5454   00158C  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  5455   00158E  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  5456   001590                     l2805:
  5457                           
  5458                           ; BSR set to: 0
  5459   001590  C072  F060         	movff	___aodiv@quotient,?___aodiv
  5460   001594  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  5461   001598  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  5462   00159C  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  5463   0015A0  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  5464   0015A4  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  5465   0015A8  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  5466   0015AC  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  5467   0015B0                     
  5468                           ; BSR set to: 0
  5469   0015B0  0012               	return		;funcret
  5470   0015B2                     __end_of___aodiv:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function _HighISR *****************
  5474 ;; Defined at:
  5475 ;;		line 25 in file "interrupts.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;Total ram usage:        5 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 3
  5496 ;; This function calls:
  5497 ;;		_increment_time
  5498 ;; This function is called by:
  5499 ;;		Interrupt level 2
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	intcode
  5504   000008                     __pintcode:
  5505                           	callstack 0
  5506   000008                     _HighISR:
  5507                           	callstack 18
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;incstack = 0
  5511   000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5512   00000A  CFE1 F028          	movff	fsr1l,??_HighISR+1
  5513   00000E  CFE2 F029          	movff	fsr1h,??_HighISR+2
  5514   000012  CFD9 F02A          	movff	fsr2l,??_HighISR+3
  5515   000016  CFDA F02B          	movff	fsr2h,??_HighISR+4
  5516   00001A                     
  5517                           ;interrupts.c: 27:  if(PIR2bits.C1IF){
  5518   00001A  010E               	movlb	14	; () banked
  5519   00001C  A135               	btfss	53,0,b	;volatile
  5520   00001E  EF13  F000         	goto	i2u235_41
  5521   000022  EF15  F000         	goto	i2u235_40
  5522   000026                     i2u235_41:
  5523   000026  EF28  F000         	goto	i2l2651
  5524   00002A                     i2u235_40:
  5525   00002A                     
  5526                           ; BSR set to: 14
  5527                           ;interrupts.c: 28:         LATDbits.LATD7 = !LATDbits.LATD7;
  5528   00002A  AE7C               	btfss	124,7,c	;volatile
  5529   00002C  EF1A  F000         	goto	i2u236_41
  5530   000030  EF1E  F000         	goto	i2u236_40
  5531   000034                     i2u236_41:
  5532   000034  6A27               	clrf	??_HighISR^0,c
  5533   000036  2A27               	incf	??_HighISR^0,f,c
  5534   000038  EF1F  F000         	goto	i2u237_48
  5535   00003C                     i2u236_40:
  5536   00003C  6A27               	clrf	??_HighISR^0,c
  5537   00003E                     i2u237_48:
  5538   00003E  3227               	rrcf	??_HighISR^0,f,c
  5539   000040  3227               	rrcf	??_HighISR^0,f,c
  5540   000042  507C               	movf	124,w,c	;volatile
  5541   000044  1827               	xorwf	??_HighISR^0,w,c
  5542   000046  0B7F               	andlw	-129
  5543   000048  1827               	xorwf	??_HighISR^0,w,c
  5544   00004A  6E7C               	movwf	124,c	;volatile
  5545   00004C                     
  5546                           ;interrupts.c: 29:         PIR2bits.C1IF=0;
  5547   00004C  010E               	movlb	14	; () banked
  5548   00004E  9135               	bcf	53,0,b	;volatile
  5549   000050                     i2l2651:
  5550                           
  5551                           ; BSR set to: 14
  5552                           ;interrupts.c: 31:     if(PIR0bits.TMR0IF){
  5553   000050  AB33               	btfss	51,5,b	;volatile
  5554   000052  EF2D  F000         	goto	i2u238_41
  5555   000056  EF2F  F000         	goto	i2u238_40
  5556   00005A                     i2u238_41:
  5557   00005A  EF4E  F000         	goto	i2l160
  5558   00005E                     i2u238_40:
  5559   00005E                     
  5560                           ; BSR set to: 14
  5561                           ;interrupts.c: 33:         increment_time(1);
  5562   00005E  0E01               	movlw	1
  5563   000060  6E23               	movwf	increment_time@increment^0,c
  5564   000062  0E00               	movlw	0
  5565   000064  6E24               	movwf	(increment_time@increment+1)^0,c
  5566   000066  0E00               	movlw	0
  5567   000068  6E25               	movwf	(increment_time@increment+2)^0,c
  5568   00006A  0E00               	movlw	0
  5569   00006C  6E26               	movwf	(increment_time@increment+3)^0,c
  5570   00006E  ECD3  F00F         	call	_increment_time	;wreg free
  5571   000072                     
  5572                           ;interrupts.c: 35:         if(test_mode == 0){
  5573   000072  5046               	movf	_test_mode^0,w,c
  5574   000074  1047               	iorwf	(_test_mode+1)^0,w,c
  5575   000076  A4D8               	btfss	status,2,c
  5576   000078  EF40  F000         	goto	i2u239_41
  5577   00007C  EF42  F000         	goto	i2u239_40
  5578   000080                     i2u239_41:
  5579   000080  EF48  F000         	goto	i2l2659
  5580   000084                     i2u239_40:
  5581   000084                     
  5582                           ;interrupts.c: 36:             TMR0H = 0b1011;
  5583   000084  0E0B               	movlw	11
  5584   000086  6ED4               	movwf	212,c	;volatile
  5585                           
  5586                           ;interrupts.c: 37:             TMR0L = 0b11011011;
  5587   000088  0EDB               	movlw	219
  5588   00008A  6ED3               	movwf	211,c	;volatile
  5589                           
  5590                           ;interrupts.c: 38:         }else{
  5591   00008C  EF4C  F000         	goto	i2l2661
  5592   000090                     i2l2659:
  5593                           
  5594                           ;interrupts.c: 39:             TMR0H = 0;
  5595   000090  0E00               	movlw	0
  5596   000092  6ED4               	movwf	212,c	;volatile
  5597                           
  5598                           ;interrupts.c: 40:             TMR0L = 0;
  5599   000094  0E00               	movlw	0
  5600   000096  6ED3               	movwf	211,c	;volatile
  5601   000098                     i2l2661:
  5602                           
  5603                           ;interrupts.c: 43:         PIR0bits.TMR0IF = 0;
  5604   000098  010E               	movlb	14	; () banked
  5605   00009A  9B33               	bcf	51,5,b	;volatile
  5606   00009C                     i2l160:
  5607                           
  5608                           ; BSR set to: 14
  5609   00009C  C02B  FFDA         	movff	??_HighISR+4,fsr2h
  5610   0000A0  C02A  FFD9         	movff	??_HighISR+3,fsr2l
  5611   0000A4  C029  FFE2         	movff	??_HighISR+2,fsr1h
  5612   0000A8  C028  FFE1         	movff	??_HighISR+1,fsr1l
  5613   0000AC  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5614   0000AE  0011               	retfie		f
  5615   0000B0                     __end_of_HighISR:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function _increment_time *****************
  5619 ;; Defined at:
  5620 ;;		line 90 in file "timers.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  increment       4   34[COMRAM] unsigned long 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;Total ram usage:        4 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; Hardware stack levels required when called: 2
  5641 ;; This function calls:
  5642 ;;		_increment_day
  5643 ;;		i2___lmul
  5644 ;; This function is called by:
  5645 ;;		_HighISR
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text34
  5650   001FA6                     __ptext34:
  5651                           	callstack 0
  5652   001FA6                     _increment_time:
  5653                           	callstack 18
  5654   001FA6                     
  5655                           ;timers.c: 91:     while(increment > 0){
  5656   001FA6  EF26  F010         	goto	i2l2457
  5657   001FAA                     i2l2443:
  5658                           
  5659                           ;timers.c: 92:         if(test_mode == 0){
  5660   001FAA  5046               	movf	_test_mode^0,w,c
  5661   001FAC  1047               	iorwf	(_test_mode+1)^0,w,c
  5662   001FAE  A4D8               	btfss	status,2,c
  5663   001FB0  EFDC  F00F         	goto	i2u202_41
  5664   001FB4  EFDE  F00F         	goto	i2u202_40
  5665   001FB8                     i2u202_41:
  5666   001FB8  EFE9  F00F         	goto	i2l2447
  5667   001FBC                     i2u202_40:
  5668   001FBC                     
  5669                           ;timers.c: 93:             time_counter += increment;
  5670   001FBC  5023               	movf	increment_time@increment^0,w,c
  5671   001FBE  0100               	movlb	0	; () banked
  5672   001FC0  27EE               	addwf	_time_counter& (0+255),f,b
  5673   001FC2  5024               	movf	(increment_time@increment+1)^0,w,c
  5674   001FC4  23EF               	addwfc	(_time_counter+1)& (0+255),f,b
  5675   001FC6  5025               	movf	(increment_time@increment+2)^0,w,c
  5676   001FC8  23F0               	addwfc	(_time_counter+2)& (0+255),f,b
  5677   001FCA  5026               	movf	(increment_time@increment+3)^0,w,c
  5678   001FCC  23F1               	addwfc	(_time_counter+3)& (0+255),f,b
  5679                           
  5680                           ;timers.c: 94:         }else{
  5681   001FCE  EF04  F010         	goto	i2l2449
  5682   001FD2                     i2l2447:
  5683                           
  5684                           ;timers.c: 95:             time_counter += increment*15;
  5685   001FD2  C023  F001         	movff	increment_time@increment,i2___lmul@multiplier
  5686   001FD6  C024  F002         	movff	increment_time@increment+1,i2___lmul@multiplier+1
  5687   001FDA  C025  F003         	movff	increment_time@increment+2,i2___lmul@multiplier+2
  5688   001FDE  C026  F004         	movff	increment_time@increment+3,i2___lmul@multiplier+3
  5689   001FE2  0E0F               	movlw	15
  5690   001FE4  6E05               	movwf	i2___lmul@multiplicand^0,c
  5691   001FE6  0E00               	movlw	0
  5692   001FE8  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  5693   001FEA  0E00               	movlw	0
  5694   001FEC  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  5695   001FEE  0E00               	movlw	0
  5696   001FF0  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  5697   001FF2  ECAE  F011         	call	i2___lmul	;wreg free
  5698   001FF6  5001               	movf	?i2___lmul^0,w,c
  5699   001FF8  0100               	movlb	0	; () banked
  5700   001FFA  27EE               	addwf	_time_counter& (0+255),f,b
  5701   001FFC  5002               	movf	(?i2___lmul+1)^0,w,c
  5702   001FFE  23EF               	addwfc	(_time_counter+1)& (0+255),f,b
  5703   002000  5003               	movf	(?i2___lmul+2)^0,w,c
  5704   002002  23F0               	addwfc	(_time_counter+2)& (0+255),f,b
  5705   002004  5004               	movf	(?i2___lmul+3)^0,w,c
  5706   002006  23F1               	addwfc	(_time_counter+3)& (0+255),f,b
  5707   002008                     i2l2449:
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;timers.c: 97:         if(time_counter >= 86400){
  5711   002008  51F1               	movf	(_time_counter+3)& (0+255),w,b
  5712   00200A  E10D               	bnz	i2u203_40
  5713   00200C  0E80               	movlw	128
  5714   00200E  5DEE               	subwf	_time_counter& (0+255),w,b
  5715   002010  0E51               	movlw	81
  5716   002012  59EF               	subwfb	(_time_counter+1)& (0+255),w,b
  5717   002014  0E01               	movlw	1
  5718   002016  59F0               	subwfb	(_time_counter+2)& (0+255),w,b
  5719   002018  A0D8               	btfss	status,0,c
  5720   00201A  EF11  F010         	goto	i2u203_41
  5721   00201E  EF13  F010         	goto	i2u203_40
  5722   002022                     i2u203_41:
  5723   002022  EF21  F010         	goto	i2l2455
  5724   002026                     i2u203_40:
  5725   002026                     
  5726                           ; BSR set to: 0
  5727                           ;timers.c: 98:             time_counter = 0;
  5728   002026  0E00               	movlw	0
  5729   002028  6FEE               	movwf	_time_counter& (0+255),b
  5730   00202A  0E00               	movlw	0
  5731   00202C  6FEF               	movwf	(_time_counter+1)& (0+255),b
  5732   00202E  0E00               	movlw	0
  5733   002030  6FF0               	movwf	(_time_counter+2)& (0+255),b
  5734   002032  0E00               	movlw	0
  5735   002034  6FF1               	movwf	(_time_counter+3)& (0+255),b
  5736   002036                     
  5737                           ; BSR set to: 0
  5738                           ;timers.c: 99:             increment_day(1);
  5739   002036  0E00               	movlw	0
  5740   002038  6E04               	movwf	(increment_day@increment+1)^0,c
  5741   00203A  0E01               	movlw	1
  5742   00203C  6E03               	movwf	increment_day@increment^0,c
  5743   00203E  ECBD  F00D         	call	_increment_day	;wreg free
  5744   002042                     i2l2455:
  5745                           
  5746                           ;timers.c: 101:     increment -= 1;
  5747   002042  0623               	decf	increment_time@increment^0,f,c
  5748   002044  0E00               	movlw	0
  5749   002046  5A24               	subwfb	(increment_time@increment+1)^0,f,c
  5750   002048  5A25               	subwfb	(increment_time@increment+2)^0,f,c
  5751   00204A  5A26               	subwfb	(increment_time@increment+3)^0,f,c
  5752   00204C                     i2l2457:
  5753                           
  5754                           ;timers.c: 91:     while(increment > 0){
  5755   00204C  5023               	movf	increment_time@increment^0,w,c
  5756   00204E  1024               	iorwf	(increment_time@increment+1)^0,w,c
  5757   002050  1025               	iorwf	(increment_time@increment+2)^0,w,c
  5758   002052  1026               	iorwf	(increment_time@increment+3)^0,w,c
  5759   002054  A4D8               	btfss	status,2,c
  5760   002056  EF2F  F010         	goto	i2u204_41
  5761   00205A  EF31  F010         	goto	i2u204_40
  5762   00205E                     i2u204_41:
  5763   00205E  EFD5  F00F         	goto	i2l2443
  5764   002062                     i2u204_40:
  5765   002062  0012               	return		;funcret
  5766   002064                     __end_of_increment_time:
  5767                           	callstack 0
  5768                           
  5769 ;; *************** function i2___lmul *****************
  5770 ;; Defined at:
  5771 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  multiplier      4    0[COMRAM] unsigned long 
  5774 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  product         4    8[COMRAM] unsigned long 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  4    0[COMRAM] unsigned long 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5786 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;Total ram usage:       12 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_increment_time
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text35
  5800   00235C                     __ptext35:
  5801                           	callstack 0
  5802   00235C                     i2___lmul:
  5803                           	callstack 19
  5804   00235C  0E00               	movlw	0
  5805   00235E  6E09               	movwf	i2___lmul@product^0,c
  5806   002360  0E00               	movlw	0
  5807   002362  6E0A               	movwf	(i2___lmul@product+1)^0,c
  5808   002364  0E00               	movlw	0
  5809   002366  6E0B               	movwf	(i2___lmul@product+2)^0,c
  5810   002368  0E00               	movlw	0
  5811   00236A  6E0C               	movwf	(i2___lmul@product+3)^0,c
  5812   00236C                     i2l2301:
  5813   00236C  A001               	btfss	i2___lmul@multiplier^0,0,c
  5814   00236E  EFBB  F011         	goto	i2u185_41
  5815   002372  EFBD  F011         	goto	i2u185_40
  5816   002376                     i2u185_41:
  5817   002376  EFC5  F011         	goto	i2l2305
  5818   00237A                     i2u185_40:
  5819   00237A  5005               	movf	i2___lmul@multiplicand^0,w,c
  5820   00237C  2609               	addwf	i2___lmul@product^0,f,c
  5821   00237E  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  5822   002380  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  5823   002382  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  5824   002384  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  5825   002386  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  5826   002388  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  5827   00238A                     i2l2305:
  5828   00238A  90D8               	bcf	status,0,c
  5829   00238C  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  5830   00238E  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  5831   002390  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  5832   002392  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  5833   002394  90D8               	bcf	status,0,c
  5834   002396  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  5835   002398  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  5836   00239A  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  5837   00239C  3201               	rrcf	i2___lmul@multiplier^0,f,c
  5838   00239E  5001               	movf	i2___lmul@multiplier^0,w,c
  5839   0023A0  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  5840   0023A2  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  5841   0023A4  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  5842   0023A6  A4D8               	btfss	status,2,c
  5843   0023A8  EFD8  F011         	goto	i2u186_41
  5844   0023AC  EFDA  F011         	goto	i2u186_40
  5845   0023B0                     i2u186_41:
  5846   0023B0  EFB6  F011         	goto	i2l2301
  5847   0023B4                     i2u186_40:
  5848   0023B4  C009  F001         	movff	i2___lmul@product,?i2___lmul
  5849   0023B8  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  5850   0023BC  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  5851   0023C0  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  5852   0023C4  0012               	return		;funcret
  5853   0023C6                     __end_ofi2___lmul:
  5854                           	callstack 0
  5855                           
  5856 ;; *************** function _increment_day *****************
  5857 ;; Defined at:
  5858 ;;		line 105 in file "timers.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  increment       2    2[COMRAM] unsigned int 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  day_in_month   24    8[COMRAM] unsigned int [12]
  5863 ;;  curr_day_in_    2   32[COMRAM] unsigned int 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5874 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5875 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5876 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;Total ram usage:       32 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 1
  5880 ;; This function calls:
  5881 ;;		_increment_month
  5882 ;; This function is called by:
  5883 ;;		_increment_time
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text36
  5888   001B7A                     __ptext36:
  5889                           	callstack 0
  5890   001B7A                     _increment_day:
  5891                           	callstack 18
  5892   001B7A                     
  5893                           ;timers.c: 106:     while(increment > 0){
  5894   001B7A  EF2A  F00E         	goto	i2l2221
  5895   001B7E                     i2l2195:
  5896                           
  5897                           ;timers.c: 108:         unsigned int day_in_month[] = {31,28,31,30,31,30,31,31,30,31,30,
      +                          31};
  5898   001B7E  EE21  F020         	lfsr	2,increment_day@F14261
  5899   001B82  EE10  F009         	lfsr	1,increment_day@day_in_month
  5900   001B86  0E17               	movlw	23
  5901   001B88                     i2u166_41:
  5902   001B88  CFDB FFE3          	movff	plusw2,plusw1
  5903   001B8C  06E8               	decf	wreg,f,c
  5904   001B8E  E2FC               	bc	i2u166_41
  5905   001B90                     
  5906                           ;timers.c: 109:         unsigned int curr_day_in_month = day_in_month[month - 1];
  5907   001B90  C040  F005         	movff	_month,??_increment_day
  5908   001B94  C041  F006         	movff	_month+1,??_increment_day+1
  5909   001B98  90D8               	bcf	status,0,c
  5910   001B9A  3605               	rlcf	??_increment_day^0,f,c
  5911   001B9C  3606               	rlcf	(??_increment_day+1)^0,f,c
  5912   001B9E  0EFE               	movlw	254
  5913   001BA0  2405               	addwf	??_increment_day^0,w,c
  5914   001BA2  6E07               	movwf	(??_increment_day+2)^0,c
  5915   001BA4  0EFF               	movlw	255
  5916   001BA6  2006               	addwfc	(??_increment_day+1)^0,w,c
  5917   001BA8  6E08               	movwf	(??_increment_day+3)^0,c
  5918   001BAA  0E09               	movlw	low increment_day@day_in_month
  5919   001BAC  2407               	addwf	(??_increment_day+2)^0,w,c
  5920   001BAE  6ED9               	movwf	fsr2l,c
  5921   001BB0  0E00               	movlw	high increment_day@day_in_month
  5922   001BB2  2008               	addwfc	(??_increment_day+3)^0,w,c
  5923   001BB4  6EDA               	movwf	fsr2h,c
  5924   001BB6  CFDE F021          	movff	postinc2,increment_day@curr_day_in_month
  5925   001BBA  CFDD F022          	movff	postdec2,increment_day@curr_day_in_month+1
  5926   001BBE                     
  5927                           ;timers.c: 110:         if(month == 2 && (year - 2020)%4 == 0){
  5928   001BBE  0E02               	movlw	2
  5929   001BC0  1840               	xorwf	_month^0,w,c
  5930   001BC2  1041               	iorwf	(_month+1)^0,w,c
  5931   001BC4  A4D8               	btfss	status,2,c
  5932   001BC6  EFE7  F00D         	goto	i2u167_41
  5933   001BCA  EFE9  F00D         	goto	i2u167_40
  5934   001BCE                     i2u167_41:
  5935   001BCE  EF00  F00E         	goto	i2l2205
  5936   001BD2                     i2u167_40:
  5937   001BD2  0E1C               	movlw	28
  5938   001BD4  243E               	addwf	_year^0,w,c
  5939   001BD6  6E05               	movwf	??_increment_day^0,c
  5940   001BD8  0EF8               	movlw	248
  5941   001BDA  203F               	addwfc	(_year+1)^0,w,c
  5942   001BDC  6E06               	movwf	(??_increment_day+1)^0,c
  5943   001BDE  0E03               	movlw	3
  5944   001BE0  1605               	andwf	??_increment_day^0,f,c
  5945   001BE2  0E00               	movlw	0
  5946   001BE4  1606               	andwf	(??_increment_day+1)^0,f,c
  5947   001BE6  5005               	movf	??_increment_day^0,w,c
  5948   001BE8  1006               	iorwf	(??_increment_day+1)^0,w,c
  5949   001BEA  A4D8               	btfss	status,2,c
  5950   001BEC  EFFA  F00D         	goto	i2u168_41
  5951   001BF0  EFFC  F00D         	goto	i2u168_40
  5952   001BF4                     i2u168_41:
  5953   001BF4  EF00  F00E         	goto	i2l2205
  5954   001BF8                     i2u168_40:
  5955   001BF8                     
  5956                           ;timers.c: 111:             curr_day_in_month = 29;
  5957   001BF8  0E00               	movlw	0
  5958   001BFA  6E22               	movwf	(increment_day@curr_day_in_month+1)^0,c
  5959   001BFC  0E1D               	movlw	29
  5960   001BFE  6E21               	movwf	increment_day@curr_day_in_month^0,c
  5961   001C00                     i2l2205:
  5962                           
  5963                           ;timers.c: 114:         day += 1;
  5964   001C00  4A42               	infsnz	_day^0,f,c
  5965   001C02  2A43               	incf	(_day+1)^0,f,c
  5966   001C04                     
  5967                           ;timers.c: 115:         day_of_the_week += 1;
  5968   001C04  4A44               	infsnz	_day_of_the_week^0,f,c
  5969   001C06  2A45               	incf	(_day_of_the_week+1)^0,f,c
  5970   001C08                     
  5971                           ;timers.c: 117:         if(day_of_the_week == 8){
  5972   001C08  0E08               	movlw	8
  5973   001C0A  1844               	xorwf	_day_of_the_week^0,w,c
  5974   001C0C  1045               	iorwf	(_day_of_the_week+1)^0,w,c
  5975   001C0E  A4D8               	btfss	status,2,c
  5976   001C10  EF0C  F00E         	goto	i2u169_41
  5977   001C14  EF0E  F00E         	goto	i2u169_40
  5978   001C18                     i2u169_41:
  5979   001C18  EF12  F00E         	goto	i2l2213
  5980   001C1C                     i2u169_40:
  5981   001C1C                     
  5982                           ;timers.c: 118:             day_of_the_week = 1;
  5983   001C1C  0E00               	movlw	0
  5984   001C1E  6E45               	movwf	(_day_of_the_week+1)^0,c
  5985   001C20  0E01               	movlw	1
  5986   001C22  6E44               	movwf	_day_of_the_week^0,c
  5987   001C24                     i2l2213:
  5988                           
  5989                           ;timers.c: 121:         if(day > curr_day_in_month){
  5990   001C24  5042               	movf	_day^0,w,c
  5991   001C26  5C21               	subwf	increment_day@curr_day_in_month^0,w,c
  5992   001C28  5043               	movf	(_day+1)^0,w,c
  5993   001C2A  5822               	subwfb	(increment_day@curr_day_in_month+1)^0,w,c
  5994   001C2C  B0D8               	btfsc	status,0,c
  5995   001C2E  EF1B  F00E         	goto	i2u170_41
  5996   001C32  EF1D  F00E         	goto	i2u170_40
  5997   001C36                     i2u170_41:
  5998   001C36  EF27  F00E         	goto	i2l2219
  5999   001C3A                     i2u170_40:
  6000   001C3A                     
  6001                           ;timers.c: 122:             increment_month(1);
  6002   001C3A  0E00               	movlw	0
  6003   001C3C  6E02               	movwf	(increment_month@increment+1)^0,c
  6004   001C3E  0E01               	movlw	1
  6005   001C40  6E01               	movwf	increment_month@increment^0,c
  6006   001C42  EC59  F012         	call	_increment_month	;wreg free
  6007   001C46                     
  6008                           ;timers.c: 123:             day = 1;
  6009   001C46  0E00               	movlw	0
  6010   001C48  6E43               	movwf	(_day+1)^0,c
  6011   001C4A  0E01               	movlw	1
  6012   001C4C  6E42               	movwf	_day^0,c
  6013   001C4E                     i2l2219:
  6014                           
  6015                           ;timers.c: 126:         increment -= 1;
  6016   001C4E  0603               	decf	increment_day@increment^0,f,c
  6017   001C50  A0D8               	btfss	status,0,c
  6018   001C52  0604               	decf	(increment_day@increment+1)^0,f,c
  6019   001C54                     i2l2221:
  6020                           
  6021                           ;timers.c: 106:     while(increment > 0){
  6022   001C54  5003               	movf	increment_day@increment^0,w,c
  6023   001C56  1004               	iorwf	(increment_day@increment+1)^0,w,c
  6024   001C58  A4D8               	btfss	status,2,c
  6025   001C5A  EF31  F00E         	goto	i2u171_41
  6026   001C5E  EF33  F00E         	goto	i2u171_40
  6027   001C62                     i2u171_41:
  6028   001C62  EFBF  F00D         	goto	i2l2195
  6029   001C66                     i2u171_40:
  6030   001C66  0012               	return		;funcret
  6031   001C68                     __end_of_increment_day:
  6032                           	callstack 0
  6033                           
  6034 ;; *************** function _increment_month *****************
  6035 ;; Defined at:
  6036 ;;		line 143 in file "timers.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  increment       2    0[COMRAM] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;Total ram usage:        2 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_increment_day
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text37
  6064   0024B2                     __ptext37:
  6065                           	callstack 0
  6066   0024B2                     _increment_month:
  6067                           	callstack 18
  6068   0024B2                     
  6069                           ;timers.c: 144:     while(increment > 0){
  6070   0024B2  EF71  F012         	goto	i2l2167
  6071   0024B6                     i2l2157:
  6072                           
  6073                           ;timers.c: 146:         month += 1;
  6074   0024B6  4A40               	infsnz	_month^0,f,c
  6075   0024B8  2A41               	incf	(_month+1)^0,f,c
  6076   0024BA                     
  6077                           ;timers.c: 147:         if(month > 12){
  6078   0024BA  5041               	movf	(_month+1)^0,w,c
  6079   0024BC  E109               	bnz	i2u162_40
  6080   0024BE  0E0D               	movlw	13
  6081   0024C0  5C40               	subwf	_month^0,w,c
  6082   0024C2  A0D8               	btfss	status,0,c
  6083   0024C4  EF66  F012         	goto	i2u162_41
  6084   0024C8  EF68  F012         	goto	i2u162_40
  6085   0024CC                     i2u162_41:
  6086   0024CC  EF6E  F012         	goto	i2l2165
  6087   0024D0                     i2u162_40:
  6088   0024D0                     
  6089                           ;timers.c: 148:             month = 1;
  6090   0024D0  0E00               	movlw	0
  6091   0024D2  6E41               	movwf	(_month+1)^0,c
  6092   0024D4  0E01               	movlw	1
  6093   0024D6  6E40               	movwf	_month^0,c
  6094   0024D8                     
  6095                           ;timers.c: 149:             year += 1;
  6096   0024D8  4A3E               	infsnz	_year^0,f,c
  6097   0024DA  2A3F               	incf	(_year+1)^0,f,c
  6098   0024DC                     i2l2165:
  6099                           
  6100                           ;timers.c: 151:         increment -= 1;
  6101   0024DC  0601               	decf	increment_month@increment^0,f,c
  6102   0024DE  A0D8               	btfss	status,0,c
  6103   0024E0  0602               	decf	(increment_month@increment+1)^0,f,c
  6104   0024E2                     i2l2167:
  6105                           
  6106                           ;timers.c: 144:     while(increment > 0){
  6107   0024E2  5001               	movf	increment_month@increment^0,w,c
  6108   0024E4  1002               	iorwf	(increment_month@increment+1)^0,w,c
  6109   0024E6  A4D8               	btfss	status,2,c
  6110   0024E8  EF78  F012         	goto	i2u163_41
  6111   0024EC  EF7A  F012         	goto	i2u163_40
  6112   0024F0                     i2u163_41:
  6113   0024F0  EF5B  F012         	goto	i2l2157
  6114   0024F4                     i2u163_40:
  6115   0024F4  0012               	return		;funcret
  6116   0024F6                     __end_of_increment_month:
  6117                           	callstack 0
  6118                           
  6119                           	psect	rparam
  6120   000000                     
  6121                           	psect	temp
  6122   000048                     btemp:
  6123                           	callstack 0
  6124   000048                     	ds	1
  6125   000000                     int$flags	set	btemp
  6126   000000                     wtemp8	set	btemp+1
  6127   000000                     ttemp5	set	btemp+1
  6128   000000                     ttemp6	set	btemp+4
  6129   000000                     ttemp7	set	btemp+8
  6130                           
  6131                           	psect	idloc
  6132                           
  6133                           ;Config register IDLOC0 @ 0x200000
  6134                           ;	unspecified, using default values
  6135   200000                     	org	2097152
  6136   200000  0FFF               	dw	4095
  6137                           
  6138                           ;Config register IDLOC1 @ 0x200002
  6139                           ;	unspecified, using default values
  6140   200002                     	org	2097154
  6141   200002  0FFF               	dw	4095
  6142                           
  6143                           ;Config register IDLOC2 @ 0x200004
  6144                           ;	unspecified, using default values
  6145   200004                     	org	2097156
  6146   200004  0FFF               	dw	4095
  6147                           
  6148                           ;Config register IDLOC3 @ 0x200006
  6149                           ;	unspecified, using default values
  6150   200006                     	org	2097158
  6151   200006  0FFF               	dw	4095
  6152                           
  6153                           ;Config register IDLOC4 @ 0x200008
  6154                           ;	unspecified, using default values
  6155   200008                     	org	2097160
  6156   200008  0FFF               	dw	4095
  6157                           
  6158                           ;Config register IDLOC5 @ 0x20000A
  6159                           ;	unspecified, using default values
  6160   20000A                     	org	2097162
  6161   20000A  0FFF               	dw	4095
  6162                           
  6163                           ;Config register IDLOC6 @ 0x20000C
  6164                           ;	unspecified, using default values
  6165   20000C                     	org	2097164
  6166   20000C  0FFF               	dw	4095
  6167                           
  6168                           ;Config register IDLOC7 @ 0x20000E
  6169                           ;	unspecified, using default values
  6170   20000E                     	org	2097166
  6171   20000E  0FFF               	dw	4095
  6172                           
  6173                           	psect	config
  6174                           
  6175                           ;Config register CONFIG1L @ 0x300000
  6176                           ;	External Oscillator mode Selection bits
  6177                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6178                           ;	Power-up default value for COSC bits
  6179                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6180   300000                     	org	3145728
  6181   300000  AA                 	db	170
  6182                           
  6183                           ;Config register CONFIG1H @ 0x300001
  6184                           ;	unspecified, using default values
  6185                           ;	Clock Out Enable bit
  6186                           ;	CLKOUTEN = 0x1, unprogrammed default
  6187                           ;	Clock Switch Enable bit
  6188                           ;	CSWEN = 0x1, unprogrammed default
  6189                           ;	Fail-Safe Clock Monitor Enable bit
  6190                           ;	FCMEN = 0x1, unprogrammed default
  6191   300001                     	org	3145729
  6192   300001  FF                 	db	255
  6193                           
  6194                           ;Config register CONFIG2L @ 0x300002
  6195                           ;	unspecified, using default values
  6196                           ;	Master Clear Enable bit
  6197                           ;	MCLRE = 0x1, unprogrammed default
  6198                           ;	Power-up Timer Enable bit
  6199                           ;	PWRTE = 0x1, unprogrammed default
  6200                           ;	Low-power BOR enable bit
  6201                           ;	LPBOREN = 0x1, unprogrammed default
  6202                           ;	Brown-out Reset Enable bits
  6203                           ;	BOREN = 0x3, unprogrammed default
  6204   300002                     	org	3145730
  6205   300002  FF                 	db	255
  6206                           
  6207                           ;Config register CONFIG2H @ 0x300003
  6208                           ;	unspecified, using default values
  6209                           ;	Brown Out Reset Voltage selection bits
  6210                           ;	BORV = 0x3, unprogrammed default
  6211                           ;	ZCD Disable bit
  6212                           ;	ZCD = 0x1, unprogrammed default
  6213                           ;	PPSLOCK bit One-Way Set Enable bit
  6214                           ;	PPS1WAY = 0x1, unprogrammed default
  6215                           ;	Stack Full/Underflow Reset Enable bit
  6216                           ;	STVREN = 0x1, unprogrammed default
  6217                           ;	Debugger Enable bit
  6218                           ;	DEBUG = 0x1, unprogrammed default
  6219                           ;	Extended Instruction Set Enable bit
  6220                           ;	XINST = 0x1, unprogrammed default
  6221   300003                     	org	3145731
  6222   300003  FF                 	db	255
  6223                           
  6224                           ;Config register CONFIG3L @ 0x300004
  6225                           ;	WDT Period Select bits
  6226                           ;	WDTCPS = 0x1F, unprogrammed default
  6227                           ;	WDT operating mode
  6228                           ;	WDTE = OFF, WDT Disabled
  6229   300004                     	org	3145732
  6230   300004  9F                 	db	159
  6231                           
  6232                           ;Config register CONFIG3H @ 0x300005
  6233                           ;	unspecified, using default values
  6234                           ;	WDT Window Select bits
  6235                           ;	WDTCWS = 0x7, unprogrammed default
  6236                           ;	WDT input clock selector
  6237                           ;	WDTCCS = 0x7, unprogrammed default
  6238   300005                     	org	3145733
  6239   300005  FF                 	db	255
  6240                           
  6241                           ;Config register CONFIG4L @ 0x300006
  6242                           ;	unspecified, using default values
  6243                           ;	Write Protection Block 0
  6244                           ;	WRT0 = 0x1, unprogrammed default
  6245                           ;	Write Protection Block 1
  6246                           ;	WRT1 = 0x1, unprogrammed default
  6247                           ;	Write Protection Block 2
  6248                           ;	WRT2 = 0x1, unprogrammed default
  6249                           ;	Write Protection Block 3
  6250                           ;	WRT3 = 0x1, unprogrammed default
  6251                           ;	Write Protection Block 3
  6252                           ;	WRT4 = 0x1, unprogrammed default
  6253                           ;	Write Protection Block 3
  6254                           ;	WRT5 = 0x1, unprogrammed default
  6255                           ;	Write Protection Block 3
  6256                           ;	WRT6 = 0x1, unprogrammed default
  6257                           ;	Write Protection Block 3
  6258                           ;	WRT7 = 0x1, unprogrammed default
  6259   300006                     	org	3145734
  6260   300006  FF                 	db	255
  6261                           
  6262                           ;Config register CONFIG4H @ 0x300007
  6263                           ;	unspecified, using default values
  6264                           ;	Configuration Register Write Protection bit
  6265                           ;	WRTC = 0x1, unprogrammed default
  6266                           ;	Boot Block Write Protection bit
  6267                           ;	WRTB = 0x1, unprogrammed default
  6268                           ;	Data EEPROM Write Protection bit
  6269                           ;	WRTD = 0x1, unprogrammed default
  6270                           ;	Scanner Enable bit
  6271                           ;	SCANE = 0x1, unprogrammed default
  6272                           ;	Low Voltage Programming Enable bit
  6273                           ;	LVP = 0x1, unprogrammed default
  6274   300007                     	org	3145735
  6275   300007  FF                 	db	255
  6276                           
  6277                           ;Config register CONFIG5L @ 0x300008
  6278                           ;	unspecified, using default values
  6279                           ;	UserNVM Program Memory Code Protection bit
  6280                           ;	CP = 0x1, unprogrammed default
  6281                           ;	DataNVM Memory Code Protection bit
  6282                           ;	CPD = 0x1, unprogrammed default
  6283   300008                     	org	3145736
  6284   300008  FF                 	db	255
  6285                           
  6286                           ;Config register CONFIG5H @ 0x300009
  6287                           ;	unspecified, using default values
  6288   300009                     	org	3145737
  6289   300009  FF                 	db	255
  6290                           
  6291                           ;Config register CONFIG6L @ 0x30000A
  6292                           ;	unspecified, using default values
  6293                           ;	Table Read Protection Block 0
  6294                           ;	EBTR0 = 0x1, unprogrammed default
  6295                           ;	Table Read Protection Block 1
  6296                           ;	EBTR1 = 0x1, unprogrammed default
  6297                           ;	Table Read Protection Block 2
  6298                           ;	EBTR2 = 0x1, unprogrammed default
  6299                           ;	Table Read Protection Block 3
  6300                           ;	EBTR3 = 0x1, unprogrammed default
  6301                           ;	Table Read Protection Block 4
  6302                           ;	EBTR4 = 0x1, unprogrammed default
  6303                           ;	Table Read Protection Block 5
  6304                           ;	EBTR5 = 0x1, unprogrammed default
  6305                           ;	Table Read Protection Block 6
  6306                           ;	EBTR6 = 0x1, unprogrammed default
  6307                           ;	Table Read Protection Block 7
  6308                           ;	EBTR7 = 0x1, unprogrammed default
  6309   30000A                     	org	3145738
  6310   30000A  FF                 	db	255
  6311                           
  6312                           ;Config register CONFIG6H @ 0x30000B
  6313                           ;	unspecified, using default values
  6314                           ;	Boot Block Table Read Protection bit
  6315                           ;	EBTRB = 0x1, unprogrammed default
  6316   30000B                     	org	3145739
  6317   30000B  FF                 	db	255
  6318                           tosu	equ	0xFFF
  6319                           tosh	equ	0xFFE
  6320                           tosl	equ	0xFFD
  6321                           stkptr	equ	0xFFC
  6322                           pclatu	equ	0xFFB
  6323                           pclath	equ	0xFFA
  6324                           pcl	equ	0xFF9
  6325                           tblptru	equ	0xFF8
  6326                           tblptrh	equ	0xFF7
  6327                           tblptrl	equ	0xFF6
  6328                           tablat	equ	0xFF5
  6329                           prodh	equ	0xFF4
  6330                           prodl	equ	0xFF3
  6331                           indf0	equ	0xFEF
  6332                           postinc0	equ	0xFEE
  6333                           postdec0	equ	0xFED
  6334                           preinc0	equ	0xFEC
  6335                           plusw0	equ	0xFEB
  6336                           fsr0h	equ	0xFEA
  6337                           fsr0l	equ	0xFE9
  6338                           wreg	equ	0xFE8
  6339                           indf1	equ	0xFE7
  6340                           postinc1	equ	0xFE6
  6341                           postdec1	equ	0xFE5
  6342                           preinc1	equ	0xFE4
  6343                           plusw1	equ	0xFE3
  6344                           fsr1h	equ	0xFE2
  6345                           fsr1l	equ	0xFE1
  6346                           bsr	equ	0xFE0
  6347                           indf2	equ	0xFDF
  6348                           postinc2	equ	0xFDE
  6349                           postdec2	equ	0xFDD
  6350                           preinc2	equ	0xFDC
  6351                           plusw2	equ	0xFDB
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        32
    BSS         55
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      71
    BANK0           160    137     146
    BANK1           256      0      56
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2137$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2084$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2084$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    ADC2String@buf	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    LCD_sendstring@strlst	PTR PTR unsigned char  size(2) Largest target is 16
		 -> main@text(BANK0[16]), 

    main@text	PTR unsigned char [8] size(2) Largest target is 3561
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), NULL(NULL[0]), 
		 -> RAM(DATA[3561]), 

    main@F14268	PTR unsigned char [8] size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->_increment_time
    _increment_time->_increment_day
    _increment_day->_increment_month

Critical Paths under _main in BANK0

    _main->_ADC2String
    _get_hour->___lwdiv
    ___xxtofl->_get_hour
    _Timer0_init->___lmul
    _LEDarray_disp_bin->___fltol
    _LCD_sendstring->_LCD_setline
    _LCD_setline->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   19655
                                            111 BANK0     26    26      0
                         _ADC2String
                         _ADC_getval
                           _ADC_init
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                             ___flge
                            ___fltol
                           ___xxtofl
                           _get_hour
 ---------------------------------------------------------------------------------
 (1) _get_hour                                             2     0      2     961
                                              7 BANK0      2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     961
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              9 BANK0     14    10      4
                           _get_hour (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     626
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                         22     4     18    1593
                                             12 BANK0     22     4     18
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     746
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     549
                                             10 BANK0      2     0      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       6     4      2    4775
                                              4 BANK0      6     4      2
                       _LCD_sendbyte
                        _LCD_setline
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0    2355
                                              3 BANK0      1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    2231
                                              3 BANK0      2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         2     1      1    2107
                                              1 BANK0      2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0     124
                                              0 BANK0      1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      68
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC2String                                           4     0      4    7558
                                            107 BANK0      4     0      4
                         _ADC_getval (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    7316
                                             88 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             80 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             62 BANK0     18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             27 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             5     5      0     533
                                             38 COMRAM     5     5      0
                     _increment_time
 ---------------------------------------------------------------------------------
 (11) _increment_time                                      4     0      4     533
                                             34 COMRAM     4     0      4
                      _increment_day
                           i2___lmul
 ---------------------------------------------------------------------------------
 (12) i2___lmul                                           12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (12) _increment_day                                      32    30      2     246
                                              2 COMRAM    32    30      2
                    _increment_month
 ---------------------------------------------------------------------------------
 (13) _increment_month                                     2     0      2      99
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC2String
     _ADC_getval (ARG)
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _ADC_getval
   _ADC_init
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
     _LCD_setline
       _LCD_sendbyte
   _LEDarray_disp_bin
     ___fltol (ARG)
   _LEDarray_init
   _Timer0_init
     ___lmul
   ___flge
   ___fltol
   ___xxtofl
     _get_hour (ARG)
       ___lwdiv
   _get_hour

 _HighISR (ROOT)
   _increment_time
     _increment_day
       _increment_month
     i2___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      38       7       21.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      92       5       91.2%
BITBIGSFRllllhh     84      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      47       1       75.5%
BITBIGSFRlllllh     5C      0       0      42        0.0%
BITBIGSFRhhll       43      0       0      34        0.0%
BITBIGSFRlllllh     33      0       0      41        0.0%
BITBIGSFRllllll     32      0       0      47        0.0%
BITBIGSFRhhlhh      1B      0       0      33        0.0%
BITBIGSFRllllhh     14      0       0      36        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllhl      8      0       0      40        0.0%
BITBIGSFRllllll      7      0       0      46        0.0%
BITBIGSFRlllllh      7      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      38        0.0%
BITBIGSFRllllhh      3      0       0      37        0.0%
BITBIGSFRhlh         3      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      43        0.0%
BITBIGSFRllllll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     111      48        0.0%
DATA                 0      0     111       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 07 19:17:27 2022

                                l30 1E2A                                  l31 1E2C  
                                l40 1E98                                  l32 1E40  
                                l41 1E9A                                  l33 1E42  
                                l42 1EAE                                  l34 1E56  
                                l43 1EB0                                  l35 1E58  
                                l27 256E                                  l44 1EC4  
                                l36 1E6C                                  l45 1EC6  
                                l37 1E6E                                  l46 1EDA  
                                l38 1E82                                  l39 1E84  
                                l48 1EDC                                  l99 110E  
                 ??_Interrupts_init 0060                                 l100 11C6  
                               l123 2676                                 l300 234C  
                               l126 25F0                                 l302 235A  
                               l151 2686                                 l208 2610  
                               l305 25CC                                 l323 1B78  
                               l308 211C                                 l350 2630  
                               l271 2580                                 l272 25A0  
                               l329 1B78                                 l337 1FA4  
                               l193 1D46                                 l266 264A  
                               l291 2694                                 l364 22DE  
                               l269 2572                                 l365 22EE  
                               l294 230A                                 l623 1A74  
                               l480 1716                                 l296 2320  
                               l298 2336                                 l618 1A2E  
                               l650 196E                                 l467 15B0  
                               l851 2210                                 l844 2208  
                               _abs 24F6                                 _day 0042  
                               _pad 211E                                 wreg 000FE8  
                      ___fltol@exp1 0069                                l1011 1426  
                              l1022 13BE                                l1031 2416  
                              l1015 1362                                l1008 12CA  
                              ?_abs 0072                                l1108 1E12  
                              l1116 24B0                                l1053 2142  
                              l1062 0EAA                                l1119 269E  
                              l1064 0EB2                                l1057 219A  
                              l1065 0EF8                                l3001 1AAA  
                              l1083 1866                                l3011 1AF8  
                              l3003 1AB8                                l1076 109E  
                              l1093 252E                                l3101 25E6  
                              l3021 1B4A                                l3013 1B0A  
                              l3005 1ACA                                l3031 23E0  
                              l3103 25E8                                l3023 1B58  
                              l3015 1B18                                l3007 1AD8  
                              l3111 1C70                                l1096 2536  
                              l1089 2468                                l3033 23E8  
                              l3105 25EC                                l3025 1B6A  
                              l3017 1B2A                                l3009 1AEA  
                              l3201 1F88                                l3041 2296  
                              l3121 1D06                                l3113 1CE6  
                              l3035 2404                                l3027 23C6  
                              l3107 2678                                l3019 1B38  
                              l3043 22A4                                l3131 1D38  
                              l3123 1D0E                                l3115 1CEE  
                              l3211 19EE                                l3203 1970  
                              l3051 21A6                                l3029 23D8  
                              l3141 2646                                l3045 22B4  
                              l3133 1D44                                l3125 1D10  
                              l3117 1CF6                                l3109 1C68  
                              l3221 1A72                                l3213 19FC  
                              l3205 19A0                                l3061 21DC  
                              l3053 21B8                                l3301 10AC  
                              l3143 2648                                l3135 2632  
                              l3151 209C                                l3071 2538  
                              l3047 22BE                                l3039 2284  
                              l3127 1D12                                l3119 1CFE  
                              l3215 1A0E                                l3207 19B0  
                              l3231 1894                                l3063 21F2  
                              l3055 21C0                                l3311 118C  
                              l3303 10B0                                l3137 263C  
                              l3161 20D2                                l3153 20AA  
                              l3145 2064                                l3081 1E66  
                              l3073 1E14                                l3129 1D24  
                              l3217 1A1C                                l3209 19DE  
                              l3241 18E2                                l3233 18BE  
                              l3225 1868                                l3065 21FA  
                              l3057 21C8                                l3049 219C  
                              l3321 1200                                l3313 11C0  
                              l3305 10B4                                l3139 2644  
                              l3171 2110                                l3163 20DA  
                              l3155 20B2                                l3147 207C  
                              l3091 1ED4                                l3083 1E7C  
                              l3075 1E24                                l3219 1A6C  
                              l3251 190E                                l3235 18C0  
                              l3227 1880                                l2531 12DA  
                              l3067 21FC                                l3059 21D6  
                              l3331 122E                                l3323 120C  
                              l3315 11C8                                l3307 1102  
                              l3181 2598                                l3093 25CE  
                              l3165 20E6                                l3157 20BE  
                              l3149 2096                                l3085 1E92  
                              l3077 1E3A                                l3261 193E  
                              l3237 18D0                                l2541 1318  
                              l2533 12F0                                l2525 1274  
                              l3069 2202                                l3173 25F2  
                              l3333 1236                                l3325 1216  
                              l3317 11D4                                l3309 1106  
                              l3095 25D0                                l3167 20F8  
                              l3159 20C6                                l3087 1EA8  
                              l3079 1E50                                l3263 194E  
                              l3247 18FA                                l3239 18D4  
                              l2551 13A0                                l2543 134A  
                              l2527 1286                                l3335 123E  
                              l3327 121E                                l3319 11DA  
                              l2801 1560                                l3185 2612  
                              l3177 2570                                l3097 25E2  
                              l3169 2104                                l3193 1EE8  
                              l3089 1EBE                                l3265 195E  
                              l3257 1922                                l3249 1904  
                              l2561 13F6                                l2553 13AE  
                              l2545 134C                                l2537 1304  
                              l2529 1294                                l3337 1246  
                              l3329 1226                                l2803 1570  
                              l2811 15B8                                l3179 2588  
                              l3099 25E4                                l3195 1EF2  
                              l3187 1EDE                                l3259 192E  
                              l2563 1406                                l2555 13CC  
                              l2547 1358                                l2539 130C  
                              l3339 125C                                l2805 1590  
                              l2821 1618                                l2813 15C6  
                              l2901 0F9A                                l3197 1F40  
                              l2565 1414                                l2557 13CE  
                              l2549 1394                                l2831 168E  
                              l2823 1636                                l2815 15E6  
                              l2751 1D96                                l2743 1D48  
                              l2911 1058                                l2903 0FA0  
                              l3199 1F82                                l2567 1416  
                              l2559 13D2                                l2841 16F6  
                              l2833 16AE                                l2825 163E  
                              l2817 15EA                                l2809 15B2  
                              l2753 1DCC                                l2745 1D5C  
                              l2761 248A                                l2913 1068  
                              l2905 1004                                l2921 22F4  
                              l2771 145C                                l2835 16C0  
                              l2827 1652                                l2819 15F8  
                              l2747 1D6E                                l2763 2490  
                              l2851 214E                                l2915 106E  
                              l2907 1020                                l2931 2330  
                              l2923 2304                                l3299 10A0  
                              l2781 149E                                l2773 1460  
                              l2765 1428                                l2829 1660  
                              l2837 16C6                                l2861 2512  
                              l2749 1D78                                l2757 246A  
                              l2853 2162                                l2845 211E  
                              l2917 107E                                l2909 103E  
                              l2941 1718                                l2933 2338  
                              l2925 230C                                ?_pad 0070  
                              l2791 14F8                                l2783 14BC  
                              l2775 146E                                l2767 142E  
                              l2839 16D6                                l2759 2478  
                              l2855 2168                                l2847 212E  
                              l2871 0E3E                                l2951 176C  
                              l2943 173C                                l2863 2688  
                              l2935 2346                                l2927 231A  
                              l2793 1526                                l2785 14C4  
                              l2777 148E                                l2769 143C  
                              l2857 2186                                l2849 213A  
                              l2881 0EBA                                l2873 0E54  
                              l2961 182A                                l2953 1788  
                              l2945 174A                                l2865 268A  
                              l2937 234E                                l2929 2322  
                              l2795 1546                                l2787 14D8  
                              l2779 1492                                l2859 24F6  
                              l2891 0EF4                                l2883 0ECA  
                              l2875 0E64                                l2955 17A4  
                              l2947 1758                                l2867 2692  
                              l2939 2352                                l2971 25A6  
                              l2797 1548                                l2789 14E6  
                              l2893 0F00                                l2885 0ED0  
                              l2877 0E84                                l2869 0E1E  
                              l2957 17FA                                l2949 175C  
                              l2965 183C                                l2981 2424  
                              l2973 25B2                                l2799 155A  
                              l2895 0F0A                                l2887 0EE0  
                              l2879 0E9E                                l2983 2442  
                              l2991 266A                                l2975 25BC  
                              l2897 0F10                                l2889 0EEC  
                              l2985 245E                                l2993 2674  
                              l2977 25C4                                l2899 0F94  
                              l2979 2418                                l2995 1A7A  
                              l2989 2664                                l2997 1A8C  
                              l2999 1A9A                                STR_1 0E06  
                              STR_2 0E10                                STR_3 0E0D  
                              STR_4 0E01                                STR_5 0E13  
                              STR_6 0E16                                STR_7 0E19  
                              STR_8 0E0A                                u2200 1346  
                              u3000 21B8                                u2201 1342  
                              u3001 21B4                                u2210 1390  
                              u3010 21D6                                u2211 138C  
                              u3011 21D2                                u3100 1EBE  
                              u2220 13AE                                u3020 21F2  
                              u3101 1EBA                                u2221 13AA  
                              u3021 21EE                                u3110 1ED4  
                              u3030 1E24                                u2230 13BE  
                              u3111 1ED0                                u3031 1E20  
                              u2231 13BA                                u3040 1E3A  
                              u3120 1D24                                u3200 19FC  
                              u2240 13CC                                u3041 1E36  
                              u3121 1D20                                u3201 19F8  
                              u2241 13C8                                u3130 2580  
                              u3050 1E50                                u3210 1A1C  
                              u2250 1406                                u2170 1286  
                              u3131 257C                                u3051 1E4C  
                              u3211 1A18                                u2251 1402  
                              u2171 1282                                u2500 1D5C  
                              u3140 1F3C                                u3060 1E66  
                              u3220 1A6C                                u2260 1414  
                              u2180 1294                                u2501 1D58  
                              u3061 1E62                                u3221 1A68  
                              u2261 1410                                u2181 1290  
                              u2510 1D6E                                u3150 1F72  
                              u3070 1E7C                                u3230 1880  
                              u2190 12F0                                u2511 1D6A  
                              u3071 1E78                                u3231 187C  
                              u2191 12EC                                u2600 1526  
                              u2520 1D96                                u3160 1F82  
                              u3080 1E92                                u3240 18B4  
                              u2601 1522                                u2521 1D92  
                              u3161 1F7E                                u3081 1E8E  
                              u2610 1570                                u2530 1DCC  
                              u3170 1FA4                                u3090 1EA8  
                              u3250 18E2                                u2611 156C  
                              u2531 1DC8                                u3171 1FA0  
                              u3147 1F32                                u3091 1EA4  
                              u3251 18DE                                u2620 15C6  
                              u2700 2512                                u2540 24B0  
                              u3180 19A0                                u3260 18F6  
                              u2621 15C2                                u2701 250E  
                              u2541 24AC                                u3157 1F68  
                              u3181 199C                                u3261 18F2  
                              u3245 18AA                                u2550 143C  
                              u2630 15F8                                u2710 0E50  
                              u3190 19DE                                u3270 191E  
                              u3350 118C                                u2551 1438  
                              u2631 15F4                                u2711 0E4A  
                              u3191 19DA                                u3271 191A  
                              u3351 1188                                u2560 146E  
                              u2640 1636                                u2800 1068  
                              u2720 0E52                                u3280 193E  
                              u3360 11C0                                u2561 146A  
                              u2641 1632                                u2801 1064  
                              u3417 2088                                u3281 193A  
                              u3361 11BC                                u2650 1660  
                              u2730 0E64                                u2810 2304  
                              u3290 194E                                u2571 1498  
                              u2651 165C                                u2731 0E60  
                              u2811 2300                                u3427 209E  
                              u3291 194A                                u3371 1206  
                              u2580 14BC                                u2660 168E  
                              u2740 0E9E                                u2820 231A  
                              u2900 1A8C                                u2581 14B8  
                              u2661 168A                                u2741 0E9A  
                              u2821 2316                                u3437 20AC  
                              u2901 1A88                                u2590 14E6  
                              u2670 16D6                                u2750 0ECA  
                              u2830 2330                                u2910 1AAA  
                              u2591 14E2                                u2671 16D2  
                              u2751 0EC6                                u2831 232C  
                              u3447 20C0                                u2911 1AA6  
                              u2680 212E                                u2760 0EE0  
                              u2840 2346                                u2920 1ACA  
                              u2681 212A                                u2761 0EDC  
                              u2841 2342                                u3457 20D4  
                              u2921 1AC6                                u2690 2186  
                              u2770 1020                                u2850 173C  
                              u2930 1AEA                                u2691 2182  
                              u2771 101C                                u2851 1738  
                              u3467 20EE                                u2931 1AE6  
                              u2780 103E                                u2860 1788  
                              u2940 1B0A                                u2781 103A  
                              u2861 1784                                u3477 25C6  
                              u2941 1B06                                u2790 1058  
                              u2870 17A4                                u2950 1B2A  
                              u2791 1054                                u2871 17A0  
                              u3487 2354                                u2951 1B26  
                              u2960 1B4A                                u3497 268C  
                              u2961 1B46                                u2890 245E  
                              u2970 1B6A                                u2891 245A  
                              u2971 1B66                                u2980 22A4  
                              u2885 25B0                                u2981 22A0  
                              u2886 25B2                                u2990 22DE  
                              u2991 22DA                                abs@a 0072  
                              _dbuf 0100                                _main 10A0  
                              _dtoa 0E1E                                _prec 00EB  
                              _year 003E                                pad@i 0077  
                              pad@p 0074                                fsr0h 000FEA  
                              fsr1h 000FE2                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 0079                                fsr2l 000FD9  
                              btemp 0048                        ?_LCD_setline 0001  
                              start 00B0                    __end_of_ADC_init 264C  
                  __end_of_DAC_init 2678                     __end_of_HighISR 00B0  
                      ___param_bank 000000                          _Comp1_init 25CE  
                             ??_abs 0074                               ??_pad 0076  
                  __end_of_LCD_Init 211E                       ___fltol@sign1 0068  
                   __end_of___aodiv 15B2                               ?_main 0001  
                             ?_dtoa 007B                     __end_of___aomod 1718  
                             _ADPCH 000F5F                     __end_of___fltol 1970  
                   __end_of___lwdiv 2212                               i2l160 009C  
                             i2l251 24F4                               i2l227 2062  
                             i2l238 1C66                               i2l364 23B4  
                             i2l365 23C4                        vfpfcnvrt@fmt 00A0  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
               ___lmul@multiplicand 0064                               _flags 00ED  
                             _fputc 1D48                               _fputs 246A  
                             _month 0040                               pad@fp 0070  
                             _width 00E9                               _putch 269E  
                             dtoa@d 007D                               dtoa@i 009C  
                             dtoa@n 0093                               dtoa@p 008F  
                             dtoa@s 009B                               dtoa@w 0091  
                     ?_LCD_sendbyte 0061                               tablat 000FF5  
                  __end_ofi2___lmul 23C6                               plusw1 000FE3  
                             plusw2 000FDB                               ttemp5 0049  
                             ttemp6 004C                               ttemp7 0050  
                             status 000FD8                               wtemp8 0049  
                   __end_of_sprintf 2418                    ?_increment_month 0001  
                   __initialization 2212                        __end_of_main 1270  
                      __end_of_dtoa 10A0                        ??_ADC2String 00CF  
                 __end_of_LCD_E_TOG 2696                              ??_main 00CF  
                            ??_dtoa 0085                       __activetblptr 000002  
Timer0_init@current_day_of_the_week 0078                              ?_fputc 0060  
                            ?_fputs 0069                              _ADRESH 000F64  
                     ADC2String@buf 00CB                      ??_LCD_sendbyte 0062  
                            ?_putch 0001                              i2l2201 1BD2  
                            i2l2211 1C1C                              i2l2203 1BF8  
                            i2l2213 1C24                              i2l2205 1C00  
                            i2l2221 1C54                              i2l2301 236C  
                            i2l2215 1C3A                              i2l2207 1C04  
                            i2l2303 237A                              i2l2161 24D0  
                            i2l2217 1C46                              i2l2209 1C08  
                            i2l2305 238A                              i2l2163 24D8  
                            i2l2155 24B2                              i2l2219 1C4E  
                            i2l2307 2394                              i2l2165 24DC  
                            i2l2157 24B6                              i2l2159 24BA  
                            i2l2167 24E2                              i2l2193 1B7A  
                            i2l2441 1FA6                              i2l2195 1B7E  
                            i2l2451 2026                              i2l2443 1FAA  
                            i2l2197 1B90                              i2l2453 2036  
                            i2l2445 1FBC                              i2l2199 1BBE  
                            i2l2455 2042                              i2l2447 1FD2  
                            i2l2449 2008                              i2l2457 204C  
                            i2l2299 235C                              i2l2651 0050  
                            i2l2661 0098                              i2l2653 005E  
                            i2l2645 001A                              i2l2655 0072  
                            i2l2647 002A                              i2l2657 0084  
                            i2l2649 004C                              i2l2659 0090  
                         ??_HighISR 0027                    i2___lmul@product 0009  
                __end_of_ADC2String 2632                       main@curr_hour 00E5  
                  __end_of___xxtofl 1428                   _LEDarray_disp_bin 1E14  
                ?_LEDarray_disp_bin 006A                        ??_ADC_getval 0062  
                     ??_Timer0_init 007E                        vfprintf@cfmt 00B6  
                  __end_of_get_hour 2612                              ___flge 1970  
                            ___lmul 2284                           ??___aodiv 0070  
                         ??___aomod 0070                         ?_Comp1_init 0001  
                         ??___fltol 0064                           ??___lwdiv 0064  
               ??_LEDarray_disp_bin 006C                              clear_0 2258  
                            clear_1 2270                              isa$std 000001  
                            pad@buf 0072                       _increment_day 1B7A  
                            dtoa@fp 007B                              fputc@c 0060  
                            fputs@c 006D                              fputs@i 006E  
                      __pdataCOMRAM 003E                              fputs@s 0069  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                         ?_ADC_init 0001                              putch@c 0001  
                         ?_DAC_init 0001                    __end_of_vfprintf 246A  
                         ??_sprintf 00BE                  __end_of_ADC_getval 25A2  
                        ___flge@ff1 0060                          ___flge@ff2 0064  
                      ___xxtofl@arg 0073                        ___xxtofl@exp 0072  
         __end_of_LEDarray_disp_bin 1EDE                        ___xxtofl@val 0069  
                        __accesstop 0060             __end_of__initialization 2276  
                         ?_LCD_Init 0001                 increment_day@F14261 0120  
                     ___rparam_used 000001                          ___fltol@f1 0060  
                     _LEDarray_init 2538                     _Interrupts_init 2678  
                    __pcstackCOMRAM 0001                        __pidataBANK1 264C  
                     __end_of_fputc 1E14                       __end_of_fputs 24B2  
                     __end_of_putch 26A0                      ?_increment_day 0003  
               __end_of_Timer0_init 1D48                           ?i2___lmul 0001  
                        ??_ADC_init 0060                          ??_DAC_init 0060  
                           ??_fputc 0064                             ??_fputs 006D  
                           ??_putch 0060                          __pbssBANK0 00E9  
                        __pbssBANK1 0100                          ??_LCD_Init 0063  
                    _LCD_sendnibble 22F0                          __pnvCOMRAM 0046  
                    ?_LEDarray_init 0001                      _LCD_sendstring 1EDE  
                           ?___flge 0060                             ?___lmul 0060  
              __end_of_LCD_sendbyte 25CE                      ___lmul@product 0068  
                        ??i2___lmul 0009                           ?___xxtofl 0069  
                         ?_get_hour 0067              __end_of_LCD_sendnibble 235C  
           __end_of_Interrupts_init 2688                             _HighISR 0008  
            __end_of_LCD_sendstring 1FA6                           _ADREFbits 000F58  
                   LCD_sendstring@i 0068                             __Hparam 0000  
                           __Lparam 0000                         _Timer0_init 1C68  
                           ___aodiv 1428                             ___aomod 15B2  
                           ___fltol 1868                     ??_increment_day 0005  
                           ___lwdiv 219C                           ?_vfprintf 00B0  
                      __psmallconst 0E00             increment_time@increment 0023  
                           __pcinit 2212                             __ramtop 0E00  
                           __ptext0 10A0                             __ptext1 25F2  
                           __ptext2 219C                             __ptext3 1270  
                           __ptext4 1868                             __ptext5 1970  
                           __ptext6 1C68                             __ptext7 2284  
                           __ptext8 2538                             __ptext9 1E14  
            increment_day@increment 0003                          ??___xxtofl 006D  
                         _LCD_E_TOG 2688                     LCD_setline@line 0063  
                           main@buf 00E3                             _sprintf 23C6  
                    _increment_time 1FA6                          ??_get_hour 0069  
              end_of_initialization 2276                     ?_LCD_sendnibble 0001  
                  ADC_getval@tmpval 0062                             fputc@fp 0062  
                   ??_LEDarray_init 0060                       __Lmediumconst 0000  
                           fputs@fp 006B                     ?_LCD_sendstring 0064  
         Timer0_init@current_minute 006E                   __end_of_vfpfcnvrt 1868  
                           postdec1 000FE5                             postdec2 000FDD  
                      ??_Comp1_init 0060                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                  vfpfcnvrt@convarg 00A6                 i2___lmul@multiplier 0001  
                        main@F14268 002C                          ??_vfprintf 00B6  
            Timer0_init@current_day 0076                           _PORTAbits 000F89  
                         _PORTBbits 000F8A                           _PORTFbits 000F8E  
                         _PORTGbits 000F8F           Timer0_init@init_test_mode 006C  
                     ___xxtofl@sign 0071                          ?_LCD_E_TOG 0001  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
            __end_of_increment_time 2064                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                  __end_of_Comp1_init 25F2  
                       _CM1CON0bits 000ED0                         _CM1CON1bits 000ED1  
                  ?_Interrupts_init 0001                      __end_of___flge 1A76  
                    __end_of___lmul 22F0                         vfpfcnvrt@ap 00A2  
                       vfpfcnvrt@cp 00AE                         vfpfcnvrt@fp 009E  
              LCD_sendnibble@number 0060                       __pidataCOMRAM 2696  
               start_initialization 2212                     ?_increment_time 0023  
                       __end_of_abs 2538                         __end_of_pad 219C  
                      _LCD_sendbyte 25A2                       ??_LCD_setline 0063  
                       vfprintf@fmt 00B2                            ??___flge 0068  
                          ??___lmul 0068                LCD_sendstring@strlst 0064  
                       __pdataBANK1 0120                         __pbssCOMRAM 002C  
                       ??_LCD_E_TOG 0060                       __pcstackBANK0 0060  
                  ___aodiv@dividend 0060                   ??_increment_month 0003  
          increment_month@increment 0001                      _time_corrector 003C  
                          ?_HighISR 0001                           __pnvBANK0 00EE  
                  ___lwdiv@dividend 0060                           _dtoa$2165 008D  
                      ?_Timer0_init 006C           increment_day@day_in_month 0009  
                         __pintcode 0008                            ?___aodiv 0060  
                          ?___aomod 0060                    ___aodiv@quotient 0072  
                          ?___fltol 0060      increment_day@curr_day_in_month 0021  
               __end_of_LCD_setline 1B7A                            ?___lwdiv 0060  
                       __smallconst 0E00                     _day_of_the_week 0044  
                  ??_LCD_sendnibble 0060                            _ADC_init 2632  
                          _DAC_init 2664                    ___lwdiv@quotient 0065  
                  ??_LCD_sendstring 0066                            ?_sprintf 00B8  
                  LCD_sendbyte@Byte 0062                            _LCD_Init 2064  
                  LCD_sendbyte@type 0061                            _LATAbits 000F79  
                          _LATBbits 000F7A                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                   ADC2String@ADC_val 00CD  
                          _PIE0bits 000E29                            _IPR2bits 000E21  
                          _PIE2bits 000E2B                            i2u202_40 1FBC  
                          i2u202_41 1FB8                            i2u203_40 2026  
                          i2u203_41 2022                            i2u204_40 2062  
                          i2u204_41 205E                            i2u162_40 24D0  
                          i2u170_40 1C3A                            i2u162_41 24CC  
                          i2u170_41 1C36                            i2u163_40 24F4  
                          i2u171_40 1C66                            i2u235_40 002A  
                          i2u163_41 24F0                            i2u171_41 1C62  
                          i2u235_41 0026                            i2u236_40 003C  
                          i2u236_41 0034                            i2u238_40 005E  
                          i2u237_48 003E                            i2u166_41 1B88  
                          i2u238_41 005A                            i2u167_40 1BD2  
                          i2u239_40 0084                            i2u167_41 1BCE  
                          i2u239_41 0080                            _PIR0bits 000E33  
                          i2u168_40 1BF8                            i2u168_41 1BF4  
                          i2u169_40 1C1C                            i2u185_40 237A  
                          i2u169_41 1C18                            i2u185_41 2376  
                          i2u186_40 23B4                            i2u186_41 23B0  
                          _PIR2bits 000E35                          _ADC2String 2612  
                         _test_mode 0046                           _vfpfcnvrt 1718  
             __end_of_increment_day 1C68                          _ADCON0bits 000F60  
                          i2___lmul 235C                          _CM1NCHbits 000ED2  
                        _CM1PCHbits 000ED3                   ___lmul@multiplier 0060  
                         copy_data0 2226                           copy_data1 2246  
             __end_of_LEDarray_init 2570                         _LCD_setline 1A76  
                          __Hrparam 0000                          _ADC_getval 2570  
                        vfprintf@ap 00B4                            __Lrparam 0000  
                        vfprintf@fp 00B0                          ?_vfpfcnvrt 009E  
                   ___aodiv@divisor 0068                    ??_increment_time 0027  
                   ___aodiv@counter 0070                          _ANSELAbits 000E92  
                        sprintf@fmt 00BA                            ___xxtofl 1270  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
                   ___lwdiv@divisor 0062                     ___lwdiv@counter 0064  
                          __ptext10 1EDE                            __ptext11 1A76  
                          __ptext20 2570                            __ptext12 2064  
                          __ptext21 2612                            __ptext13 25A2  
                          __ptext30 24F6                            __ptext22 23C6  
                          __ptext14 22F0                            __ptext31 15B2  
                          __ptext23 2418                            __ptext15 2688  
                          __ptext32 1428                            __ptext24 1718  
                          __ptext16 2678                            __ptext25 0E1E  
                          __ptext17 25CE                            __ptext34 1FA6  
                          __ptext26 211E                            __ptext18 2664  
                          __ptext35 235C                            __ptext27 246A  
                          __ptext19 2632                            __ptext36 1B7A  
                          __ptext28 1D48                            __ptext37 24B2  
                          __ptext29 269E                            _get_hour 25F2  
           LEDarray_disp_bin@number 006A                            isa$xinst 000000  
                          int$flags 0048                         ?_ADC2String 00CB  
                          _vfprintf 2418                     _increment_month 24B2  
                          main@test 00D1                            main@text 00D3  
                  ___aomod@dividend 0060                          _INTCONbits 000FF2  
             i2___lmul@multiplicand 0005                        _time_counter 00EE  
                          intlevel2 0000                           sprintf@ap 00BE  
                      _DAC1CON0bits 000EC6                        _DAC1CON1bits 000EC7  
                       ?_ADC_getval 0060            Timer0_init@current_month 007A  
                   ___aomod@divisor 0068                         ??_vfpfcnvrt 00A4  
                   ___aomod@counter 0070                            sprintf@f 00C0  
                          sprintf@s 00B8             Timer0_init@current_hour 0072  
           Timer0_init@current_year 007C                        ___aodiv@sign 0071  
                      ___aomod@sign 0071             __end_of_increment_month 24F6  
